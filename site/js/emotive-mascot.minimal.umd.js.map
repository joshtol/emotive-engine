{"version":3,"file":"emotive-mascot.minimal.umd.js","sources":["../src/core/CanvasManager.js","../src/core/ErrorBoundary.js","../src/utils/colorUtils.js","../src/utils/easing.js","../src/core/emotions/plugin-adapter.js","../src/core/emotions/states/neutral.js","../src/core/emotions/states/joy.js","../src/core/emotions/states/sadness.js","../src/core/emotions/states/anger.js","../src/core/emotions/states/fear.js","../src/core/emotions/states/surprise.js","../src/core/emotions/states/disgust.js","../src/core/emotions/states/love.js","../src/core/emotions/states/suspicion.js","../src/core/emotions/states/excited.js","../src/core/emotions/states/resting.js","../src/core/emotions/states/euphoria.js","../src/core/emotions/states/focused.js","../src/core/emotions/states/glitch.js","../src/core/emotions/states/calm.js","../src/core/emotions/index.js","../src/core/EmotiveStateMachine.js","../src/core/particles/utils/colorUtils.js","../src/core/particles/behaviors/ambient.js","../src/core/particles/config/physics.js","../src/core/particles/behaviors/orbiting.js","../src/core/particles/behaviors/rising.js","../src/core/particles/behaviors/falling.js","../src/core/particles/config/playground.js","../src/core/particles/behaviors/popcorn.js","../src/core/particles/behaviors/burst.js","../src/core/particles/behaviors/aggressive.js","../src/core/particles/behaviors/scattering.js","../src/core/particles/behaviors/repelling.js","../src/core/particles/behaviors/connecting.js","../src/core/particles/behaviors/resting.js","../src/core/particles/behaviors/radiant.js","../src/core/particles/behaviors/ascending.js","../src/core/particles/behaviors/erratic.js","../src/core/particles/behaviors/cautious.js","../src/core/particles/behaviors/surveillance.js","../src/core/particles/behaviors/glitchy.js","../src/core/particles/behaviors/directed.js","../src/core/particles/behaviors/fizzy.js","../src/core/particles/behaviors/zen.js","../src/core/particles/behaviors/plugin-adapter.js","../src/core/particles/behaviors/index.js","../src/core/gestures/plugin-adapter.js","../src/core/gestures/motions/bounce.js","../src/core/gestures/motions/pulse.js","../src/core/gestures/motions/shake.js","../src/core/gestures/motions/nod.js","../src/core/gestures/motions/vibrate.js","../src/core/gestures/motions/orbit.js","../src/core/gestures/motions/twitch.js","../src/core/gestures/motions/sway.js","../src/core/gestures/motions/float.js","../src/core/gestures/motions/jitter.js","../src/core/gestures/transforms/spin.js","../src/core/gestures/transforms/jump.js","../src/core/gestures/transforms/morph.js","../src/core/gestures/transforms/stretch.js","../src/core/gestures/transforms/tilt.js","../src/core/gestures/transforms/orbital.js","../src/core/gestures/transforms/hula.js","../src/core/gestures/transforms/scan.js","../src/core/gestures/transforms/twist.js","../src/core/gestures/effects/wave.js","../src/core/gestures/effects/drift.js","../src/core/gestures/effects/flicker.js","../src/core/gestures/effects/burst.js","../src/core/gestures/effects/directional.js","../src/core/gestures/effects/settle.js","../src/core/gestures/effects/fade.js","../src/core/gestures/effects/hold.js","../src/core/gestures/effects/breathe.js","../src/core/gestures/effects/expand.js","../src/core/gestures/effects/contract.js","../src/core/gestures/effects/flash.js","../src/core/gestures/effects/glow.js","../src/core/gestures/effects/peek.js","../src/core/gestures/effects/runningman.js","../src/core/gestures/effects/charleston.js","../src/core/gestures/index.js","../src/core/rhythm.js","../src/core/rhythmIntegration.js","../src/core/gestures/GestureMotion.js","../src/core/Particle.js","../src/core/ParticleSystem.js","../src/config/undertoneModifiers.js","../src/core/GestureCompositor.js","../src/core/effects/zen-vortex.js","../src/core/effects/recording-glow.js","../src/core/effects/speaking-pulse.js","../src/core/effects/sleeping-effect.js","../src/core/effects/suspicion-scan.js","../src/core/effects/gaze-narrowing.js","../src/core/effects/fingerprint.js","../src/core/effects/index.js","../src/core/MusicalDuration.js","../src/core/renderer/GestureAnimator.js","../src/core/renderer/ColorUtilities.js","../src/core/renderer/SpecialEffects.js","../src/core/renderer/EyeRenderer.js","../src/core/renderer/BreathingAnimator.js","../src/core/renderer/GradientCache.js","../src/core/renderer/GlowRenderer.js","../src/core/renderer/CoreRenderer.js","../src/core/animation/RotationBrake.js","../src/core/renderer/AmbientDanceAnimator.js","../src/core/AnimationLoopManager.js","../src/core/EmotiveRenderer.js","../src/core/GazeTracker.js","../src/core/IdleBehavior.js","../src/core/MusicTheory.js","../src/core/HarmonicSystem.js","../src/core/SoundSystem.js","../src/core/SimpleFPSCounter.js","../src/core/AnimationController.js","../src/core/AudioLevelProcessor.js","../src/core/EventManager.js","../src/core/AccessibilityManager.js","../src/core/MobileOptimization.js","../src/core/PluginSystem.js","../src/utils/browserCompatibility.js","../src/utils/debugger.js","../src/core/shapes/shapeDefinitions.js","../src/utils/ArrayPool.js","../src/core/morpher/AudioDeformer.js","../src/core/morpher/AgentBPMDetector.js","../src/core/morpher/MusicDetector.js","../src/core/morpher/TransitionManager.js","../src/core/ShapeMorpher.js","../src/core/AudioAnalyzer.js","../src/core/GestureCompatibility.js","../src/core/GrooveTemplates.js","../src/mascot/AudioHandler.js","../src/mascot/GestureController.js","../src/mascot/StateCoordinator.js","../src/mascot/VisualizationRunner.js","../src/mascot/ConfigurationManager.js","../src/EmotiveMascot.js"],"sourcesContent":["/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE\n *  └─○═╝                                                                             \n *                      ◐ ◑ ◒ ◓  CANVAS MANAGER  ◓ ◒ ◑ ◐                      \n *                                                                                    \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Canvas Manager - High-DPI Rendering & Canvas Lifecycle\n * @author Emotive Engine Team\n * @version 2.1.0\n * @module CanvasManager\n * @changelog 2.1.0 - Added resize callback system for visual resampling\n * \n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                                   PURPOSE                                         \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ The FOUNDATION of visual rendering. Handles canvas setup, high-DPI scaling,       \n * ║ resize events, and provides optimized 2D context for smooth animations.           \n * ║ Ensures crisp rendering on Retina displays and manages canvas lifecycle.          \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n *\n * ┌───────────────────────────────────────────────────────────────────────────────────\n * │ 🎨 CANVAS FEATURES                                                                \n * ├───────────────────────────────────────────────────────────────────────────────────\n * │ • Device Pixel Ratio (DPR) scaling for Retina displays                            \n * │ • Automatic resize handling with debouncing                                       \n * │ • Resize callback system for component notification                               \n * │ • Optimized 2D context settings for animations                                    \n * │ • Center point calculation for orb positioning                                    \n * │ • Clean canvas clearing with proper scaling                                       \n * └───────────────────────────────────────────────────────────────────────────────────\n *\n * ┌───────────────────────────────────────────────────────────────────────────────────\n * │ ⚡ CONTEXT OPTIMIZATIONS                                                           \n * ├───────────────────────────────────────────────────────────────────────────────────\n * │ • alpha: true               - Enables transparency                                \n * │ • desynchronized: true      - Better animation performance                        \n * │ • willReadFrequently: false - We don't read pixels                                \n * └───────────────────────────────────────────────────────────────────────────────────\n *\n * ════════════════════════════════════════════════════════════════════════════════════\n */\nclass CanvasManager {\n    constructor(canvas) {\n        this.canvas = canvas;\n        // Get context with optimal settings for particle rendering\n        this.ctx = canvas.getContext('2d', {\n            alpha: true,\n            desynchronized: true,  // Better performance for animations\n            willReadFrequently: false  // We're not reading pixels\n        });\n        this.dpr = window.devicePixelRatio || 1;\n        this.width = 0;\n        this.height = 0;\n        this.centerX = 0;\n        this.centerY = 0;\n        \n        // Resize callbacks\n        this.resizeCallbacks = [];\n        \n        // Bind resize handler\n        this.handleResize = this.handleResize.bind(this);\n        window.addEventListener('resize', this.handleResize);\n        \n        // Initial resize\n        this.resize();\n    }\n\n    /**\n     * Handles canvas resizing with proper high-DPI support\n     */\n    resize() {\n        // Check if canvas has explicit width/height attributes\n        const hasExplicitSize = this.canvas.hasAttribute('width') && this.canvas.hasAttribute('height');\n        \n        if (hasExplicitSize) {\n            // Use the explicit canvas dimensions from attributes\n            // This prevents the canvas from changing size when DevTools opens\n            const attrWidth = parseInt(this.canvas.getAttribute('width'), 10);\n            const attrHeight = parseInt(this.canvas.getAttribute('height'), 10);\n            \n            // Use attribute dimensions as base size\n            this.width = attrWidth;\n            this.height = attrHeight;\n            \n            // Set actual canvas buffer size (no DPR scaling for fixed-size canvases)\n            this.canvas.width = attrWidth;\n            this.canvas.height = attrHeight;\n            \n            // No DPR scaling needed for fixed-size canvases\n            // The browser will handle the scaling automatically\n        } else {\n            // For responsive canvases, use the bounding rect\n            const rect = this.canvas.getBoundingClientRect();\n            \n            // Set display size (CSS pixels)\n            this.width = rect.width;\n            this.height = rect.height;\n            \n            // Set actual size in memory (scaled for high-DPI)\n            this.canvas.width = this.width * this.dpr;\n            this.canvas.height = this.height * this.dpr;\n            \n            // Scale the drawing context for high-DPI\n            this.ctx.scale(this.dpr, this.dpr);\n        }\n        \n        // Update center coordinates\n        this.centerX = this.width / 2;\n        this.centerY = this.height / 2;\n        \n        //     dpr: this.dpr,\n        //     center: { x: this.centerX, y: this.centerY }\n        // });\n        \n        // Trigger resize callbacks\n        this.resizeCallbacks.forEach(callback => {\n            try {\n                callback(this.width, this.height, this.dpr);\n            } catch (error) {\n            }\n        });\n    }\n    \n    /**\n     * Register a callback to be called on canvas resize\n     * @param {Function} callback - Function to call with (width, height, dpr) parameters\n     */\n    onResize(callback) {\n        if (typeof callback === 'function') {\n            this.resizeCallbacks.push(callback);\n        }\n    }\n\n    /**\n     * Debounced resize handler to prevent excessive resize calls\n     */\n    handleResize() {\n        clearTimeout(this.resizeTimeout);\n        this.resizeTimeout = setTimeout(() => {\n            this.resize();\n        }, 100);\n    }\n\n    /**\n     * Clears the entire canvas\n     */\n    clear() {\n        this.ctx.clearRect(0, 0, this.width, this.height);\n    }\n\n    /**\n     * Gets the center coordinates of the canvas\n     * @returns {Object} Object with x and y center coordinates\n     */\n    getCenter() {\n        return {\n            x: this.centerX,\n            y: this.centerY\n        };\n    }\n\n    /**\n     * Sets transform for drawing operations\n     * @param {number} x - X translation\n     * @param {number} y - Y translation  \n     * @param {number} scale - Scale factor\n     * @param {number} rotation - Rotation in radians\n     */\n    setTransform(x = 0, y = 0, scale = 1, rotation = 0) {\n        this.ctx.save();\n        this.ctx.translate(x, y);\n        this.ctx.rotate(rotation);\n        this.ctx.scale(scale, scale);\n    }\n\n    /**\n     * Restores the previous transform state\n     */\n    restoreTransform() {\n        this.ctx.restore();\n    }\n\n    /**\n     * Gets the 2D rendering context\n     * @returns {CanvasRenderingContext2D} The canvas 2D context\n     */\n    getContext() {\n        return this.ctx;\n    }\n\n    /**\n     * Gets canvas dimensions\n     * @returns {Object} Object with width and height\n     */\n    getDimensions() {\n        return {\n            width: this.width,\n            height: this.height\n        };\n    }\n\n    /**\n     * Cleanup method to remove event listeners\n     */\n    destroy() {\n        window.removeEventListener('resize', this.handleResize);\n        clearTimeout(this.resizeTimeout);\n    }\n}\n\nexport default CanvasManager;","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE\r\n *  └─○═╝                                                                             \r\n *                       ◐ ◑ ◒ ◓  ERROR BOUNDARY  ◓ ◒ ◑ ◐                       \r\n *                                                                                    \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Error Boundary - Error Handling & Recovery System\r\n * @author Emotive Engine Team\r\n * @version 2.0.0\r\n * @module ErrorBoundary\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ The SAFETY NET of the Emotive Engine. Catches errors, provides fallbacks,         \r\n * ║ logs issues for debugging, and attempts recovery to keep the animation            \r\n * ║ running even when things go wrong. Never let the orb die!                         \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ 🛡️ ERROR HANDLING FEATURES                                                        \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ • Try-catch wrapping for all critical functions                                   \r\n * │ • Safe default values for all emotional states                                    \r\n * │ • Error logging with context and timestamps                                       \r\n * │ • Automatic error suppression after threshold                                     \r\n * │ • Recovery attempts with exponential backoff                                      \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ 🔄 FALLBACK VALUES                                                                \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ • emotion       : 'neutral' (safe default state)                                  \r\n * │ • gesture       : null (no animation)                                             \r\n * │ • audioLevel    : 0 (silent)                                                      \r\n * │ • particleCount : 0 (no particles)                                                \r\n * │ • glowIntensity : 0.7 (moderate glow)                                             \r\n * │ • color         : '#B0B0B0' (neutral gray)                                        \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ 📊 VALIDATION LISTS                                                               \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ VALID EMOTIONS:                                                                   \r\n * │   neutral, joy, sadness, anger, fear, surprise, disgust, love,                    \r\n * │   suspicion, resting, connecting, thinking, speaking, zen, focused                \r\n * │                                                                                    \r\n * │ VALID UNDERTONES:                                                                 \r\n * │   nervous, confident, tired, intense, subdued                                     \r\n * │                                                                                    \r\n * │ VALID GESTURES:                                                                    \r\n * │   bounce, pulse, shake, spin, nod, tilt, expand, contract, flash,                 \r\n * │   drift, breathe, wave, slowBlink, jump, breathHold                               \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ ⚠️  ERROR THRESHOLDS                                                              \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ • Max errors in log      : 10 (then rotates)                                      \r\n * │ • Errors before suppress : 3 per context                                          \r\n * │ • Recovery max attempts  : 3                                                      \r\n * │ • Recovery backoff       : 100ms * 2^attempt                                      \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                           USING ERROR BOUNDARY                                    \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ // Wrap any risky function:                                                       \r\n * ║ const safeFunction = errorBoundary.wrap(riskyFunction, 'context', fallback);      \r\n * ║                                                                                    \r\n * ║ // Validate input:                                                                \r\n * ║ const validEmotion = errorBoundary.validateInput(input, 'emotion', 'neutral');    \r\n * ║                                                                                    \r\n * ║ // Attempt recovery:                                                              \r\n * ║ await errorBoundary.attemptRecovery('render', retryFn, 3);                        \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * ════════════════════════════════════════════════════════════════════════════════════\r\n */\r\nclass ErrorBoundary {\r\n    constructor() {\r\n        this.errors = [];\r\n        this.maxErrors = 10;\r\n        this.errorCounts = new Map();\r\n        \r\n        // Safe default values for various contexts\r\n        this.defaults = {\r\n            emotion: 'neutral',\r\n            gesture: null,\r\n            audioLevel: 0,\r\n            particleCount: 0,\r\n            glowIntensity: 0.7,\r\n            coreSize: 1.0,\r\n            breathRate: 1.0,\r\n            color: '#B0B0B0'\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Wraps a function with error handling\r\n     * @param {Function} fn - Function to wrap\r\n     * @param {string} context - Context description for error logging\r\n     * @param {*} fallbackValue - Value to return on error\r\n     * @returns {Function} Wrapped function\r\n     */\r\n    wrap(fn, context, fallbackValue = null) {\r\n        return (...args) => {\r\n            try {\r\n                return fn(...args);\r\n            } catch (error) {\r\n                this.logError(error, context);\r\n                return fallbackValue !== null ? fallbackValue : this.getDefault(context);\r\n            }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Logs an error with context and timestamp\r\n     * @param {Error} error - The error object\r\n     * @param {string} context - Context where the error occurred\r\n     */\r\n    logError(error, context) {\r\n        const timestamp = new Date().toISOString();\r\n        const errorEntry = {\r\n            timestamp,\r\n            context,\r\n            message: error.message,\r\n            stack: error.stack\r\n        };\r\n\r\n        // Add to error log\r\n        this.errors.push(errorEntry);\r\n        \r\n        // Maintain error count per context\r\n        const count = this.errorCounts.get(context) || 0;\r\n        this.errorCounts.set(context, count + 1);\r\n\r\n        // Rotate error log if it gets too large\r\n        if (this.errors.length > this.maxErrors) {\r\n            this.errors.shift();\r\n        }\r\n\r\n        // Log to console with appropriate level based on frequency\r\n        if (count < 3) {\r\n        } else if (count === 3) {\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Gets a safe default value for a given context\r\n     * @param {string} context - The context to get default for\r\n     * @returns {*} Safe default value\r\n     */\r\n    getDefault(context) {\r\n        // Context-specific defaults\r\n        const contextDefaults = {\r\n            'emotion-transition': this.defaults.emotion,\r\n            'gesture-execution': this.defaults.gesture,\r\n            'audio-processing': this.defaults.audioLevel,\r\n            'particle-system': this.defaults.particleCount,\r\n            'rendering': {\r\n                glowIntensity: this.defaults.glowIntensity,\r\n                coreSize: this.defaults.coreSize,\r\n                color: this.defaults.color\r\n            },\r\n            'canvas-operations': null,\r\n            'state-management': this.defaults.emotion\r\n        };\r\n\r\n        return contextDefaults.hasOwnProperty(context) ? contextDefaults[context] : null;\r\n    }\r\n\r\n    /**\r\n     * Validates input parameters and returns safe values\r\n     * @param {*} value - Value to validate\r\n     * @param {string} type - Expected type\r\n     * @param {*} defaultValue - Default value if validation fails\r\n     * @returns {*} Validated value or default\r\n     */\r\n    validateInput(value, type, defaultValue) {\r\n        try {\r\n            switch (type) {\r\n                case 'emotion':\r\n                    const validEmotions = ['neutral', 'joy', 'sadness', 'anger', 'fear', 'surprise', 'disgust', 'love', 'euphoria'];\r\n                    return validEmotions.includes(value) ? value : defaultValue;\r\n                \r\n                case 'undertone':\r\n                    const validUndertones = ['nervous', 'confident', 'tired', 'intense', 'subdued'];\r\n                    return value === null || validUndertones.includes(value) ? value : null;\r\n                \r\n                case 'gesture':\r\n                    const validGestures = ['bounce', 'pulse', 'shake', 'spin', 'nod', 'tilt', 'expand', 'contract', 'flash', 'drift'];\r\n                    return validGestures.includes(value) ? value : defaultValue;\r\n                \r\n                case 'number':\r\n                    return typeof value === 'number' && !isNaN(value) ? value : defaultValue;\r\n                \r\n                case 'string':\r\n                    return typeof value === 'string' ? value : defaultValue;\r\n                \r\n                case 'boolean':\r\n                    return typeof value === 'boolean' ? value : defaultValue;\r\n                \r\n                default:\r\n                    return value !== undefined && value !== null ? value : defaultValue;\r\n            }\r\n        } catch (error) {\r\n            this.logError(error, 'input-validation');\r\n            return defaultValue;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if a context has exceeded error threshold\r\n     * @param {string} context - Context to check\r\n     * @param {number} threshold - Error threshold (default: 5)\r\n     * @returns {boolean} True if threshold exceeded\r\n     */\r\n    hasExceededThreshold(context, threshold = 5) {\r\n        return (this.errorCounts.get(context) || 0) >= threshold;\r\n    }\r\n\r\n    /**\r\n     * Gets error statistics\r\n     * @returns {Object} Error statistics\r\n     */\r\n    getErrorStats() {\r\n        return {\r\n            totalErrors: this.errors.length,\r\n            errorsByContext: Object.fromEntries(this.errorCounts),\r\n            recentErrors: this.errors.slice(-5)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Clears error history\r\n     */\r\n    clearErrors() {\r\n        this.errors = [];\r\n        this.errorCounts.clear();\r\n    }\r\n\r\n    /**\r\n     * Attempts to recover from a failed operation\r\n     * @param {string} operation - The operation that failed\r\n     * @param {Function} retryFn - Function to retry\r\n     * @param {number} maxRetries - Maximum retry attempts\r\n     * @returns {Promise} Recovery attempt result\r\n     */\r\n    async attemptRecovery(operation, retryFn, maxRetries = 3) {\r\n        let attempts = 0;\r\n        \r\n        while (attempts < maxRetries) {\r\n            try {\r\n                return await retryFn();\r\n            } catch (error) {\r\n                attempts++;\r\n                this.logError(error, `recovery-${operation}-attempt-${attempts}`);\r\n                \r\n                if (attempts >= maxRetries) {\r\n                    throw new Error(`Recovery failed for ${operation} after ${maxRetries} attempts`);\r\n                }\r\n                \r\n                // Exponential backoff\r\n                await new Promise(resolve => setTimeout(resolve, Math.pow(2, attempts) * 100));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE\r\n *  └─○═╝                                                                             \r\n *                     ◐ ◑ ◒ ◓  COLOR UTILS  ◓ ◒ ◑ ◐                     \r\n *                                                                                    \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Color Utils - Color Interpolation & Manipulation\r\n * @author Emotive Engine Team\r\n * @version 2.1.0\r\n * @module ColorUtils\r\n * @changelog 2.1.0 - Added undertone saturation modifiers for dynamic depth\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ The COLOR SCIENCE module of the engine. Provides smooth color transitions         \r\n * ║ between emotional states using HSL interpolation for perceptually uniform         \r\n * ║ transitions that feel natural and emotionally resonant.                           \r\n * ║                                                                                    \r\n * ║ NEW: Undertone saturation system creates dynamic depth by adjusting saturation    \r\n * ║ based on emotional undertones (intense → oversaturated, subdued → desaturated)    \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ 🎨 COLOR OPERATIONS                                                               \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ • Hex to RGB/HSL conversion                                                       \r\n * │ • RGB to Hex/HSL conversion                                                       \r\n * │ • HSL interpolation for smooth transitions                                        \r\n * │ • Color mixing and blending                                                       \r\n * │ • Luminance calculations                                                          \r\n * │ • Perceptually uniform color shifts                                               \r\n * │ • Undertone-based saturation adjustments                                          \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ 🌈 UNDERTONE SATURATION SYSTEM                                                    \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ Undertones dynamically adjust color saturation to create emotional depth:         \r\n * │                                                                                    \r\n * │ • INTENSE   : +60% saturation - Electric, vibrant, overwhelming                   \r\n * │ • CONFIDENT : +30% saturation - Bold, present, assertive                          \r\n * │ • NERVOUS   : +15% saturation - Slightly heightened, anxious energy               \r\n * │ • CLEAR     :   0% saturation - Normal midtone, balanced state                    \r\n * │ • TIRED     : -20% saturation - Washed out, fading, depleted                      \r\n * │ • SUBDUED   : -50% saturation - Ghostly, barely there, withdrawn                  \r\n * │                                                                                    \r\n * │ This creates a visual hierarchy where emotional intensity directly affects        \r\n * │ the vibrancy and presence of colors, making the mascot's state immediately        \r\n * │ readable through color alone.                                                     \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ════════════════════════════════════════════════════════════════════════════════════\r\n */\r\n\r\n/**\r\n * Converts hex color to RGB values\r\n * @param {string} hex - Hex color string (e.g., '#FF0000')\r\n * @returns {Object} RGB object with r, g, b properties\r\n */\r\nexport function hexToRgb(hex) {\r\n    // Remove # if present\r\n    hex = hex.replace('#', '');\r\n    \r\n    // Handle 3-digit hex\r\n    if (hex.length === 3) {\r\n        hex = hex.split('').map(char => char + char).join('');\r\n    }\r\n    \r\n    const r = parseInt(hex.substr(0, 2), 16);\r\n    const g = parseInt(hex.substr(2, 2), 16);\r\n    const b = parseInt(hex.substr(4, 2), 16);\r\n    \r\n    return { r, g, b };\r\n}\r\n\r\n/**\r\n * Converts RGB values to hex color\r\n * @param {number} r - Red component (0-255)\r\n * @param {number} g - Green component (0-255)\r\n * @param {number} b - Blue component (0-255)\r\n * @returns {string} Hex color string\r\n */\r\nexport function rgbToHex(r, g, b) {\r\n    const toHex = (component) => {\r\n        const hex = Math.round(Math.max(0, Math.min(255, component))).toString(16);\r\n        return hex.length === 1 ? '0' + hex : hex;\r\n    };\r\n    \r\n    return `#${toHex(r)}${toHex(g)}${toHex(b)}`;\r\n}\r\n\r\n/**\r\n * Converts RGB to HSL color space\r\n * @param {number} r - Red component (0-255)\r\n * @param {number} g - Green component (0-255)\r\n * @param {number} b - Blue component (0-255)\r\n * @returns {Object} HSL object with h, s, l properties\r\n */\r\nexport function rgbToHsl(r, g, b) {\r\n    r /= 255;\r\n    g /= 255;\r\n    b /= 255;\r\n    \r\n    const max = Math.max(r, g, b);\r\n    const min = Math.min(r, g, b);\r\n    let h, s, l = (max + min) / 2;\r\n    \r\n    if (max === min) {\r\n        h = s = 0; // achromatic\r\n    } else {\r\n        const d = max - min;\r\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n        \r\n        switch (max) {\r\n            case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n            case g: h = (b - r) / d + 2; break;\r\n            case b: h = (r - g) / d + 4; break;\r\n        }\r\n        h /= 6;\r\n    }\r\n    \r\n    return { h: h * 360, s: s * 100, l: l * 100 };\r\n}\r\n\r\n/**\r\n * Converts HSL to RGB color space\r\n * @param {number} h - Hue (0-360)\r\n * @param {number} s - Saturation (0-100)\r\n * @param {number} l - Lightness (0-100)\r\n * @returns {Object} RGB object with r, g, b properties\r\n */\r\nexport function hslToRgb(h, s, l) {\r\n    h /= 360;\r\n    s /= 100;\r\n    l /= 100;\r\n    \r\n    const hue2rgb = (p, q, t) => {\r\n        if (t < 0) t += 1;\r\n        if (t > 1) t -= 1;\r\n        if (t < 1/6) return p + (q - p) * 6 * t;\r\n        if (t < 1/2) return q;\r\n        if (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n        return p;\r\n    };\r\n    \r\n    let r, g, b;\r\n    \r\n    if (s === 0) {\r\n        r = g = b = l; // achromatic\r\n    } else {\r\n        const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n        const p = 2 * l - q;\r\n        r = hue2rgb(p, q, h + 1/3);\r\n        g = hue2rgb(p, q, h);\r\n        b = hue2rgb(p, q, h - 1/3);\r\n    }\r\n    \r\n    return {\r\n        r: Math.round(r * 255),\r\n        g: Math.round(g * 255),\r\n        b: Math.round(b * 255)\r\n    };\r\n}\r\n\r\n/**\r\n * Interpolates between two colors in RGB space\r\n * @param {string} color1 - Start color (hex)\r\n * @param {string} color2 - End color (hex)\r\n * @param {number} progress - Interpolation progress (0-1)\r\n * @returns {string} Interpolated color (hex)\r\n */\r\nexport function interpolateRgb(color1, color2, progress) {\r\n    const rgb1 = hexToRgb(color1);\r\n    const rgb2 = hexToRgb(color2);\r\n    \r\n    const r = Math.round(rgb1.r + (rgb2.r - rgb1.r) * progress);\r\n    const g = Math.round(rgb1.g + (rgb2.g - rgb1.g) * progress);\r\n    const b = Math.round(rgb1.b + (rgb2.b - rgb1.b) * progress);\r\n    \r\n    return rgbToHex(r, g, b);\r\n}\r\n\r\n/**\r\n * Interpolates between two colors in HSL space (better for emotional transitions)\r\n * @param {string} color1 - Start color (hex)\r\n * @param {string} color2 - End color (hex)\r\n * @param {number} progress - Interpolation progress (0-1)\r\n * @returns {string} Interpolated color (hex)\r\n */\r\nexport function interpolateHsl(color1, color2, progress) {\r\n    const rgb1 = hexToRgb(color1);\r\n    const rgb2 = hexToRgb(color2);\r\n    const hsl1 = rgbToHsl(rgb1.r, rgb1.g, rgb1.b);\r\n    const hsl2 = rgbToHsl(rgb2.r, rgb2.g, rgb2.b);\r\n    \r\n    // Handle hue interpolation (shortest path around color wheel)\r\n    let h1 = hsl1.h;\r\n    let h2 = hsl2.h;\r\n    let hDiff = h2 - h1;\r\n    \r\n    if (hDiff > 180) {\r\n        h2 -= 360;\r\n    } else if (hDiff < -180) {\r\n        h2 += 360;\r\n    }\r\n    \r\n    const h = h1 + (h2 - h1) * progress;\r\n    const s = hsl1.s + (hsl2.s - hsl1.s) * progress;\r\n    const l = hsl1.l + (hsl2.l - hsl1.l) * progress;\r\n    \r\n    // Normalize hue\r\n    const normalizedH = ((h % 360) + 360) % 360;\r\n    \r\n    const rgb = hslToRgb(normalizedH, s, l);\r\n    return rgbToHex(rgb.r, rgb.g, rgb.b);\r\n}\r\n\r\n/**\r\n * Creates an RGBA color string\r\n * @param {string} hex - Hex color\r\n * @param {number} alpha - Alpha value (0-1)\r\n * @returns {string} RGBA color string\r\n */\r\nexport function hexToRgba(hex, alpha = 1) {\r\n    const rgb = hexToRgb(hex);\r\n    return `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${alpha})`;\r\n}\r\n\r\n/**\r\n * Adjusts the brightness of a color\r\n * @param {string} hex - Hex color\r\n * @param {number} factor - Brightness factor (0.5 = darker, 1.5 = brighter)\r\n * @returns {string} Adjusted color (hex)\r\n */\r\nexport function adjustBrightness(hex, factor) {\r\n    const rgb = hexToRgb(hex);\r\n    const hsl = rgbToHsl(rgb.r, rgb.g, rgb.b);\r\n    \r\n    hsl.l = Math.max(0, Math.min(100, hsl.l * factor));\r\n    \r\n    const adjustedRgb = hslToRgb(hsl.h, hsl.s, hsl.l);\r\n    return rgbToHex(adjustedRgb.r, adjustedRgb.g, adjustedRgb.b);\r\n}\r\n\r\n/**\r\n * Adjusts the saturation of a color\r\n * @param {string} hex - Hex color\r\n * @param {number} factor - Saturation factor (0.5 = less saturated, 1.5 = more saturated)\r\n * @returns {string} Adjusted color (hex)\r\n */\r\nexport function adjustSaturation(hex, factor) {\r\n    const rgb = hexToRgb(hex);\r\n    const hsl = rgbToHsl(rgb.r, rgb.g, rgb.b);\r\n    \r\n    hsl.s = Math.max(0, Math.min(100, hsl.s * factor));\r\n    \r\n    const adjustedRgb = hslToRgb(hsl.h, hsl.s, hsl.l);\r\n    return rgbToHex(adjustedRgb.r, adjustedRgb.g, adjustedRgb.b);\r\n}\r\n\r\n/**\r\n * Gets the luminance of a color (for contrast calculations)\r\n * @param {string} hex - Hex color\r\n * @returns {number} Luminance value (0-1)\r\n */\r\nexport function getLuminance(hex) {\r\n    const rgb = hexToRgb(hex);\r\n    \r\n    // Convert to linear RGB\r\n    const toLinear = (component) => {\r\n        const c = component / 255;\r\n        return c <= 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\r\n    };\r\n    \r\n    const r = toLinear(rgb.r);\r\n    const g = toLinear(rgb.g);\r\n    const b = toLinear(rgb.b);\r\n    \r\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\r\n}\r\n\r\n/**\r\n * Calculates contrast ratio between two colors\r\n * @param {string} color1 - First color (hex)\r\n * @param {string} color2 - Second color (hex)\r\n * @returns {number} Contrast ratio (1-21)\r\n */\r\nexport function getContrastRatio(color1, color2) {\r\n    const lum1 = getLuminance(color1);\r\n    const lum2 = getLuminance(color2);\r\n    \r\n    const brightest = Math.max(lum1, lum2);\r\n    const darkest = Math.min(lum1, lum2);\r\n    \r\n    return (brightest + 0.05) / (darkest + 0.05);\r\n}\r\n\r\n/**\r\n * Undertone saturation modifiers for dynamic emotional depth\r\n * Maps undertone names to saturation adjustment factors\r\n */\r\nexport const UNDERTONE_SATURATION = {\r\n    intense: 1.6,    // +60% saturation - Electric, overwhelming\r\n    confident: 1.3,  // +30% saturation - Bold, present\r\n    nervous: 1.15,   // +15% saturation - Slightly heightened\r\n    clear: 1.0,      // No change - Normal midtone\r\n    tired: 0.8,      // -20% saturation - Washed out, fading\r\n    subdued: 0.5     // -50% saturation - Ghostly, barely there\r\n};\r\n\r\n/**\r\n * Applies undertone saturation adjustment to a color\r\n * @param {string} hex - Base color\r\n * @param {string} undertone - Undertone name (intense, confident, nervous, clear, tired, subdued)\r\n * @returns {string} Adjusted color with undertone saturation applied\r\n */\r\nexport function applyUndertoneSaturation(hex, undertone) {\r\n    if (!undertone || undertone === 'clear') {\r\n        return hex; // No adjustment for clear or missing undertone\r\n    }\r\n    \r\n    const factor = UNDERTONE_SATURATION[undertone.toLowerCase()];\r\n    if (!factor || factor === 1.0) {\r\n        return hex;\r\n    }\r\n    \r\n    return adjustSaturation(hex, factor);\r\n}\r\n\r\n/**\r\n * Applies undertone saturation to an array of colors (for particle systems)\r\n * @param {Array} colors - Array of colors (can be strings or objects with color property)\r\n * @param {string} undertone - Undertone name\r\n * @returns {Array} Adjusted color array with undertone saturation applied\r\n */\r\nexport function applyUndertoneSaturationToArray(colors, undertone) {\r\n    if (!colors || !Array.isArray(colors)) return colors;\r\n    if (!undertone || undertone === 'clear') return colors;\r\n    \r\n    return colors.map(colorItem => {\r\n        if (typeof colorItem === 'string') {\r\n            // Simple color string\r\n            return applyUndertoneSaturation(colorItem, undertone);\r\n        } else if (colorItem && typeof colorItem === 'object' && colorItem.color) {\r\n            // Weighted color object\r\n            return {\r\n                ...colorItem,\r\n                color: applyUndertoneSaturation(colorItem.color, undertone)\r\n            };\r\n        }\r\n        return colorItem;\r\n    });\r\n}\r\n\r\n/**\r\n * Gets the saturation factor for an undertone\r\n * @param {string} undertone - Undertone name\r\n * @returns {number} Saturation multiplication factor\r\n */\r\nexport function getUndertoneSaturationFactor(undertone) {\r\n    if (!undertone) return 1.0;\r\n    return UNDERTONE_SATURATION[undertone.toLowerCase()] || 1.0;\r\n}\r\n\r\n/**\r\n * Emotional color palette for the mascot system\r\n */\r\nexport const EMOTIONAL_COLORS = {\r\n    neutral: '#B0B0B0',\r\n    joy: '#FFD700',\r\n    sadness: '#4169E1',\r\n    anger: '#DC143C',\r\n    fear: '#8B008B',\r\n    surprise: '#FF8C00',\r\n    disgust: '#9ACD32',\r\n    love: '#FF69B4'\r\n};\r\n\r\n/**\r\n * Gets RGB values for emotional colors (for performance)\r\n */\r\nexport const EMOTIONAL_COLORS_RGB = Object.fromEntries(\r\n    Object.entries(EMOTIONAL_COLORS).map(([emotion, hex]) => {\r\n        const rgb = hexToRgb(hex);\r\n        return [emotion, `${rgb.r}, ${rgb.g}, ${rgb.b}`];\r\n    })\r\n);","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE\n *  └─○═╝                                                                             \n *                       ◐ ◑ ◒ ◓  EASING  ◓ ◒ ◑ ◐                       \n *                                                                                    \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Easing Functions - Smooth Animation Transitions\n * @author Emotive Engine Team\n * @version 2.0.0\n * @module Easing\n * \n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                                   PURPOSE                                         \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ The MOTION MATHEMATICS of the engine. Provides easing functions that create       \n * ║ natural, organic movement patterns for emotional transitions and gestures,         \n * ║ making the mascot feel alive and responsive rather than mechanical.               \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n *\n * ┌───────────────────────────────────────────────────────────────────────────────────\n * │ 🎢 EASING CURVES                                                                  \n * ├───────────────────────────────────────────────────────────────────────────────────\n * │ • Linear: Constant speed, no acceleration                                         \n * │ • Quadratic: Gentle acceleration/deceleration                                     \n * │ • Cubic: Moderate acceleration/deceleration                                       \n * │ • Elastic: Spring-like overshoot and bounce                                       \n * │ • Bounce: Realistic bouncing effect                                               \n * │ • Custom: Apply any easing by name                                                \n * └───────────────────────────────────────────────────────────────────────────────────\n *\n * ════════════════════════════════════════════════════════════════════════════════════\n */\n\n/**\n * Linear easing - no acceleration\n * @param {number} t - Progress (0 to 1)\n * @returns {number} Eased value\n */\nexport function linear(t) {\n    return t;\n}\n\n/**\n * Ease out quadratic - decelerating to zero velocity\n * @param {number} t - Progress (0 to 1)\n * @returns {number} Eased value\n */\nexport function easeOutQuad(t) {\n    return t * (2 - t);\n}\n\n/**\n * Ease in quadratic - accelerating from zero velocity\n * @param {number} t - Progress (0 to 1)\n * @returns {number} Eased value\n */\nexport function easeInQuad(t) {\n    return t * t;\n}\n\n/**\n * Ease in-out quadratic - acceleration until halfway, then deceleration\n * @param {number} t - Progress (0 to 1)\n * @returns {number} Eased value\n */\nexport function easeInOutQuad(t) {\n    return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n}\n\n/**\n * Ease out cubic - decelerating to zero velocity (smoother than quad)\n * @param {number} t - Progress (0 to 1)\n * @returns {number} Eased value\n */\nexport function easeOutCubic(t) {\n    return 1 - Math.pow(1 - t, 3);\n}\n\n/**\n * Ease in cubic - accelerating from zero velocity\n * @param {number} t - Progress (0 to 1)\n * @returns {number} Eased value\n */\nexport function easeInCubic(t) {\n    return t * t * t;\n}\n\n/**\n * Ease in-out cubic - acceleration until halfway, then deceleration\n * @param {number} t - Progress (0 to 1)\n * @returns {number} Eased value\n */\nexport function easeInOutCubic(t) {\n    return t < 0.5 ? 4 * t * t * t : 1 - Math.pow(-2 * t + 2, 3) / 2;\n}\n\n/**\n * Ease out elastic - elastic snap effect\n * @param {number} t - Progress (0 to 1)\n * @returns {number} Eased value\n */\nexport function easeOutElastic(t) {\n    const c4 = (2 * Math.PI) / 3;\n    return t === 0 ? 0 : t === 1 ? 1 : Math.pow(2, -10 * t) * Math.sin((t * 10 - 0.75) * c4) + 1;\n}\n\n/**\n * Ease out bounce - bouncing effect\n * @param {number} t - Progress (0 to 1)\n * @returns {number} Eased value\n */\nexport function easeOutBounce(t) {\n    const n1 = 7.5625;\n    const d1 = 2.75;\n\n    if (t < 1 / d1) {\n        return n1 * t * t;\n    } else if (t < 2 / d1) {\n        return n1 * (t -= 1.5 / d1) * t + 0.75;\n    } else if (t < 2.5 / d1) {\n        return n1 * (t -= 2.25 / d1) * t + 0.9375;\n    } else {\n        return n1 * (t -= 2.625 / d1) * t + 0.984375;\n    }\n}\n\n/**\n * Ease in-out back - slight overshoot effect\n * @param {number} t - Progress (0 to 1)\n * @returns {number} Eased value\n */\nexport function easeInOutBack(t) {\n    const c1 = 1.70158;\n    const c2 = c1 * 1.525;\n\n    return t < 0.5\n        ? (Math.pow(2 * t, 2) * ((c2 + 1) * 2 * t - c2)) / 2\n        : (Math.pow(2 * t - 2, 2) * ((c2 + 1) * (t * 2 - 2) + c2) + 2) / 2;\n}\n\n/**\n * Ease out sine - sinusoidal easing\n * @param {number} t - Progress (0 to 1)\n * @returns {number} Eased value\n */\nexport function easeOutSine(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\n/**\n * Ease in-out sine - sinusoidal easing with smooth start and end\n * @param {number} t - Progress (0 to 1)\n * @returns {number} Eased value\n */\nexport function easeInOutSine(t) {\n    return -(Math.cos(Math.PI * t) - 1) / 2;\n}\n\n/**\n * Gets an easing function by name\n * @param {string} name - Name of the easing function\n * @returns {Function} Easing function\n */\nexport function getEasingFunction(name) {\n    const easingFunctions = {\n        linear,\n        easeOutQuad,\n        easeInQuad,\n        easeInOutQuad,\n        easeOutCubic,\n        easeInCubic,\n        easeInOutCubic,\n        easeOutElastic,\n        easeOutBounce,\n        easeInOutBack,\n        easeOutSine,\n        easeInOutSine\n    };\n\n    return easingFunctions[name] || linear;\n}\n\n/**\n * Applies easing to a value between start and end\n * @param {number} progress - Progress (0 to 1)\n * @param {number} start - Start value\n * @param {number} end - End value\n * @param {string|Function} easing - Easing function name or function\n * @returns {number} Eased value between start and end\n */\nexport function applyEasing(progress, start, end, easing = 'linear') {\n    const easingFn = typeof easing === 'string' ? getEasingFunction(easing) : easing;\n    const easedProgress = easingFn(Math.max(0, Math.min(1, progress)));\n    return start + (end - start) * easedProgress;\n}","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE v4.0 - Emotion Plugin Adapter\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Bridge between plugin system and emotion registry\n * @author Emotive Engine Team\n * @version 4.0.0\n * @module emotions/plugin-adapter\n * \n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                                   PURPOSE                                         \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ Adapter for dynamic emotion registration from plugins.                            \n * ║ • Maintains separate registry for plugin emotions                                 \n * ║ • Validates emotion definitions for required properties                           \n * ║ • Provides legacy format conversion for older plugins                             \n * ║ • Enables runtime registration and unregistration                                 \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n */\n\n/**\n * Plugin emotion registry\n */\nconst pluginEmotions = new Map();\n\n/**\n * Register a plugin emotion\n * @param {string} name - Emotion name\n * @param {Object} emotionDef - Emotion definition object\n */\nexport function registerPluginEmotion(name, emotionDef) {\n    // Ensure emotion has required properties\n    if (!emotionDef.color) {\n        return false;\n    }\n    \n    // Add name if not present\n    if (!emotionDef.name) {\n        emotionDef.name = name;\n    }\n    \n    // Ensure visual and modifiers exist\n    if (!emotionDef.visual) {\n        emotionDef.visual = {\n            primaryColor: emotionDef.color,\n            particleCount: emotionDef.particleCount || 15,\n            particleSize: emotionDef.particleSize || { min: 2, max: 6 }\n        };\n    }\n    \n    if (!emotionDef.modifiers) {\n        emotionDef.modifiers = {\n            speed: 1.0,\n            amplitude: 1.0,\n            intensity: 1.0\n        };\n    }\n    \n    pluginEmotions.set(name, emotionDef);\n    \n    if (typeof window !== 'undefined' && window.DEBUG_EMOTIONS) {\n    }\n    \n    return true;\n}\n\n/**\n * Unregister a plugin emotion\n * @param {string} name - Emotion name to remove\n */\nexport function unregisterPluginEmotion(name) {\n    if (pluginEmotions.has(name)) {\n        pluginEmotions.delete(name);\n        \n        if (typeof window !== 'undefined' && window.DEBUG_EMOTIONS) {\n        }\n        \n        return true;\n    }\n    return false;\n}\n\n/**\n * Get a plugin emotion by name\n * @param {string} name - Emotion name\n * @returns {Object|null} Emotion object or null if not found\n */\nexport function getPluginEmotion(name) {\n    return pluginEmotions.get(name) || null;\n}\n\n/**\n * Get all plugin emotion names\n * @returns {Array<string>} Array of emotion names\n */\nexport function getAllPluginEmotions() {\n    return Array.from(pluginEmotions.keys());\n}\n\n/**\n * Clear all plugin emotions\n */\nexport function clearPluginEmotions() {\n    pluginEmotions.clear();\n}\n\n/**\n * Convert legacy plugin emotion format to new format\n * @param {Object} legacyEmotion - Old format emotion\n * @returns {Object} New format emotion\n */\nexport function createLegacyAdapter(legacyEmotion) {\n    return {\n        name: legacyEmotion.name || 'unknown',\n        emoji: legacyEmotion.emoji || '🔌',\n        color: legacyEmotion.primaryColor || legacyEmotion.color || '#7B68EE',\n        energy: legacyEmotion.energy || 'medium',\n        \n        visual: {\n            primaryColor: legacyEmotion.primaryColor || legacyEmotion.color || '#7B68EE',\n            secondaryColor: legacyEmotion.secondaryColor,\n            particleCount: legacyEmotion.particleCount || legacyEmotion.particleRate || 15,\n            particleSize: legacyEmotion.particleSize || { min: 2, max: 6 },\n            glowIntensity: legacyEmotion.glowIntensity || 0.5,\n            trailLength: legacyEmotion.trailLength || 5,\n            pulseRate: legacyEmotion.pulseRate || legacyEmotion.breathRate || 1.0\n        },\n        \n        particles: {\n            behavior: legacyEmotion.particleBehavior || 'ambient',\n            density: legacyEmotion.particleDensity || 'medium',\n            speed: legacyEmotion.particleSpeed || 'normal'\n        },\n        \n        modifiers: {\n            speed: legacyEmotion.speedMultiplier || 1.0,\n            amplitude: legacyEmotion.amplitudeMultiplier || 1.0,\n            intensity: legacyEmotion.intensityMultiplier || 1.0,\n            smoothness: legacyEmotion.smoothnessMultiplier || 1.0\n        },\n        \n        gestures: legacyEmotion.gestures || [],\n        transitions: legacyEmotion.transitions || {}\n    };\n}\n\n// Export adapter interface\nexport default {\n    registerPluginEmotion,\n    unregisterPluginEmotion,\n    getPluginEmotion,\n    getAllPluginEmotions,\n    clearPluginEmotions,\n    createLegacyAdapter\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Neutral Emotion\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Neutral emotional state - calm baseline\r\n * @author Emotive Engine Team\r\n * @module emotions/states/neutral\r\n */\r\n\r\n/**\r\n * Neutral emotion configuration\r\n * The default calm state, baseline for all other emotions\r\n */\r\nexport default {\r\n    name: 'neutral',\r\n    emoji: '😐',\r\n    description: 'Calm, balanced emotional state',\r\n    \r\n    // Visual properties\r\n    visual: {\r\n        glowColor: '#00BCD4',        // Cyan baseline (more modern)\r\n        glowIntensity: 0.9,          // Slightly softer glow\r\n        particleRate: 2,              // Minimal particle generation\r\n        minParticles: 8,             // Baseline particle presence\r\n        maxParticles: 10,            // Limited particle count\r\n        particleBehavior: 'ambient', // Gentle floating behavior\r\n        breathRate: 1.0,             // Normal, relaxed breathing\r\n        breathDepth: 0.08,           // Subtle breath variation\r\n        coreJitter: false,           // Stable, still core\r\n        particleColors: [\r\n            { color: '#00BCD4', weight: 25 },  // Primary cyan\r\n            { color: '#00ACC1', weight: 20 },  // Darker cyan\r\n            { color: '#26C6DA', weight: 15 },  // Light cyan\r\n            { color: '#B2EBF2', weight: 15 },  // Pale cyan highlight\r\n            { color: '#0097A7', weight: 10 },  // Deep cyan shadow\r\n            { color: '#80DEEA', weight: 10 },  // Cyan light\r\n            { color: '#E0F7FA', weight: 5 }    // Very pale cyan\r\n        ]\r\n    },\r\n    \r\n    // Gesture modifiers\r\n    modifiers: {\r\n        speed: 1.0,        // Baseline movement speed\r\n        amplitude: 1.0,    // Standard motion range\r\n        intensity: 1.0,    // Default force level\r\n        smoothness: 1.0,   // Natural motion flow\r\n        regularity: 1.0    // Consistent patterns\r\n    },\r\n    \r\n    // Typical gestures for this emotion\r\n    typicalGestures: [\r\n        'breathe',   // Calm breathing\r\n        'float',     // Gentle floating\r\n        'idle',      // Idle animation\r\n        'blink'      // Occasional blinks\r\n    ],\r\n    \r\n    // Transition hints\r\n    transitions: {\r\n        duration: 500,      // Standard transition duration\r\n        easing: 'easeInOut', // Balanced transition curve\r\n        priority: 0         // Baseline priority level\r\n    },\r\n    \r\n    // Audio/sound associations (optional)\r\n    audio: {\r\n        ambientSound: null,     // No specific ambient sound\r\n        transitionSound: null,  // No transition sound\r\n        gestureSound: null      // No gesture sound\r\n    },\r\n    \r\n    // Particle spawn patterns\r\n    particleSpawn: {\r\n        pattern: 'random',      // Random spawn positions\r\n        frequency: 'steady',    // Steady spawn rate\r\n        burstOnEntry: false,    // No burst when entering state\r\n        fadeOnExit: true        // Fade particles when leaving\r\n    },\r\n    \r\n    // Eye/core appearance\r\n    coreAppearance: {\r\n        pupilSize: 1.0,        // Standard pupil dilation\r\n        irisPattern: 'default', // Basic iris pattern\r\n        blinkRate: 'normal',    // Regular blink frequency\r\n        lookDirection: 'center' // Centered, neutral gaze\r\n    },\r\n    \r\n    /**\r\n     * Get core rendering parameters\r\n     * @param {Object} state - Current renderer state\r\n     * @returns {Object} Core rendering configuration\r\n     */\r\n    getCoreParams: function(state) {\r\n        return {\r\n            scaleX: 1.0,\r\n            scaleY: 1.0,\r\n            eyeOpenness: 1.0,\r\n            eyeExpression: 'neutral', // neutral, happy, sad, focused\r\n            pupilOffset: { x: 0, y: 0 }\r\n        };\r\n    },\r\n    \r\n    /**\r\n     * Optional: Custom core rendering\r\n     * @param {CanvasRenderingContext2D} ctx - Canvas context\r\n     * @param {number} x - Center X\r\n     * @param {number} y - Center Y\r\n     * @param {number} radius - Core radius\r\n     * @returns {boolean} True if custom rendering was done\r\n     */\r\n    renderCore: function(ctx, x, y, radius) {\r\n        // Return false to use default rendering\r\n        return false;\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Joy Emotion\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Joy emotional state - playful happiness\r\n * @author Emotive Engine Team\r\n * @module emotions/states/joy\r\n */\r\n\r\n/**\r\n * Joy emotion configuration\r\n * Playful happiness with popcorn popping particles\r\n */\r\nexport default {\r\n    name: 'joy',\r\n    emoji: '😊',\r\n    description: 'Playful happiness and celebration',\r\n    \r\n    // Visual properties\r\n    visual: {\r\n        glowColor: '#FFEB3B',       // Bright yellow sunshine\r\n        glowIntensity: 1.6,         // Stronger cheerful glow\r\n        particleRate: 40,           // Abundant celebration particles\r\n        minParticles: 0,            // Can start from stillness\r\n        maxParticles: 40,           // Maximum joyful expression\r\n        particleBehavior: 'popcorn', // Spontaneous popping effect\r\n        breathRate: 1.5,            // Excited, happy breathing\r\n        breathDepth: 0.10,          // Moderate breath variation\r\n        coreJitter: false,          // Stable, confident happiness\r\n        particleColors: [\r\n            { color: '#FFEB3B', weight: 25 },  // Bright sunshine yellow\r\n            { color: '#FFC107', weight: 20 },  // Amber joy\r\n            { color: '#FFFF00', weight: 15 },  // Pure yellow burst\r\n            { color: '#FFD700', weight: 15 },  // Gold celebration\r\n            { color: '#FFF59D', weight: 10 },  // Pale yellow sparkle\r\n            { color: '#FF9800', weight: 10 },  // Orange warmth\r\n            { color: '#FFFDE7', weight: 5 }    // Light cream highlight\r\n        ]\r\n    },\r\n    \r\n    // Gesture modifiers\r\n    modifiers: {\r\n        speed: 1.8,        // Energetic, lively pace\r\n        amplitude: 1.9,    // Expansive, celebratory movements\r\n        intensity: 1.1,    // Enhanced joyful energy\r\n        smoothness: 1.0,   // Natural, flowing motion\r\n        regularity: 0.9,   // Playful, varied rhythm\r\n        addBounce: true    // Extra springiness effect\r\n    },\r\n    \r\n    // Typical gestures for joy\r\n    typicalGestures: [\r\n        'bounce',    // Happy bouncing\r\n        'spin',      // Joyful spinning\r\n        'wave',      // Excited waving\r\n        'expand',    // Expanding with joy\r\n        'shake',     // Excited shaking (gentle)\r\n        'float'      // Floating with happiness\r\n    ],\r\n    \r\n    // Transition hints\r\n    transitions: {\r\n        duration: 400,         // Swift mood elevation\r\n        easing: 'easeOutBack', // Bouncy, playful entrance\r\n        priority: 5,           // Elevated positive priority\r\n        burstOnEntry: true     // Celebratory particle burst\r\n    },\r\n    \r\n    // Audio/sound associations\r\n    audio: {\r\n        ambientSound: 'cheerful_hum',    // Cheerful background\r\n        transitionSound: 'pop',           // Pop sound on entry\r\n        gestureSound: 'giggle'            // Giggle on gestures\r\n    },\r\n    \r\n    // Particle spawn patterns\r\n    particleSpawn: {\r\n        pattern: 'fountain',     // Fountain-like spawn\r\n        frequency: 'burst',      // Burst spawning\r\n        burstOnEntry: true,      // Big burst on entry\r\n        fadeOnExit: false,       // Particles pop away\r\n        specialEffect: 'sparkle' // Sparkle effect\r\n    },\r\n    \r\n    // Eye/core appearance\r\n    coreAppearance: {\r\n        pupilSize: 1.2,          // Dilated with excitement\r\n        irisPattern: 'radiant',   // Radiant, sparkling iris\r\n        blinkRate: 'frequent',    // Happy, frequent blinking\r\n        lookDirection: 'up',      // Optimistic upward gaze\r\n        specialEffect: 'twinkle'  // Sparkling eye effect\r\n    },\r\n    \r\n    // Rhythm configuration - joy bounces to the beat\r\n    rhythm: {\r\n        enabled: true,\r\n        \r\n        // Particle emission celebrates on beat\r\n        particleEmission: {\r\n            syncMode: 'beat',\r\n            burstSize: 8,           // Big celebration bursts\r\n            offBeatRate: 0.6,       // Still happy between beats\r\n            popcornSync: true       // Popcorn pops on beat\r\n        },\r\n        \r\n        // Breathing syncs to happy tempo\r\n        breathSync: {\r\n            mode: 'beats',\r\n            beatsPerBreath: 4,     // One breath per bar\r\n            intensity: 1.2          // Deeper happy breaths\r\n        },\r\n        \r\n        // Glow pulses with joy\r\n        glowSync: {\r\n            intensityRange: [1.2, 1.8],\r\n            syncTo: 'beat',\r\n            attack: 0.05,           // Quick brightening\r\n            decay: 0.4              // Bouncy fade\r\n        },\r\n        \r\n        // Pattern-specific joy expressions\r\n        patternBehaviors: {\r\n            'waltz': {\r\n                // Elegant happy waltz\r\n                particleEmission: { burstSize: 5 },\r\n                breathSync: { beatsPerBreath: 3 }\r\n            },\r\n            'swing': {\r\n                // Jazzy playful joy\r\n                particleEmission: { \r\n                    syncMode: 'swing',\r\n                    burstSize: 6\r\n                },\r\n                glowSync: { curve: 'bounce' }\r\n            },\r\n            'dubstep': {\r\n                // Explosive joy on drops\r\n                particleEmission: {\r\n                    burstSize: 15,\r\n                    dropMultiplier: 3.0\r\n                }\r\n            },\r\n            'breakbeat': {\r\n                // Chaotic happy energy\r\n                particleEmission: {\r\n                    syncMode: 'random',\r\n                    burstRange: [3, 12]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Get core rendering parameters for joy\r\n     */\r\n    getCoreParams: function(state) {\r\n        return {\r\n            scaleX: 1.0,\r\n            scaleY: 1.0,\r\n            eyeOpenness: 1.0,\r\n            eyeExpression: 'happy',  // ∪ shaped eyes\r\n            pupilOffset: { x: 0, y: -0.1 },  // Looking slightly up\r\n            sparkle: true  // Add sparkle effect\r\n        };\r\n    }\r\n};","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE - Sadness Emotion\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Sadness emotional state - melancholic sorrow\n * @author Emotive Engine Team\n * @module emotions/states/sadness\n */\n\nexport default {\n    name: 'sadness',\n    emoji: '😢',\n    description: 'Deep melancholic sorrow',\n    \n    // Visual properties\n    visual: {\n        glowColor: '#4169E1',       // Royal blue melancholy\n        glowIntensity: 0.65,        // Dimmer, more subdued glow\n        particleRate: 25,           // Steady tear-like emission\n        minParticles: 0,            // Can fade to emptiness\n        maxParticles: 25,           // Abundant sorrow display\n        particleBehavior: 'falling', // Tears falling downward\n        breathRate: 0.6,            // Slow, heavy breathing\n        breathDepth: 0.12,          // Deep, sighing breaths\n        coreJitter: false,          // Still, heavy core\n        particleColors: [\n            { color: '#4169E1', weight: 25 },  // Royal blue sorrow\n            { color: '#1E90FF', weight: 20 },  // Dodger blue tears\n            { color: '#6495ED', weight: 15 },  // Cornflower blue melancholy\n            { color: '#B0C4DE', weight: 15 },  // Light steel blue mist\n            { color: '#191970', weight: 10 },  // Midnight blue depth\n            { color: '#87CEEB', weight: 10 },  // Sky blue glimmer\n            { color: '#2F4F4F', weight: 5 }    // Dark slate gray shadow\n        ]\n    },\n    \n    // Gesture modifiers\n    modifiers: {\n        speed: 0.7,         // Slowed, weary pace\n        amplitude: 0.6,     // Diminished movement range\n        intensity: 0.8,     // Weakened emotional force\n        smoothness: 1.3,    // Smooth, flowing sorrow\n        regularity: 1.1,    // Slightly monotonous patterns\n        addGravity: true    // Downward, heavy feeling\n    },\n    \n    // Typical gestures for sadness\n    typicalGestures: [\n        'droop',\n        'sway',\n        'contract',\n        'drift',\n        'sink'\n    ],\n    \n    // Transition configuration\n    transitions: {\n        duration: 800,         // Gradual mood shift\n        easing: 'easeInOut',  // Smooth emotional transition\n        priority: 3           // Lower emotional priority\n    },\n};","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE - Anger Emotion\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Anger emotional state - intense rage\n * @author Emotive Engine Team\n * @module emotions/states/anger\n */\n\n/**\n * Anger emotion configuration\n * Intense aggressive state with rapid, chaotic particles\n */\nexport default {\n    name: 'anger',\n    emoji: '😠',\n    description: 'Intense rage and aggression',\n    \n    // Visual properties\n    visual: {\n        glowColor: '#DC143C',       // Crimson rage - more intense\n        glowIntensity: 1.8,         // Stronger, burning aura\n        particleRate: 20,           // More frequent particle generation for chaos\n        minParticles: 3,            // Maintain constant agitation\n        maxParticles: 10,           // More particles for intensity\n        particleBehavior: 'aggressive', // Erratic, forceful particle movement\n        breathRate: 2.2,            // Rapid, agitated breathing rhythm\n        breathDepth: 0.15,          // Deep, forceful breath cycles\n        coreJitter: true,           // Visual tremor from internal rage\n        particleColors: [\n            { color: '#DC143C', weight: 25 },  // Crimson rage\n            { color: '#FF0000', weight: 20 },  // Pure red fury\n            { color: '#B22222', weight: 15 },  // FireBrick intensity\n            { color: '#FF4500', weight: 15 },  // OrangeRed flames\n            { color: '#8B0000', weight: 10 },  // Dark red depth\n            { color: '#FF6347', weight: 10 },  // Tomato heat\n            { color: '#660000', weight: 5 }    // Nearly black ember\n        ]\n    },\n    \n    // Gesture modifiers\n    modifiers: {\n        speed: 1.5,        // Accelerated motion for urgency\n        amplitude: 1.4,    // Exaggerated movement range\n        intensity: 1.3,    // Heightened force and impact\n        smoothness: 0.3,   // Sharp, abrupt transitions\n        regularity: 0.7,   // Erratic, unpredictable patterns\n        addShake: true     // Tremor effect from rage\n    },\n    \n    // Typical gestures for anger\n    typicalGestures: [\n        'shake',     // Violent shaking\n        'vibrate',   // Angry vibration\n        'expand',    // Explosive expansion\n        'pulse',     // Angry pulsing\n        'flicker',   // Rage flickering\n        'strike'     // Strike motion\n    ],\n    \n    // Transition hints\n    transitions: {\n        duration: 300,          // Swift state change\n        easing: 'easeOutExpo',  // Explosive, sudden entrance\n        priority: 8,            // High priority emotional state\n        shakeOnEntry: true      // Trigger screen disturbance\n    },\n    \n    // Audio/sound associations\n    audio: {\n        ambientSound: 'rumble',      // Low rumbling\n        transitionSound: 'explosion', // Explosive sound\n        gestureSound: 'growl'         // Growling sounds\n    },\n    \n    // Particle spawn patterns\n    particleSpawn: {\n        pattern: 'explosive',    // Explosive spawn\n        frequency: 'chaotic',    // Chaotic frequency\n        burstOnEntry: true,      // Explosion on entry\n        fadeOnExit: false,       // Particles dissipate violently\n        specialEffect: 'flames'  // Flame-like effect\n    },\n    \n    // Eye/core appearance\n    coreAppearance: {\n        pupilSize: 0.7,           // Constricted for focused intensity\n        irisPattern: 'sharp',      // Angular, aggressive iris pattern\n        blinkRate: 'rare',        // Unwavering, intense gaze\n        lookDirection: 'forward',  // Direct, confrontational focus\n        specialEffect: 'flames',   // Fire-like eye effects\n        pulseRate: 'rapid'        // Quick, agitated pulsing\n    },\n    \n    // Special anger properties\n    special: {\n        screenShake: true,         // Environmental disturbance effect\n        particleTrails: 'fire',    // Incendiary particle trail style\n        glowPulse: true,          // Rhythmic aura fluctuation\n        temperatureEffect: 'hot'   // Warm spectrum color shifting\n    }\n};","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE - Fear Emotion\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n */\n\nexport default {\n    name: 'fear',\n    emoji: '😨',\n    description: 'Anxious state with fleeing particles',\n    \n    // Visual properties\n    visual: {\n        glowColor: '#8A2BE2',       // Dark violet (BlueViolet) - more ominous\n        glowIntensity: 0.9,         // Slightly stronger, pulsing glow\n        particleRate: 18,           // More rapid nervous emission\n        minParticles: 4,            // Constant anxious presence\n        maxParticles: 16,           // Scattered fearful display\n        particleBehavior: 'scattering', // Particles flee outward\n        breathRate: 2.5,            // Rapid, shallow breathing\n        breathDepth: 0.06,          // Short, panicked breaths\n        coreJitter: true,           // Trembling with anxiety\n        particleColors: [\n            { color: '#8A2BE2', weight: 25 },  // Dark violet base\n            { color: '#4B0082', weight: 20 },  // Indigo dread\n            { color: '#9400D3', weight: 15 },  // Dark violet panic\n            { color: '#6B46C1', weight: 15 },  // Deep purple anxiety\n            { color: '#9932CC', weight: 10 },  // Dark orchid fear\n            { color: '#E6E6FA', weight: 8 },   // Pale lavender flash\n            { color: '#301934', weight: 7 }    // Almost black shadow\n        ]\n    },\n    \n    // Gesture modifiers\n    modifiers: {\n        speed: 1.4,        // Quick, reactive movements\n        amplitude: 0.8,    // Restricted, defensive range\n        intensity: 1.2,    // Heightened fight-or-flight response\n        smoothness: 0.5,   // Jerky, startled transitions\n        regularity: 0.5,   // Unpredictable panic patterns\n        addJitter: true    // Nervous trembling overlay\n    },\n    \n    // Typical gestures for fear\n    typicalGestures: ['shake', 'vibrate', 'contract', 'flicker', 'retreat'],\n    \n    // Transition configuration\n    transitions: { \n        duration: 400,       // Quick fear response\n        easing: 'easeOut',  // Sudden onset\n        priority: 7         // High alert priority\n    }\n};","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE - Surprise Emotion\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n */\n\nexport default {\n    name: 'surprise',\n    emoji: '😲',\n    description: 'Sudden shock with explosive particles',\n    \n    // Visual properties\n    visual: {\n        glowColor: '#FFD700',       // Bright gold (shining surprise)\n        glowIntensity: 1.8,         // Very intense, sudden flash\n        particleRate: 30,           // Rapid burst emission\n        minParticles: 0,            // Can start from nothing\n        maxParticles: 15,           // Burst of shocked particles\n        particleBehavior: 'burst',  // Explosive outward motion\n        breathRate: 0.3,            // Gasping, held breath\n        breathDepth: 0.18,          // Large shocked inhale\n        coreJitter: false,          // Frozen in surprise\n        particleColors: [\n            { color: '#FFD700', weight: 25 },  // Gold burst\n            { color: '#FFA500', weight: 20 },  // Orange shock\n            { color: '#FFFF00', weight: 15 },  // Yellow flash\n            { color: '#FF6347', weight: 15 },  // Tomato red excitement\n            { color: '#FFE4B5', weight: 10 },  // Moccasin highlight\n            { color: '#FF4500', weight: 10 },  // OrangeRed pop\n            { color: '#FFFACD', weight: 5 }    // LemonChiffon sparkle\n        ]\n    },\n    \n    // Gesture modifiers\n    modifiers: {\n        speed: 1.6,         // Rapid, startled reactions\n        amplitude: 1.5,     // Large, exaggerated movements\n        intensity: 1.4,     // Strong shock force\n        smoothness: 0.7,    // Abrupt, jerky motions\n        regularity: 0.8,    // Erratic surprise patterns\n        addPop: true        // Popping, explosive effect\n    },\n    \n    // Typical gestures for surprise\n    typicalGestures: ['expand', 'bounce', 'flash', 'pulse', 'pop'],\n    \n    // Transition configuration\n    transitions: { \n        duration: 200,           // Instant shock response\n        easing: 'easeOutBack',  // Snappy, elastic reaction\n        priority: 6             // High interrupt priority\n    }\n};","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE - Disgust Emotion\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n */\n\nexport default {\n    name: 'disgust',\n    emoji: '🤢',\n    description: 'Revulsion with repelling particles',\n    \n    // Visual properties\n    visual: {\n        glowColor: '#9ACD32',       // Sickly yellow-green (YellowGreen)\n        glowIntensity: 1.0,         // Stronger, toxic glow\n        particleRate: 15,           // More particles for nauseating effect\n        minParticles: 5,            // Maintain visible repulsion\n        maxParticles: 12,           // Controlled rejection display\n        particleBehavior: 'repelling', // Particles flee from center\n        breathRate: 0.7,            // Slow, queasy breathing\n        breathDepth: 0.04,          // Shallow, uncomfortable breaths\n        coreJitter: false,          // Stable but uneasy core\n        particleColors: [\n            { color: '#9ACD32', weight: 25 },  // Yellow-green toxic\n            { color: '#ADFF2F', weight: 20 },  // Bright acid green\n            { color: '#7FFF00', weight: 15 },  // Chartreuse nausea\n            { color: '#BDB76B', weight: 15 },  // Dark khaki sick\n            { color: '#6B8E23', weight: 10 },  // Olive drab decay\n            { color: '#CCFF00', weight: 8 },   // Fluorescent bile\n            { color: '#556B2F', weight: 7 }    // Dark olive shadow\n        ]\n    },\n    \n    // Gesture modifiers\n    modifiers: {\n        speed: 0.9,        // Slightly slowed movements\n        amplitude: 0.7,    // Restricted, withdrawn motion\n        intensity: 0.9,    // Controlled repulsion force\n        smoothness: 0.8,   // Mostly smooth with discomfort\n        regularity: 1.0,   // Consistent rejection pattern\n        addRecoil: true    // Recoiling motion effect\n    },\n    \n    // Typical gestures for disgust\n    typicalGestures: ['contract', 'shake', 'recoil', 'wobble'],\n    \n    // Transition configuration\n    transitions: { \n        duration: 600,       // Moderate transition speed\n        easing: 'easeIn',   // Gradual onset of revulsion\n        priority: 4         // Mid-level priority state\n    }\n};","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE - Love Emotion\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n */\n\nexport default {\n    name: 'love',\n    emoji: '💕',\n    description: 'Warm affection with orbiting particles',\n    \n    // Visual properties\n    visual: {\n        glowColor: '#FF1493',       // Deep passionate pink (DeepPink)\n        glowIntensity: 1.8,         // Strong, radiant warmth\n        particleRate: 25,           // Generous particle flow\n        minParticles: 10,           // Constant loving presence\n        maxParticles: 18,           // Abundant affection display\n        particleBehavior: 'orbiting', // Particles orbit romantically\n        breathRate: 0.75,           // Slow, content breathing\n        breathDepth: 0.15,          // Deep, satisfied breaths\n        coreJitter: false,          // Stable, secure feeling\n        particleColors: [\n            { color: '#FF1493', weight: 30 },  // Deep passionate pink\n            { color: '#FF69B4', weight: 25 },  // Hot pink\n            { color: '#FF007F', weight: 15 },  // Rose red\n            { color: '#FFB6C1', weight: 10 },  // Light pink highlights\n            { color: '#FF45A0', weight: 10 },  // Vibrant magenta\n            { color: '#E91E63', weight: 5 },   // Material pink accent\n            { color: '#FFC0CB', weight: 5 }    // Soft pink glow\n        ]\n    },\n    \n    // Gesture modifiers\n    modifiers: {\n        speed: 0.9,         // Gentle, romantic pace\n        amplitude: 1.1,     // Slightly expanded movements\n        intensity: 1.2,     // Enhanced emotional depth\n        smoothness: 1.4,    // Extra smooth, flowing motion\n        regularity: 1.2,    // Consistent, rhythmic patterns\n        addWarmth: true     // Warm, inviting quality\n    },\n    \n    // Typical gestures for love\n    typicalGestures: ['pulse', 'sway', 'orbit', 'glow', 'breathe', 'float'],\n    \n    // Transition configuration\n    transitions: { \n        duration: 700,         // Gradual emotional shift\n        easing: 'easeInOut',  // Smooth, gentle transition\n        priority: 5           // Moderate emotional priority\n    },\n    \n    // Rhythm configuration - how love emotion responds to musical timing\n    rhythm: {\n        enabled: true,\n        \n        // Particle emission syncs to rhythm\n        particleEmission: {\n            syncMode: 'beat',        // Emit bursts on beat\n            burstSize: 3,            // Extra particles per beat\n            offBeatRate: 0.7         // Reduced emission between beats\n        },\n        \n        // Orbital motion rhythm\n        orbitalSync: {\n            speedMultiplier: {\n                onBeat: 1.2,         // Speed up on beat\n                offBeat: 0.9,        // Slow between beats\n                curve: 'ease'        // Smooth speed changes\n            },\n            radiusSync: {\n                enabled: true,\n                subdivision: 'quarter',  // Pulse radius on quarters\n                amount: 0.15            // 15% radius variation\n            }\n        },\n        \n        // Glow pulsing with rhythm\n        glowSync: {\n            intensityRange: [1.4, 2.0],  // Min/max glow intensity\n            syncTo: 'beat',              // Pulse on beats\n            attack: 0.1,                 // Quick brightening\n            decay: 0.6                   // Gentle fade\n        },\n        \n        // Breathing synced to bars\n        breathSync: {\n            mode: 'bars',\n            barsPerBreath: 2,    // One breath every 2 bars\n            intensity: 1.0        // Full sync strength\n        },\n        \n        // Pattern-specific overrides\n        patternBehaviors: {\n            'waltz': {\n                // 3/4 time creates romantic swaying\n                orbitalSync: { \n                    radiusSync: { subdivision: 'bar', amount: 0.25 }\n                },\n                particleEmission: { syncMode: 'bar', burstSize: 5 }\n            },\n            'swing': {\n                // Jazzy, playful love\n                orbitalSync: {\n                    speedMultiplier: { onBeat: 1.5, curve: 'bounce' }\n                }\n            }\n        },\n        \n        // Intensity modulation\n        intensityMapping: {\n            low: { particleRate: 0.6, glowIntensity: 0.8 },\n            medium: { particleRate: 1.0, glowIntensity: 1.0 },\n            high: { particleRate: 1.4, glowIntensity: 1.3 }\n        }\n    }\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Suspicion Emotion\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n */\r\n\r\nexport default {\r\n    name: 'suspicion',\r\n    emoji: '🤨',\r\n    description: 'Paranoid watchfulness with surveillance scanning',\r\n    \r\n    // Visual properties\r\n    visual: {\r\n        glowColor: '#6B46C1',       // Deep purple paranoia\r\n        glowIntensity: 0.85,        // Watchful glow that intensifies with threat\r\n        particleRate: 18,           // Increased surveillance particles\r\n        minParticles: 6,            // More eyes watching\r\n        maxParticles: 12,           // Heightened alert capacity\r\n        particleBehavior: 'surveillance',  // NEW: Searchlight scanning behavior\r\n        particleSpeed: 0.2,         // Base particle speed\r\n        breathRate: 0.6,            // Slower, more deliberate breathing\r\n        breathDepth: 0.04,          // Very shallow, tense breaths\r\n        coreJitter: 0.02,           // Slight nervous tremor\r\n        particleColors: [\r\n            { color: '#6B46C1', weight: 30 },  // Deep purple paranoia\r\n            { color: '#4A5568', weight: 25 },  // Shadowy slate gray\r\n            { color: '#8B4789', weight: 20 },  // Dark magenta mystery\r\n            { color: '#9F7AEA', weight: 15 },  // Alert purple highlights\r\n            { color: '#2D3748', weight: 10 }   // Deep shadow lurking\r\n        ],\r\n        // Dynamic threat level properties\r\n        threatLevel: 0,             // 0-1 scale, updated by gaze distance\r\n        getGlowIntensity: function() {\r\n            return 0.3 + (this.threatLevel * 0.7);\r\n        },\r\n        getParticleSpeed: function() {\r\n            return 0.2 + (this.threatLevel * 0.8);\r\n        },\r\n        getGlowColor: function() {\r\n            // Color shifts from purple to red as threat increases\r\n            const baseColor = { r: 107, g: 70, b: 193 };  // #6B46C1\r\n            const alertColor = { r: 220, g: 38, b: 127 }; // #DC267F (magenta-red)\r\n            \r\n            const t = this.threatLevel || 0;\r\n            \r\n            const r = Math.round(baseColor.r + (alertColor.r - baseColor.r) * t);\r\n            const g = Math.round(baseColor.g + (alertColor.g - baseColor.g) * t);\r\n            const b = Math.round(baseColor.b + (alertColor.b - baseColor.b) * t);\r\n            \r\n            // Convert to hex\r\n            const toHex = (val) => val.toString(16).padStart(2, '0');\r\n            return `#${toHex(r)}${toHex(g)}${toHex(b)}`;\r\n        }\r\n    },\r\n    \r\n    // Gesture modifiers\r\n    modifiers: {\r\n        speed: 0.4,         // Slower, more deliberate movements\r\n        amplitude: 0.6,     // Smaller, controlled movements\r\n        intensity: 1.2,     // Higher alertness\r\n        smoothness: 0.3,    // Jerky, paranoid movements\r\n        regularity: 0.2,    // Highly unpredictable patterns\r\n        focus: 1.5,         // Hyper-focused attention\r\n        addWobble: true     // Uncertain, questioning motion\r\n    },\r\n    \r\n    // Typical gestures for suspicion\r\n    typicalGestures: ['scan', 'twitch', 'peek', 'tilt', 'hold'],\r\n    \r\n    // Transition configuration\r\n    transitions: { \r\n        duration: 500,       // Moderate alertness shift\r\n        easing: 'linear',   // Steady, controlled transition\r\n        priority: 4         // Mid-level alert priority\r\n    },\r\n    \r\n    // Special suspicion properties\r\n    special: {\r\n        coreSquint: 0.6,        // More pronounced eye narrowing\r\n        scanInterval: 2000,     // More frequent scans\r\n        scanDuration: 1200,     // Longer, more thorough scanning\r\n        scanAngle: 60,          // Wider scanning range\r\n        twitchChance: 0.02,     // 2% chance per frame to twitch\r\n        peekInterval: 4000,     // Time between peek gestures\r\n        maxThreatDistance: 300, // Distance for threat calculation\r\n        alertThreshold: 0.7     // Threat level for maximum alert\r\n    }\r\n};","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE - Excited Emotion\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n */\n\nexport default {\n    name: 'excited',\n    emoji: '🤩',\n    description: 'High energy with rapid particles',\n    \n    // Visual properties\n    visual: {\n        glowColor: '#FF6B35',       // Vibrant orange-red energy\n        glowIntensity: 1.5,         // Stronger energetic aura\n        particleRate: 25,           // Increased emission frequency (was 15)\n        minParticles: 8,            // More constant particles (was 5)\n        maxParticles: 30,           // More maximum particles (was 20)\n        particleBehavior: 'burst',  // Explosive particle behavior\n        breathRate: 2.0,            // Quick, excited breathing\n        breathDepth: 0.14,          // Deep, energized breaths\n        coreJitter: true,           // Vibrating with enthusiasm\n        particleColors: [\n            { color: '#FF6B35', weight: 25 },  // Vibrant orange energy\n            { color: '#FF1744', weight: 20 },  // Red accent excitement\n            { color: '#FFC107', weight: 15 },  // Amber sparkle\n            { color: '#FF9100', weight: 15 },  // Deep orange burst\n            { color: '#FFEB3B', weight: 10 },  // Yellow flash\n            { color: '#FF5722', weight: 10 },  // Deep orange-red\n            { color: '#FFF59D', weight: 5 }    // Pale yellow highlight\n        ]\n    },\n    \n    // Gesture modifiers\n    modifiers: {\n        speed: 1.4,         // Quickened, energetic pace\n        amplitude: 1.3,     // Expansive, enthusiastic movements\n        intensity: 1.3,     // Strong energetic force\n        smoothness: 0.8,    // Smooth with energetic bursts\n        regularity: 0.7,    // Spontaneous, varied patterns\n        addVibration: true  // Buzzing with excitement\n    },\n    \n    // Typical gestures for excitement\n    typicalGestures: ['bounce', 'spin', 'vibrate', 'expand', 'shake', 'pulse'],\n    \n    // Transition configuration\n    transitions: { \n        duration: 300,              // Quick state entry\n        easing: 'easeOutElastic',  // Bouncy, elastic entrance\n        priority: 6                // High-energy priority level\n    },\n    \n    // Rhythm configuration - excited syncs energetically to beat\n    rhythm: {\n        enabled: true,\n        \n        // Particle emission doubles on beat\n        particleEmission: {\n            syncMode: 'beat',\n            burstSize: 5,           // Big bursts on beat\n            offBeatRate: 0.5        // Calmer between beats\n        },\n        \n        // Core jitter syncs to subdivisions\n        jitterSync: {\n            subdivision: 'sixteenth',  // Rapid jitter on 16th notes\n            intensity: 0.8,           // Strong rhythm influence\n            onBeat: 1.5              // Extra jitter on beat\n        },\n        \n        // Glow pulses rapidly with beat\n        glowSync: {\n            intensityRange: [1.0, 1.8],\n            syncTo: 'eighth',         // Pulse on 8th notes\n            attack: 0.05,            // Very quick attack\n            decay: 0.2               // Quick decay\n        },\n        \n        // Different patterns create different excitement\n        patternBehaviors: {\n            'dubstep': {\n                // Heavy drops create explosion effects\n                particleEmission: { \n                    syncMode: 'beat',\n                    burstSize: 10,      // Huge bursts on drop\n                    dropMultiplier: 2   // Double on beat 3\n                }\n            },\n            'breakbeat': {\n                // Broken beats create chaotic energy\n                jitterSync: {\n                    subdivision: 'random',\n                    intensity: 1.0\n                }\n            }\n        }\n    }\n};","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE - Resting Emotion\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n */\n\nexport default {\n    name: 'resting',\n    emoji: '😴',\n    description: 'Deep relaxation with slow drift',\n    \n    // Visual properties\n    visual: {\n        glowColor: '#9370DB',       // Sleepy purple twilight\n        glowIntensity: 0.8,         // Dimmed, drowsy glow\n        particleRate: 10,           // Lazy particle generation\n        minParticles: 3,            // Minimal sleepy presence\n        maxParticles: 5,            // Few drifting particles\n        particleBehavior: 'resting', // Slow, floating behavior\n        breathRate: 0.8,            // Deep, slow breathing\n        breathDepth: 0.12,          // Pronounced rest breaths\n        coreJitter: false,          // Perfectly still core\n        particleColors: [\n            { color: '#9370DB', weight: 30 },  // Primary sleepy purple\n            { color: '#A591C4', weight: 20 },  // Soft lavender drift\n            { color: '#B366FF', weight: 20 },  // Dreamy violet accent\n            { color: '#B8A1E6', weight: 15 },  // Light drowsy highlights\n            { color: '#674D9B', weight: 15 }   // Deep sleep shadows\n        ]\n    },\n    \n    // Gesture modifiers\n    modifiers: {\n        speed: 0.5,         // Slowed, drowsy pace\n        amplitude: 0.4,     // Minimal movement range\n        intensity: 0.5,     // Reduced energy level\n        smoothness: 1.4,    // Extra smooth drifting\n        regularity: 0.9,    // Slightly irregular, natural rest\n        addWeight: true     // Heavy, weighted feeling\n    },\n    \n    // Typical gestures for resting\n    typicalGestures: ['breathe', 'drift', 'sway', 'float'],\n    \n    // Transition configuration\n    transitions: { \n        duration: 1000,         // Slow fade to rest\n        easing: 'easeInOut',   // Gentle transition\n        priority: 2            // Low priority state\n    }\n};","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE - Euphoria Emotion\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n */\n\nexport default {\n    name: 'euphoria',\n    emoji: '🌟',\n    description: 'Radiant hope and new beginnings',\n    \n    // Visual properties\n    visual: {\n        glowColor: '#FFB6C1',       // Light pink euphoric glow\n        glowIntensity: 2.0,         // Maximum transcendent radiance\n        particleRate: 35,           // Abundant particle emission\n        minParticles: 15,           // Abundant positive energy\n        maxParticles: 30,           // Maximum radiant display\n        particleBehavior: 'radiant', // Outward radiating particles\n        breathRate: 1.3,            // Elevated, joyful breathing\n        breathDepth: 0.25,          // Full, satisfied breaths\n        coreJitter: false,          // Stable, confident core\n        particleColors: [\n            { color: '#FFB6C1', weight: 20 },  // Light pink bliss\n            { color: '#FFD700', weight: 18 },  // Golden joy\n            { color: '#87CEEB', weight: 15 },  // Sky blue serenity\n            { color: '#DDA0DD', weight: 15 },  // Plum transcendence\n            { color: '#98FB98', weight: 12 },  // Pale green harmony\n            { color: '#FFA07A', weight: 10 },  // Light salmon warmth\n            { color: '#E6E6FA', weight: 8 },   // Lavender dream\n            { color: '#FFFFFF', weight: 2 }    // Pure white sparkle\n        ]\n    },\n    \n    // Gesture modifiers\n    modifiers: {\n        speed: 1.4,         // Energized, flowing pace\n        amplitude: 1.5,     // Expansive, reaching movements\n        intensity: 1.6,     // Powerful positive force\n        smoothness: 1.3,    // Extra fluid, graceful motion\n        regularity: 0.8,    // Natural variation in rhythm\n        addWarmth: true,    // Warm, inviting quality\n        addLift: true       // Upward, elevating tendency\n    },\n    \n    // Typical gestures for euphoria\n    typicalGestures: ['expand', 'radiate', 'pulse', 'glow', 'float', 'bloom'],\n    \n    // Transition configuration\n    transitions: { \n        duration: 600,           // Smooth emergence\n        easing: 'easeOutExpo',  // Explosive, radiant entrance\n        priority: 8             // High priority transcendent state\n    }\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Focused Emotion\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n */\r\n\r\nexport default {\r\n    name: 'focused',\r\n    emoji: '🎯',\r\n    description: 'Intense concentration with directed flow',\r\n    \r\n    // Visual properties\r\n    visual: {\r\n        glowColor: '#00CED1',       // Sharp cyan concentration\r\n        glowIntensity: 1.2,         // Clear, defined aura\r\n        particleRate: 10,           // Steady, controlled emission\r\n        minParticles: 5,            // Consistent focus presence\r\n        maxParticles: 12,           // Controlled attention display\r\n        particleBehavior: 'directed', // Particles follow target\r\n        breathRate: 1.2,            // Steady, measured breathing\r\n        breathDepth: 0.08,          // Controlled, regular breaths\r\n        coreJitter: true,           // Minimal tracking adjustments\r\n        particleColors: [\r\n            { color: '#00CED1', weight: 30 },  // Primary focused cyan\r\n            { color: '#4A9FA0', weight: 20 },  // Muted concentration tone\r\n            { color: '#00FFFF', weight: 20 },  // Bright attention burst\r\n            { color: '#5FE5E7', weight: 15 },  // Light focus highlights\r\n            { color: '#006B6D', weight: 15 }   // Deep concentration base\r\n        ],\r\n        eyeOpenness: 0.7,           // Narrowed for concentration\r\n        microAdjustments: true      // Subtle tracking movements\r\n    },\r\n    \r\n    // Gesture modifiers\r\n    modifiers: {\r\n        speed: 1.0,         // Baseline, deliberate pace\r\n        amplitude: 0.9,     // Controlled movement range\r\n        intensity: 1.1,     // Enhanced focus strength\r\n        smoothness: 1.1,    // Precise, smooth tracking\r\n        regularity: 1.2,    // Consistent, predictable patterns\r\n        addPrecision: true  // Enhanced accuracy mode\r\n    },\r\n    \r\n    // Typical gestures for focus\r\n    typicalGestures: ['track', 'lock', 'scan', 'pulse', 'vibrate'],\r\n    \r\n    // Transition configuration\r\n    transitions: { \r\n        duration: 400,       // Moderate focus shift\r\n        easing: 'easeIn',   // Gradual concentration\r\n        priority: 5         // Mid-level attention priority\r\n    },\r\n    \r\n    // Core appearance parameters\r\n    getCoreParams: function(state) {\r\n        return {\r\n            scaleX: 1.1,              // Slightly widened awareness\r\n            scaleY: 0.7,              // Narrowed for concentration\r\n            eyeOpenness: 0.7,         // Focused gaze intensity\r\n            eyeExpression: 'focused', // Concentrated expression\r\n            pupilOffset: { x: 0, y: 0 }, // Centered attention\r\n            microAdjustments: true    // Small tracking movements\r\n        };\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Glitch Emotion\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n */\r\n\r\nexport default {\r\n    name: 'glitch',\r\n    emoji: '⚡',\r\n    description: 'Digital distortion with erratic particle stutters',\r\n    \r\n    // Visual properties\r\n    visual: {\r\n        primaryColor: '#00FFAA',    // Bright digital cyan-green\r\n        glowColor: '#00FFAA',       // Bright digital cyan-green\r\n        glowIntensity: 2.2,         // Intense, flickering energy\r\n        particleRate: 30,           // High rate for glitchy effect\r\n        minParticles: 12,           // Constant digital noise\r\n        maxParticles: 20,           // Maximum chaos\r\n        particleBehavior: 'glitchy', // New glitch behavior\r\n        particleSpeed: 1.5,         // Fast, erratic speeds\r\n        breathRate: 0.3,            // Rapid, stuttering breaths\r\n        breathDepth: 0.08,          // Shallow, digital hiccups\r\n        coreJitter: 0.04,           // Constant digital tremor\r\n        coreSize: 1.1,              // Slightly enlarged core\r\n        eyeOpenness: 1.0,           // Wide open eyes\r\n        particleColors: [\r\n            { color: '#00FFAA', weight: 25 },  // Bright cyan-green\r\n            { color: '#FF00AA', weight: 20 },  // Hot magenta\r\n            { color: '#00FF00', weight: 15 },  // Pure digital green\r\n            { color: '#FF0099', weight: 15 },  // Neon pink\r\n            { color: '#00FFFF', weight: 10 },  // Electric cyan\r\n            { color: '#FFAA00', weight: 8 },   // Digital amber warning\r\n            { color: '#FF00FF', weight: 5 },   // Pure magenta glitch\r\n            { color: '#FFFFFF', weight: 2 }    // Rare white static\r\n        ],\r\n        // Glitch-specific properties\r\n        glitchIntensity: 0.8,      // How intense the glitching is\r\n        flickerChance: 0.05,       // 5% chance per frame to flicker\r\n        rgbShift: true,            // Enable RGB channel separation\r\n        digitalNoise: true,        // Add digital noise pattern\r\n        getGlowIntensity: function() {\r\n            // Random intensity flickers\r\n            if (Math.random() < this.flickerChance) {\r\n                return 0.2 + Math.random() * 2.5;\r\n            }\r\n            return this.glowIntensity;\r\n        },\r\n        getGlowColor: function() {\r\n            // Occasionally shift to random glitch colors\r\n            if (Math.random() < 0.02) {\r\n                const glitchColors = ['#FF00AA', '#00FFFF', '#FF0099', '#00FFAA', '#FFAA00'];\r\n                return glitchColors[Math.floor(Math.random() * glitchColors.length)];\r\n            }\r\n            return this.glowColor;\r\n        }\r\n    },\r\n    \r\n    // Gesture modifiers\r\n    modifiers: {\r\n        speed: 2.0,         // Hyper-speed movements\r\n        amplitude: 0.8,     // Constrained but erratic\r\n        intensity: 1.8,     // High energy bursts\r\n        smoothness: 0.1,    // Extremely jerky, stuttering motion\r\n        regularity: 0.1,    // Completely unpredictable\r\n        focus: 0.5,         // Scattered, unfocused\r\n        addGlitch: true,    // Special glitch modifier\r\n        addStutter: true    // Stuttering motion effect\r\n    },\r\n    \r\n    // Typical gestures for glitch\r\n    typicalGestures: ['twitch', 'jitter', 'breathe', 'pulse', 'shake', 'flicker'],\r\n    \r\n    // Transition configuration\r\n    transitions: { \r\n        duration: 100,          // Instant, jarring transitions\r\n        easing: 'linear',       // No smoothing - digital snap\r\n        priority: 7,            // High priority disruption\r\n        glitchIn: true          // Special glitch transition effect\r\n    },\r\n    \r\n    // Special glitch properties\r\n    special: {\r\n        stutterInterval: 50,        // Stutter every 50ms\r\n        stutterDuration: 20,        // Each stutter lasts 20ms\r\n        rgbOffset: 3,               // Pixel offset for RGB separation\r\n        scanlineEffect: true,       // Add CRT scanlines\r\n        datamoshChance: 0.01,       // 1% chance to datamosh\r\n        corruptionZones: 3,         // Number of corruption areas\r\n        digitalTearHeight: 10       // Height of digital tears\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Calm Emotion\r\n *  └─○═╝\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Calm emotional state - serene and peaceful\r\n * @author Emotive Engine Team\r\n * @module emotions/states/calm\r\n */\r\n\r\n/**\r\n * Calm emotion configuration\r\n * A state of deep tranquility and inner peace\r\n */\r\nexport default {\r\n    name: 'calm',\r\n    emoji: '😌',\r\n    description: 'Serene, peaceful state with gentle movements',\r\n\r\n    // Visual properties\r\n    visual: {\r\n        glowColor: '#66D9CC',        // Bright mint/turquoise (more distinct from neutral blue)\r\n        glowIntensity: 0.6,          // Softer glow than neutral\r\n        particleRate: 25,            // Steady, peaceful emission like sadness\r\n        minParticles: 8,             // Keep some particles always\r\n        maxParticles: 25,            // Allow more particles like sadness\r\n        particleBehavior: 'zen',     // Zen orbital behavior\r\n        breathRate: 0.4,             // Much slower breathing than neutral (1.0)\r\n        breathDepth: 0.12,           // Deeper breaths than neutral (0.08)\r\n        coreJitter: false,           // Perfectly still core\r\n        particleColors: [\r\n            { color: '#66D9CC', weight: 35 },  // Bright turquoise\r\n            { color: '#99E6D9', weight: 25 },  // Light mint\r\n            { color: '#40BFB3', weight: 20 },  // Medium teal\r\n            { color: '#B3F2E6', weight: 15 },  // Pale mint\r\n            { color: '#339980', weight: 5 }    // Deep teal shadow\r\n        ]\r\n    },\r\n\r\n    // Gesture modifiers\r\n    modifiers: {\r\n        speed: 0.5,         // Much slower than neutral (1.0)\r\n        amplitude: 0.3,     // Significantly reduced motion range\r\n        intensity: 0.4,     // Very gentle force level\r\n        smoothness: 2.0,    // Much smoother than neutral\r\n        regularity: 1.5,    // More consistent patterns\r\n        addWeight: false,   // Light, floating feeling\r\n        floatHeight: 0.2,   // Minimal floating height\r\n        swayAmount: 0.15,   // Very minimal side-to-side sway\r\n        duration: 1.5       // Extend gesture duration\r\n    },\r\n\r\n    // Typical gestures for this emotion\r\n    typicalGestures: [\r\n        'breathe',   // Deep, slow breathing\r\n        'float',     // Gentle floating\r\n        'drift',     // Slow drifting\r\n        'idle'       // Peaceful idle state\r\n    ],\r\n\r\n    // Transition hints\r\n    transitions: {\r\n        duration: 800,           // Slower transition into calm\r\n        easing: 'easeInOutSine', // Very smooth sine curve\r\n        priority: 1              // Low-medium priority\r\n    },\r\n\r\n    // Audio/sound associations\r\n    audio: {\r\n        ambientSound: 'soft_waves',  // Gentle ambient sounds\r\n        transitionSound: null,        // No harsh transition\r\n        gestureSound: null,           // Silent gestures\r\n        volumeModifier: 0.5           // Quieter overall\r\n    },\r\n\r\n    // Particle spawn patterns\r\n    particleSpawn: {\r\n        pattern: 'center_drift',  // Spawn from center, drift outward\r\n        frequency: 'slow',        // Very slow spawn rate\r\n        burstOnEntry: false,      // No burst when entering\r\n        fadeOnExit: true,         // Gentle fade when leaving\r\n        spawnRadius: 0.3,         // Spawn close to center\r\n        driftSpeed: 0.2           // Very slow particle drift\r\n    },\r\n\r\n    // Eye/core appearance\r\n    coreAppearance: {\r\n        pupilSize: 0.9,           // Slightly relaxed pupils\r\n        irisPattern: 'soft',       // Softer iris edges\r\n        blinkRate: 'slow',        // Slower, relaxed blinking\r\n        lookDirection: 'soft_center', // Soft focus, not sharp\r\n        eyeOpenness: 0.85         // Slightly droopy, relaxed eyes\r\n    },\r\n\r\n    // Movement patterns\r\n    movement: {\r\n        floatPattern: 'sine_slow',     // Slow sine wave floating\r\n        floatPeriod: 6000,              // 6 second float cycle\r\n        floatAmplitude: 8,              // 8 pixel vertical range\r\n        swayPattern: 'gentle',          // Gentle side sway\r\n        swayPeriod: 8000,               // 8 second sway cycle\r\n        swayAmplitude: 5,               // 5 pixel horizontal range\r\n        microMovements: false           // No jittery movements\r\n    },\r\n\r\n    /**\r\n     * Get core rendering parameters\r\n     * @param {Object} state - Current renderer state\r\n     * @returns {Object} Core rendering configuration\r\n     */\r\n    getCoreParams: function(state) {\r\n        const time = state.time || Date.now();\r\n        const breathPhase = Math.sin(time * 0.0006) * 0.5 + 0.5; // Very slow breathing\r\n\r\n        return {\r\n            scaleX: 1.0 - (breathPhase * 0.02),  // Very subtle breathing scale\r\n            scaleY: 1.0 - (breathPhase * 0.02),\r\n            eyeOpenness: 0.85,                   // Relaxed eyes\r\n            eyeExpression: 'serene',             // New serene expression\r\n            pupilOffset: {\r\n                x: Math.sin(time * 0.0003) * 2,  // Slow, minimal eye movement\r\n                y: Math.cos(time * 0.0004) * 1\r\n            },\r\n            glowPulse: 0.95 + (breathPhase * 0.05)  // Very subtle glow pulse\r\n        };\r\n    },\r\n\r\n    /**\r\n     * Optional: Custom particle behavior for calm state\r\n     * @param {Object} particle - Particle to update\r\n     * @param {number} deltaTime - Time since last update\r\n     */\r\n    updateParticle: function(particle, deltaTime) {\r\n        // Super slow drift\r\n        particle.x += Math.sin(particle.life * 0.001) * 0.1;\r\n        particle.y -= deltaTime * 0.02; // Very slow rise\r\n\r\n        // Gentle fade based on life\r\n        particle.opacity = Math.sin(particle.life * 0.002) * 0.3 + 0.2;\r\n\r\n        // Slow size pulse\r\n        particle.size = particle.baseSize * (1 + Math.sin(particle.life * 0.001) * 0.2);\r\n    },\r\n\r\n    /**\r\n     * Optional: Custom core rendering\r\n     * @param {CanvasRenderingContext2D} ctx - Canvas context\r\n     * @param {number} x - Center X\r\n     * @param {number} y - Center Y\r\n     * @param {number} radius - Core radius\r\n     * @returns {boolean} True if custom rendering was done\r\n     */\r\n    renderCore: function(ctx, x, y, radius) {\r\n        // Return false to use default rendering with parameters\r\n        return false;\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE v4.0 - Emotion Registry\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Central emotion registry with full plugin support\r\n * @author Emotive Engine Team\r\n * @version 4.0.0\r\n * @module emotions\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ Central registry for modular emotion system with plugin adapter integration.\r\n * ║ • Core emotions are loaded synchronously at startup\r\n * ║ • Plugin emotions can be registered dynamically via adapter\r\n * ║ • Each emotion is self-contained with visual, gesture, and transition data\r\n * ║ • Value-agnostic design allows easy tuning without code changes\r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n */\r\n\r\nimport pluginAdapter from './plugin-adapter.js';\r\n\r\n// Import all emotion modules\r\nimport neutral from './states/neutral.js';\r\nimport joy from './states/joy.js';\r\nimport sadness from './states/sadness.js';\r\nimport anger from './states/anger.js';\r\nimport fear from './states/fear.js';\r\nimport surprise from './states/surprise.js';\r\nimport disgust from './states/disgust.js';\r\nimport love from './states/love.js';\r\nimport suspicion from './states/suspicion.js';\r\nimport excited from './states/excited.js';\r\nimport resting from './states/resting.js';\r\nimport euphoria from './states/euphoria.js';\r\nimport focused from './states/focused.js';\r\nimport glitch from './states/glitch.js';\r\nimport calm from './states/calm.js';\r\n\r\n// Registry to store all registered emotions\r\nconst emotionRegistry = new Map();\r\n\r\n// Emotion aliases for compatibility\r\nconst emotionAliases = {\r\n    'happy': 'joy',\r\n    'peaceful': 'calm',\r\n    'curious': 'surprise',\r\n    'frustrated': 'anger',\r\n    'sad': 'sadness'\r\n};\r\n\r\n// Register all emotions SYNCHRONOUSLY\r\n[neutral, joy, sadness, anger, fear, surprise, disgust,\r\n love, suspicion, excited, resting, euphoria, focused, glitch, calm].forEach(emotion => {\r\n    if (emotion && emotion.name) {\r\n        emotionRegistry.set(emotion.name, emotion);\r\n    }\r\n});\r\n\r\n\r\n/**\r\n * Register an emotion module\r\n * @param {Object} emotionModule - The emotion module to register\r\n */\r\nexport function registerEmotion(emotionModule) {\r\n    if (!emotionModule.name) {\r\n        return;\r\n    }\r\n    emotionRegistry.set(emotionModule.name, emotionModule);\r\n}\r\n\r\n/**\r\n * Get emotion configuration by name (checks both core and plugin emotions)\r\n * @param {string} emotionName - Name of the emotion (or alias)\r\n * @returns {Object|null} The emotion configuration or null if not found\r\n */\r\nexport function getEmotion(emotionName) {\r\n    // Check aliases first\r\n    const resolvedName = emotionAliases[emotionName] || emotionName;\r\n\r\n    // Check core emotions\r\n    const coreEmotion = emotionRegistry.get(resolvedName);\r\n    if (coreEmotion) {\r\n        return coreEmotion;\r\n    }\r\n\r\n    // Check plugin emotions\r\n    const pluginEmotion = pluginAdapter.getPluginEmotion(resolvedName);\r\n    if (pluginEmotion) {\r\n        return pluginEmotion;\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n/**\r\n * Get emotion parameters (visual properties) with dynamic evaluation\r\n * @param {string} emotionName - Name of the emotion\r\n * @returns {Object} Visual parameters for the emotion\r\n */\r\nexport function getEmotionVisualParams(emotionName) {\r\n    const emotion = getEmotion(emotionName);\r\n    if (!emotion) {\r\n        return getEmotion('neutral').visual;\r\n    }\r\n\r\n    // Make sure visual exists\r\n    if (!emotion.visual) {\r\n        return {};\r\n    }\r\n    \r\n    // Create a copy of visual properties, excluding functions\r\n    const visual = emotion.visual;\r\n    const params = {};\r\n    \r\n    // Copy non-function properties\r\n    for (const key in visual) {\r\n        if (typeof visual[key] !== 'function') {\r\n            params[key] = visual[key];\r\n        }\r\n    }\r\n    \r\n    // Evaluate dynamic functions if they exist and override static values\r\n    if (typeof visual.getGlowIntensity === 'function') {\r\n        params.glowIntensity = visual.getGlowIntensity.call(visual);\r\n    }\r\n    \r\n    if (typeof visual.getParticleSpeed === 'function') {\r\n        params.particleSpeed = visual.getParticleSpeed.call(visual);\r\n    }\r\n    \r\n    if (typeof visual.getParticleRate === 'function') {\r\n        params.particleRate = visual.getParticleRate.call(visual);\r\n    }\r\n    \r\n    if (typeof visual.getGlowColor === 'function') {\r\n        params.glowColor = visual.getGlowColor.call(visual);\r\n    }\r\n    \r\n    return params;\r\n}\r\n\r\n/**\r\n * Get emotion modifiers (gesture adjustments)\r\n * @param {string} emotionName - Name of the emotion\r\n * @returns {Object} Gesture modifiers for the emotion\r\n */\r\nexport function getEmotionModifiers(emotionName) {\r\n    const emotion = getEmotion(emotionName);\r\n    if (!emotion) {\r\n        return getEmotion('neutral').modifiers;\r\n    }\r\n    return emotion.modifiers;\r\n}\r\n\r\n/**\r\n * Get list of available emotions (core and plugin)\r\n * @returns {Array<string>} List of emotion names\r\n */\r\nexport function listEmotions() {\r\n    const coreEmotions = Array.from(emotionRegistry.keys());\r\n    const pluginEmotions = pluginAdapter.getAllPluginEmotions();\r\n    return [...coreEmotions, ...pluginEmotions];\r\n}\r\n\r\n/**\r\n * Get all emotion configurations\r\n * @returns {Object} Object mapping emotion names to configurations\r\n */\r\nexport function getAllEmotions() {\r\n    const emotions = {};\r\n    emotionRegistry.forEach((value, key) => {\r\n        emotions[key] = value;\r\n    });\r\n    return emotions;\r\n}\r\n\r\n/**\r\n * Check if an emotion exists (checks both core and plugin)\r\n * @param {string} emotionName - Name of the emotion to check\r\n * @returns {boolean} True if emotion exists\r\n */\r\nexport function hasEmotion(emotionName) {\r\n    const resolvedName = emotionAliases[emotionName] || emotionName;\r\n    return emotionRegistry.has(resolvedName) || pluginAdapter.getPluginEmotion(resolvedName) !== null;\r\n}\r\n\r\n/**\r\n * Add an emotion alias\r\n * @param {string} alias - The alias name\r\n * @param {string} emotionName - The actual emotion name\r\n */\r\nexport function addEmotionAlias(alias, emotionName) {\r\n    emotionAliases[alias] = emotionName;\r\n}\r\n\r\n/**\r\n * Get emotion transition parameters\r\n * @param {string} fromEmotion - Starting emotion\r\n * @param {string} toEmotion - Target emotion\r\n * @returns {Object} Transition parameters\r\n */\r\nexport function getTransitionParams(fromEmotion, toEmotion) {\r\n    const from = getEmotion(fromEmotion);\r\n    const to = getEmotion(toEmotion);\r\n    \r\n    if (!from || !to) {\r\n        return {\r\n            duration: 1000,\r\n            easing: 'ease-in-out'\r\n        };\r\n    }\r\n    \r\n    // Check if 'to' emotion has specific transition hints\r\n    if (to.transitions && to.transitions[fromEmotion]) {\r\n        return to.transitions[fromEmotion];\r\n    }\r\n    \r\n    // Use default transition\r\n    return {\r\n        duration: 1000,\r\n        easing: 'ease-in-out',\r\n        gesture: to.transitions?.defaultGesture || null\r\n    };\r\n}\r\n\r\n/**\r\n * Get typical gestures for an emotion\r\n * @param {string} emotionName - Name of the emotion\r\n * @returns {Array<string>} List of typical gesture names\r\n */\r\nexport function getEmotionGestures(emotionName) {\r\n    const emotion = getEmotion(emotionName);\r\n    return emotion?.gestures || [];\r\n}\r\n\r\n// Debug utilities can be imported directly if needed\r\n// No longer polluting global scope\r\n\r\n// Export plugin adapter for external use\r\nexport { pluginAdapter };\r\n\r\n// Export everything\r\nexport default {\r\n    registerEmotion,\r\n    getEmotion,\r\n    getEmotionVisualParams,\r\n    getEmotionParams: getEmotionVisualParams, // Alias for compatibility\r\n    getEmotionModifiers,\r\n    listEmotions,\r\n    getAllEmotions,\r\n    hasEmotion,\r\n    addEmotionAlias,\r\n    getTransitionParams,\r\n    getEmotionGestures,\r\n    pluginAdapter\r\n};","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE\n *  └─○═╝                                                                             \n *                     ◐ ◑ ◒ ◓  STATE MACHINE CORE  ◓ ◒ ◑ ◐                     \n *                                                                                    \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Emotive State Machine - Emotional State & Transition Management\n * @author Emotive Engine Team\n * @version 2.0.0\n * @module EmotiveStateMachine\n * \n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                                   PURPOSE                                         \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ The BRAIN of the Emotive Engine. Manages emotional states, transitions,           \n * ║ undertones, and gesture queues. This is where emotions become behavior.           \n * ║ Works with emotionMap.js for visuals but defines the LOGIC and TIMING.           \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n *\n * ┌───────────────────────────────────────────────────────────────────────────────────\n * │ 🧠 CORE RESPONSIBILITIES                                                          \n * ├───────────────────────────────────────────────────────────────────────────────────\n * │ • Emotional state management (current, target, transitions)                       \n * │ • Undertone layering (nervous + happy, tired + angry, etc.)                      \n * │ • Gesture queue processing (sequential animation management)                      \n * │ • Smooth property interpolation during transitions                                \n * │ • Event emission for state changes                                                \n * └───────────────────────────────────────────────────────────────────────────────────\n *\n * ┌───────────────────────────────────────────────────────────────────────────────────\n * │ ⚠️  CRITICAL STATE PROPERTIES                                                     \n * ├───────────────────────────────────────────────────────────────────────────────────\n * │ • emotion      : Current emotional state (must be valid emotion)                  \n * │ • undertone    : Optional modifier (null or valid undertone)                      \n * │ • gesture      : Currently playing gesture animation\n * │ • transitions  : Active transition data (progress, timing, easing)\n * └───────────────────────────────────────────────────────────────────────────────────\n *\n * ┌───────────────────────────────────────────────────────────────────────────────────\n * │ 🔄 TRANSITION SYSTEM                                                              \n * ├───────────────────────────────────────────────────────────────────────────────────\n * │ • Smooth blending between emotional states                                        \n * │ • Configurable transition duration (default 500ms)                                \n * │ • Easing functions for natural motion                                             \n * │ • Property interpolation (colors, sizes, speeds)                                  \n * │ • Prevents jarring visual changes                                                 \n * └───────────────────────────────────────────────────────────────────────────────────\n *\n * ┌───────────────────────────────────────────────────────────────────────────────────\n * │ ❌ DO NOT MODIFY WITHOUT UNDERSTANDING                                            \n * ├───────────────────────────────────────────────────────────────────────────────────\n * │ ✗ State validation logic    → Breaks error handling                              \n * │ ✗ Transition timing        → Causes visual glitches                              \n * │ ✗ Event emission order     → Breaks dependent systems                            \n * │ ✗ Property interpolation   → Creates animation artifacts                         \n * │ ✗ Queue processing         → Causes gesture conflicts                            \n * └───────────────────────────────────────────────────────────────────────────────────\n *\n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                          ADDING NEW EMOTIONAL STATES                              \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ 1. Define visual properties in emotionMap.js                                      \n * ║ 2. Add state definition in initializeEmotionalStates()                            \n * ║ 3. Add validation to ErrorBoundary.js                                             \n * ║ 4. Test transitions FROM and TO the new state                                     \n * ║ 5. Verify particle behavior and performance                                       \n * ║ 6. Document any special transition rules                                          \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n *\n * ════════════════════════════════════════════════════════════════════════════════════\n */\n\nimport { interpolateHsl } from '../utils/colorUtils.js';\nimport { applyEasing, easeInOutCubic } from '../utils/easing.js';\nimport { hasEmotion, listEmotions } from './emotions/index.js';\n\nclass EmotiveStateMachine {\n    constructor(errorBoundary) {\n        this.errorBoundary = errorBoundary;\n        \n        // Current state\n        this.state = {\n            emotion: 'neutral',\n            undertone: null,\n            gesture: null,\n            speaking: false,\n            audioLevel: 0\n        };\n        \n        // Transition management\n        this.transitions = {\n            emotional: {\n                current: 'neutral',\n                target: null,\n                progress: 0,\n                duration: 500,\n                startTime: 0,\n                isActive: false\n            },\n            undertone: {\n                current: null,\n                target: null,\n                progress: 0,\n                duration: 300,  // Faster than emotion transitions\n                startTime: 0,\n                isActive: false,\n                currentWeight: 0,  // 0-1 weight of current undertone\n                targetWeight: 0    // 0-1 weight of target undertone\n            }\n        };\n        \n        // Cache for interpolation results\n        this.interpolationCache = {\n            lastUpdate: 0,\n            cacheInterval: 100, // Cache for 100ms\n            cachedProperties: null,\n            cachedRenderState: null\n        };\n        \n        // Initialize emotional state definitions\n        this.initializeEmotionalStates();\n        this.initializeUndertoneModifiers();\n    }\n\n    /**\n     * Initialize all 8 emotional states with their visual properties\n     */\n    initializeEmotionalStates() {\n        this.emotionalStates = {\n            neutral: {\n                primaryColor: '#B0B0B0',\n                glowIntensity: 0.7,\n                particleRate: 1,  // DECIMATED - minimal particles\n                minParticles: 3,  // Always have at least 3 particles for gestures to affect\n                maxParticles: 4,  // Max 4 particles\n                particleBehavior: 'ambient',\n                coreSize: 1.0,\n                breathRate: 1.0,\n                breathDepth: 0.1\n            },\n            joy: {\n                primaryColor: '#FFD700',\n                glowIntensity: 1.2,\n                particleRate: 2,           // More frequent popping\n                minParticles: 3,           // Always popping\n                maxParticles: 8,           // Can have many kernels popping\n                particleBehavior: 'popcorn', // Spontaneous popping effect\n                coreSize: 1.1,\n                breathRate: 1.3,\n                breathDepth: 0.15\n            },\n            sadness: {\n                primaryColor: '#4169E1',\n                glowIntensity: 0.6,\n                particleRate: 2,  // Halved from 3\n                minParticles: 1,  // At least 1\n                maxParticles: 3,  // Max 3 particles\n                particleBehavior: 'falling',\n                coreSize: 0.9,\n                breathRate: 0.7,\n                breathDepth: 0.08\n            },\n            anger: {\n                primaryColor: '#DC143C',\n                glowIntensity: 1.3,\n                particleRate: 1,  // ~30% chance per frame\n                minParticles: 3,  // Always show anger\n                maxParticles: 8,  // Can get intense\n                particleBehavior: 'aggressive',\n                coreSize: 1.2,\n                breathRate: 1.5,\n                breathDepth: 0.2\n            },\n            fear: {\n                primaryColor: '#8B008B',\n                glowIntensity: 0.8,\n                particleRate: 1,  // chance per frame\n                minParticles: 2,  // Always visible\n                maxParticles: 6,  // Moderate max\n                particleBehavior: 'scattering',\n                coreSize: 0.8,\n                breathRate: 1.8,\n                breathDepth: 0.12\n            },\n            surprise: {\n                primaryColor: '#FF8C00',\n                glowIntensity: 1.4,\n                particleRate: 1,\n                minParticles: 3,  // Burst effect\n                maxParticles: 10,  // Can burst big\n                particleBehavior: 'burst',\n                coreSize: 1.3,\n                breathRate: 2.0,\n                breathDepth: 0.25\n            },\n            disgust: {\n                primaryColor: '#9ACD32',\n                glowIntensity: 0.9,\n                particleRate: 2,\n                minParticles: 2,  // Always show disgust\n                maxParticles: 4,  // Limited particles\n                particleBehavior: 'repelling',\n                coreSize: 0.95,\n                breathRate: 0.8,\n                breathDepth: 0.06\n            },\n            love: {\n                primaryColor: '#FF69B4',\n                glowIntensity: 1.1,\n                particleRate: 1,  // Halved from 9\n                minParticles: 2,  // Always orbiting\n                maxParticles: 5,  // Gentle max\n                particleBehavior: 'orbiting',\n                coreSize: 1.05,\n                breathRate: 0.9,\n                breathDepth: 0.18\n            },\n            excited: {\n                primaryColor: '#FF00FF',  // Hot magenta\n                glowIntensity: 1.2,  // Bright glow for excitement\n                particleRate: 360,  // Double rate for more visible particles\n                minParticles: 480,  // Double particles for denser effect\n                maxParticles: 900,  // Double max particles\n                particleBehavior: 'fizzy',\n                coreSize: 0.85,  // Slightly smaller than neutral\n                breathRate: 1.5,  // Excited breathing\n                breathDepth: 0.08,  // Moderate breath\n                eyeOpenness: 1.0  // Wide eyes\n            },\n            resting: {\n                primaryColor: '#7C3AED',   // Soft purple for resting\n                glowIntensity: 0.8,\n                particleRate: 2,          // Moderate particles for visible effect\n                minParticles: 3,  // Always 3-5 visible\n                maxParticles: 5,  // Calm max\n                particleBehavior: 'resting',\n                coreSize: 1.0,\n                breathRate: 0.8,           // 12-16 breaths per minute (resting human)\n                breathDepth: 0.12          // Gentle, relaxed breathing\n            },\n            euphoria: {\n                primaryColor: '#FFD700',   // Golden sunrise\n                glowIntensity: 1.8,        // Radiant warm glow\n                particleRate: 3,           // Abundant like sunbeams\n                minParticles: 15,          // Always sparkling\n                maxParticles: 30,          // Maximum celebration\n                particleBehavior: 'radiant', // Radiating outward\n                coreSize: 1.15,            // Expanded with joy\n                breathRate: 1.3,           // Energized breathing\n                breathDepth: 0.25,         // Deep refreshing breaths\n            },\n            focused: {\n                primaryColor: '#00CED1',  // Bright cyan\n                glowIntensity: 1.2,\n                particleRate: 0.5,  // Frequent, like synapses\n                minParticles: 2,\n                maxParticles: 5,\n                particleBehavior: 'directed',  // Fast, straight paths\n                coreSize: 1.05,\n                breathRate: 1.2,  // Alert breathing\n                breathDepth: 0.08,\n                eyeOpenness: 0.7,  // Narrowed for concentration\n                microAdjustments: true  // Enable tiny shifts\n            },\n            suspicion: {\n                primaryColor: '#708090',  // Slate gray\n                glowIntensity: 0.9,\n                particleRate: 20,  // Higher rate for continuous particles\n                minParticles: 8,\n                maxParticles: 15,  // More particles for better visibility\n                particleBehavior: 'burst',  // Use burst like surprise but we'll modify it\n                coreSize: 1.0,\n                breathRate: 0.8,  // Controlled breathing\n                breathDepth: 0.05,  // Shallow, alert breathing\n                eyeOpenness: 0.5,  // Narrowed, skeptical eyes\n                eyeArc: -0.2  // Slight frown\n            }\n        };\n    }\n\n    /**\n     * Initialize undertone modifiers that affect base emotional properties\n     */\n    initializeUndertoneModifiers() {\n        this.undertoneModifiers = {\n            nervous: {\n                jitterAmount: 0.3,\n                breathRateMultiplier: 1.2,\n                glowIntensityMultiplier: 0.9,\n                particleRateMultiplier: 1.1\n            },\n            confident: {\n                coreSizeMultiplier: 1.1,\n                glowIntensityMultiplier: 1.2,\n                breathRateMultiplier: 0.9,\n                particleRateMultiplier: 1.0\n            },\n            tired: {\n                breathRateMultiplier: 0.7,\n                particleRateMultiplier: 0.5,\n                glowIntensityMultiplier: 0.8,\n                coreSizeMultiplier: 0.95\n            },\n            intense: {\n                amplificationFactor: 1.3\n            },\n            subdued: {\n                dampeningFactor: 0.7\n            }\n        };\n    }\n\n    /**\n     * Sets the emotional state with optional undertone\n     * @param {string} emotion - The emotion to set\n     * @param {string|null} undertone - Optional undertone modifier\n     * @param {number} duration - Transition duration in milliseconds\n     * @returns {boolean} Success status\n     */\n    setEmotion(emotion, undertone = null, duration = 500) {\n        return this.errorBoundary.wrap(() => {\n            // Clear interpolation cache when emotion changes\n            this.interpolationCache.cachedProperties = null;\n            this.interpolationCache.cachedRenderState = null;\n            \n            // Validate emotion using modular system\n            if (!hasEmotion(emotion) && !this.emotionalStates.hasOwnProperty(emotion)) {\n                const validEmotions = [...Object.keys(this.emotionalStates), ...listEmotions()];\n                const uniqueEmotions = [...new Set(validEmotions)];\n                throw new Error(`Invalid emotion: ${emotion}. Valid emotions: ${uniqueEmotions.join(', ')}`);\n            }\n\n            // Validate undertone\n            if (undertone !== null && !this.undertoneModifiers.hasOwnProperty(undertone)) {\n                throw new Error(`Invalid undertone: ${undertone}. Valid undertones: ${Object.keys(this.undertoneModifiers).join(', ')}`);\n            }\n\n            // If already in this state, just update undertone\n            if (this.state.emotion === emotion && this.state.undertone === undertone) {\n                return true;\n            }\n\n            // Set up emotion transition if emotion is changing\n            if (this.state.emotion !== emotion) {\n                if (duration > 0) {\n                    this.transitions.emotional = {\n                        current: this.state.emotion,\n                        target: emotion,\n                        progress: 0,\n                        duration: Math.max(100, duration),\n                        startTime: performance.now(),\n                        isActive: true\n                    };\n                    \n                    // Reset simulated time for testing\n                    if (this._simulatedTime !== undefined) {\n                        this._simulatedTime = 0;\n                    }\n                } else {\n                    // Immediate transition\n                    this.transitions.emotional = {\n                        current: emotion,\n                        target: null,\n                        progress: 1,\n                        duration: 0,\n                        startTime: performance.now(),\n                        isActive: false\n                    };\n                }\n                this.state.emotion = emotion;\n            }\n            \n            // Set up undertone transition if undertone is changing\n            if (this.state.undertone !== undertone) {\n                this.transitions.undertone = {\n                    current: this.state.undertone,\n                    target: undertone,\n                    progress: 0,\n                    duration: 300,  // Always smooth undertone transitions\n                    startTime: performance.now(),\n                    isActive: true,\n                    currentWeight: this.state.undertone ? 1 : 0,\n                    targetWeight: undertone ? 1 : 0\n                };\n                this.state.undertone = undertone;\n            }\n\n            return true;\n        }, 'emotion-setting', false)();\n    }\n\n    /**\n     * Applies undertone modifiers to base emotional properties\n     * @param {Object} baseProperties - Base emotional properties\n     * @param {string|null} undertone - Undertone to apply\n     * @returns {Object} Modified properties\n     */\n    applyUndertone(baseProperties, undertone) {\n        if (!undertone || !this.undertoneModifiers.hasOwnProperty(undertone)) {\n            return { ...baseProperties };\n        }\n\n        const modifier = this.undertoneModifiers[undertone];\n        const modified = { ...baseProperties };\n\n        // Apply specific modifiers\n        if (modifier.glowIntensityMultiplier !== undefined) {\n            modified.glowIntensity *= modifier.glowIntensityMultiplier;\n        }\n        if (modifier.breathRateMultiplier !== undefined) {\n            modified.breathRate *= modifier.breathRateMultiplier;\n        }\n        if (modifier.particleRateMultiplier !== undefined) {\n            modified.particleRate = Math.round(modified.particleRate * modifier.particleRateMultiplier);\n        }\n        if (modifier.coreSizeMultiplier !== undefined) {\n            modified.coreSize *= modifier.coreSizeMultiplier;\n        }\n\n        // Apply amplification/dampening factors\n        if (modifier.amplificationFactor !== undefined) {\n            const factor = modifier.amplificationFactor;\n            modified.glowIntensity *= factor;\n            modified.breathRate *= factor;\n            modified.particleRate = Math.round(modified.particleRate * factor);\n            modified.coreSize *= factor;\n        }\n        if (modifier.dampeningFactor !== undefined) {\n            const factor = modifier.dampeningFactor;\n            modified.glowIntensity *= factor;\n            modified.breathRate *= factor;\n            modified.particleRate = Math.round(modified.particleRate * factor);\n            modified.coreSize *= factor;\n        }\n\n        // Add special properties\n        if (modifier.jitterAmount !== undefined) {\n            modified.jitterAmount = modifier.jitterAmount;\n        }\n\n        return modified;\n    }\n\n    /**\n     * Updates the state machine with delta time\n     * @param {number} deltaTime - Time since last update in milliseconds\n     */\n    update(deltaTime) {\n        this.errorBoundary.wrap(() => {\n            // Update emotional transition\n            if (this.transitions.emotional.isActive) {\n                this.updateEmotionalTransition(deltaTime);\n            }\n            \n            // Update undertone transition\n            if (this.transitions.undertone.isActive) {\n                this.updateUndertoneTransition(deltaTime);\n            }\n        }, 'state-machine-update')();\n    }\n\n    /**\n     * Updates undertone transition progress\n     * @param {number} deltaTime - Time since last update in milliseconds\n     */\n    updateUndertoneTransition(deltaTime) {\n        const transition = this.transitions.undertone;\n        \n        // Calculate elapsed time\n        const elapsed = performance.now() - transition.startTime;\n        const progress = Math.min(elapsed / transition.duration, 1);\n        \n        // Apply easing\n        const easedProgress = easeInOutCubic(progress);\n        \n        // Update weights for smooth transition\n        if (transition.current && transition.target) {\n            // Transitioning between two undertones\n            transition.currentWeight = 1 - easedProgress;\n            transition.targetWeight = easedProgress;\n        } else if (transition.current && !transition.target) {\n            // Fading out current undertone\n            transition.currentWeight = 1 - easedProgress;\n            transition.targetWeight = 0;\n        } else if (!transition.current && transition.target) {\n            // Fading in new undertone\n            transition.currentWeight = 0;\n            transition.targetWeight = easedProgress;\n        }\n        \n        transition.progress = progress;\n        \n        // Complete transition\n        if (progress >= 1) {\n            transition.isActive = false;\n            transition.current = transition.target;\n            transition.currentWeight = transition.target ? 1 : 0;\n            transition.targetWeight = 0;\n        }\n    }\n    \n    /**\n     * Updates emotional state transition progress\n     * @param {number} deltaTime - Time since last update in milliseconds\n     */\n    updateEmotionalTransition(deltaTime) {\n        const transition = this.transitions.emotional;\n        \n        // Use either real elapsed time or simulated deltaTime for testing\n        let elapsed;\n        if (this._simulatedTime !== undefined) {\n            // For testing - use accumulated simulated time\n            this._simulatedTime += deltaTime;\n            elapsed = this._simulatedTime;\n        } else {\n            // For real usage - use actual elapsed time\n            elapsed = performance.now() - transition.startTime;\n        }\n        \n        // Calculate progress (0 to 1)\n        transition.progress = Math.min(1, elapsed / transition.duration);\n        \n        // Check if transition is complete\n        if (transition.progress >= 1) {\n            transition.isActive = false;\n            transition.current = transition.target;\n            transition.target = null;\n            transition.progress = 1;\n        }\n    }\n\n    /**\n     * Gets the current interpolated emotional properties\n     * @returns {Object} Current emotional properties with smooth transitions\n     */\n    getCurrentEmotionalProperties() {\n        return this.errorBoundary.wrap(() => {\n            const now = performance.now();\n            \n            // Use cached result if still valid\n            if (this.interpolationCache.cachedProperties && \n                (now - this.interpolationCache.lastUpdate) < this.interpolationCache.cacheInterval) {\n                return this.interpolationCache.cachedProperties;\n            }\n            \n            const transition = this.transitions.emotional;\n            let properties;\n\n            if (transition.isActive && transition.target) {\n                // Interpolate between current and target states\n                properties = this.interpolateEmotionalProperties(\n                    transition.current,\n                    transition.target,\n                    transition.progress\n                );\n            } else {\n                // Use current state properties - fallback to neutral if emotion not found\n                const emotionState = this.emotionalStates[this.state.emotion] || this.emotionalStates.neutral;\n                properties = { ...emotionState };\n            }\n\n            // Apply undertone modifiers\n            properties = this.applyUndertone(properties, this.state.undertone);\n            \n            // Cache the result\n            this.interpolationCache.cachedProperties = properties;\n            this.interpolationCache.lastUpdate = now;\n\n            return properties;\n        }, 'emotional-properties', () => this.emotionalStates.neutral)();\n    }\n\n    /**\n     * Interpolates between two emotional states\n     * @param {string} fromEmotion - Source emotion\n     * @param {string} toEmotion - Target emotion\n     * @param {number} progress - Interpolation progress (0-1)\n     * @returns {Object} Interpolated properties\n     */\n    interpolateEmotionalProperties(fromEmotion, toEmotion, progress) {\n        const fromProps = this.emotionalStates[fromEmotion] || this.emotionalStates.neutral;\n        const toProps = this.emotionalStates[toEmotion] || this.emotionalStates.neutral;\n        \n        // Apply easing to progress\n        const easedProgress = applyEasing(progress, 0, 1, 'easeOutCubic');\n\n        return {\n            // Interpolate color in HSL space for better transitions\n            primaryColor: interpolateHsl(fromProps.primaryColor, toProps.primaryColor, easedProgress),\n            \n            // Interpolate numeric properties\n            glowIntensity: fromProps.glowIntensity + (toProps.glowIntensity - fromProps.glowIntensity) * easedProgress,\n            particleRate: Math.round(fromProps.particleRate + (toProps.particleRate - fromProps.particleRate) * easedProgress),\n            coreSize: fromProps.coreSize + (toProps.coreSize - fromProps.coreSize) * easedProgress,\n            breathRate: fromProps.breathRate + (toProps.breathRate - fromProps.breathRate) * easedProgress,\n            breathDepth: fromProps.breathDepth + (toProps.breathDepth - fromProps.breathDepth) * easedProgress,\n            \n            // Use target behavior when transition is more than 50% complete\n            particleBehavior: easedProgress > 0.5 ? toProps.particleBehavior : fromProps.particleBehavior\n        };\n    }\n\n    /**\n     * Gets the current state for external inspection\n     * @returns {Object} Current state information\n     */\n    getCurrentState() {\n        return {\n            emotion: this.state.emotion,\n            undertone: this.state.undertone,\n            isTransitioning: this.transitions.emotional.isActive,\n            transitionProgress: this.transitions.emotional.progress,\n            properties: this.getCurrentEmotionalProperties()\n        };\n    }\n\n    /**\n     * Applies an undertone to the current emotional state\n     * @param {string|null} undertone - Undertone to apply\n     * @returns {boolean} Success status\n     */\n    applyUndertoneModifier(undertone) {\n        return this.errorBoundary.wrap(() => {\n            // Validate undertone\n            if (undertone !== null && !this.undertoneModifiers.hasOwnProperty(undertone)) {\n                throw new Error(`Invalid undertone: ${undertone}. Valid undertones: ${Object.keys(this.undertoneModifiers).join(', ')}`);\n            }\n\n            // Apply the undertone\n            this.state.undertone = undertone;\n            \n            return true;\n        }, 'undertone-application', false)();\n    }\n\n    /**\n     * Clears the current undertone and resets to base emotional state\n     */\n    clearUndertone() {\n        this.state.undertone = null;\n    }\n\n    /**\n     * Gets the raw undertone modifier data for a specific undertone\n     * @param {string} undertone - Undertone name\n     * @returns {Object|null} Undertone modifier data or null if invalid\n     */\n    getUndertoneModifier(undertone) {\n        return this.errorBoundary.wrap(() => {\n            // Try to get from renderer first (comprehensive modifiers)\n            if (this.renderer && this.renderer.undertoneModifiers && \n                this.renderer.undertoneModifiers[undertone]) {\n                // Return the full modifier from renderer\n                return { ...this.renderer.undertoneModifiers[undertone] };\n            }\n            \n            // Fallback to local modifiers\n            if (!undertone || !this.undertoneModifiers.hasOwnProperty(undertone)) {\n                return null;\n            }\n            // Ensure essential properties exist in fallback\n            const localMod = { ...this.undertoneModifiers[undertone] };\n            if (!localMod.glowRadiusMult) {\n                localMod.glowRadiusMult = 1.0; // Default value\n            }\n            return localMod;\n        }, 'undertone-retrieval', null)();\n    }\n    \n    /**\n     * Gets weighted undertone modifiers based on current transition state\n     * @returns {Object|null} Combined undertone modifiers with transition weights applied\n     */\n    getWeightedUndertoneModifiers() {\n        const transition = this.transitions.undertone;\n        \n        // If no transition is active, return current undertone modifiers directly\n        if (!transition.isActive) {\n            if (this.state.undertone) {\n                const mod = this.getUndertoneModifier(this.state.undertone);\n                if (mod) {\n                    // Return full modifier with weight of 1.0 (fully applied) and type\n                    return { ...mod, weight: 1.0, type: this.state.undertone };\n                }\n            }\n            return null;\n        }\n        \n        // During transition, return the target modifier with interpolated weight\n        if (transition.target) {\n            const targetMod = this.getUndertoneModifier(transition.target);\n            if (targetMod) {\n                // Return target modifier with transition weight and type\n                return { ...targetMod, weight: transition.targetWeight, type: transition.target };\n            }\n        }\n        \n        // Fading out - return current modifier with decreasing weight  \n        if (transition.current && transition.currentWeight > 0) {\n            const currentMod = this.getUndertoneModifier(transition.current);\n            if (currentMod) {\n                return { ...currentMod, weight: transition.currentWeight, type: transition.current };\n            }\n        }\n        \n        return null;\n    }\n\n    /**\n     * Resets the state machine to neutral emotion\n     * @param {number} duration - Transition duration in milliseconds\n     */\n    reset(duration = 500) {\n        this.setEmotion('neutral', null, duration);\n    }\n\n    /**\n     * Validates if an emotion is valid\n     * @param {string} emotion - Emotion to validate\n     * @returns {boolean} True if valid\n     */\n    isValidEmotion(emotion) {\n        return this.emotionalStates.hasOwnProperty(emotion);\n    }\n\n    /**\n     * Validates if an undertone is valid\n     * @param {string} undertone - Undertone to validate\n     * @returns {boolean} True if valid\n     */\n    isValidUndertone(undertone) {\n        return undertone === null || this.undertoneModifiers.hasOwnProperty(undertone);\n    }\n\n    /**\n     * Gets all available emotions\n     * @returns {Array} Array of emotion names\n     */\n    getAvailableEmotions() {\n        return Object.keys(this.emotionalStates);\n    }\n\n    /**\n     * Gets all available undertones\n     * @returns {Array} Array of undertone names\n     */\n    getAvailableUndertones() {\n        return Object.keys(this.undertoneModifiers);\n    }\n\n    /**\n     * Checks if a transition is currently active\n     * @returns {boolean} True if transitioning\n     */\n    isTransitioning() {\n        return this.transitions.emotional.isActive;\n    }\n\n    /**\n     * Gets the current transition progress\n     * @returns {number} Progress from 0 to 1, or 1 if not transitioning\n     */\n    getTransitionProgress() {\n        return this.transitions.emotional.isActive ? this.transitions.emotional.progress : 1;\n    }\n\n    /**\n     * Forces completion of current transition\n     */\n    completeTransition() {\n        if (this.transitions.emotional.isActive) {\n            this.transitions.emotional.progress = 1;\n            this.transitions.emotional.isActive = false;\n            this.transitions.emotional.current = this.transitions.emotional.target;\n            this.transitions.emotional.target = null;\n        }\n    }\n\n    /**\n     * Gets interpolated property value with easing\n     * @param {number} from - Start value\n     * @param {number} to - End value  \n     * @param {number} progress - Progress (0-1)\n     * @param {string} easingType - Easing function name\n     * @returns {number} Interpolated value\n     */\n    interpolateProperty(from, to, progress, easingType = 'easeOutCubic') {\n        return from + (to - from) * applyEasing(progress, 0, 1, easingType);\n    }\n\n    /**\n     * Enables simulated time for testing purposes\n     * @param {boolean} enabled - Whether to use simulated time\n     */\n    enableSimulatedTime(enabled = true) {\n        if (enabled) {\n            this._simulatedTime = 0;\n        } else {\n            delete this._simulatedTime;\n        }\n    }\n}\n\nexport default EmotiveStateMachine;","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Color Utilities\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Color selection and manipulation utilities for particles\r\n * @author Emotive Engine Team\r\n * @module particles/utils/colorUtils\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ Handles weighted color selection for particles. Each emotion has a palette of     \r\n * ║ colors with different weights (probabilities). This creates visual variety        \r\n * ║ while maintaining the emotional theme.                                            \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n */\r\n\r\n/**\r\n * Select a color from an array with optional weights\r\n * \r\n * EXAMPLE INPUT:\r\n * [\r\n *   { color: '#FF69B4', weight: 30 },  // 30% chance\r\n *   { color: '#FFB6C1', weight: 25 },  // 25% chance\r\n *   { color: '#FF1493', weight: 20 },  // 20% chance\r\n *   '#FFC0CB',                          // Remaining weight split evenly\r\n *   '#C71585'                           // between unweighted colors\r\n * ]\r\n * \r\n * @param {Array} colors - Array of color strings or {color, weight} objects\r\n * @returns {string} Selected hex color\r\n */\r\nexport function selectWeightedColor(colors) {\r\n    if (!colors || colors.length === 0) return '#FFFFFF';\r\n    \r\n    // Parse colors and weights\r\n    let totalExplicitWeight = 0;\r\n    let unweightedCount = 0;\r\n    const parsedColors = [];\r\n    \r\n    for (const item of colors) {\r\n        if (typeof item === 'string') {\r\n            // Simple string color - will get default weight\r\n            parsedColors.push({ color: item, weight: null });\r\n            unweightedCount++;\r\n        } else if (item && typeof item === 'object' && item.color) {\r\n            // Object with color and optional weight\r\n            parsedColors.push({ color: item.color, weight: item.weight || null });\r\n            if (item.weight) {\r\n                totalExplicitWeight += item.weight;\r\n            } else {\r\n                unweightedCount++;\r\n            }\r\n        }\r\n    }\r\n    \r\n    // Calculate weight for unweighted colors\r\n    // If weights total 75, and there are 2 unweighted colors, each gets 12.5\r\n    const remainingWeight = Math.max(0, 100 - totalExplicitWeight);\r\n    const defaultWeight = unweightedCount > 0 ? remainingWeight / unweightedCount : 0;\r\n    \r\n    // Build cumulative probability table for efficient selection\r\n    const probTable = [];\r\n    let cumulative = 0;\r\n    \r\n    for (const item of parsedColors) {\r\n        const weight = item.weight !== null ? item.weight : defaultWeight;\r\n        cumulative += weight;\r\n        probTable.push({ color: item.color, threshold: cumulative });\r\n    }\r\n    \r\n    // Select based on random value\r\n    const random = Math.random() * cumulative;\r\n    for (const entry of probTable) {\r\n        if (random <= entry.threshold) {\r\n            return entry.color;\r\n        }\r\n    }\r\n    \r\n    // Fallback to last color (shouldn't happen but safety first)\r\n    return parsedColors[parsedColors.length - 1].color;\r\n}\r\n\r\n/**\r\n * Convert hex color to RGB object\r\n * @param {string} hex - Hex color string (#RRGGBB)\r\n * @returns {Object} RGB values {r, g, b}\r\n */\r\nexport function hexToRgb(hex) {\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    } : { r: 255, g: 255, b: 255 }; // Default to white\r\n}\r\n\r\n/**\r\n * Convert RGB values to hex string\r\n * @param {number} r - Red (0-255)\r\n * @param {number} g - Green (0-255)\r\n * @param {number} b - Blue (0-255)\r\n * @returns {string} Hex color string\r\n */\r\nexport function rgbToHex(r, g, b) {\r\n    return '#' + [r, g, b].map(x => {\r\n        const hex = x.toString(16);\r\n        return hex.length === 1 ? '0' + hex : hex;\r\n    }).join('');\r\n}\r\n\r\n/**\r\n * Blend two colors together\r\n * @param {string} color1 - First hex color\r\n * @param {string} color2 - Second hex color\r\n * @param {number} ratio - Blend ratio (0=color1, 1=color2)\r\n * @returns {string} Blended hex color\r\n */\r\nexport function blendColors(color1, color2, ratio) {\r\n    const rgb1 = hexToRgb(color1);\r\n    const rgb2 = hexToRgb(color2);\r\n    \r\n    const r = Math.round(rgb1.r + (rgb2.r - rgb1.r) * ratio);\r\n    const g = Math.round(rgb1.g + (rgb2.g - rgb1.g) * ratio);\r\n    const b = Math.round(rgb1.b + (rgb2.b - rgb1.b) * ratio);\r\n    \r\n    return rgbToHex(r, g, b);\r\n}\r\n\r\nexport default {\r\n    selectWeightedColor,\r\n    hexToRgb,\r\n    rgbToHex,\r\n    blendColors\r\n};","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE - Ambient Behavior\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Gentle upward drift behavior for neutral emotional state\n * @author Emotive Engine Team\n * @module particles/behaviors/ambient\n * \n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                                   PURPOSE                                         \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ Creates a calm, peaceful atmosphere with particles gently drifting upward         \n * ║ like smoke or steam. This is the default behavior for neutral emotional states.   \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n *\n * VISUAL DIAGRAM:\n *        ↑  ↑  ↑\n *       ·  ·  ·    ← particles drift straight up\n *      ·  ·  ·  \n *     ·  ⭐  ·     ← orb center\n *      ·  ·  ·\n *       ·  ·  ·\n * \n * USED BY EMOTIONS:\n * - neutral (default calm state)\n * \n * RECIPE TO MODIFY:\n * - Increase upwardSpeed for faster rising (more energy)\n * - Decrease friction for longer-lasting momentum\n * - Add waviness for side-to-side motion (currently disabled)\n */\n\nimport { selectWeightedColor } from '../utils/colorUtils.js';\n\n/**\n * Initialize ambient behavior for a particle\n * Sets up initial velocities and behavior-specific data\n * \n * @param {Particle} particle - The particle to initialize\n */\nexport function initializeAmbient(particle) {\n    // Start with gentle upward movement\n    particle.vx = 0;  // NO horizontal drift\n    particle.vy = -0.04 - Math.random() * 0.02;  // Slower upward movement\n    particle.lifeDecay = 0.002;  // Even slower fade - particles last ~8 seconds\n    \n    // Use emotion colors if provided\n    if (particle.emotionColors && particle.emotionColors.length > 0) {\n        particle.color = selectWeightedColor(particle.emotionColors);\n    }\n    \n    particle.behaviorData = {\n        // Languid upward drift\n        upwardSpeed: 0.0005,      // Very slow continuous upward drift\n        waviness: 0,              // NO side-to-side (set to 0.5-2 for wave motion)\n        friction: 0.998           // Even more gradual slowdown\n    };\n}\n\n/**\n * Update ambient behavior each frame\n * Applies gentle upward drift with air resistance\n * \n * @param {Particle} particle - The particle to update\n * @param {number} dt - Delta time (frame time)\n * @param {number} centerX - Orb center X (unused but kept for consistency)\n * @param {number} centerY - Orb center Y (unused but kept for consistency)\n */\nexport function updateAmbient(particle, dt, centerX, centerY) {\n    const data = particle.behaviorData;\n    \n    // Apply friction to y velocity only (frame-rate independent)\n    // Use exponential decay: friction^dt where dt is normalized to 60fps\n    particle.vy *= Math.pow(data.friction, dt);\n    \n    // Add continuous upward drift\n    particle.vy -= data.upwardSpeed * dt;\n    \n    // NO horizontal movement or waviness (zen-like straight up)\n    particle.vx = 0;\n}\n\n// Export behavior definition for registry\nexport default {\n    name: 'ambient',\n    emoji: '☁️',\n    description: 'Gentle upward drift like smoke',\n    initialize: initializeAmbient,\n    update: updateAmbient\n};","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE - Particle Physics Configuration\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Physics constants for particle behavior\n * @author Emotive Engine Team\n * @module particles/config/physics\n * \n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                                   PURPOSE                                         \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ Core physics values that control how particles move and interact with the world.  \n * ║ Modify these with caution as they affect all particle behaviors globally.         \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n */\n\n// ┌─────────────────────────────────────────────────────────────────────────────────────\n// │ PHYSICS CONSTANTS - Core physics values (modify with caution)\n// └─────────────────────────────────────────────────────────────────────────────────────\nexport const PHYSICS = {\n    GRAVITY: 0.098,           // Downward acceleration (Earth-like)\n    AIR_RESISTANCE: 0.99,     // Velocity dampening per frame\n    BOUNCE_DAMPENING: 0.5,    // Energy lost on boundary collision\n    MIN_VELOCITY: 0.01,       // Velocity below this is set to 0\n    MAX_VELOCITY: 10,         // Speed limit to prevent runaway particles\n    BOUNDARY_MARGIN: 20,      // Pixels from canvas edge\n    \n    // Math constants\n    TWO_PI: Math.PI * 2,\n    HALF_PI: Math.PI / 2,\n    QUARTER_PI: Math.PI / 4\n};\n\n// ┌─────────────────────────────────────────────────────────────────────────────────────\n// │ LIFECYCLE CONSTANTS - Particle birth/death timing\n// └─────────────────────────────────────────────────────────────────────────────────────\nexport const LIFECYCLE = {\n    FADE_IN_PERCENT: 0.15,    // First 15% of life fades in\n    FADE_OUT_PERCENT: 0.30,   // Last 30% of life fades out\n    MIN_LIFESPAN: 50,         // Minimum frames before death\n    MAX_LIFESPAN: 500,        // Maximum frames before death\n    DEFAULT_DECAY: 0.01       // Standard life lost per frame\n};\n\nexport default { PHYSICS, LIFECYCLE };","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Orbiting Behavior\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Romantic orbiting behavior for love emotional state\r\n * @author Emotive Engine Team\r\n * @module particles/behaviors/orbiting\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ Creates a romantic atmosphere with particles orbiting the orb like fireflies      \r\n * ║ dancing at a valentine's day party. Features individual blinking and sparkles.    \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * VISUAL DIAGRAM:\r\n *        ✨     ✨\r\n *      💕  ╭───╮  💕    ← particles orbit & sparkle\r\n *    ✨   │  ⭐  │   ✨   ← orb center\r\n *      💕  ╰───╯  💕\r\n *        ✨     ✨\r\n * \r\n * USED BY EMOTIONS:\r\n * - love (romantic valentine vibes)\r\n * \r\n * RECIPE TO MODIFY:\r\n * - Increase angularVelocity for faster spinning\r\n * - Increase floatAmount for more vertical movement\r\n * - Adjust blinkSpeed for different firefly effects\r\n * - Increase baseRadius for wider orbits\r\n */\r\n\r\nimport { selectWeightedColor } from '../utils/colorUtils.js';\r\nimport { PHYSICS } from '../config/physics.js';\r\n\r\n// Rhythm configuration for orbiting particles\r\nexport const rhythmConfig = {\r\n    enabled: true,\r\n    \r\n    // Orbital speed syncs to tempo\r\n    orbitSpeed: {\r\n        baseSync: 'tempo',       // Speed scales with BPM\r\n        beatAcceleration: 1.3,   // Speed up on beat\r\n        offBeatSpeed: 0.9        // Slow between beats\r\n    },\r\n    \r\n    // Radius pulses with rhythm\r\n    radiusPulse: {\r\n        subdivision: 'quarter',  // Pulse on quarter notes\r\n        amount: 0.1,            // 10% radius variation\r\n        curve: 'ease'           // Smooth pulsing\r\n    },\r\n    \r\n    // Twinkle/sparkle syncs to beat\r\n    twinkleSync: {\r\n        onBeat: true,           // Extra sparkles on beat\r\n        intensity: 2.0,         // Double sparkle on beat\r\n        probability: 0.3        // 30% chance per beat\r\n    },\r\n    \r\n    // Pattern-specific behaviors\r\n    patterns: {\r\n        'waltz': {\r\n            // Elegant 3/4 waltz orbiting\r\n            orbitSpeed: { beatAcceleration: 1.1 },\r\n            radiusPulse: { amount: 0.15 }\r\n        },\r\n        'swing': {\r\n            // Jazzy swing orbiting\r\n            orbitSpeed: { beatAcceleration: 1.5 },\r\n            twinkleSync: { intensity: 3.0 }\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Initialize orbiting behavior for a particle\r\n * Creates valentine fireflies with individual timing\r\n * \r\n * @param {Particle} particle - The particle to initialize\r\n */\r\nexport function initializeOrbiting(particle) {\r\n    // Individual fade timing - each particle has its own lifespan\r\n    particle.lifeDecay = 0.001 + Math.random() * 0.002;  // Variable decay (0.001-0.003)\r\n    \r\n    // Use emotion colors if provided - glittery valentine palette\r\n    if (particle.emotionColors && particle.emotionColors.length > 0) {\r\n        particle.color = selectWeightedColor(particle.emotionColors);\r\n    }\r\n    \r\n    // Check if this is a lighter/sparkle color (light pinks)\r\n    particle.isSparkle = particle.color === '#FFE4E1' || \r\n                        particle.color === '#FFCCCB' || \r\n                        particle.color === '#FFC0CB';\r\n    \r\n    // Particles orbit at various distances for depth\r\n    const orbRadius = (particle.scaleFactor || 1) * 40; // Approximate orb size\r\n    const depthLayer = Math.random();\r\n    const baseRadius = orbRadius * (1.3 + depthLayer * 0.9); // 1.3x to 2.2x orb radius\r\n    \r\n    // Glitter firefly properties - each with unique timing\r\n    particle.blinkPhase = Math.random() * PHYSICS.TWO_PI; // Random starting phase\r\n    particle.blinkSpeed = 0.3 + Math.random() * 1.2; // Varied blink speeds (0.3-1.5)\r\n    particle.blinkIntensity = 0.6 + Math.random() * 0.4; // How bright the blink gets\r\n    \r\n    // Individual fade properties\r\n    particle.fadePhase = Math.random() * PHYSICS.TWO_PI; // Random fade starting phase\r\n    particle.fadeSpeed = 0.1 + Math.random() * 0.3; // Different fade speeds\r\n    particle.minOpacity = 0.2 + Math.random() * 0.2; // Min brightness varies (0.2-0.4)\r\n    particle.maxOpacity = 0.8 + Math.random() * 0.2; // Max brightness varies (0.8-1.0)\r\n    \r\n    // Sparkles have different properties\r\n    if (particle.isSparkle) {\r\n        particle.blinkSpeed *= 2; // Sparkles blink faster\r\n        particle.blinkIntensity = 1.0; // Full intensity sparkles\r\n        particle.minOpacity = 0; // Can fade to nothing\r\n        particle.maxOpacity = 1.0; // Can be fully bright\r\n    }\r\n    \r\n    particle.behaviorData = {\r\n        angle: Math.random() * PHYSICS.TWO_PI,\r\n        radius: baseRadius,\r\n        baseRadius: baseRadius,\r\n        angularVelocity: 0.0008 + Math.random() * 0.0017,  // Varied rotation speeds\r\n        swayAmount: 3 + Math.random() * 7,  // Gentle floating sway\r\n        swaySpeed: 0.2 + Math.random() * 0.5,  // Varied sway rhythm\r\n        floatOffset: Math.random() * PHYSICS.TWO_PI,  // Random vertical float phase\r\n        floatSpeed: 0.3 + Math.random() * 0.7,  // Varied vertical floating speed\r\n        floatAmount: 2 + Math.random() * 6,  // How much they float up/down\r\n        twinklePhase: Math.random() * PHYSICS.TWO_PI,  // Individual twinkle timing\r\n        twinkleSpeed: 2 + Math.random() * 3  // Fast twinkle for glitter effect\r\n    };\r\n}\r\n\r\n/**\r\n * Update orbiting behavior each frame\r\n * Creates romantic firefly dance with sparkles\r\n * \r\n * @param {Particle} particle - The particle to update\r\n * @param {number} dt - Delta time (frame time)\r\n * @param {number} centerX - Orb center X position\r\n * @param {number} centerY - Orb center Y position\r\n */\r\nexport function updateOrbiting(particle, dt, centerX, centerY) {\r\n    const data = particle.behaviorData;\r\n\r\n    // Slow romantic rotation around the orb\r\n    data.angle += data.angularVelocity * dt;\r\n\r\n    // Gentle swaying motion\r\n    const swayOffset = Math.sin(data.angle * data.swaySpeed) * data.swayAmount;\r\n\r\n    // Radius changes for breathing effect\r\n    const radiusPulse = Math.sin(data.angle * 1.5) * 6;\r\n\r\n    // Use data.radius if it exists (can be modified by gestures), otherwise use baseRadius\r\n    const currentRadius = (data.radius || data.baseRadius) + radiusPulse + swayOffset * 0.2;\r\n\r\n    // Calculate desired orbital position\r\n    const targetX = centerX + Math.cos(data.angle) * currentRadius;\r\n    const targetY = centerY + Math.sin(data.angle) * currentRadius;\r\n\r\n    // Add gentle vertical floating (like fireflies)\r\n    data.floatOffset += data.floatSpeed * dt * 0.001;\r\n    const verticalFloat = Math.sin(data.floatOffset) * data.floatAmount;\r\n\r\n    // Smoothly move towards target position instead of directly setting it\r\n    // This allows gestures to temporarily offset particles\r\n    const smoothingFactor = 0.1; // How quickly particles return to orbit\r\n    particle.vx = (targetX - particle.x) * smoothingFactor;\r\n    particle.vy = (targetY + verticalFloat - particle.y) * smoothingFactor;\r\n    \r\n    // Update individual fade phase\r\n    particle.fadePhase += particle.fadeSpeed * dt * 0.001;\r\n    \r\n    // Calculate individual particle fade (independent timing)\r\n    const fadeValue = Math.sin(particle.fadePhase) * 0.5 + 0.5; // 0 to 1\r\n    const fadeOpacity = particle.minOpacity + (particle.maxOpacity - particle.minOpacity) * fadeValue;\r\n    \r\n    // Firefly blinking effect\r\n    particle.blinkPhase += particle.blinkSpeed * dt * 0.002;\r\n    \r\n    // Create a complex glitter blink with multiple harmonics\r\n    let blinkValue;\r\n    if (particle.isSparkle) {\r\n        // Sparkles have sharp, dramatic twinkles\r\n        data.twinklePhase += data.twinkleSpeed * dt * 0.001;\r\n        const twinkle = Math.pow(Math.sin(data.twinklePhase), 16); // Sharp peaks\r\n        const shimmer = Math.sin(particle.blinkPhase * 5) * 0.2;\r\n        blinkValue = twinkle * 0.7 + shimmer + 0.1;\r\n    } else {\r\n        // Regular particles have smoother, firefly-like pulses\r\n        blinkValue = Math.sin(particle.blinkPhase) * 0.4 + \r\n                    Math.sin(particle.blinkPhase * 3) * 0.3 +\r\n                    Math.sin(particle.blinkPhase * 7) * 0.2 +\r\n                    Math.sin(particle.blinkPhase * 11) * 0.1; // Added harmonic\r\n    }\r\n    \r\n    // Map to 0-1 range with intensity control\r\n    const normalizedBlink = (blinkValue + 1) * 0.5; // Convert from -1,1 to 0,1\r\n    const blink = 0.2 + normalizedBlink * particle.blinkIntensity * 0.8;\r\n    \r\n    // Combine individual fade with blink effect\r\n    particle.opacity = particle.baseOpacity * fadeOpacity * blink;\r\n    \r\n    // Sparkles pulse size more dramatically\r\n    if (particle.isSparkle) {\r\n        particle.size = particle.baseSize * (0.5 + normalizedBlink * 1.0); // 50-150% size\r\n    } else {\r\n        particle.size = particle.baseSize * (0.8 + normalizedBlink * 0.3); // 80-110% size\r\n    }\r\n    \r\n    // Add subtle color shift for sparkles (shimmer effect)\r\n    if (particle.isSparkle) {\r\n        // Light pink sparkles can shift to white at peak brightness\r\n        if (normalizedBlink > 0.85) {\r\n            particle.tempColor = '#FFFFFF'; // Flash white at peak for extra sparkle\r\n        } else {\r\n            particle.tempColor = particle.color;\r\n        }\r\n    }\r\n}\r\n\r\n// Export behavior definition for registry\r\nexport default {\r\n    name: 'orbiting',\r\n    emoji: '💕',\r\n    description: 'Romantic firefly dance around the orb',\r\n    initialize: initializeOrbiting,\r\n    update: updateOrbiting\r\n};","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE - Rising Behavior\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Buoyant upward movement for joyful states\n * @author Emotive Engine Team\n * @module particles/behaviors/rising\n * \n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                                   PURPOSE                                         \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ Creates a buoyant, uplifting atmosphere with particles rising like bubbles        \n * ║ or balloons. Slight horizontal drift adds organic movement.                       \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n *\n * VISUAL DIAGRAM:\n *      ↗  ↑  ↖\n *     ·  ·  ·    ← particles rise with drift\n *    ·  ·  ·  \n *   ·  ⭐  ·     ← orb center\n *    ·  ·  ·\n *     ·  ·  ·\n * \n * USED BY EMOTIONS:\n * - joy (subtle happiness)\n * - optimism\n * \n * RECIPE TO MODIFY:\n * - Increase buoyancy for faster rising (like helium balloons)\n * - Increase driftAmount for more side-to-side movement\n * - Decrease air resistance for longer-lasting momentum\n */\n\nimport { selectWeightedColor } from '../utils/colorUtils.js';\n\n/**\n * Initialize rising behavior for a particle\n * Sets up buoyant upward movement with gentle drift\n * \n * @param {Particle} particle - The particle to initialize\n */\nexport function initializeRising(particle) {\n    particle.vx = (Math.random() - 0.5) * 0.02;  // Even slower horizontal drift\n    particle.vy = -0.05 - Math.random() * 0.03;   // Much slower upward movement\n    particle.lifeDecay = 0.002;                   // Very slow decay\n    particle.baseOpacity = 0.7 + Math.random() * 0.3;  // More opaque (70-100%)\n    \n    // Use emotion colors if provided\n    if (particle.emotionColors && particle.emotionColors.length > 0) {\n        particle.color = selectWeightedColor(particle.emotionColors);\n    }\n    \n    particle.behaviorData = {\n        buoyancy: 0.001,      // Even gentler upward force\n        driftAmount: 0.005    // Minimal drift\n    };\n}\n\n/**\n * Update rising behavior each frame\n * Applies buoyancy and gentle drift\n * \n * @param {Particle} particle - The particle to update\n * @param {number} dt - Delta time (frame time)\n * @param {number} centerX - Orb center X (unused)\n * @param {number} centerY - Orb center Y (unused)\n */\nexport function updateRising(particle, dt, centerX, centerY) {\n    const data = particle.behaviorData;\n    \n    // Add buoyancy (upward force)\n    particle.vy -= data.buoyancy * dt;\n    \n    // Add horizontal drift\n    particle.vx += (Math.random() - 0.5) * data.driftAmount * dt;\n    \n    // Apply air resistance (frame-independent)\n    particle.vx *= Math.pow(0.995, dt);\n    particle.vy *= Math.pow(0.998, dt);\n}\n\n// Export behavior definition for registry\nexport default {\n    name: 'rising',\n    emoji: '🎈',\n    description: 'Buoyant upward movement like balloons',\n    initialize: initializeRising,\n    update: updateRising\n};","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE - Falling Behavior\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Heavy downward drift for sad emotional states\n * @author Emotive Engine Team\n * @module particles/behaviors/falling\n * \n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                                   PURPOSE                                         \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ Creates a melancholic atmosphere with particles slowly falling like tears         \n * ║ or autumn leaves. Heavy, weighted movement conveys sadness.                       \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n *\n * VISUAL DIAGRAM:\n *     ·  ·  ·\n *    ·  ·  ·  \n *   ·  ⭐  ·     ← orb center\n *    ·  ·  ·\n *     ·  ·  ·    ← particles fall slowly\n *      ↓  ↓  ↓\n * \n * USED BY EMOTIONS:\n * - sadness (melancholy, grief)\n * - disappointment\n * - tired\n * \n * RECIPE TO MODIFY:\n * - Increase gravity for heavier falling (more weight)\n * - Decrease drag for faster falling (less air resistance)\n * - Add horizontal drift for leaf-like falling\n */\n\nimport { selectWeightedColor } from '../utils/colorUtils.js';\n\n/**\n * Initialize falling behavior for a particle\n * Sets up slow, heavy downward movement\n * \n * @param {Particle} particle - The particle to initialize\n */\nexport function initializeFalling(particle) {\n    particle.vx = (Math.random() - 0.5) * 0.03;   // MUCH slower horizontal drift\n    particle.vy = 0.05 + Math.random() * 0.05;    // MUCH slower falling\n    particle.lifeDecay = 0.002;                   // Very slow decay\n    \n    // Use emotion colors if provided\n    if (particle.emotionColors && particle.emotionColors.length > 0) {\n        particle.color = selectWeightedColor(particle.emotionColors);\n    }\n    \n    particle.behaviorData = {\n        gravity: 0.002,       // Very gentle gravity\n        drag: 0.995           // High drag for slow fall\n    };\n}\n\n/**\n * Update falling behavior each frame\n * Applies gravity with air resistance\n * \n * @param {Particle} particle - The particle to update\n * @param {number} dt - Delta time (frame time)\n * @param {number} centerX - Orb center X (unused)\n * @param {number} centerY - Orb center Y (unused)\n */\nexport function updateFalling(particle, dt, centerX, centerY) {\n    const data = particle.behaviorData;\n    \n    // Apply gravity\n    particle.vy += data.gravity * dt;\n    \n    // Apply drag (frame-independent)\n    particle.vx *= Math.pow(data.drag, dt);\n    particle.vy *= Math.pow(data.drag, dt);\n    \n    // Limit terminal velocity\n    if (particle.vy > 2) {\n        particle.vy = 2;\n    }\n}\n\n// Export behavior definition for registry\nexport default {\n    name: 'falling',\n    emoji: '💧',\n    description: 'Heavy downward drift like tears',\n    initialize: initializeFalling,\n    update: updateFalling\n};","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE - Playground Configuration 🎮\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Safe values for experimentation and tweaking\n * @author Emotive Engine Team\n * @module particles/config/playground\n * \n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                            🎮 PLAYGROUND VALUES                                   \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ SAFE TO MODIFY! These values are designed for experimentation.                    \n * ║ Change them to create new visual effects and behaviors.                           \n * ║                                                                                    \n * ║ TIP: After changing values, refresh your browser to see the effects!              \n * ║ TIP: Set window.DEBUG_PARTICLES = true in console to visualize changes            \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n */\n\nexport const PLAYGROUND = {\n    // ┌─────────────────────────────────────────────────────────────────────────────────\n    // │ PARTICLE APPEARANCE - How particles look\n    // └─────────────────────────────────────────────────────────────────────────────────\n    particle: {\n        MIN_SIZE: 4,           // 🎯 Smallest particle (pixels) - Try: 2-10\n        MAX_SIZE: 10,          // 🎯 Largest particle (pixels) - Try: 5-20\n        GLOW_CHANCE: 0.33,     // 🎯 Chance of glowing (0=never, 1=always)\n        CELL_SHADE_CHANCE: 0.33, // 🎯 Chance of cartoon style (0=never, 1=always)\n        BASE_OPACITY: 1.0      // 🎯 Starting opacity (0=invisible, 1=solid)\n    },\n    \n    // ┌─────────────────────────────────────────────────────────────────────────────────\n    // │ SPARKLE & SHIMMER - Valentine firefly effects (love state)\n    // └─────────────────────────────────────────────────────────────────────────────────\n    sparkle: {\n        BLINK_SPEED_MIN: 0.3,  // 🎯 Slowest blink rate - Try: 0.1-1.0\n        BLINK_SPEED_MAX: 1.5,  // 🎯 Fastest blink rate - Try: 0.5-3.0\n        INTENSITY_MIN: 0.6,    // 🎯 Dimmest sparkle - Try: 0.3-0.8\n        INTENSITY_MAX: 1.0,    // 🎯 Brightest sparkle - Try: 0.8-1.2\n        SIZE_PULSE: 0.3        // 🎯 Size change during sparkle - Try: 0.1-0.5\n    },\n    \n    // ┌─────────────────────────────────────────────────────────────────────────────────\n    // │ POPCORN BEHAVIOR - Joy particles that pop!\n    // └─────────────────────────────────────────────────────────────────────────────────\n    popcorn: {\n        POP_DELAY_MIN: 100,    // 🎯 Fastest pop (ms) - Try: 50-500\n        POP_DELAY_MAX: 2000,   // 🎯 Slowest pop (ms) - Try: 1000-5000\n        POP_FORCE_MIN: 3,      // 🎯 Weakest pop - Try: 1-5\n        POP_FORCE_MAX: 8,      // 🎯 Strongest pop - Try: 5-15\n        BOUNCE_HEIGHT: 0.7     // 🎯 Bounce energy retained - Try: 0.3-0.9\n    },\n    \n    // ┌─────────────────────────────────────────────────────────────────────────────────\n    // │ EMOTION INTENSITIES - How dramatic each emotion appears\n    // └─────────────────────────────────────────────────────────────────────────────────\n    emotions: {\n        ANGER_SHAKE: 2.0,      // 🎯 Anger intensity - Try: 1.0-3.0\n        FEAR_JITTER: 1.5,      // 🎯 Fear nervousness - Try: 0.5-2.5\n        LOVE_SWAY: 1.2,        // 🎯 Love romance - Try: 0.8-2.0\n        JOY_BOUNCE: 1.8,       // 🎯 Joy energy - Try: 1.0-3.0\n        SADNESS_WEIGHT: 0.6    // 🎯 Sadness heaviness - Try: 0.3-0.8\n    }\n};\n\n/**\n * ┌─────────────────────────────────────────────────────────────────────────────────────\n * │ 📝 RECIPES FOR COMMON MODIFICATIONS\n * └─────────────────────────────────────────────────────────────────────────────────────\n * \n * MAKE PARTICLES MORE ENERGETIC:\n * - Increase JOY_BOUNCE to 2.5+\n * - Decrease POP_DELAY_MIN to 50\n * - Increase POP_FORCE_MAX to 12\n * \n * MAKE PARTICLES MORE ROMANTIC:\n * - Increase LOVE_SWAY to 1.8\n * - Increase BLINK_SPEED_MAX to 2.0\n * - Increase SIZE_PULSE to 0.5\n * \n * MAKE PARTICLES MORE DRAMATIC:\n * - Increase all emotion intensities by 50%\n * - Increase MAX_SIZE to 15\n * - Set GLOW_CHANCE to 0.7\n * \n * MAKE PARTICLES MORE SUBTLE:\n * - Decrease all emotion intensities by 50%\n * - Decrease MAX_SIZE to 6\n * - Set BASE_OPACITY to 0.7\n */\n\nexport default PLAYGROUND;","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE - Popcorn Behavior\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Spontaneous popping with bounces for joyful celebration\n * @author Emotive Engine Team\n * @module particles/behaviors/popcorn\n * \n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                                   PURPOSE                                         \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ Creates a celebratory atmosphere with particles that wait, then POP! and bounce   \n * ║ around with gravity. Perfect for pure joy and celebration moments.                \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n *\n * VISUAL DIAGRAM:\n *     Stage 1: Wait      Stage 2: POP!       Stage 3: Bounce\n *         ·                  💥 ↗             ↘ \n *        ···                ↖ 💥 ↗              ↓\n *       ·⭐·                  💥                 🎊 ← bounce!\n *        ···                ↙ 💥 ↘              ↑\n *         ·                  💥 ↓               ↗\n * \n * USED BY EMOTIONS:\n * - joy (celebration, happiness, excitement)\n * \n * RECIPE TO MODIFY:\n * - Decrease popDelay for faster popping (more energetic)\n * - Increase popStrength for bigger pops\n * - Adjust gravity for different bounce physics\n * - Increase maxBounces for longer bouncing\n */\n\nimport { selectWeightedColor } from '../utils/colorUtils.js';\nimport { PLAYGROUND } from '../config/playground.js';\n\n/**\n * Initialize popcorn behavior for a particle\n * Sets up kernel waiting to pop\n * \n * @param {Particle} particle - The particle to initialize\n */\nexport function initializePopcorn(particle) {\n    // Start with little to no movement (kernel waiting to pop)\n    particle.vx = (Math.random() - 0.5) * 0.1;\n    particle.vy = (Math.random() - 0.5) * 0.1;\n    // Faster, more varied decay for dynamic disappearing\n    particle.lifeDecay = 0.008 + Math.random() * 0.012; // Random between 0.008-0.020\n    \n    // Use emotion colors if provided, otherwise default popcorn colors\n    if (particle.emotionColors && particle.emotionColors.length > 0) {\n        particle.color = selectWeightedColor(particle.emotionColors);\n    } else {\n        // Default popcorn colors (buttery whites and yellows)\n        const colors = ['#FFFFFF', '#FFFACD', '#FFF8DC', '#FFFFE0', '#FAFAD2'];\n        particle.color = selectWeightedColor(colors);\n    }\n    \n    // Vary sizes more dramatically - some big fluffy pieces, some small\n    particle.size = (Math.random() < 0.3) ? \n        (8 + Math.random() * 4) * particle.scaleFactor * particle.particleSizeMultiplier : // 30% big\n        (2 + Math.random() * 4) * particle.scaleFactor * particle.particleSizeMultiplier;  // 70% small\n    particle.baseSize = particle.size;\n    \n    // Less glow, more solid popcorn look\n    particle.hasGlow = Math.random() < 0.2; // Only 20% have glow\n    particle.glowSizeMultiplier = particle.hasGlow ? 1.2 : 0;\n    \n    particle.behaviorData = {\n        // Popcorn popping mechanics\n        popDelay: Math.random() * PLAYGROUND.popcorn.POP_DELAY_MAX,\n        hasPopped: false,\n        popStrength: PLAYGROUND.popcorn.POP_FORCE_MIN + \n                    Math.random() * (PLAYGROUND.popcorn.POP_FORCE_MAX - PLAYGROUND.popcorn.POP_FORCE_MIN),\n        \n        // Physics after popping\n        gravity: 0.098,                    // Gravity strength\n        bounceDamping: PLAYGROUND.popcorn.BOUNCE_HEIGHT,\n        bounceCount: 0,\n        maxBounces: 2 + Math.floor(Math.random() * 2), // 2-3 bounces\n        \n        // Visual flair\n        spinRate: (Math.random() - 0.5) * 10, // Rotation speed (for future use)\n        lifetime: 0                           // Track time since spawn\n    };\n}\n\n/**\n * Update popcorn behavior each frame\n * Handles waiting, popping, and bouncing phases\n * \n * @param {Particle} particle - The particle to update\n * @param {number} dt - Delta time (frame time)\n * @param {number} centerX - Orb center X position\n * @param {number} centerY - Orb center Y position\n */\nexport function updatePopcorn(particle, dt, centerX, centerY) {\n    const data = particle.behaviorData;\n    data.lifetime += dt * 16.67; // Convert to milliseconds\n    \n    // Check if it's time to pop\n    if (!data.hasPopped && data.lifetime > data.popDelay) {\n        // POP! Sudden burst of velocity in all directions for celebration\n        data.hasPopped = true;\n        const popAngle = Math.random() * Math.PI * 2; // Full 360 degree spread\n        particle.vx = Math.cos(popAngle) * data.popStrength * 1.5; // Extra horizontal spread\n        particle.vy = Math.sin(popAngle) * data.popStrength - 0.3; // Slight upward bias for joy\n        \n        // Expand size when popping for dramatic effect\n        particle.size = particle.baseSize * 1.25;\n    }\n    \n    if (data.hasPopped) {\n        // Apply gravity\n        particle.vy += data.gravity * dt;\n        \n        // Check for ground bounce\n        const groundLevel = centerY + 100 * particle.scaleFactor; // Below the orb\n        if (particle.y > groundLevel && data.bounceCount < data.maxBounces) {\n            particle.y = groundLevel;\n            particle.vy = -Math.abs(particle.vy) * data.bounceDamping; // Bounce up with damping\n            particle.vx *= 0.9; // Reduce horizontal speed on bounce\n            data.bounceCount++;\n            \n            // Shrink slightly with each bounce\n            particle.size = particle.baseSize * (1.5 - data.bounceCount * 0.1);\n        }\n        \n        // Fade dramatically after final bounce\n        if (data.bounceCount >= data.maxBounces) {\n            particle.lifeDecay = 0.03 + Math.random() * 0.02; // Very fast fade\n            particle.size *= 0.95; // Also shrink rapidly\n        }\n        \n        // Dynamic fading based on velocity - slower particles fade faster\n        const speed = Math.sqrt(particle.vx * particle.vx + particle.vy * particle.vy);\n        if (speed < 0.5) {\n            particle.lifeDecay *= 1.5; // 50% faster fade when moving slowly\n        }\n    }\n}\n\n// Export behavior definition for registry\nexport default {\n    name: 'popcorn',\n    emoji: '🍿',\n    description: 'Spontaneous popping with gravity and bounces',\n    initialize: initializePopcorn,\n    update: updatePopcorn\n};","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE - Burst Behavior\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Explosive expansion for surprise and suspicion states\n * @author Emotive Engine Team\n * @module particles/behaviors/burst\n * \n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                                   PURPOSE                                         \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ Creates dramatic expansion effects. For surprise: fast burst then sudden stop.    \n * ║ For suspicion: controlled, watchful expansion. Particles shoot out from center.   \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n *\n * VISUAL DIAGRAM:\n *   Surprise:                  Suspicion:\n *       💥→                        •→\n *     ↗ 💥 ↘                    ↗ • ↘\n *   ← ⭐ →    STOP!          ← ⭐ →    (controlled)\n *     ↙ 💥 ↖                    ↙ • ↖\n *       💥←                        •←\n * \n * USED BY EMOTIONS:\n * - surprise (dramatic burst then stop)\n * - suspicion (controlled, watchful expansion)\n * \n * RECIPE TO MODIFY:\n * - Increase speed for more dramatic burst\n * - Adjust friction for different deceleration\n * - Change stopTime for surprise effect timing\n */\n\nimport { selectWeightedColor } from '../utils/colorUtils.js';\nimport { PHYSICS } from '../config/physics.js';\n\n/**\n * Initialize burst behavior for a particle\n * Sets up explosive outward movement\n * \n * @param {Particle} particle - The particle to initialize\n */\nexport function initializeBurst(particle) {\n    // Check emotion type for behavior variation\n    const isSuspicion = particle.emotion === 'suspicion';\n    const isSurprise = particle.emotion === 'surprise';\n    \n    // Random direction for burst\n    const angle = Math.random() * PHYSICS.TWO_PI;\n    \n    // Speed based on emotion\n    const speed = isSuspicion ? \n        (1.0 + Math.random() * 0.8) :      // Controlled burst for suspicion (1-1.8)\n        (isSurprise ? \n            (7.0 + Math.random() * 5.0) :  // Much faster burst for surprise (7-12)\n            (3.5 + Math.random() * 2.5));  // Normal burst for others (3.5-6)\n    \n    particle.vx = Math.cos(angle) * speed;\n    particle.vy = Math.sin(angle) * speed;\n    \n    // Lifespan based on emotion\n    particle.lifeDecay = isSuspicion ? \n        0.010 : \n        (isSurprise ? 0.006 + Math.random() * 0.008 : 0.015);\n    \n    // Use emotion colors if provided\n    if (particle.emotionColors && particle.emotionColors.length > 0) {\n        particle.color = selectWeightedColor(particle.emotionColors);\n    }\n    \n    // Make suspicion particles more visible\n    if (isSuspicion) {\n        particle.size = (6 + Math.random() * 4) * \n                       (particle.scaleFactor || 1) * \n                       (particle.particleSizeMultiplier || 1);\n        particle.baseSize = particle.size;\n        particle.opacity = 1.0;  // Full opacity for visibility\n        particle.baseOpacity = particle.opacity;\n    }\n    \n    particle.behaviorData = {\n        isSuspicion,\n        isSurprise,\n        age: 0,\n        fadeStart: isSuspicion ? 0.3 : 0.2  // When to start fading\n    };\n}\n\n/**\n * Update burst behavior each frame\n * Handles explosive expansion with emotion-specific variations\n * \n * @param {Particle} particle - The particle to update\n * @param {number} dt - Delta time (frame time)\n * @param {number} centerX - Orb center X (unused)\n * @param {number} centerY - Orb center Y (unused)\n */\nexport function updateBurst(particle, dt, centerX, centerY) {\n    const data = particle.behaviorData;\n    \n    // Surprise particles: burst out then STOP suddenly\n    if (data.isSurprise) {\n        // Track age for timing the stop\n        data.age += dt * 0.016; // Convert to seconds\n        \n        if (data.age < 0.15) {\n            // First 0.15 seconds: maintain high speed\n            const friction = 0.98;\n            particle.vx *= Math.pow(friction, dt);\n            particle.vy *= Math.pow(friction, dt);\n        } else if (data.age < 0.25) {\n            // 0.15-0.25 seconds: SUDDEN STOP!\n            const friction = 0.85; // Heavy braking\n            particle.vx *= Math.pow(friction, dt);\n            particle.vy *= Math.pow(friction, dt);\n        } else {\n            // After stop: float gently\n            const friction = 0.99;\n            particle.vx *= Math.pow(friction, dt);\n            particle.vy *= Math.pow(friction, dt);\n            // Tiny random drift\n            particle.vx += (Math.random() - 0.5) * 0.01 * dt;\n            particle.vy += (Math.random() - 0.5) * 0.01 * dt;\n        }\n    } else {\n        // Normal burst behavior for other emotions\n        const friction = data.isSuspicion ? 0.99 : 0.95;\n        particle.vx *= Math.pow(friction, dt);\n        particle.vy *= Math.pow(friction, dt);\n    }\n    \n    // For suspicion, add a subtle scanning motion\n    if (data.isSuspicion) {\n        // Add a very subtle side-to-side drift\n        const time = Date.now() * 0.001;\n        particle.vx += Math.sin(time * 2 + particle.id) * 0.01 * dt;\n    }\n}\n\n// Export behavior definition for registry\nexport default {\n    name: 'burst',\n    emoji: '💥',\n    description: 'Explosive expansion from center',\n    initialize: initializeBurst,\n    update: updateBurst\n};","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE - Aggressive Behavior\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Sharp, chaotic movement for angry emotional states\n * @author Emotive Engine Team\n * @module particles/behaviors/aggressive\n * \n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                                   PURPOSE                                         \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ Creates an intense, volatile atmosphere with particles moving erratically.        \n * ║ Sharp jitters and sudden bursts of movement convey anger and frustration.         \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n *\n * VISUAL DIAGRAM:\n *      ⚡→    ←⚡\n *        ↘  ↙       ← erratic, sharp movements\n *    ⚡← ⭐ →⚡      ← orb center (shaking)\n *        ↗  ↖\n *      ⚡←    →⚡\n * \n * USED BY EMOTIONS:\n * - anger (rage, fury)\n * - frustration\n * - irritation\n * \n * RECIPE TO MODIFY:\n * - Increase jitter for more chaotic movement\n * - Increase acceleration for more violent bursts\n * - Decrease speedDecay for longer-lasting energy\n */\n\nimport { selectWeightedColor } from '../utils/colorUtils.js';\nimport { PHYSICS } from '../config/physics.js';\n\n/**\n * Initialize aggressive behavior for a particle\n * Sets up chaotic, sharp movement patterns\n * \n * @param {Particle} particle - The particle to initialize\n */\nexport function initializeAggressive(particle) {\n    const angle = Math.random() * PHYSICS.TWO_PI;\n    const speed = 1.5 + Math.random() * 2;\n    particle.vx = Math.cos(angle) * speed;\n    particle.vy = Math.sin(angle) * speed;\n    particle.lifeDecay = 0.015;\n    \n    // Use emotion colors if provided\n    if (particle.emotionColors && particle.emotionColors.length > 0) {\n        particle.color = selectWeightedColor(particle.emotionColors);\n    }\n    \n    particle.behaviorData = {\n        acceleration: 0.05,\n        jitter: 0.3,\n        speedDecay: 0.95\n    };\n}\n\n/**\n * Update aggressive behavior each frame\n * Applies jitter and random acceleration bursts\n * \n * @param {Particle} particle - The particle to update\n * @param {number} dt - Delta time (frame time)\n * @param {number} centerX - Orb center X (unused)\n * @param {number} centerY - Orb center Y (unused)\n */\nexport function updateAggressive(particle, dt, centerX, centerY) {\n    const data = particle.behaviorData;\n    \n    // Add jitter to movement\n    particle.vx += (Math.random() - 0.5) * data.jitter * dt;\n    particle.vy += (Math.random() - 0.5) * data.jitter * dt;\n    \n    // Apply speed decay (frame-independent)\n    particle.vx *= Math.pow(data.speedDecay, dt);\n    particle.vy *= Math.pow(data.speedDecay, dt);\n    \n    // Occasionally add burst of acceleration\n    // Scale probability with frame time\n    if (Math.random() < Math.min(0.05 * dt, 0.5)) {\n        const angle = Math.random() * PHYSICS.TWO_PI;\n        particle.vx += Math.cos(angle) * data.acceleration;\n        particle.vy += Math.sin(angle) * data.acceleration;\n    }\n}\n\n// Export behavior definition for registry\nexport default {\n    name: 'aggressive',\n    emoji: '⚡',\n    description: 'Sharp, chaotic movement with violent bursts',\n    initialize: initializeAggressive,\n    update: updateAggressive\n};","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE - Scattering Behavior\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Particles fleeing from center for fear states\n * @author Emotive Engine Team\n * @module particles/behaviors/scattering\n * \n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                                   PURPOSE                                         \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ Creates an anxious atmosphere with particles frantically fleeing from the center. \n * ║ Conveys fear, panic, and the desire to escape.                                    \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n *\n * VISUAL DIAGRAM:\n *    ← · · · →\n *    ↖       ↗       ← particles flee outward\n *  · · ⭐ · ·       ← orb center (source of fear)\n *    ↙       ↘\n *    ← · · · →\n * \n * USED BY EMOTIONS:\n * - fear (panic, anxiety)\n * - startled\n * - nervous\n * \n * RECIPE TO MODIFY:\n * - Increase fleeSpeed for more frantic escape\n * - Increase panicFactor for more erratic fleeing\n * - Add jitter for nervous shaking while fleeing\n */\n\nimport { selectWeightedColor } from '../utils/colorUtils.js';\nimport { PHYSICS } from '../config/physics.js';\n\n/**\n * Initialize scattering behavior for a particle\n * Sets up fleeing movement away from center\n * \n * @param {Particle} particle - The particle to initialize\n */\nexport function initializeScattering(particle) {\n    // Will be set relative to center in update\n    particle.vx = 0;\n    particle.vy = 0;\n    particle.lifeDecay = 0.008;  // Live longer to spread further\n    \n    // Use emotion colors if provided\n    if (particle.emotionColors && particle.emotionColors.length > 0) {\n        particle.color = selectWeightedColor(particle.emotionColors);\n    }\n    \n    particle.behaviorData = {\n        fleeSpeed: 2.0,     // Much faster fleeing\n        panicFactor: 1.2,   // More panicked movement\n        initialized: false\n    };\n}\n\n/**\n * Update scattering behavior each frame\n * Particles flee away from center with panic\n * \n * @param {Particle} particle - The particle to update\n * @param {number} dt - Delta time (frame time)\n * @param {number} centerX - Orb center X position\n * @param {number} centerY - Orb center Y position\n */\nexport function updateScattering(particle, dt, centerX, centerY) {\n    const data = particle.behaviorData;\n    \n    // Initialize flee direction if not done\n    if (!data.initialized) {\n        const dx = particle.x - centerX;\n        const dy = particle.y - centerY;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        \n        if (distance > 0) {\n            particle.vx = (dx / distance) * data.fleeSpeed;\n            particle.vy = (dy / distance) * data.fleeSpeed;\n        } else {\n            // If at center, pick random direction\n            const angle = Math.random() * PHYSICS.TWO_PI;\n            particle.vx = Math.cos(angle) * data.fleeSpeed;\n            particle.vy = Math.sin(angle) * data.fleeSpeed;\n        }\n        data.initialized = true;\n    }\n    \n    // Continue fleeing with panic factor\n    const dx = particle.x - centerX;\n    const dy = particle.y - centerY;\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    \n    if (distance > 0) {\n        // Add acceleration away from center\n        particle.vx += (dx / distance) * data.panicFactor * 0.01 * dt;\n        particle.vy += (dy / distance) * data.panicFactor * 0.01 * dt;\n    }\n    \n    // Add nervous jitter\n    particle.vx += (Math.random() - 0.5) * 0.1 * dt;\n    particle.vy += (Math.random() - 0.5) * 0.1 * dt;\n    \n    // Apply friction\n    particle.vx *= Math.pow(0.98, dt);\n    particle.vy *= Math.pow(0.98, dt);\n}\n\n// Export behavior definition for registry\nexport default {\n    name: 'scattering',\n    emoji: '😨',\n    description: 'Particles flee from center in panic',\n    initialize: initializeScattering,\n    update: updateScattering\n};","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE - Repelling Behavior\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Particles pushed away from center for aversion states\n * @author Emotive Engine Team\n * @module particles/behaviors/repelling\n * \n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                                   PURPOSE                                         \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ Creates a space of rejection with particles being pushed away from the center,    \n * ║ maintaining a minimum distance. Conveys disgust, rejection, and boundaries.       \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n *\n * VISUAL DIAGRAM:\n *    ← - - - →\n *    ↖       ↗       ← particles pushed away\n *  - - (  ) - -      ← empty zone around center\n *    ↙       ↘       ← minimum distance maintained\n *    ← - - - →\n * \n * USED BY EMOTIONS:\n * - disgust (keeping things at bay)\n * - contempt\n * - aversion\n * \n * RECIPE TO MODIFY:\n * - Increase repelStrength for stronger push\n * - Increase minDistance for larger empty zone\n * - Adjust damping for smoother/rougher motion\n */\n\nimport { selectWeightedColor } from '../utils/colorUtils.js';\n\n/**\n * Initialize repelling behavior for a particle\n * Sets up repulsion from center\n * \n * @param {Particle} particle - The particle to initialize\n */\nexport function initializeRepelling(particle) {\n    particle.vx = 0;\n    particle.vy = 0;\n    particle.lifeDecay = 0.01; // Moderate life\n    \n    // Use emotion colors if provided\n    if (particle.emotionColors && particle.emotionColors.length > 0) {\n        particle.color = selectWeightedColor(particle.emotionColors);\n    }\n    \n    particle.behaviorData = {\n        repelStrength: 0.8,      // How strongly to push away\n        minDistance: 50,         // Minimum distance from center\n        initialized: false       // Track if initial repel has been applied\n    };\n}\n\n/**\n * Update repelling behavior - particles maintain distance from center\n * \n * Used for: DISGUST emotion (keeping unpleasant things away)\n * Visual effect: Particles are pushed away from center and maintain a \n *                minimum distance, creating an empty zone\n * \n * @param {Particle} particle - The particle to update\n * @param {number} dt - Delta time (milliseconds since last frame, typically ~16.67 for 60fps)\n * @param {number} centerX - X coordinate of the orb's center (canvas center)\n * @param {number} centerY - Y coordinate of the orb's center (canvas center)\n */\nexport function updateRepelling(particle, dt, centerX, centerY) {\n    const data = particle.behaviorData;\n    \n    // STEP 1: Calculate distance from center\n    // dx/dy = distance from center to particle (can be negative)\n    const dx = particle.x - centerX;\n    const dy = particle.y - centerY;\n    // dist = straight-line distance using Pythagorean theorem\n    const distance = Math.sqrt(dx * dx + dy * dy);\n    \n    // STEP 2: Apply repelling force if too close to center\n    // This ensures particles maintain minimum distance\n    if (!data.initialized || distance < data.minDistance) {\n        if (distance > 0) {\n            // Calculate repel force (stronger when closer)\n            // Math.max(distance, 5) prevents division by very small numbers\n            const repelForce = data.repelStrength / Math.max(distance, 5);\n            \n            // Apply force in direction away from center\n            // dx/distance = unit vector component pointing away\n            // Multiply by dt for frame-rate independence\n            particle.vx += (dx / distance) * repelForce * dt;\n            particle.vy += (dy / distance) * repelForce * dt;\n        }\n        data.initialized = true;\n    }\n    \n    // STEP 3: Apply gentle damping to smooth motion\n    // This prevents infinite acceleration and creates natural deceleration\n    // Math.pow ensures frame-rate independence\n    particle.vx *= Math.pow(0.99, dt);\n    particle.vy *= Math.pow(0.99, dt);\n}\n\n// Export behavior definition for registry\nexport default {\n    name: 'repelling',\n    emoji: '🚫',\n    description: 'Particles pushed away from center, maintaining distance',\n    initialize: initializeRepelling,\n    update: updateRepelling\n};","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE - Connecting Behavior\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Chaotic particles drawn to center for social connection states\n * @author Emotive Engine Team\n * @module particles/behaviors/connecting\n * \n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                                   PURPOSE                                         \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ Creates an energetic social atmosphere with particles moving chaotically but       \n * ║ staying connected to the center. Like a lively party or bustling community.       \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n *\n * VISUAL DIAGRAM:\n *    ↗↘ ↖↙ ↗↘\n *   ↙ ↗ ↘ ↖ ↙       ← chaotic but connected\n *  ↘ ↖ ⭐ ↗ ↙       ← drawn to center\n *   ↗ ↙ ↖ ↘ ↗       ← higher energy than ambient\n *    ↙↖ ↗↘ ↙↖\n * \n * USED BY EMOTIONS:\n * - curiosity (social exploration)\n * - playfulness\n * - engagement\n * \n * RECIPE TO MODIFY:\n * - Increase attractionForce for stronger pull to center\n * - Increase chaosFactor for more erratic movement\n * - Decrease friction for more energetic motion\n */\n\nimport { selectWeightedColor } from '../utils/colorUtils.js';\nimport { PHYSICS } from '../config/physics.js';\n\n/**\n * Initialize connecting behavior for a particle\n * Sets up chaotic but connected movement\n * \n * @param {Particle} particle - The particle to initialize\n */\nexport function initializeConnecting(particle) {\n    // Original Emotive connecting: speed 2-7, higher chaos\n    const angle = Math.random() * PHYSICS.TWO_PI;\n    const speed = 2 + Math.random() * 5; // Faster than ambient\n    particle.vx = Math.cos(angle) * speed;\n    particle.vy = Math.sin(angle) * speed;\n    particle.lifeDecay = 0.012; // Shorter life for more dynamic feel\n    \n    // Use emotion colors if provided\n    if (particle.emotionColors && particle.emotionColors.length > 0) {\n        particle.color = selectWeightedColor(particle.emotionColors);\n    }\n    \n    particle.behaviorData = {\n        // Higher attraction and chaos for connecting state\n        attractionForce: 0.008,  // Stronger pull (original)\n        chaosFactor: 1.0,        // Higher chaos (original)\n        friction: 0.95          // Less friction than ambient\n    };\n}\n\n/**\n * Update connecting behavior - chaotic movement with center attraction\n * \n * Used for: CURIOSITY/SOCIAL emotions (engaged, exploring, connecting)\n * Visual effect: Particles move chaotically but are drawn back to center,\n *                creating a bustling, connected atmosphere\n * \n * @param {Particle} particle - The particle to update\n * @param {number} dt - Delta time (milliseconds since last frame, typically ~16.67 for 60fps)\n * @param {number} centerX - X coordinate of the orb's center (canvas center)\n * @param {number} centerY - Y coordinate of the orb's center (canvas center)\n */\nexport function updateConnecting(particle, dt, centerX, centerY) {\n    const data = particle.behaviorData;\n    \n    // STEP 1: Apply friction to slow particles gradually\n    // This prevents infinite acceleration\n    // Math.pow ensures frame-rate independence\n    particle.vx *= Math.pow(data.friction, dt);\n    particle.vy *= Math.pow(data.friction, dt);\n    \n    // STEP 2: Apply attraction force towards center\n    // (centerX - this.x) gives direction vector to center\n    // Multiplied by attractionForce to control strength\n    const attractX = (centerX - particle.x) * data.attractionForce;\n    const attractY = (centerY - particle.y) * data.attractionForce;\n    \n    // STEP 3: Add chaos for erratic movement\n    // (Math.random() - 0.5) gives random value between -0.5 and 0.5\n    // Multiplied by chaosFactor for intensity\n    const chaosX = (Math.random() - 0.5) * data.chaosFactor;\n    const chaosY = (Math.random() - 0.5) * data.chaosFactor;\n    \n    // STEP 4: Combine forces\n    // Attraction keeps particles connected to center\n    // Chaos makes movement unpredictable and lively\n    particle.vx += attractX + chaosX;\n    particle.vy += attractY + chaosY;\n}\n\n// Export behavior definition for registry\nexport default {\n    name: 'connecting',\n    emoji: '🔗',\n    description: 'Chaotic movement with center attraction for social states',\n    initialize: initializeConnecting,\n    update: updateConnecting\n};","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE - Resting Behavior\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Ultra-slow movement for deeply relaxed states\n * @author Emotive Engine Team\n * @module particles/behaviors/resting\n * \n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                                   PURPOSE                                         \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ Creates an atmosphere of deep calm and rest. Particles barely move, creating      \n * ║ a meditative, peaceful environment. Like watching dust motes in sunlight.         \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n *\n * VISUAL DIAGRAM:\n *        ·\n *       · ·         ← barely moving\n *      · · ·        ← vertical drift only\n *     · ⭐ ·        ← no horizontal motion\n *      · · ·        \n *       · ·         \n *        ·\n * \n * USED BY EMOTIONS:\n * - sleepy (deep rest)\n * - meditative\n * - tranquil\n * \n * RECIPE TO MODIFY:\n * - Decrease upwardSpeed for even slower movement\n * - Increase lifeDecay for shorter-lived particles\n * - Add tiny horizontal drift for slight variation\n */\n\nimport { selectWeightedColor } from '../utils/colorUtils.js';\n\n/**\n * Initialize resting behavior for a particle\n * Sets up minimal movement\n * \n * @param {Particle} particle - The particle to initialize\n */\nexport function initializeResting(particle) {\n    particle.vx = 0;  // NO horizontal movement\n    particle.vy = -0.01;  // Tiniest upward drift\n    particle.lifeDecay = 0.001;  // Very slow fade - particles last 10+ seconds\n    \n    // Use emotion colors if provided\n    if (particle.emotionColors && particle.emotionColors.length > 0) {\n        particle.color = selectWeightedColor(particle.emotionColors);\n    }\n    \n    particle.behaviorData = {\n        upwardSpeed: 0.00002,  // Barely perceptible upward drift\n        friction: 0.999       // Almost no friction (preserve any motion)\n    };\n}\n\n/**\n * Update resting behavior - ultra-slow vertical drift\n * \n * Used for: SLEEPY/MEDITATIVE emotions (deep rest, tranquility)\n * Visual effect: Particles drift upward so slowly they appear almost still,\n *                creating a deeply peaceful atmosphere\n * \n * @param {Particle} particle - The particle to update\n * @param {number} dt - Delta time (milliseconds since last frame, typically ~16.67 for 60fps)\n * @param {number} centerX - X coordinate of the orb's center (unused)\n * @param {number} centerY - Y coordinate of the orb's center (unused)\n */\nexport function updateResting(particle, dt, centerX, centerY) {\n    const data = particle.behaviorData;\n    \n    // STEP 1: Apply friction to vertical velocity only\n    // This creates a very gentle deceleration\n    // Math.pow ensures frame-rate independence\n    particle.vy *= Math.pow(data.friction, dt);\n    \n    // STEP 2: Add tiny continuous upward drift\n    // Negative value because canvas Y increases downward\n    // Multiplied by dt for frame-rate independence\n    particle.vy -= data.upwardSpeed * dt;\n    \n    // STEP 3: Enforce NO horizontal movement\n    // This creates the characteristic vertical-only drift\n    // Essential for the peaceful, non-chaotic feel\n    particle.vx = 0;\n}\n\n// Export behavior definition for registry\nexport default {\n    name: 'resting',\n    emoji: '😴',\n    description: 'Ultra-slow vertical drift for deep rest states',\n    initialize: initializeResting,\n    update: updateResting\n};","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE - Radiant Behavior\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Particles radiating outward like sun rays for euphoric states\n * @author Emotive Engine Team\n * @module particles/behaviors/radiant\n * \n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                                   PURPOSE                                         \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ Creates a euphoric atmosphere with particles bursting outward like sunbeams,      \n * ║ with shimmering and twinkling effects. Perfect for moments of pure joy and hope.  \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n *\n * VISUAL DIAGRAM:\n *        ☀️\n *    ✨  ↗  ✨       ← particles radiate outward\n *  ✨ ↖ ⭐ ↗ ✨     ← orb center (like the sun)\n *    ✨  ↘  ✨       ← with shimmer effect\n *        ☀️\n * \n * USED BY EMOTIONS:\n * - euphoria (first day of spring, sunrise vibes)\n * - elation\n * - triumph\n * \n * RECIPE TO MODIFY:\n * - Increase radialSpeed for faster radiation\n * - Increase shimmerSpeed for faster twinkling\n * - Adjust friction for longer/shorter rays\n */\n\nimport { selectWeightedColor } from '../utils/colorUtils.js';\nimport { PHYSICS } from '../config/physics.js';\n\n/**\n * Initialize radiant behavior for a particle\n * Sets up sunburst radiation pattern\n * \n * @param {Particle} particle - The particle to initialize\n */\nexport function initializeRadiant(particle) {\n    // Particles burst outward from center like sunbeams\n    const angle = Math.random() * PHYSICS.TWO_PI;\n    const speed = 0.8 + Math.random() * 0.4; // Moderate to fast speed\n    particle.vx = Math.cos(angle) * speed;\n    particle.vy = Math.sin(angle) * speed;\n    particle.lifeDecay = 0.006; // Moderate life - last ~8-10 seconds\n    \n    // Use emotion colors if provided, otherwise default sunrise colors\n    if (particle.emotionColors && particle.emotionColors.length > 0) {\n        particle.color = selectWeightedColor(particle.emotionColors);\n    } else {\n        // Default golden sunrise colors\n        const colors = ['#FFD700', '#FFB347', '#FFA500', '#FF69B4'];\n        particle.color = selectWeightedColor(colors);\n    }\n    \n    // More particles have glow for radiant effect\n    particle.hasGlow = Math.random() < 0.7; // 70% chance of glow\n    particle.glowSizeMultiplier = particle.hasGlow ? (1.5 + Math.random() * 0.5) : 0;\n    \n    particle.behaviorData = {\n        // Continuous outward radiation\n        radialSpeed: 0.02,        // Constant outward acceleration\n        shimmer: Math.random() * PHYSICS.TWO_PI, // Initial shimmer phase\n        shimmerSpeed: 0.1,        // Shimmer oscillation speed\n        friction: 0.99            // Very light friction for long rays\n    };\n}\n\n/**\n * Update radiant behavior - particles radiate outward like sun rays\n * \n * Used for: EUPHORIA emotion (first day of spring, sunrise vibes)\n * Visual effect: Particles burst outward from center like sunbeams, with a \n *                shimmering/twinkling effect as they travel\n * \n * @param {Particle} particle - The particle to update\n * @param {number} dt - Delta time (milliseconds since last frame, typically ~16.67 for 60fps)\n * @param {number} centerX - X coordinate of the orb's center (canvas center)\n * @param {number} centerY - Y coordinate of the orb's center (canvas center)\n */\nexport function updateRadiant(particle, dt, centerX, centerY) {\n    const data = particle.behaviorData;\n    \n    // STEP 1: Calculate this particle's direction from the orb center\n    // dx/dy = distance from center to particle (can be negative)\n    const dx = particle.x - centerX;\n    const dy = particle.y - centerY;\n    // dist = straight-line distance using Pythagorean theorem\n    const dist = Math.sqrt(dx * dx + dy * dy);\n    \n    // STEP 2: Push particle outward from center (like sun rays)\n    if (dist > 0) {\n        // Convert dx/dy into a unit vector (length = 1) pointing away from center\n        // This gives us pure direction without magnitude\n        const dirX = dx / dist;\n        const dirY = dy / dist;\n        \n        // Add velocity in the outward direction\n        // radialSpeed controls how fast particles shoot outward\n        // Multiply by dt to make movement frame-rate independent\n        particle.vx += dirX * data.radialSpeed * dt;\n        particle.vy += dirY * data.radialSpeed * dt;\n    }\n    \n    // STEP 3: Create shimmering effect (particles twinkle as they radiate)\n    // Increment shimmer phase over time (shimmerSpeed controls twinkle rate)\n    data.shimmer += data.shimmerSpeed * dt;\n    // Create sine wave oscillation (-1 to 1)\n    const shimmerEffect = Math.sin(data.shimmer);\n    // Make particle size pulse: baseSize ± 20%\n    particle.size = particle.baseSize * (1 + shimmerEffect * 0.2);\n    // Make particle opacity pulse: baseOpacity ± 30%\n    particle.opacity = particle.baseOpacity * (1 + shimmerEffect * 0.3);\n    \n    // STEP 4: Apply friction to slow particles over time\n    // This prevents infinite acceleration and creates natural deceleration\n    particle.vx *= Math.pow(data.friction, dt);\n    particle.vy *= Math.pow(data.friction, dt);\n}\n\n// Export behavior definition for registry\nexport default {\n    name: 'radiant',\n    emoji: '☀️',\n    description: 'Particles radiate outward like sunbeams',\n    initialize: initializeRadiant,\n    update: updateRadiant\n};","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE - Ascending Behavior\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Slow, steady upward float for zen and meditative states\n * @author Emotive Engine Team\n * @module particles/behaviors/ascending\n * \n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                                   PURPOSE                                         \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ Creates a zen atmosphere with particles rising like incense smoke. Slow, steady,  \n * ║ and ethereal movement that gradually fades as particles ascend.                   \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n *\n * VISUAL DIAGRAM:\n *        ↑\n *       ~~~        ← gentle wave motion\n *        ↑\n *       ~~~        ← like incense smoke\n *        ↑\n *      ⭐⭐⭐      ← orb center\n *        \n * \n * USED BY EMOTIONS:\n * - zen (deep meditation)\n * - contemplative\n * - spiritual\n * \n * RECIPE TO MODIFY:\n * - Decrease ascensionSpeed for slower rise\n * - Increase waveFactor for more horizontal drift\n * - Adjust fadeStartDistance to control when fade begins\n */\n\nimport { selectWeightedColor } from '../utils/colorUtils.js';\n\n/**\n * Initialize ascending behavior for a particle\n * Sets up slow, steady upward movement\n * \n * @param {Particle} particle - The particle to initialize\n */\nexport function initializeAscending(particle) {\n    // Very slow, steady upward movement\n    particle.vx = (Math.random() - 0.5) * 0.02;  // Minimal horizontal drift\n    particle.vy = -0.03 - Math.random() * 0.02;  // Slow upward movement (0.03-0.05)\n    particle.lifeDecay = 0.0008;  // Very long-lived particles (30+ seconds)\n    \n    // Larger, more ethereal particles for zen\n    particle.size = (6 + Math.random() * 6) * \n        (particle.scaleFactor || 1) * \n        (particle.particleSizeMultiplier || 1) * \n        1.33;  // 1.33x larger for zen (reduced from 2x)\n    particle.baseSize = particle.size;\n    particle.baseOpacity = 0.2 + Math.random() * 0.2;  // Very translucent (20-40%)\n    \n    // Use emotion colors if provided\n    if (particle.emotionColors && particle.emotionColors.length > 0) {\n        particle.color = selectWeightedColor(particle.emotionColors);\n    }\n    \n    particle.behaviorData = {\n        // Continuous gentle upward drift\n        ascensionSpeed: 0.0003,      // Very gentle continuous upward\n        waveFactor: 0.5,             // Subtle horizontal wave motion\n        waveFrequency: 0.001,        // Very slow wave oscillation\n        friction: 0.998,             // Almost no slowdown\n        fadeStartDistance: 100       // Start fading after rising 100px\n    };\n}\n\n/**\n * Update ascending behavior - slow upward float like incense\n * \n * Used for: ZEN/CONTEMPLATIVE emotions (meditation, spirituality)\n * Visual effect: Particles rise slowly and steadily with subtle wave motion,\n *                gradually fading as they ascend like incense smoke\n * \n * @param {Particle} particle - The particle to update\n * @param {number} dt - Delta time (milliseconds since last frame, typically ~16.67 for 60fps)\n * @param {number} centerX - X coordinate of the orb's center (unused)\n * @param {number} centerY - Y coordinate of the orb's center (unused)\n */\nexport function updateAscending(particle, dt, centerX, centerY) {\n    const data = particle.behaviorData;\n    \n    // Validate data exists\n    if (!data) {\n        initializeAscending(particle);\n        return;\n    }\n    \n    // STEP 1: Apply friction to velocities\n    // Very light friction to maintain smooth motion\n    // Math.pow ensures frame-rate independence\n    particle.vx *= Math.pow(data.friction, dt);\n    particle.vy *= Math.pow(data.friction, dt);\n    \n    // STEP 2: Add continuous upward ascension\n    // Negative because canvas Y increases downward\n    // Multiplied by dt for frame-rate independence\n    particle.vy -= data.ascensionSpeed * dt;\n    \n    // STEP 3: Add subtle wave motion for organic feel\n    // Creates the characteristic incense smoke waviness\n    // Age gives us time-based oscillation\n    const waveOffset = Math.sin(particle.age * data.waveFrequency * 1000) * data.waveFactor;\n    particle.vx += waveOffset * 0.001 * dt;\n    \n    // STEP 4: Track initial Y position for fade calculation\n    if (particle.initialY === undefined) {\n        particle.initialY = particle.y;\n    }\n    \n    // STEP 5: Calculate distance traveled upward\n    const distanceTraveled = particle.initialY - particle.y;\n    \n    // STEP 6: Start fading after traveling fadeStartDistance pixels\n    // This creates the incense smoke dissipation effect\n    if (distanceTraveled > data.fadeStartDistance) {\n        const fadeProgress = (distanceTraveled - data.fadeStartDistance) / 100;\n        const fadeFactor = Math.max(0, 1 - fadeProgress);\n        particle.baseOpacity *= 0.995;  // Gradual fade\n        \n        // Accelerate life decay as particle fades\n        if (fadeFactor < 0.5) {\n            particle.lifeDecay *= 1.02;\n        }\n    }\n    \n    // STEP 7: Dampen excessive horizontal movement\n    // Keeps the ascension primarily vertical\n    if (Math.abs(particle.vx) > 0.05) {\n        particle.vx *= Math.pow(0.95, dt);\n    }\n    \n    // STEP 8: Cap upward velocity for consistency\n    // Prevents particles from accelerating too much\n    if (particle.vy < -0.1) {\n        particle.vy = -0.1;\n    }\n}\n\n// Export behavior definition for registry\nexport default {\n    name: 'ascending',\n    emoji: '🧘',\n    description: 'Slow steady upward float like incense smoke',\n    initialize: initializeAscending,\n    update: updateAscending\n};","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE - Erratic Behavior\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Nervous, jittery movement for anxious states\n * @author Emotive Engine Team\n * @module particles/behaviors/erratic\n * \n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                                   PURPOSE                                         \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ Creates a nervous, unstable atmosphere with particles jittering and changing       \n * ║ direction unpredictably. Conveys anxiety, nervousness, and instability.           \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n *\n * VISUAL DIAGRAM:\n *    ↗↙↖  ↘↗\n *   ↙ ↗↘  ↖↙       ← unpredictable changes\n *  ↘↖ ⭐ ↗↙        ← jittery movement\n *   ↗ ↙↖  ↘↗       ← nervous energy\n *    ↙↗↘  ↖↙\n * \n * USED BY EMOTIONS:\n * - nervous (anxiety, jitters)\n * - unstable\n * - agitated\n * \n * RECIPE TO MODIFY:\n * - Increase jitterStrength for more shaking\n * - Increase directionChangeRate for more frequent changes\n * - Increase speedVariation for more erratic speed changes\n */\n\nimport { selectWeightedColor } from '../utils/colorUtils.js';\nimport { PHYSICS } from '../config/physics.js';\n\n/**\n * Initialize erratic behavior for a particle\n * Sets up nervous, jittery movement\n * \n * @param {Particle} particle - The particle to initialize\n */\nexport function initializeErratic(particle) {\n    // Random, chaotic initial direction\n    const angle = Math.random() * PHYSICS.TWO_PI;\n    const speed = 0.1 + Math.random() * 0.15;\n    particle.vx = Math.cos(angle) * speed;\n    particle.vy = Math.sin(angle) * speed;\n    particle.lifeDecay = 0.004;  // Shorter lived due to nervous energy\n    \n    particle.size = (2 + Math.random() * 4) * \n        (particle.scaleFactor || 1) * \n        (particle.particleSizeMultiplier || 1);  // Varied sizes scaled\n    particle.baseSize = particle.size;\n    particle.baseOpacity = 0.4 + Math.random() * 0.3;  // More visible\n    \n    // Use emotion colors if provided\n    if (particle.emotionColors && particle.emotionColors.length > 0) {\n        particle.color = selectWeightedColor(particle.emotionColors);\n    }\n    \n    particle.behaviorData = {\n        jitterStrength: 0.02,        // Random direction changes\n        directionChangeRate: 0.1,    // How often to change direction\n        speedVariation: 0.3,         // Speed changes randomly\n        spinRate: 0.05 + Math.random() * 0.1  // Particles spin\n    };\n}\n\n/**\n * Update erratic behavior - nervous, jittery movement\n * \n * Used for: NERVOUS/ANXIOUS emotions (anxiety, instability, agitation)\n * Visual effect: Particles jitter nervously, changing direction and speed\n *                unpredictably, creating an unstable atmosphere\n * \n * @param {Particle} particle - The particle to update\n * @param {number} dt - Delta time (milliseconds since last frame, typically ~16.67 for 60fps)\n * @param {number} centerX - X coordinate of the orb's center (unused)\n * @param {number} centerY - Y coordinate of the orb's center (unused)\n */\nexport function updateErratic(particle, dt) {\n    const data = particle.behaviorData;\n    \n    // STEP 1: Add constant jitter to movement\n    // Creates the nervous shaking effect\n    // (Math.random() - 0.5) gives values between -0.5 and 0.5\n    // Multiplied by jitterStrength and dt for controlled chaos\n    particle.vx += (Math.random() - 0.5) * data.jitterStrength * dt;\n    particle.vy += (Math.random() - 0.5) * data.jitterStrength * dt;\n    \n    // STEP 2: Randomly change direction occasionally\n    // Creates unpredictable movement patterns\n    // Math.min ensures probability doesn't exceed reasonable bounds\n    if (Math.random() < Math.min(data.directionChangeRate * dt, 0.5)) {\n        // Pick new random direction\n        const newAngle = Math.random() * PHYSICS.TWO_PI;\n        const currentSpeed = Math.sqrt(particle.vx * particle.vx + particle.vy * particle.vy);\n        \n        // Apply new direction while maintaining similar speed\n        particle.vx = Math.cos(newAngle) * currentSpeed;\n        particle.vy = Math.sin(newAngle) * currentSpeed;\n    }\n    \n    // STEP 3: Vary the speed randomly\n    // Creates erratic acceleration/deceleration\n    const speedMultiplier = 1 + (Math.random() - 0.5) * data.speedVariation * dt;\n    particle.vx *= speedMultiplier;\n    particle.vy *= speedMultiplier;\n    \n    // STEP 4: Apply spin to particle size\n    // Makes particles appear to rotate/vibrate\n    const spinPhase = particle.age * data.spinRate * 1000;\n    particle.size = particle.baseSize * (1 + Math.sin(spinPhase) * 0.2);\n    \n    // STEP 5: Fluctuate opacity nervously\n    // Creates a flickering effect\n    particle.opacity = particle.baseOpacity * (0.8 + Math.random() * 0.4);\n    \n    // STEP 6: Apply damping to prevent infinite acceleration\n    // Keeps movement bounded\n    particle.vx *= Math.pow(0.98, dt);\n    particle.vy *= Math.pow(0.98, dt);\n    \n    // STEP 7: Cap maximum velocity\n    // Prevents particles from moving too fast\n    const speed = Math.sqrt(particle.vx * particle.vx + particle.vy * particle.vy);\n    if (speed > 0.5) {\n        particle.vx = (particle.vx / speed) * 0.5;\n        particle.vy = (particle.vy / speed) * 0.5;\n    }\n}\n\n// Export behavior definition for registry\nexport default {\n    name: 'erratic',\n    emoji: '😰',\n    description: 'Nervous jittery movement for anxious states',\n    initialize: initializeErratic,\n    update: updateErratic\n};","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE - Cautious Behavior\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Slow, careful movement with pauses for suspicious states\n * @author Emotive Engine Team\n * @module particles/behaviors/cautious\n * \n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                                   PURPOSE                                         \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ Creates a watchful, suspicious atmosphere with particles moving slowly and         \n * ║ pausing frequently, as if carefully observing. Like being on guard.               \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n *\n * VISUAL DIAGRAM:\n *    · → · STOP\n *   STOP ← ·        ← move, then pause\n *    · ⭐ ·         ← watching center\n *   · STOP →        ← pause, then move\n *    STOP · ← ·\n * \n * USED BY EMOTIONS:\n * - suspicion (watchful, guarded)\n * - uncertainty\n * - wariness\n * \n * RECIPE TO MODIFY:\n * - Increase pauseDuration for longer stops\n * - Decrease moveDuration for shorter movements\n * - Adjust watchRadius to control patrol area\n */\n\nimport { selectWeightedColor } from '../utils/colorUtils.js';\nimport { PHYSICS } from '../config/physics.js';\n\n/**\n * Initialize cautious behavior for a particle\n * Sets up slow, deliberate movement patterns\n * \n * @param {Particle} particle - The particle to initialize\n */\nexport function initializeCautious(particle) {\n    // Particles move very slowly and deliberately\n    const angle = Math.random() * PHYSICS.TWO_PI;\n    const speed = 0.02 + Math.random() * 0.03; // Very slow: 0.02-0.05 units/frame\n    particle.vx = Math.cos(angle) * speed;\n    particle.vy = Math.sin(angle) * speed;\n    particle.lifeDecay = 0.001;  // Very long-lived for visibility\n    particle.life = 1.0;  // Ensure full life\n    \n    particle.size = (4 + Math.random() * 4) * \n        (particle.scaleFactor || 1) * \n        (particle.particleSizeMultiplier || 1);\n    particle.baseSize = particle.size;\n    particle.baseOpacity = 0.8 + Math.random() * 0.2;  // Very visible (80-100%)\n    particle.opacity = particle.baseOpacity;\n    \n    // Use emotion colors if provided\n    if (particle.emotionColors && particle.emotionColors.length > 0) {\n        particle.color = selectWeightedColor(particle.emotionColors);\n    }\n    \n    particle.behaviorData = {\n        pauseTimer: Math.random() * 2,      // Start with random pause offset\n        pauseDuration: 0.5 + Math.random() * 0.5,  // Pause for 0.5-1s\n        moveDuration: 1 + Math.random() * 0.5,     // Move for 1-1.5s\n        isMoving: Math.random() > 0.5,             // Randomly start moving or paused\n        moveTimer: 0,\n        originalVx: particle.vx,\n        originalVy: particle.vy,\n        watchRadius: 50 + Math.random() * 30       // Stay within 50-80 units of core\n    };\n}\n\n/**\n * Update cautious behavior - slow movement with frequent pauses\n * \n * Used for: SUSPICION/UNCERTAINTY emotions (watchful, guarded, wary)\n * Visual effect: Particles move slowly and deliberately, pausing frequently\n *                as if carefully observing their surroundings\n * \n * @param {Particle} particle - The particle to update\n * @param {number} dt - Delta time (milliseconds since last frame, typically ~16.67 for 60fps)\n * @param {number} centerX - X coordinate of the orb's center\n * @param {number} centerY - Y coordinate of the orb's center\n */\nexport function updateCautious(particle, dt, centerX, centerY) {\n    const data = particle.behaviorData;\n    \n    // STEP 1: Update movement timer\n    // Tracks how long we've been in current state (moving or paused)\n    data.moveTimer += dt;\n    \n    // STEP 2: Switch between moving and pausing states\n    if (data.isMoving) {\n        // Currently moving - check if time to pause\n        if (data.moveTimer > data.moveDuration) {\n            data.isMoving = false;\n            data.moveTimer = 0;\n            // Stop movement during pause (watchful stillness)\n            particle.vx = 0;\n            particle.vy = 0;\n        } else {\n            // Continue moving at cautious speed\n            particle.vx = data.originalVx;\n            particle.vy = data.originalVy;\n        }\n    } else {\n        // Currently paused - check if time to move\n        if (data.moveTimer > data.pauseDuration) {\n            data.isMoving = true;\n            data.moveTimer = 0;\n            // Pick a new careful direction\n            const angle = Math.random() * PHYSICS.TWO_PI;\n            const speed = 0.02 + Math.random() * 0.03;\n            particle.vx = Math.cos(angle) * speed;\n            particle.vy = Math.sin(angle) * speed;\n            // Store for next movement phase\n            data.originalVx = particle.vx;\n            data.originalVy = particle.vy;\n        }\n    }\n    \n    // STEP 3: Keep particles within watch radius of core\n    // They're suspicious, so they don't stray too far\n    const dx = particle.x - centerX;\n    const dy = particle.y - centerY;\n    const dist = Math.sqrt(dx * dx + dy * dy);\n    \n    if (dist > data.watchRadius) {\n        // Pull back towards core slowly (maintaining caution)\n        const pullStrength = 0.02;\n        particle.vx -= (dx / dist) * pullStrength * dt;\n        particle.vy -= (dy / dist) * pullStrength * dt;\n    }\n    \n    // STEP 4: Apply very light damping\n    // Keeps movement controlled and deliberate\n    particle.vx *= Math.pow(0.995, dt);\n    particle.vy *= Math.pow(0.995, dt);\n    \n    // STEP 5: Subtle opacity flicker during pauses\n    // Creates a watchful \"blinking\" effect\n    if (!data.isMoving) {\n        particle.opacity = particle.baseOpacity * (0.9 + Math.sin(particle.age * 5) * 0.1);\n    } else {\n        particle.opacity = particle.baseOpacity;\n    }\n}\n\n// Export behavior definition for registry\nexport default {\n    name: 'cautious',\n    emoji: '🤨',\n    description: 'Slow careful movement with watchful pauses',\n    initialize: initializeCautious,\n    update: updateCautious\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Surveillance Behavior\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Searchlight scanning behavior for suspicious/paranoid states\r\n * @author Emotive Engine Team\r\n * @module particles/behaviors/surveillance\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ CONCEPT                                                                           \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ Particles act like searchlights or surveillance cameras, slowly scanning back     \r\n * ║ and forth in arcs, pausing at edges, occasionally darting to new positions.       \r\n * ║ Creates a paranoid, watchful atmosphere with deliberate, searching movements.     \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n * \r\n * BEHAVIOR PATTERN:\r\n * • Slow horizontal scanning arcs (like searchlights)\r\n * • Pause at scan extremes (checking corners)\r\n * • Occasional quick darts to new positions (alert response)\r\n * • Some particles patrol perimeter (edge surveillance)\r\n * • Random freezing in place (listening/watching)\r\n * \r\n * ┌──────────────────────────────────────────────────────────────────────────────────┐\r\n * │  VISUAL: Searchlight Scanning                                                    │\r\n * │                                                                                   │\r\n * │     ←─────────────→  (slow scan)                                                │\r\n * │    •               •                                                             │\r\n * │                                                                                   │\r\n * │   pause...     ...pause                                                         │\r\n * │                                                                                   │\r\n * │     DART! ──→ • (quick repositioning)                                          │\r\n * └──────────────────────────────────────────────────────────────────────────────────┘\r\n */\r\n\r\nimport { selectWeightedColor } from '../utils/colorUtils.js';\r\n\r\nexport default {\r\n    name: 'surveillance',\r\n    emoji: '👁️',\r\n    description: 'Searchlight scanning with paranoid watchfulness',\r\n    \r\n    /**\r\n     * Initialize particle state for surveillance behavior\r\n     */\r\n    initialize: function(particle, config) {\r\n        // Set particle color from emotion palette\r\n        if (particle.emotionColors && particle.emotionColors.length > 0) {\r\n            particle.color = selectWeightedColor(particle.emotionColors);\r\n        }\r\n        \r\n        particle.behaviorState = {\r\n            // Scanning properties\r\n            scanAngle: Math.random() * Math.PI - Math.PI/2,  // Current scan angle\r\n            scanDirection: Math.random() < 0.5 ? 1 : -1,      // Scan direction\r\n            scanSpeed: 0.3 + Math.random() * 0.2,             // Individual scan rate\r\n            scanRange: Math.PI/3 + Math.random() * Math.PI/4, // Scan arc size\r\n            scanCenter: Math.random() * Math.PI * 2,          // Center of scan arc\r\n            pauseTimer: 0,                                     // Pause at edges\r\n            pauseDuration: 500 + Math.random() * 500,         // How long to pause\r\n            \r\n            // Movement states\r\n            mode: 'scanning',  // 'scanning', 'darting', 'frozen', 'patrolling'\r\n            modeTimer: 0,\r\n            nextModeChange: 2000 + Math.random() * 3000,\r\n            \r\n            // Dart properties\r\n            dartTarget: { x: 0, y: 0 },\r\n            dartSpeed: 0,\r\n            \r\n            // Patrol properties\r\n            patrolRadius: 150 + Math.random() * 100,\r\n            patrolAngle: Math.random() * Math.PI * 2,\r\n            \r\n            // Threat response\r\n            alertLevel: 0,\r\n            lastPosition: { x: particle.x, y: particle.y }\r\n        };\r\n        \r\n        // Assign roles: 70% scanners, 20% patrollers, 10% watchers\r\n        const role = Math.random();\r\n        if (role < 0.7) {\r\n            particle.behaviorState.primaryRole = 'scanner';\r\n        } else if (role < 0.9) {\r\n            particle.behaviorState.primaryRole = 'patroller';\r\n            particle.behaviorState.mode = 'patrolling';\r\n        } else {\r\n            particle.behaviorState.primaryRole = 'watcher';\r\n            particle.behaviorState.mode = 'frozen';\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Update particle physics for surveillance behavior\r\n     */\r\n    update: function(particle, dt, config) {\r\n        const state = particle.behaviorState;\r\n        if (!state) return;\r\n        \r\n        // Update mode timer\r\n        state.modeTimer += dt * 16;\r\n        \r\n        // Check for mode changes\r\n        if (state.modeTimer > state.nextModeChange) {\r\n            this.changeMode(particle, state);\r\n            state.modeTimer = 0;\r\n            state.nextModeChange = 2000 + Math.random() * 4000;\r\n        }\r\n        \r\n        // Update based on current mode\r\n        switch(state.mode) {\r\n            case 'scanning':\r\n                this.updateScanning(particle, dt, state, config);\r\n                break;\r\n            case 'darting':\r\n                this.updateDarting(particle, dt, state, config);\r\n                break;\r\n            case 'frozen':\r\n                this.updateFrozen(particle, dt, state, config);\r\n                break;\r\n            case 'patrolling':\r\n                this.updatePatrolling(particle, dt, state, config);\r\n                break;\r\n        }\r\n        \r\n        // Apply slight downward drift for weight\r\n        particle.vy += 0.05 * dt;\r\n        \r\n        // Update position\r\n        particle.x += particle.vx * dt;\r\n        particle.y += particle.vy * dt;\r\n        \r\n        // Store last position\r\n        state.lastPosition.x = particle.x;\r\n        state.lastPosition.y = particle.y;\r\n    },\r\n    \r\n    /**\r\n     * Scanning mode - slow searchlight sweeps\r\n     */\r\n    updateScanning: function(particle, dt, state, config) {\r\n        // Update scan angle\r\n        if (state.pauseTimer > 0) {\r\n            // Pausing at edge of scan\r\n            state.pauseTimer -= dt * 16;\r\n            particle.vx *= 0.9;  // Slow down during pause\r\n            particle.vy *= 0.9;\r\n        } else {\r\n            // Active scanning\r\n            state.scanAngle += state.scanDirection * state.scanSpeed * dt * 0.02;\r\n            \r\n            // Check scan limits and pause at edges\r\n            if (Math.abs(state.scanAngle) > state.scanRange / 2) {\r\n                state.scanDirection *= -1;\r\n                state.pauseTimer = state.pauseDuration;\r\n                state.scanAngle = Math.sign(state.scanAngle) * state.scanRange / 2;\r\n            }\r\n        }\r\n        \r\n        // Apply scanning motion\r\n        const actualAngle = state.scanCenter + state.scanAngle;\r\n        const speed = 0.8 + state.alertLevel * 0.5;\r\n        particle.vx = Math.cos(actualAngle) * speed;\r\n        particle.vy = Math.sin(actualAngle) * speed * 0.3;  // Less vertical movement\r\n    },\r\n    \r\n    /**\r\n     * Darting mode - quick repositioning\r\n     */\r\n    updateDarting: function(particle, dt, state, config) {\r\n        const dx = state.dartTarget.x - particle.x;\r\n        const dy = state.dartTarget.y - particle.y;\r\n        const distance = Math.sqrt(dx * dx + dy * dy);\r\n        \r\n        if (distance > 5) {\r\n            // Move toward dart target quickly\r\n            particle.vx = (dx / distance) * state.dartSpeed;\r\n            particle.vy = (dy / distance) * state.dartSpeed;\r\n        } else {\r\n            // Reached target, switch back to scanning\r\n            state.mode = 'scanning';\r\n            state.modeTimer = 0;\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Frozen mode - watchful stillness\r\n     */\r\n    updateFrozen: function(particle, dt, state, config) {\r\n        // Almost no movement, just tiny vibrations\r\n        particle.vx *= 0.95;\r\n        particle.vy *= 0.95;\r\n        \r\n        // Occasional tiny twitch\r\n        if (Math.random() < 0.01) {\r\n            particle.vx += (Math.random() - 0.5) * 0.5;\r\n            particle.vy += (Math.random() - 0.5) * 0.5;\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Patrolling mode - edge surveillance\r\n     */\r\n    updatePatrolling: function(particle, dt, state, config) {\r\n        // Patrol in a circle around the edge\r\n        state.patrolAngle += 0.01 * dt;\r\n        \r\n        const targetX = Math.cos(state.patrolAngle) * state.patrolRadius;\r\n        const targetY = Math.sin(state.patrolAngle) * state.patrolRadius;\r\n        \r\n        // Move toward patrol position\r\n        const dx = targetX - particle.x;\r\n        const dy = targetY - particle.y;\r\n        \r\n        particle.vx = dx * 0.02;\r\n        particle.vy = dy * 0.02;\r\n    },\r\n    \r\n    /**\r\n     * Change behavior mode\r\n     */\r\n    changeMode: function(particle, state) {\r\n        const rand = Math.random();\r\n        \r\n        // Mode transition probabilities based on role\r\n        if (state.primaryRole === 'scanner') {\r\n            if (rand < 0.1) {\r\n                // Dart to new position\r\n                state.mode = 'darting';\r\n                state.dartTarget = {\r\n                    x: (Math.random() - 0.5) * 200,\r\n                    y: (Math.random() - 0.5) * 200\r\n                };\r\n                state.dartSpeed = 3 + Math.random() * 2;\r\n            } else if (rand < 0.2) {\r\n                // Freeze and watch\r\n                state.mode = 'frozen';\r\n            } else {\r\n                // Continue scanning\r\n                state.mode = 'scanning';\r\n            }\r\n        } else if (state.primaryRole === 'patroller') {\r\n            if (rand < 0.1) {\r\n                state.mode = 'frozen';\r\n            } else {\r\n                state.mode = 'patrolling';\r\n            }\r\n        } else {\r\n            // Watcher role\r\n            if (rand < 0.3) {\r\n                state.mode = 'scanning';\r\n            } else {\r\n                state.mode = 'frozen';\r\n            }\r\n        }\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Glitchy Behavior\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Digital glitch behavior with stuttering orbits and corruption\r\n * @author Emotive Engine Team\r\n * @module particles/behaviors/glitchy\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ CONCEPT                                                                           \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ Particles orbit like in love state but with digital glitches, stutters, and      \r\n * ║ corruption artifacts. Creates a captivating dubstep-like visual rhythm.           \r\n * ║ Combines smooth orbiting with sudden position jumps and digital artifacts.        \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n * \r\n * BEHAVIOR PATTERN:\r\n * • Base orbiting motion (like love state)\r\n * • Random position jumps (teleportation glitches)\r\n * • Stuttering/freezing (frame drops)\r\n * • Trail duplication (ghosting artifacts)\r\n * • RGB channel separation\r\n * • Digital noise bursts\r\n * \r\n * ┌──────────────────────────────────────────────────────────────────────────────────┐\r\n * │  VISUAL: Glitched Orbiting                                                       │\r\n * │                                                                                   │\r\n * │       ░░▒▒▓▓█  ←─ Digital trail                                                 │\r\n * │     •  ┊  •                                                                      │\r\n * │   •┊  ⚡  ┊•  ←─ Glitch jump                                                    │\r\n * │     •  ┊  •                                                                      │\r\n * │       ░░▒▒▓▓█                                                                    │\r\n * └──────────────────────────────────────────────────────────────────────────────────┘\r\n */\r\n\r\nimport { selectWeightedColor } from '../utils/colorUtils.js';\r\n\r\nexport default {\r\n    name: 'glitchy',\r\n    emoji: '⚡',\r\n    description: 'Digital glitch with stuttering orbits and corruption',\r\n    \r\n    // Rhythm configuration for glitchy behavior\r\n    rhythm: {\r\n        enabled: true,\r\n        \r\n        // Glitch events sync to rhythm\r\n        glitchTiming: {\r\n            mode: 'subdivision',     // Glitch on subdivisions\r\n            subdivision: 'sixteenth', // 16th notes for rapid glitches\r\n            probability: 0.3,        // 30% chance on each 16th\r\n            intensityOnBeat: 2.0,    // Stronger glitches on beat\r\n            intensityOffBeat: 0.5    // Weaker between beats\r\n        },\r\n        \r\n        // Stutter/freeze timing\r\n        stutterSync: {\r\n            mode: 'pattern',         // Based on rhythm pattern\r\n            patterns: {\r\n                'dubstep': {\r\n                    freezeOnDrop: true,  // Freeze on the drop (beat 3)\r\n                    dropDuration: 100    // Freeze for 100ms\r\n                },\r\n                'breakbeat': {\r\n                    randomFreeze: 0.1,   // 10% chance per beat\r\n                    duration: 50         // Short 50ms freezes\r\n                }\r\n            }\r\n        },\r\n        \r\n        // Orbital speed modulation\r\n        orbitRhythm: {\r\n            baseSpeed: 'tempo',      // Speed scales with BPM\r\n            wobbleSync: 'eighth',    // Wobble on 8th notes\r\n            beatAcceleration: 1.5,   // Speed boost on beat\r\n            barReset: true           // Reset orbit angle each bar\r\n        },\r\n        \r\n        // RGB split effect rhythm\r\n        rgbSync: {\r\n            enabled: true,\r\n            amount: 'intensity',     // Split based on musical intensity\r\n            direction: 'beat',        // Change split direction on beat\r\n            maxSplit: 10             // Maximum pixel split\r\n        },\r\n        \r\n        // Digital noise bursts\r\n        noiseRhythm: {\r\n            trigger: 'accent',       // Noise on accented beats\r\n            duration: 50,            // 50ms noise bursts\r\n            intensity: 'drop'        // Scale with drop intensity\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Initialize particle state for glitchy behavior\r\n     */\r\n    initialize: function(particle, config, centerX, centerY) {\r\n        // Set particle color from emotion palette\r\n        if (particle.emotionColors && particle.emotionColors.length > 0) {\r\n            particle.color = selectWeightedColor(particle.emotionColors);\r\n        }\r\n        \r\n        particle.behaviorState = {\r\n            // Orbital properties (tighter orbit to stay centered)\r\n            orbitAngle: Math.random() * Math.PI * 2,\r\n            orbitRadius: 30 + Math.random() * 40,  // Reduced from 40-120 to 30-70\r\n            orbitSpeed: 0.01 + Math.random() * 0.02,\r\n            \r\n            // Glitch properties\r\n            glitchTimer: 0,\r\n            nextGlitch: Math.random() * 500 + 100,\r\n            isGlitching: false,\r\n            glitchDuration: 0,\r\n            glitchOffset: { x: 0, y: 0 },\r\n            \r\n            // Stutter properties\r\n            stutterTimer: 0,\r\n            nextStutter: Math.random() * 200 + 50,\r\n            isFrozen: false,\r\n            frozenPosition: { x: 0, y: 0 },\r\n            frozenVelocity: { x: 0, y: 0 },\r\n            \r\n            // Trail ghost properties\r\n            hasGhost: Math.random() < 0.3,\r\n            ghostOffset: Math.random() * 20 + 10,\r\n            ghostAngle: Math.random() * Math.PI * 2,\r\n            \r\n            // RGB separation\r\n            rgbSplit: Math.random() < 0.4,\r\n            rgbPhase: Math.random() * Math.PI * 2,\r\n            \r\n            // Digital noise\r\n            noiseLevel: 0,\r\n            noiseBurst: false,\r\n            \r\n            // Dubstep rhythm sync\r\n            beatPhase: Math.random() * Math.PI * 2,\r\n            beatFrequency: 0.05 + Math.random() * 0.03,\r\n            dropIntensity: 0\r\n        };\r\n        \r\n        // Special properties for glitch\r\n        particle.lifeDecay = 0.0015; // Slower decay for trails\r\n        particle.hasGlow = Math.random() < 0.5; // More glow for digital effect\r\n        if (particle.hasGlow) {\r\n            particle.glowSizeMultiplier = 2.0 + Math.random(); // Bigger glows\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Update particle physics for glitchy behavior\r\n     */\r\n    update: function(particle, dt, centerX, centerY) {\r\n        const state = particle.behaviorState;\r\n        if (!state) return;\r\n        \r\n        // centerX and centerY are passed correctly from updateBehavior\r\n        // No need for fallbacks - they should always be provided\r\n        \r\n        // Update timers\r\n        state.glitchTimer += dt * 16;\r\n        state.stutterTimer += dt * 16;\r\n        \r\n        // Check for stutter/freeze\r\n        if (state.stutterTimer > state.nextStutter) {\r\n            if (!state.isFrozen) {\r\n                // Start freeze\r\n                state.isFrozen = true;\r\n                state.frozenPosition = { x: particle.x, y: particle.y };\r\n                state.frozenVelocity = { x: particle.vx, y: particle.vy };\r\n                state.stutterTimer = 0;\r\n                state.nextStutter = 20 + Math.random() * 40; // Short freeze\r\n            } else {\r\n                // End freeze\r\n                state.isFrozen = false;\r\n                state.stutterTimer = 0;\r\n                state.nextStutter = 100 + Math.random() * 300;\r\n                \r\n                // Sometimes jump on unfreeze (smaller jumps to stay centered)\r\n                if (Math.random() < 0.3) {\r\n                    particle.x += (Math.random() - 0.5) * 20;  // Reduced from 50\r\n                    particle.y += (Math.random() - 0.5) * 20;  // Reduced from 50\r\n                }\r\n            }\r\n        }\r\n        \r\n        // Check for glitch events\r\n        if (state.glitchTimer > state.nextGlitch && !state.isGlitching) {\r\n            state.isGlitching = true;\r\n            state.glitchDuration = 50 + Math.random() * 100;\r\n            state.glitchOffset = {\r\n                x: (Math.random() - 0.5) * 30,  // Reduced from 100 to keep particles closer\r\n                y: (Math.random() - 0.5) * 30   // Reduced from 100 to keep particles closer\r\n            };\r\n            state.glitchTimer = 0;\r\n            \r\n            // Change color during glitch\r\n            if (Math.random() < 0.5 && particle.emotionColors) {\r\n                particle.color = selectWeightedColor(particle.emotionColors);\r\n            }\r\n        }\r\n        \r\n        // End glitch\r\n        if (state.isGlitching && state.glitchTimer > state.glitchDuration) {\r\n            state.isGlitching = false;\r\n            state.glitchTimer = 0;\r\n            state.nextGlitch = 200 + Math.random() * 800;\r\n            state.glitchOffset = { x: 0, y: 0 };\r\n        }\r\n        \r\n        // Update beat phase for dubstep rhythm\r\n        state.beatPhase += state.beatFrequency * dt;\r\n        const beatIntensity = Math.sin(state.beatPhase) * 0.5 + 0.5;\r\n        \r\n        // Calculate drop intensity (periodic bass drops)\r\n        const dropCycle = state.beatPhase % (Math.PI * 4);\r\n        if (dropCycle < Math.PI * 0.5) {\r\n            state.dropIntensity = Math.min(1, state.dropIntensity + dt * 0.1);\r\n        } else {\r\n            state.dropIntensity = Math.max(0, state.dropIntensity - dt * 0.05);\r\n        }\r\n        \r\n        if (!state.isFrozen) {\r\n            // Update orbital position with beat modulation\r\n            state.orbitAngle += state.orbitSpeed * dt * (1 + beatIntensity * 0.5);\r\n            \r\n            // Add drop wobble\r\n            const wobbleRadius = state.orbitRadius * (1 + state.dropIntensity * 0.3 * Math.sin(state.beatPhase * 4));\r\n            \r\n            // Calculate target position relative to center\r\n            let targetX = centerX + Math.cos(state.orbitAngle) * wobbleRadius;\r\n            let targetY = centerY + Math.sin(state.orbitAngle) * wobbleRadius * 0.6; // Elliptical\r\n            \r\n            // Apply glitch offset (smaller random factor to stay closer)\r\n            if (state.isGlitching) {\r\n                targetX += state.glitchOffset.x * Math.random() * 0.5;  // Reduced effect\r\n                targetY += state.glitchOffset.y * Math.random() * 0.5;  // Reduced effect\r\n            }\r\n            \r\n            // RGB split effect\r\n            if (state.rgbSplit) {\r\n                const splitAmount = 3 * (1 + state.dropIntensity);\r\n                targetX += Math.sin(state.rgbPhase) * splitAmount;\r\n                targetY += Math.cos(state.rgbPhase) * splitAmount;\r\n                state.rgbPhase += 0.1 * dt;\r\n            }\r\n            \r\n            // Digital noise bursts on drops (smaller to stay centered)\r\n            if (state.dropIntensity > 0.8 && Math.random() < 0.1) {\r\n                targetX += (Math.random() - 0.5) * 10;  // Reduced from 20\r\n                targetY += (Math.random() - 0.5) * 10;  // Reduced from 20\r\n            }\r\n            \r\n            // Stronger pull to center to prevent wandering\r\n            const smoothing = state.isGlitching ? 0.05 : 0.08;  // Increased from 0.02/0.05\r\n            particle.vx = (targetX - particle.x) * smoothing;\r\n            particle.vy = (targetY - particle.y) * smoothing;\r\n            \r\n            // Add jitter based on beat\r\n            particle.vx += (Math.random() - 0.5) * beatIntensity * 2;\r\n            particle.vy += (Math.random() - 0.5) * beatIntensity * 2;\r\n            \r\n        } else {\r\n            // Frozen - vibrate in place\r\n            particle.vx = (Math.random() - 0.5) * 0.5;\r\n            particle.vy = (Math.random() - 0.5) * 0.5;\r\n        }\r\n        \r\n        // Apply velocity\r\n        particle.x += particle.vx * dt;\r\n        particle.y += particle.vy * dt;\r\n        \r\n        // Flicker opacity for digital effect\r\n        if (Math.random() < 0.02) {\r\n            particle.opacity = 0.1 + Math.random() * 0.9;\r\n        }\r\n        \r\n        // Size pulsing with beat\r\n        particle.size = particle.baseSize * (1 + beatIntensity * 0.3 + state.dropIntensity * 0.5);\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Directed Particle Behavior\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Directed behavior - particles move in focused, straight paths\r\n * @author Emotive Engine Team\r\n * @module particles/behaviors/directed\r\n */\r\n\r\n/**\r\n * DIRECTED BEHAVIOR - FOCUSED STRAIGHT PATHS\r\n * Used by: focused emotion\r\n * \r\n * Particles move in deliberate, straight lines toward a target or direction,\r\n * representing intense concentration and focus.\r\n */\r\nexport default {\r\n    name: 'directed',\r\n    emoji: '🎯',\r\n    description: 'Focused, straight-line movement toward target',\r\n    \r\n    // ┌─────────────────────────────────────────────────────────────────────────────────\r\n    // │ CONFIGURATION\r\n    // └─────────────────────────────────────────────────────────────────────────────────\r\n    config: {\r\n        speed: 3.0,              // Fast movement\r\n        acceleration: 0.15,      // Quick acceleration\r\n        focusStrength: 0.8,      // Strong pull toward target\r\n        randomness: 0.1,         // Minimal deviation\r\n        edgeBuffer: 50           // Buffer from canvas edges\r\n    },\r\n    \r\n    // ┌─────────────────────────────────────────────────────────────────────────────────\r\n    // │ INITIALIZATION\r\n    // └─────────────────────────────────────────────────────────────────────────────────\r\n    initialize(particle, centerX, centerY, canvasWidth, canvasHeight) {\r\n        // Set initial direction toward center\r\n        const dx = centerX - particle.x;\r\n        const dy = centerY - particle.y;\r\n        const distance = Math.sqrt(dx * dx + dy * dy);\r\n        \r\n        if (distance > 0) {\r\n            particle.vx = (dx / distance) * this.config.speed;\r\n            particle.vy = (dy / distance) * this.config.speed;\r\n        } else {\r\n            // Random initial direction if at center\r\n            const angle = Math.random() * Math.PI * 2;\r\n            particle.vx = Math.cos(angle) * this.config.speed;\r\n            particle.vy = Math.sin(angle) * this.config.speed;\r\n        }\r\n        \r\n        // Store target position\r\n        particle.targetX = centerX;\r\n        particle.targetY = centerY;\r\n        particle.directedPhase = 0;\r\n    },\r\n    \r\n    // ┌─────────────────────────────────────────────────────────────────────────────────\r\n    // │ UPDATE LOOP\r\n    // └─────────────────────────────────────────────────────────────────────────────────\r\n    update(particle, dt, centerX, centerY, canvasWidth, canvasHeight) {\r\n        // Update phase for variation\r\n        particle.directedPhase += dt * 0.05;\r\n        \r\n        // Calculate direction to target\r\n        const dx = particle.targetX - particle.x;\r\n        const dy = particle.targetY - particle.y;\r\n        const distance = Math.sqrt(dx * dx + dy * dy);\r\n        \r\n        if (distance > 10) {\r\n            // Move toward target with focus strength\r\n            const targetVx = (dx / distance) * this.config.speed;\r\n            const targetVy = (dy / distance) * this.config.speed;\r\n            \r\n            // Apply acceleration toward target velocity\r\n            particle.vx += (targetVx - particle.vx) * this.config.acceleration * dt;\r\n            particle.vy += (targetVy - particle.vy) * this.config.acceleration * dt;\r\n            \r\n            // Add minimal randomness for organic feel\r\n            particle.vx += (Math.random() - 0.5) * this.config.randomness;\r\n            particle.vy += (Math.random() - 0.5) * this.config.randomness;\r\n        } else {\r\n            // Near target, pick new target\r\n            const angle = Math.random() * Math.PI * 2;\r\n            const radius = 100 + Math.random() * 200;\r\n            particle.targetX = centerX + Math.cos(angle) * radius;\r\n            particle.targetY = centerY + Math.sin(angle) * radius;\r\n            \r\n            // Keep within canvas bounds\r\n            particle.targetX = Math.max(this.config.edgeBuffer, \r\n                              Math.min(canvasWidth - this.config.edgeBuffer, particle.targetX));\r\n            particle.targetY = Math.max(this.config.edgeBuffer, \r\n                              Math.min(canvasHeight - this.config.edgeBuffer, particle.targetY));\r\n        }\r\n        \r\n        // Apply velocity\r\n        particle.x += particle.vx * dt;\r\n        particle.y += particle.vy * dt;\r\n        \r\n        // Edge bouncing with dampening\r\n        if (particle.x <= 0 || particle.x >= canvasWidth) {\r\n            particle.vx *= -0.8;\r\n            particle.x = Math.max(0, Math.min(canvasWidth, particle.x));\r\n            // Pick new target after bounce\r\n            particle.targetX = centerX + (Math.random() - 0.5) * 300;\r\n        }\r\n        if (particle.y <= 0 || particle.y >= canvasHeight) {\r\n            particle.vy *= -0.8;\r\n            particle.y = Math.max(0, Math.min(canvasHeight, particle.y));\r\n            // Pick new target after bounce\r\n            particle.targetY = centerY + (Math.random() - 0.5) * 300;\r\n        }\r\n    },\r\n    \r\n    // ┌─────────────────────────────────────────────────────────────────────────────────\r\n    // │ VISUAL CHARACTERISTICS\r\n    // └─────────────────────────────────────────────────────────────────────────────────\r\n    visuals: {\r\n        trailLength: 'medium',      // Medium trail for motion clarity\r\n        opacity: 0.9,               // High opacity for focus\r\n        sizeMultiplier: 1.0,        // Standard size\r\n        blurAmount: 0.2             // Sharp, focused appearance\r\n    }\r\n};","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE - Fizzy Particle Behavior\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Fizzy behavior - bubbly, effervescent particle movement\n * @author Emotive Engine Team\n * @module particles/behaviors/fizzy\n */\n\n/**\n * FIZZY BEHAVIOR - BUBBLY EFFERVESCENCE\n * Used by: excited emotion\n * \n * Particles bubble upward with random pops and fizz, like carbonation in soda.\n * Creates an energetic, celebratory atmosphere.\n */\nexport default {\n    name: 'fizzy',\n    emoji: '🫧',\n    description: 'Bubbly, effervescent movement like carbonation',\n    \n    // ┌─────────────────────────────────────────────────────────────────────────────────\n    // │ CONFIGURATION\n    // └─────────────────────────────────────────────────────────────────────────────────\n    config: {\n        baseRiseSpeed: 2.5,      // Base upward velocity\n        wobbleAmplitude: 30,     // Horizontal wobble range\n        wobbleFrequency: 0.15,   // Wobble oscillation speed\n        popChance: 0.002,        // Chance to \"pop\" per frame\n        popForce: 8,             // Force of pop burst\n        fizziness: 0.3,          // Random velocity variation\n        gravity: -0.05           // Slight upward bias\n    },\n    \n    // ┌─────────────────────────────────────────────────────────────────────────────────\n    // │ INITIALIZATION\n    // └─────────────────────────────────────────────────────────────────────────────────\n    initialize(particle, centerX, centerY, canvasWidth, canvasHeight) {\n        // Start with upward velocity\n        particle.vx = (Math.random() - 0.5) * 2;\n        particle.vy = -this.config.baseRiseSpeed - Math.random() * 2;\n        \n        // Fizzy properties\n        particle.wobblePhase = Math.random() * Math.PI * 2;\n        particle.wobbleSpeed = this.config.wobbleFrequency * (0.8 + Math.random() * 0.4);\n        particle.bubbleSize = 0.5 + Math.random() * 0.5;\n        particle.popTimer = 0;\n        particle.isFizzing = true;\n    },\n    \n    // ┌─────────────────────────────────────────────────────────────────────────────────\n    // │ UPDATE LOOP\n    // └─────────────────────────────────────────────────────────────────────────────────\n    update(particle, dt, centerX, centerY, canvasWidth, canvasHeight) {\n        // Update wobble phase\n        particle.wobblePhase += particle.wobbleSpeed * dt;\n        \n        // Apply wobble to horizontal movement\n        const wobble = Math.sin(particle.wobblePhase) * this.config.wobbleAmplitude;\n        particle.vx = wobble * 0.05 + (Math.random() - 0.5) * this.config.fizziness;\n        \n        // Apply upward force with variation\n        particle.vy += this.config.gravity * dt;\n        particle.vy += (Math.random() - 0.5) * this.config.fizziness;\n        \n        // Random \"pop\" events\n        if (Math.random() < this.config.popChance) {\n            // Pop! Send particle in random direction\n            const popAngle = Math.random() * Math.PI * 2;\n            particle.vx = Math.cos(popAngle) * this.config.popForce;\n            particle.vy = Math.sin(popAngle) * this.config.popForce * 0.7; // Slightly favor horizontal\n            particle.popTimer = 1; // Visual feedback timer\n            \n            // Resize on pop\n            particle.bubbleSize = 0.3 + Math.random() * 0.7;\n        }\n        \n        // Decay pop effect\n        if (particle.popTimer > 0) {\n            particle.popTimer -= dt * 0.05;\n            // Slow down after pop\n            particle.vx *= 0.95;\n            particle.vy *= 0.95;\n        }\n        \n        // Apply velocity\n        particle.x += particle.vx * dt;\n        particle.y += particle.vy * dt;\n        \n        // Wrap around vertically (bubbles rise and restart)\n        if (particle.y < -50) {\n            particle.y = canvasHeight + 50;\n            particle.x = centerX + (Math.random() - 0.5) * 300;\n            particle.vy = -this.config.baseRiseSpeed - Math.random() * 2;\n            particle.bubbleSize = 0.5 + Math.random() * 0.5;\n        }\n        \n        // Horizontal bounds with soft bounce\n        if (particle.x <= 0 || particle.x >= canvasWidth) {\n            particle.vx *= -0.5;\n            particle.x = Math.max(0, Math.min(canvasWidth, particle.x));\n        }\n        \n        // Bottom boundary (bubbles can spawn from bottom)\n        if (particle.y > canvasHeight + 50) {\n            particle.y = canvasHeight;\n            particle.vy = -this.config.baseRiseSpeed * 1.5;\n        }\n        \n        // Update size based on bubble properties\n        particle.size = particle.baseSize * particle.bubbleSize * \n                       (1 + Math.sin(particle.wobblePhase * 2) * 0.1);\n    },\n    \n    // ┌─────────────────────────────────────────────────────────────────────────────────\n    // │ VISUAL CHARACTERISTICS\n    // └─────────────────────────────────────────────────────────────────────────────────\n    visuals: {\n        trailLength: 'short',       // Short trails for bubbly feel\n        opacity: 0.6,               // Semi-transparent like bubbles\n        sizeMultiplier: 1.2,        // Slightly larger for bubble effect\n        blurAmount: 0.5,            // Soft, bubble-like appearance\n        sparkle: true               // Occasional sparkle effect\n    }\n};","/**\n * Calm Particle Behavior\n * Particles drift peacefully with minimal, smooth movement\n */\n\nimport { selectWeightedColor } from '../utils/colorUtils.js';\n\n// Behavior configuration\nconst config = {\n    baseSpeed: 0.08,           // Very slow base movement\n    driftSpeed: 0.02,          // Minimal drift speed\n    fadeSpeed: 0.0008,         // Very slow fade\n    sizeChange: 0.0002,        // Minimal size variation\n    swayAmplitude: 3,          // Gentle horizontal sway\n    floatAmplitude: 2,         // Minimal vertical float\n    rotationSpeed: 0.0001,     // Barely perceptible rotation\n    minOpacity: 0.15,          // Minimum visibility\n    maxOpacity: 0.35,          // Maximum visibility (subtle)\n    breathingPeriod: 8000,     // 8 second breathing cycle\n    connectionDistance: 0,      // No connections between particles\n    centerAttraction: 0.00005  // Very slight pull to center\n};\n\n/**\n * Initialize a particle with calm properties\n * @param {Object} particle - The particle to initialize\n */\nexport function initializeCalm(particle) {\n    // Start with faster initial burst movement\n    particle.vx = (Math.random() - 0.5) * 0.5;  // Increased 5x from 0.1\n    particle.vy = (Math.random() - 0.5) * 0.5;  // Increased 5x from 0.1\n    particle.lifeDecay = 0.003;  // Moderate fade (particles last ~5-6 seconds)\n\n    // Use emotion colors if provided\n    if (particle.emotionColors && particle.emotionColors.length > 0) {\n        particle.color = selectWeightedColor(particle.emotionColors);\n    }\n\n    // Calm-specific behavior data\n    particle.behaviorData = {\n        orbitAngle: Math.random() * Math.PI * 2,  // Starting angle around center\n        orbitRadius: 40 + Math.random() * 60,      // Distance from center (40-100 pixels)\n        orbitSpeed: 0.0008 + Math.random() * 0.0006, // Faster orbit speed (4x)\n        floatOffset: Math.random() * Math.PI * 2,\n        breathingOffset: Math.random() * Math.PI * 2,\n        lifetime: 0\n    };\n}\n\n/**\n * Update calm behavior each frame\n * @param {Object} particle - The particle to update\n * @param {number} dt - Delta time\n * @param {number} centerX - Orb center X\n * @param {number} centerY - Orb center Y\n */\nexport function updateCalm(particle, dt, centerX, centerY) {\n    const data = particle.behaviorData;\n    if (!data) return;\n\n    data.lifetime += dt;\n\n    // Breathing effect (very subtle size change)\n    const breathPhase = (data.lifetime + data.breathingOffset * config.breathingPeriod) / config.breathingPeriod;\n    const breathIntensity = Math.sin(breathPhase * Math.PI * 2) * 0.5 + 0.5;\n\n    // Apply subtle size pulsing\n    particle.size = particle.baseSize * (0.95 + breathIntensity * 0.05);\n\n    // Slow orbital movement around the mascot\n    data.orbitAngle += data.orbitSpeed * dt;\n\n    // Vary the orbit radius slightly over time for organic movement\n    const radiusVariation = Math.sin(data.lifetime * 0.0001 + data.floatOffset) * 10;\n    const currentRadius = data.orbitRadius + radiusVariation;\n\n    // Calculate target position in orbit\n    const targetX = centerX + Math.cos(data.orbitAngle) * currentRadius;\n    const targetY = centerY + Math.sin(data.orbitAngle) * currentRadius;\n\n    // Add vertical floating motion\n    const floatY = Math.sin(data.lifetime * 0.0003 + data.breathingOffset) * 15;\n\n    // Smoothly move toward orbital position\n    const dx = targetX - particle.x;\n    const dy = (targetY + floatY) - particle.y;\n\n    // Faster movement toward target position\n    particle.vx = dx * 0.03;  // Faster following (3x)\n    particle.vy = dy * 0.03;  // Faster following (3x)\n\n    // Add more random drift for organic feel\n    particle.vx += (Math.random() - 0.5) * 0.02;  // More drift\n    particle.vy += (Math.random() - 0.5) * 0.02;  // More drift\n\n    // Apply very light friction\n    particle.vx *= 0.98;\n    particle.vy *= 0.98;\n}\n\n// Export behavior definition for registry\nexport default {\n    name: 'zen',\n    emoji: '☯️',\n    description: 'Peaceful orbital movement like a hovering aura',\n    initialize: initializeCalm,\n    update: updateCalm\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Plugin Behavior Adapter\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Adapter for plugin-defined particle behaviors\r\n * @author Emotive Engine Team\r\n * @module particles/behaviors/plugin-adapter\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ Bridges the gap between the plugin system and modular particle behaviors.         \r\n * ║ Allows plugins to register custom particle behaviors that integrate seamlessly    \r\n * ║ with the modular particle system.                                                 \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n */\r\n\r\nimport { selectWeightedColor } from '../utils/colorUtils.js';\r\n\r\n// Registry for plugin-defined behaviors\r\nconst pluginBehaviors = new Map();\r\n\r\n/**\r\n * Register a custom particle behavior from a plugin\r\n * @param {string} name - Unique name for the behavior\r\n * @param {Object} behaviorDef - Behavior definition object\r\n * @returns {boolean} Success status\r\n */\r\nexport function registerPluginBehavior(name, behaviorDef) {\r\n    if (pluginBehaviors.has(name)) {\r\n    }\r\n    \r\n    // Validate behavior definition\r\n    if (!behaviorDef.initialize || typeof behaviorDef.initialize !== 'function') {\r\n        return false;\r\n    }\r\n    \r\n    if (!behaviorDef.update || typeof behaviorDef.update !== 'function') {\r\n        return false;\r\n    }\r\n    \r\n    // Store the behavior\r\n    pluginBehaviors.set(name, {\r\n        name,\r\n        emoji: behaviorDef.emoji || '🔌',\r\n        description: behaviorDef.description || `Plugin behavior: ${name}`,\r\n        initialize: behaviorDef.initialize,\r\n        update: behaviorDef.update,\r\n        isPlugin: true\r\n    });\r\n    \r\n    return true;\r\n}\r\n\r\n/**\r\n * Unregister a plugin behavior\r\n * @param {string} name - Name of the behavior to remove\r\n * @returns {boolean} Success status\r\n */\r\nexport function unregisterPluginBehavior(name) {\r\n    if (pluginBehaviors.has(name)) {\r\n        pluginBehaviors.delete(name);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * Get a plugin behavior by name\r\n * @param {string} name - Name of the behavior\r\n * @returns {Object|null} Behavior definition or null\r\n */\r\nexport function getPluginBehavior(name) {\r\n    return pluginBehaviors.get(name) || null;\r\n}\r\n\r\n/**\r\n * Get all registered plugin behaviors\r\n * @returns {Array} Array of behavior names\r\n */\r\nexport function getAllPluginBehaviors() {\r\n    return Array.from(pluginBehaviors.keys());\r\n}\r\n\r\n/**\r\n * Create a behavior wrapper for legacy plugin particle effects\r\n * Converts old-style particle definitions to modular behavior format\r\n * @param {Object} legacyBehavior - Legacy behavior configuration\r\n * @returns {Object} Modular behavior definition\r\n */\r\nexport function createLegacyAdapter(legacyBehavior) {\r\n    return {\r\n        name: legacyBehavior.name || 'legacy',\r\n        emoji: '🔄',\r\n        description: legacyBehavior.description || 'Legacy plugin behavior',\r\n        \r\n        initialize: function(particle) {\r\n            // Apply legacy configuration\r\n            if (legacyBehavior.size) {\r\n                particle.size = typeof legacyBehavior.size === 'object' ?\r\n                    legacyBehavior.size.min + Math.random() * (legacyBehavior.size.max - legacyBehavior.size.min) :\r\n                    legacyBehavior.size;\r\n                particle.baseSize = particle.size;\r\n            }\r\n            \r\n            if (legacyBehavior.speed) {\r\n                const speed = typeof legacyBehavior.speed === 'object' ?\r\n                    legacyBehavior.speed.min + Math.random() * (legacyBehavior.speed.max - legacyBehavior.speed.min) :\r\n                    legacyBehavior.speed;\r\n                const angle = Math.random() * Math.PI * 2;\r\n                particle.vx = Math.cos(angle) * speed;\r\n                particle.vy = Math.sin(angle) * speed;\r\n            }\r\n            \r\n            if (legacyBehavior.lifespan) {\r\n                const lifespan = typeof legacyBehavior.lifespan === 'object' ?\r\n                    legacyBehavior.lifespan.min + Math.random() * (legacyBehavior.lifespan.max - legacyBehavior.lifespan.min) :\r\n                    legacyBehavior.lifespan;\r\n                particle.lifeDecay = 1000 / lifespan; // Convert ms to decay rate\r\n            }\r\n            \r\n            if (legacyBehavior.color) {\r\n                particle.color = Array.isArray(legacyBehavior.color) ?\r\n                    selectWeightedColor(legacyBehavior.color) :\r\n                    legacyBehavior.color;\r\n            }\r\n            \r\n            if (legacyBehavior.opacity) {\r\n                particle.life = typeof legacyBehavior.opacity === 'object' ?\r\n                    legacyBehavior.opacity.min + Math.random() * (legacyBehavior.opacity.max - legacyBehavior.opacity.min) :\r\n                    legacyBehavior.opacity;\r\n            }\r\n            \r\n            // Store legacy-specific data\r\n            particle.behaviorData = {\r\n                movementType: legacyBehavior.movementType || 'linear',\r\n                turbulence: legacyBehavior.turbulence || 0,\r\n                drift: legacyBehavior.drift || 0,\r\n                acceleration: legacyBehavior.acceleration || 0,\r\n                ...legacyBehavior.customData\r\n            };\r\n        },\r\n        \r\n        update: function(particle, dt, centerX, centerY) {\r\n            const data = particle.behaviorData;\r\n            \r\n            // Apply movement based on type\r\n            switch (data.movementType) {\r\n                case 'wander':\r\n                    // Random wandering\r\n                    particle.vx += (Math.random() - 0.5) * data.turbulence * dt;\r\n                    particle.vy += (Math.random() - 0.5) * data.turbulence * dt;\r\n                    break;\r\n                    \r\n                case 'fall':\r\n                    // Falling with drift\r\n                    particle.vy += 0.1 * dt; // Gravity\r\n                    particle.vx += (Math.random() - 0.5) * data.drift * dt;\r\n                    break;\r\n                    \r\n                case 'rain':\r\n                    // Digital rain effect\r\n                    particle.vy += data.acceleration * dt;\r\n                    break;\r\n                    \r\n                case 'orbit':\r\n                    // Orbital motion\r\n                    const dx = particle.x - centerX;\r\n                    const dy = particle.y - centerY;\r\n                    const dist = Math.sqrt(dx * dx + dy * dy);\r\n                    if (dist > 0) {\r\n                        const angle = Math.atan2(dy, dx) + 0.02 * dt;\r\n                        particle.x = centerX + Math.cos(angle) * dist;\r\n                        particle.y = centerY + Math.sin(angle) * dist;\r\n                    }\r\n                    break;\r\n                    \r\n                case 'linear':\r\n                default:\r\n                    // Simple linear motion (already handled by velocity)\r\n                    break;\r\n            }\r\n            \r\n            // Call custom update if provided\r\n            if (legacyBehavior.customUpdate) {\r\n                legacyBehavior.customUpdate(particle, dt, centerX, centerY);\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\n// Export adapter functions for plugin system integration\r\nexport default {\r\n    registerPluginBehavior,\r\n    unregisterPluginBehavior,\r\n    getPluginBehavior,\r\n    getAllPluginBehaviors,\r\n    createLegacyAdapter\r\n};","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE v4.0 - Behavior Registry\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Central registry for all particle behaviors with plugin support\n * @author Emotive Engine Team\n * @version 4.0.0\n * @module particles/behaviors\n * \n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                                   PURPOSE                                         \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ Control center for particle behaviors with plugin adapter integration.            \n * ║ • Each behavior defines unique particle physics and movement patterns             \n * ║ • Core behaviors loaded synchronously at startup                                  \n * ║ • Plugin behaviors registered dynamically via adapter                             \n * ║ • Value-agnostic design for easy physics tuning                                   \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n */\n\n// ┌─────────────────────────────────────────────────────────────────────────────────────\n// │ IMPORT ALL BEHAVIORS\n// └─────────────────────────────────────────────────────────────────────────────────────\nimport ambient from './ambient.js';\nimport orbiting from './orbiting.js';\nimport rising from './rising.js';\nimport falling from './falling.js';\nimport popcorn from './popcorn.js';\nimport burst from './burst.js';\nimport aggressive from './aggressive.js';\nimport scattering from './scattering.js';\nimport repelling from './repelling.js';\nimport connecting from './connecting.js';\nimport resting from './resting.js';\nimport radiant from './radiant.js';\nimport ascending from './ascending.js';\nimport erratic from './erratic.js';\nimport cautious from './cautious.js';\nimport surveillance from './surveillance.js';\nimport glitchy from './glitchy.js';\nimport directed from './directed.js';\nimport fizzy from './fizzy.js';\nimport zen from './zen.js';\nimport pluginAdapter from './plugin-adapter.js';\n\n// ┌─────────────────────────────────────────────────────────────────────────────────────\n// │ BEHAVIOR COLLECTION\n// └─────────────────────────────────────────────────────────────────────────────────────\nconst BEHAVIORS = [\n    ambient,\n    directed,\n    fizzy,\n    orbiting,\n    rising,\n    falling,\n    popcorn,\n    burst,\n    aggressive,\n    scattering,\n    repelling,\n    connecting,\n    resting,\n    radiant,\n    ascending,\n    erratic,\n    cautious,\n    surveillance,\n    glitchy,\n    zen\n];\n\n// ┌─────────────────────────────────────────────────────────────────────────────────────\n// │ BEHAVIOR REGISTRY - Fast lookup by name\n// └─────────────────────────────────────────────────────────────────────────────────────\nexport const BEHAVIOR_REGISTRY = {};\n\n// Build the registry from the behaviors array - SYNCHRONOUSLY\nBEHAVIORS.forEach(behavior => {\n    BEHAVIOR_REGISTRY[behavior.name] = behavior;\n});\n\n/**\n * Get a behavior by name (checks both core and plugin behaviors)\n * @param {string} name - Behavior name (e.g., 'ambient', 'orbiting')\n * @returns {Object|null} Behavior object or null if not found\n */\nexport function getBehavior(name) {\n    // Check core behaviors first\n    if (BEHAVIOR_REGISTRY[name]) {\n        return BEHAVIOR_REGISTRY[name];\n    }\n    // Check plugin behaviors\n    const pluginBehavior = pluginAdapter.getPluginBehavior(name);\n    if (pluginBehavior) {\n        return pluginBehavior;\n    }\n    return null;\n}\n\n/**\n * Initialize a particle with a specific behavior\n * @param {Particle} particle - The particle to initialize\n * @param {string} behaviorName - Name of the behavior to apply\n * @returns {boolean} True if behavior was found and applied\n */\nexport function initializeBehavior(particle, behaviorName) {\n    const behavior = getBehavior(behaviorName);\n    if (behavior && behavior.initialize) {\n        behavior.initialize(particle);\n        return true;\n    }\n    // Fallback to ambient if behavior not found\n    if (behaviorName !== 'ambient') {\n        return initializeBehavior(particle, 'ambient');\n    }\n    return false;\n}\n\n/**\n * Update a particle's behavior\n * @param {Particle} particle - The particle to update\n * @param {string} behaviorName - Name of the behavior\n * @param {number} dt - Delta time\n * @param {number} centerX - Orb center X\n * @param {number} centerY - Orb center Y\n * @returns {boolean} True if behavior was found and updated\n */\nexport function updateBehavior(particle, behaviorName, dt, centerX, centerY) {\n    const behavior = getBehavior(behaviorName);\n    if (behavior && behavior.update) {\n        behavior.update(particle, dt, centerX, centerY);\n        return true;\n    }\n    return false;\n}\n\n/**\n * Get list of all available behaviors (core and plugin)\n * @returns {Array} Array of behavior names and descriptions\n */\nexport function listBehaviors() {\n    // Get core behaviors\n    const coreBehaviors = Object.values(BEHAVIOR_REGISTRY).map(behavior => ({\n        name: behavior.name,\n        emoji: behavior.emoji || '🎯',\n        description: behavior.description || 'No description',\n        type: 'core'\n    }));\n    \n    // Get plugin behaviors\n    const pluginBehaviorNames = pluginAdapter.getAllPluginBehaviors();\n    const pluginBehaviors = pluginBehaviorNames.map(name => {\n        const behavior = pluginAdapter.getPluginBehavior(name);\n        return {\n            name: behavior.name,\n            emoji: behavior.emoji || '🔌',\n            description: behavior.description || 'Plugin behavior',\n            type: 'plugin'\n        };\n    });\n    \n    return [...coreBehaviors, ...pluginBehaviors];\n}\n\n// ┌─────────────────────────────────────────────────────────────────────────────────────\n// │ DEBUG UTILITIES\n// └─────────────────────────────────────────────────────────────────────────────────────\nif (typeof window !== 'undefined' && window.DEBUG_PARTICLES) {\n    window.ParticleBehaviors = {\n        registry: BEHAVIOR_REGISTRY,\n        list: listBehaviors,\n        get: getBehavior\n    };\n}\n\n// Export plugin adapter for external use\nexport { pluginAdapter };\n\n// Export everything\nexport default {\n    BEHAVIOR_REGISTRY,\n    getBehavior,\n    initializeBehavior,\n    updateBehavior,\n    listBehaviors,\n    pluginAdapter\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE v4.0 - Gesture Plugin Adapter\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Bridge between plugin system and gesture registry\r\n * @author Emotive Engine Team\r\n * @version 4.0.0\r\n * @module gestures/plugin-adapter\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ Adapter for dynamic gesture registration from plugins.                            \r\n * ║ • Maintains separate registry for plugin gestures                                 \r\n * ║ • Validates gesture definitions for required apply() function                     \r\n * ║ • Provides legacy format conversion for older plugins                             \r\n * ║ • Enables runtime registration and unregistration                                 \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n */\r\n\r\n/**\r\n * Plugin gesture registry\r\n */\r\nconst pluginGestures = new Map();\r\n\r\n/**\r\n * Register a plugin gesture\r\n * @param {string} name - Gesture name\r\n * @param {Object} gestureDef - Gesture definition object\r\n */\r\nexport function registerPluginGesture(name, gestureDef) {\r\n    // Ensure gesture has required properties\r\n    if (!gestureDef.apply && !gestureDef.type) {\r\n        return false;\r\n    }\r\n    \r\n    // Add name if not present\r\n    if (!gestureDef.name) {\r\n        gestureDef.name = name;\r\n    }\r\n    \r\n    // Set default type if not specified\r\n    if (!gestureDef.type) {\r\n        gestureDef.type = 'blending';\r\n    }\r\n    \r\n    pluginGestures.set(name, gestureDef);\r\n    \r\n    if (typeof window !== 'undefined' && window.DEBUG_GESTURES) {\r\n    }\r\n    \r\n    return true;\r\n}\r\n\r\n/**\r\n * Unregister a plugin gesture\r\n * @param {string} name - Gesture name to remove\r\n */\r\nexport function unregisterPluginGesture(name) {\r\n    if (pluginGestures.has(name)) {\r\n        pluginGestures.delete(name);\r\n        \r\n        if (typeof window !== 'undefined' && window.DEBUG_GESTURES) {\r\n        }\r\n        \r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n/**\r\n * Get a plugin gesture by name\r\n * @param {string} name - Gesture name\r\n * @returns {Object|null} Gesture object or null if not found\r\n */\r\nexport function getPluginGesture(name) {\r\n    return pluginGestures.get(name) || null;\r\n}\r\n\r\n/**\r\n * Get all plugin gesture names\r\n * @returns {Array<string>} Array of gesture names\r\n */\r\nexport function getAllPluginGestures() {\r\n    return Array.from(pluginGestures.keys());\r\n}\r\n\r\n/**\r\n * Clear all plugin gestures\r\n */\r\nexport function clearPluginGestures() {\r\n    pluginGestures.clear();\r\n}\r\n\r\n/**\r\n * Convert legacy plugin gesture format to new format\r\n * @param {Object} legacyGesture - Old format gesture\r\n * @returns {Object} New format gesture\r\n */\r\nexport function createLegacyAdapter(legacyGesture) {\r\n    return {\r\n        name: legacyGesture.name || 'unknown',\r\n        type: legacyGesture.type || 'blending',\r\n        emoji: legacyGesture.emoji || '🔌',\r\n        description: legacyGesture.description || 'Plugin gesture',\r\n        config: legacyGesture.config || {},\r\n        \r\n        apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n            // Adapt old plugin format to new format\r\n            if (legacyGesture.animate) {\r\n                // Old plugins might use 'animate' instead of 'apply'\r\n                legacyGesture.animate(particle, progress, motion, dt, centerX, centerY);\r\n            } else if (legacyGesture.apply) {\r\n                legacyGesture.apply(particle, progress, motion, dt, centerX, centerY);\r\n            }\r\n        },\r\n        \r\n        cleanup: legacyGesture.cleanup || function(particle) {\r\n            // Default cleanup\r\n            if (particle.gestureData && particle.gestureData[this.name]) {\r\n                delete particle.gestureData[this.name];\r\n            }\r\n        }\r\n    };\r\n}\r\n\r\n// Export adapter interface\r\nexport default {\r\n    registerPluginGesture,\r\n    unregisterPluginGesture,\r\n    getPluginGesture,\r\n    getAllPluginGestures,\r\n    clearPluginGestures,\r\n    createLegacyAdapter\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Bounce Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Bounce gesture - vertical oscillation motion\r\n * @author Emotive Engine Team\r\n * @module gestures/motions/bounce\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ Creates a bouncing motion with particles oscillating vertically.                  \r\n * ║ This is a BLENDING gesture that adds to existing particle motion.                 \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * VISUAL DIAGRAM:\r\n *        ↑\r\n *       ⭐      <- peak\r\n *      ↗ ↘\r\n *     ↗   ↘\r\n *    ⭐     ⭐   <- midpoint\r\n *   ↗       ↘\r\n *  ↗         ↘\r\n * ⭐           ⭐ <- trough\r\n * \r\n * USED BY:\r\n * - Joy emotions (playful bouncing)\r\n * - Excited states (energetic movement)\r\n * - Celebration gestures\r\n */\r\n\r\n/**\r\n * Bounce gesture configuration and implementation\r\n */\r\nexport default {\r\n    name: 'bounce',\r\n    emoji: '⬆️',\r\n    type: 'blending', // Adds to existing motion\r\n    description: 'Vertical oscillation with smooth easing',\r\n    \r\n    // Default configuration\r\n    config: {\r\n        duration: 800,      // Legacy fallback\r\n        musicalDuration: { musical: true, beats: 2 }, // 2 beats\r\n        amplitude: 30,      // Bounce height range\r\n        frequency: 2,       // Number of oscillations\r\n        axis: 'vertical',   // Movement axis: 'vertical' or 'horizontal'\r\n        damping: true,      // Enable amplitude reduction over time\r\n        easing: 'sine',     // Animation curve type\r\n        strength: 0.6,      // Overall motion intensity\r\n        // Particle motion configuration for AnimationController\r\n        particleMotion: {\r\n            type: 'bounce',\r\n            axis: 'vertical',   // Oscillation direction\r\n            strength: 0.6,      // Particle bounce strength\r\n            frequency: 2        // Particle oscillation count\r\n        }\r\n    },\r\n    \r\n    // Rhythm configuration - bounce syncs perfectly to beat\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'beat',  // Each bounce lands on a beat\r\n        timingSync: 'nextBeat',     // Start on next beat\r\n        interruptible: true,         // Can interrupt mid-bounce\r\n        priority: 3,                 // Lower priority\r\n        blendable: true,             // Can blend with other effects\r\n        crossfadePoint: 'anyBeat',   // Can transition out on any beat\r\n        \r\n        // Bounce height syncs to beat intensity\r\n        amplitudeSync: {\r\n            onBeat: 1.8,      // Higher bounce on beat\r\n            offBeat: 0.6,     // Lower between beats\r\n            curve: 'bounce'   // Natural bounce curve\r\n        },\r\n        \r\n        // Frequency can sync to tempo\r\n        frequencySync: {\r\n            mode: 'tempo',    // Bounces per beat scale with BPM\r\n            multiplier: 1.0   // 1 bounce per beat\r\n        },\r\n        \r\n        // Duration syncs to musical time\r\n        durationSync: {\r\n            mode: 'beats',    // Duration in beats\r\n            beats: 4          // Bounce for 4 beats (1 bar in 4/4)\r\n        },\r\n        \r\n        // Accent response for stronger downbeats\r\n        accentResponse: {\r\n            enabled: true,\r\n            multiplier: 1.5   // 50% higher on accented beats\r\n        },\r\n        \r\n        // Pattern-specific bouncing styles\r\n        patternOverrides: {\r\n            'waltz': {\r\n                // 3/4 time creates elegant triple bounce\r\n                frequencySync: { multiplier: 0.75 },\r\n                durationSync: { beats: 3 }\r\n            },\r\n            'swing': {\r\n                // Jazzy swing bounce with syncopation\r\n                amplitudeSync: { onBeat: 2.0, offBeat: 0.4, curve: 'ease' }\r\n            },\r\n            'dubstep': {\r\n                // Heavy drop on beat 3\r\n                amplitudeSync: { \r\n                    onBeat: 1.5,\r\n                    dropBeat: 3.0,  // Massive bounce on the drop\r\n                    curve: 'pulse'\r\n                }\r\n            },\r\n            'breakbeat': {\r\n                // Chaotic broken rhythm bouncing\r\n                frequencySync: { multiplier: 1.5 },\r\n                amplitudeSync: { onBeat: 2.2, offBeat: 0.3 }\r\n            }\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Initialize gesture data for a particle\r\n     * Called once when gesture starts\r\n     * @param {Particle} particle - The particle to initialize\r\n     * @param {Object} motion - Gesture motion configuration\r\n     */\r\n    initialize: function(particle, motion) {\r\n        if (!particle.gestureData) {\r\n            particle.gestureData = {};\r\n        }\r\n        \r\n        particle.gestureData.bounce = {\r\n            startY: particle.y,\r\n            startX: particle.x,\r\n            startVx: particle.vx,\r\n            startVy: particle.vy,\r\n            initialized: true\r\n        };\r\n    },\r\n    \r\n    /**\r\n     * Apply bounce motion to particle\r\n     * @param {Particle} particle - The particle to animate\r\n     * @param {number} progress - Gesture progress (0-1)\r\n     * @param {Object} motion - Gesture configuration\r\n     * @param {number} dt - Delta time\r\n     * @param {number} centerX - Orb center X\r\n     * @param {number} centerY - Orb center Y\r\n     */\r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        // Initialize on first frame\r\n        if (!particle.gestureData?.bounce?.initialized) {\r\n            this.initialize(particle, motion);\r\n        }\r\n        \r\n        const config = { ...this.config, ...motion };\r\n        const strength = config.strength || this.config.strength || 1.0;\r\n        \r\n        // Apply easing\r\n        const easeProgress = this.easeInOutCubic(progress);\r\n        \r\n        // Calculate oscillation\r\n        let frequency = config.frequency;\r\n        const phase = motion.phase || 0;\r\n        \r\n        // Apply rhythm modulation if present\r\n        let amplitude = config.amplitude * strength * particle.scaleFactor;\r\n        if (motion.rhythmModulation) {\r\n            amplitude *= (motion.rhythmModulation.amplitudeMultiplier || 1);\r\n            amplitude *= (motion.rhythmModulation.accentMultiplier || 1);\r\n            // Frequency modulation for tempo sync\r\n            if (motion.rhythmModulation.frequencyMultiplier) {\r\n                frequency *= motion.rhythmModulation.frequencyMultiplier;\r\n            }\r\n        }\r\n        \r\n        const oscillation = Math.sin((easeProgress + phase) * Math.PI * 2 * frequency);\r\n        if (config.damping && progress > 0.7) {\r\n            // Reduce amplitude toward end of animation\r\n            const dampProgress = (progress - 0.7) / 0.3;\r\n            amplitude *= (1 - dampProgress * 0.8);\r\n        }\r\n        \r\n        // Apply motion based on axis\r\n        if (config.axis === 'vertical') {\r\n            particle.vy += oscillation * amplitude * 0.01 * dt;\r\n            \r\n            // Dampen horizontal movement slightly for stability\r\n            if (progress > 0.9) {\r\n                particle.vx *= 0.98;\r\n            }\r\n        } else if (config.axis === 'horizontal') {\r\n            particle.vx += oscillation * amplitude * 0.01 * dt;\r\n            \r\n            // Dampen vertical movement slightly for stability\r\n            if (progress > 0.9) {\r\n                particle.vy *= 0.98;\r\n            }\r\n        }\r\n        \r\n        // Smooth ending - gradually reduce velocity modifications\r\n        if (progress > 0.9) {\r\n            const endFactor = 1 - ((progress - 0.9) * 10);\r\n            particle.vx = particle.vx * (0.95 + endFactor * 0.05);\r\n            particle.vy = particle.vy * (0.95 + endFactor * 0.05);\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Clean up gesture data when complete\r\n     * @param {Particle} particle - The particle to clean up\r\n     */\r\n    cleanup: function(particle) {\r\n        if (particle.gestureData?.bounce) {\r\n            delete particle.gestureData.bounce;\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Easing function for smooth animation\r\n     * @param {number} t - Progress (0-1)\r\n     * @returns {number} Eased value\r\n     */\r\n    easeInOutCubic: function(t) {\r\n        return t < 0.5 \r\n            ? 4 * t * t * t \r\n            : 1 - Math.pow(-2 * t + 2, 3) / 2;\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Pulse Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Pulse gesture - radial expansion and contraction\r\n * @author Emotive Engine Team\r\n * @module gestures/motions/pulse\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ Creates a breathing/heartbeat effect with particles expanding and contracting      \r\n * ║ radially from the center. This is a BLENDING gesture that modifies positions.     \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * VISUAL DIAGRAM:\r\n *     Expand          Contract         Expand\r\n *    ← · · · →         → ⭐ ←         ← · · · →\r\n *    ↖ · · ↗           ↘ ↓ ↙           ↖ · · ↗\r\n *    · · ⭐ · ·   →    · ⭐ ·     →   · · ⭐ · ·\r\n *    ↙ · · ↘           ↗ ↑ ↖           ↙ · · ↘\r\n *    ← · · · →         → ⭐ ←         ← · · · →\r\n * \r\n * USED BY:\r\n * - Love emotions (heartbeat rhythm)\r\n * - Breathing/calm states\r\n * - Emphasis gestures\r\n */\r\n\r\n/**\r\n * Pulse gesture configuration and implementation\r\n */\r\nexport default {\r\n    name: 'pulse',\r\n    emoji: '💗',\r\n    type: 'blending', // Adds to existing motion\r\n    description: 'Radial expansion and contraction from center',\r\n    \r\n    // Default configuration\r\n    config: {\r\n        duration: 600,      // Animation duration\r\n        amplitude: 30,      // Expansion distance\r\n        frequency: 1,       // Number of pulses\r\n        holdPeak: 0.1,      // Peak expansion hold time\r\n        easing: 'sine',     // Animation curve type\r\n        scaleAmount: 0.2,   // Orb scale variation\r\n        glowAmount: 0.3,    // Orb glow intensity change\r\n        strength: 0.15,     // Particle motion strength\r\n        direction: 'outward', // Radial direction\r\n        // Particle motion configuration for AnimationController\r\n        particleMotion: {\r\n            type: 'pulse',\r\n            strength: 0.15,\r\n            direction: 'outward',\r\n            frequency: 1\r\n        }\r\n    },\r\n    \r\n    // Rhythm configuration - pulse as heartbeat synced to music\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'beat',  // Heartbeat on every beat\r\n        \r\n        // Pulse strength syncs to beat\r\n        amplitudeSync: {\r\n            onBeat: 1.6,      // Strong expansion on beat\r\n            offBeat: 0.8,     // Gentle contraction off beat\r\n            curve: 'pulse'    // Sharp attack, gradual release\r\n        },\r\n        \r\n        // Frequency locks to tempo\r\n        frequencySync: {\r\n            mode: 'locked',   // One pulse per beat\r\n            subdivision: 'quarter'  // Pulse on quarter notes\r\n        },\r\n        \r\n        // Duration in musical time\r\n        durationSync: {\r\n            mode: 'beats',\r\n            beats: 1          // One pulse per beat\r\n        },\r\n        \r\n        // Stronger pulse on downbeats\r\n        accentResponse: {\r\n            enabled: true,\r\n            multiplier: 2.0   // Double strength on accent\r\n        },\r\n        \r\n        // Pattern-specific pulse styles\r\n        patternOverrides: {\r\n            'waltz': {\r\n                // Elegant 3/4 heartbeat\r\n                amplitudeSync: { onBeat: 2.0, offBeat: 0.5 },\r\n                durationSync: { beats: 3 }\r\n            },\r\n            'swing': {\r\n                // Syncopated jazz pulse\r\n                amplitudeSync: { onBeat: 1.8, offBeat: 0.6, curve: 'ease' },\r\n                frequencySync: { subdivision: 'swing' }\r\n            },\r\n            'dubstep': {\r\n                // Deep bass pulse on drop\r\n                amplitudeSync: {\r\n                    onBeat: 1.2,\r\n                    dropBeat: 4.0,  // Massive pulse on beat 3\r\n                    curve: 'pulse'\r\n                }\r\n            },\r\n            'breakbeat': {\r\n                // Erratic heartbeat\r\n                frequencySync: { mode: 'random', range: [0.5, 2.0] },\r\n                amplitudeSync: { onBeat: 2.5, offBeat: 0.3 }\r\n            }\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Initialize gesture data for a particle\r\n     * @param {Particle} particle - The particle to initialize\r\n     * @param {Object} motion - Gesture motion configuration\r\n     * @param {number} centerX - Orb center X\r\n     * @param {number} centerY - Orb center Y\r\n     */\r\n    initialize: function(particle, motion, centerX, centerY) {\r\n        if (!particle.gestureData) {\r\n            particle.gestureData = {};\r\n        }\r\n        \r\n        // Calculate initial distance and angle from center\r\n        const dx = particle.x - centerX;\r\n        const dy = particle.y - centerY;\r\n        const distance = Math.sqrt(dx * dx + dy * dy);\r\n        const angle = Math.atan2(dy, dx);\r\n        \r\n        particle.gestureData.pulse = {\r\n            baseDistance: distance,\r\n            angle: angle,\r\n            startX: particle.x,\r\n            startY: particle.y,\r\n            initialized: true\r\n        };\r\n    },\r\n    \r\n    /**\r\n     * Apply pulse motion to particle\r\n     * @param {Particle} particle - The particle to animate\r\n     * @param {number} progress - Gesture progress (0-1)\r\n     * @param {Object} motion - Gesture configuration\r\n     * @param {number} dt - Delta time\r\n     * @param {number} centerX - Orb center X\r\n     * @param {number} centerY - Orb center Y\r\n     */\r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        // Initialize on first frame\r\n        if (!particle.gestureData?.pulse?.initialized) {\r\n            this.initialize(particle, motion, centerX, centerY);\r\n        }\r\n        \r\n        const data = particle.gestureData.pulse;\r\n        const config = { ...this.config, ...motion };\r\n        const strength = motion.strength || 1.0;\r\n        \r\n        // Apply easing\r\n        const easeProgress = this.easeInOutSine(progress);\r\n        \r\n        // Calculate pulse with optional peak hold\r\n        let pulseValue;\r\n        let frequency = config.frequency;\r\n        let amplitude = config.amplitude;\r\n        \r\n        // Apply rhythm modulation if present\r\n        if (motion.rhythmModulation) {\r\n            amplitude *= (motion.rhythmModulation.amplitudeMultiplier || 1);\r\n            amplitude *= (motion.rhythmModulation.accentMultiplier || 1);\r\n            if (motion.rhythmModulation.frequencyMultiplier) {\r\n                frequency *= motion.rhythmModulation.frequencyMultiplier;\r\n            }\r\n        }\r\n        \r\n        const rawPulse = (easeProgress * frequency * 2) % 2;\r\n        \r\n        if (config.holdPeak > 0 && rawPulse > (1 - config.holdPeak) && rawPulse < (1 + config.holdPeak)) {\r\n            // Hold at peak\r\n            pulseValue = 1;\r\n        } else {\r\n            // Normal sine wave\r\n            pulseValue = Math.sin(easeProgress * Math.PI * 2 * frequency);\r\n        }\r\n        \r\n        // Calculate expansion amount\r\n        const expansion = pulseValue * amplitude * strength * particle.scaleFactor;\r\n        \r\n        // Calculate target position\r\n        const targetDistance = data.baseDistance + expansion;\r\n        const targetX = centerX + Math.cos(data.angle) * targetDistance;\r\n        const targetY = centerY + Math.sin(data.angle) * targetDistance;\r\n        \r\n        // Smoothly move toward target\r\n        const moveSpeed = 0.15 * dt;\r\n        particle.vx += (targetX - particle.x) * moveSpeed * 0.1;\r\n        particle.vy += (targetY - particle.y) * moveSpeed * 0.1;\r\n        \r\n        // Fade effect at the end\r\n        if (progress > 0.9) {\r\n            const fadeFactor = 1 - ((progress - 0.9) * 10);\r\n            particle.vx *= (0.9 + fadeFactor * 0.1);\r\n            particle.vy *= (0.9 + fadeFactor * 0.1);\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Clean up gesture data when complete\r\n     * @param {Particle} particle - The particle to clean up\r\n     */\r\n    cleanup: function(particle) {\r\n        if (particle.gestureData?.pulse) {\r\n            delete particle.gestureData.pulse;\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Sine easing for smooth breathing motion\r\n     * @param {number} t - Progress (0-1)\r\n     * @returns {number} Eased value\r\n     */\r\n    easeInOutSine: function(t) {\r\n        return -(Math.cos(Math.PI * t) - 1) / 2;\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Shake Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Shake gesture - random jitter motion\r\n * @author Emotive Engine Team\r\n * @module gestures/motions/shake\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ Creates a shaking/vibrating effect with random jitter. Perfect for expressing     \r\n * ║ nervousness, excitement, or impact effects. This is a BLENDING gesture.           \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * VISUAL DIAGRAM:\r\n *     Frame 1        Frame 2        Frame 3\r\n *        ⭐      →    ⭐       →      ⭐\r\n *       ↙↗↘↖         ↖↘↗↙          ↗↖↙↘\r\n *    (random)      (random)       (random)\r\n * \r\n * USED BY:\r\n * - Nervous/anxious states\r\n * - Anger (trembling with rage)\r\n * - Cold/shivering effects\r\n * - Impact reactions\r\n */\r\n\r\n/**\r\n * Shake gesture configuration and implementation\r\n */\r\nexport default {\r\n    name: 'shake',\r\n    emoji: '🫨',\r\n    type: 'blending', // Adds to existing motion\r\n    description: 'Random jitter movement for vibration effects',\r\n    \r\n    // Default configuration\r\n    config: {\r\n        duration: 400,      // Animation duration\r\n        amplitude: 15,      // Shake movement range\r\n        frequency: 15,      // Oscillation speed\r\n        decay: 0.9,         // Intensity reduction over time\r\n        smoothing: 0.1,     // Motion smoothness factor\r\n        axes: 'both',       // Affected axes: 'both', 'horizontal', 'vertical'\r\n        easing: 'linear',   // Animation curve type\r\n        strength: 3.0,      // Overall shake intensity\r\n        // Particle motion configuration for AnimationController\r\n        particleMotion: {\r\n            type: 'shake',\r\n            strength: 3.0,      // Particle shake strength\r\n            frequency: 15,      // Particle oscillation rate\r\n            decay: false        // Maintain consistent intensity\r\n        }\r\n    },\r\n    \r\n    // Rhythm configuration - shake intensifies with tempo\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'subdivision',  // Shake on subdivisions\r\n        \r\n        // Shake intensity modulation\r\n        amplitudeSync: {\r\n            subdivision: 'sixteenth',  // Shake on 16th notes\r\n            onBeat: 2.5,              // Violent shake on beat\r\n            offBeat: 0.7,             // Gentler between beats\r\n            curve: 'pulse'            // Sharp attack\r\n        },\r\n        \r\n        // Frequency scales with tempo\r\n        frequencySync: {\r\n            mode: 'tempo',\r\n            baseFrequency: 15,        // Base at 120 BPM\r\n            scaling: 'linear'         // Linear scaling with BPM\r\n        },\r\n        \r\n        // Duration in musical time\r\n        durationSync: {\r\n            mode: 'beats',\r\n            beats: 2                  // Shake for 2 beats\r\n        },\r\n        \r\n        // Pattern-specific shake styles\r\n        patternOverrides: {\r\n            'breakbeat': {\r\n                // Chaotic broken shake\r\n                amplitudeSync: { onBeat: 3.0, offBeat: 0.2 },\r\n                frequencySync: { mode: 'random', range: [8, 20] }\r\n            },\r\n            'dubstep': {\r\n                // Bass wobble shake\r\n                amplitudeSync: {\r\n                    subdivision: 'eighth',\r\n                    onBeat: 4.0,\r\n                    dropBeat: 6.0,  // Massive shake on drop\r\n                    curve: 'pulse'\r\n                }\r\n            },\r\n            'swing': {\r\n                // Jazzy shimmy shake\r\n                amplitudeSync: { onBeat: 1.8, offBeat: 1.0, curve: 'ease' }\r\n            }\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Initialize gesture data for a particle\r\n     * @param {Particle} particle - The particle to initialize\r\n     * @param {Object} motion - Gesture motion configuration\r\n     */\r\n    initialize: function(particle, motion) {\r\n        if (!particle.gestureData) {\r\n            particle.gestureData = {};\r\n        }\r\n        \r\n        particle.gestureData.shake = {\r\n            originalX: particle.x,  // Store original position\r\n            originalY: particle.y,  // Store original position\r\n            randomAngle: Math.random() * Math.PI * 2, // Random shake direction per particle\r\n            initialized: true\r\n        };\r\n    },\r\n    \r\n    /**\r\n     * Apply shake motion to particle\r\n     * Creates synchronized vibration effect matching orb shake\r\n     * @param {Particle} particle - The particle to animate\r\n     * @param {number} progress - Gesture progress (0-1)\r\n     * @param {Object} motion - Gesture configuration\r\n     * @param {number} dt - Delta time\r\n     * @param {number} centerX - Orb center X\r\n     * @param {number} centerY - Orb center Y\r\n     */\r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        // Initialize on first frame\r\n        if (!particle.gestureData?.shake?.initialized) {\r\n            this.initialize(particle, motion);\r\n        }\r\n        \r\n        const data = particle.gestureData.shake;\r\n        const config = { ...this.config, ...motion };\r\n        const strength = config.strength || this.config.strength || 1.0;\r\n        \r\n        // Apply rhythm modulation if present\r\n        let amplitude = config.amplitude;\r\n        let frequency = config.frequency;\r\n        if (motion.rhythmModulation) {\r\n            amplitude *= (motion.rhythmModulation.amplitudeMultiplier || 1);\r\n            amplitude *= (motion.rhythmModulation.accentMultiplier || 1);\r\n            if (motion.rhythmModulation.frequencyMultiplier) {\r\n                frequency *= motion.rhythmModulation.frequencyMultiplier;\r\n            }\r\n        }\r\n        \r\n        // Match orb shake logic for synchronized movement\r\n        // Apply decay if enabled to reduce intensity over time\r\n        const decay = config.decay ? (1 - progress) : 1;\r\n        const shake = Math.sin(progress * Math.PI * frequency) * amplitude * decay * strength * particle.scaleFactor;\r\n        \r\n        // Calculate directional offset using particle's random angle\r\n        const offsetX = shake * Math.cos(data.randomAngle);\r\n        const offsetY = shake * Math.sin(data.randomAngle);\r\n        \r\n        // Set particle position directly for perfect synchronization\r\n        // Particles shake in unison with the orb\r\n        particle.x = data.originalX + offsetX;\r\n        particle.y = data.originalY + offsetY;\r\n    },\r\n    \r\n    /**\r\n     * Generate pseudo-random number from seed\r\n     * @param {number} seed - Seed value\r\n     * @returns {number} Pseudo-random value between 0 and 1\r\n     */\r\n    pseudoRandom: function(seed) {\r\n        const x = Math.sin(seed) * 10000;\r\n        return x - Math.floor(x);\r\n    },\r\n    \r\n    /**\r\n     * Clean up gesture data when complete\r\n     * @param {Particle} particle - The particle to clean up\r\n     */\r\n    cleanup: function(particle) {\r\n        if (particle.gestureData?.shake) {\r\n            // Restore original position\r\n            particle.x = particle.gestureData.shake.originalX;\r\n            particle.y = particle.gestureData.shake.originalY;\r\n            delete particle.gestureData.shake;\r\n        }\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Nod Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Nod gesture - vertical agreement motion\r\n * @author Emotive Engine Team\r\n * @module gestures/motions/nod\r\n */\r\n\r\nexport default {\r\n    name: 'nod',\r\n    emoji: '🙂',\r\n    type: 'blending',\r\n    description: 'Vertical nodding motion',\r\n    \r\n    // Default configuration\r\n    config: {\r\n        duration: 500,      // Animation duration\r\n        amplitude: 15,      // Vertical movement range\r\n        frequency: 2,       // Number of nod cycles\r\n        easing: 'sine',     // Animation curve type\r\n        strength: 0.4,      // Overall motion intensity\r\n        // Particle motion configuration for AnimationController\r\n        particleMotion: {\r\n            type: 'bounce',\r\n            axis: 'vertical',   // Movement direction\r\n            strength: 0.4,      // Particle nod strength\r\n            frequency: 2,       // Particle nod count\r\n            phase: 0           // Synchronization with orb\r\n        }\r\n    },\r\n    \r\n    // Rhythm configuration - nod as agreement to the beat\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'beat',\r\n        timingSync: 'nextBeat',     // Wait for next beat to start\r\n        interruptible: false,        // Must complete the nod\r\n        priority: 5,                 // Medium priority\r\n        blendable: false,            // Don't blend with other motions\r\n        minDuration: 'halfBar',      // Minimum time before interrupt\r\n        \r\n        // Nod frequency locks to beat\r\n        frequencySync: {\r\n            mode: 'subdivision',\r\n            subdivision: 'half',  // Nod on half notes\r\n            multiplier: 1.0\r\n        },\r\n        \r\n        // Amplitude stronger on downbeats\r\n        amplitudeSync: {\r\n            onBeat: 1.4,\r\n            offBeat: 0.8,\r\n            curve: 'ease'\r\n        },\r\n        \r\n        // Duration in beats\r\n        durationSync: {\r\n            mode: 'beats',\r\n            beats: 2  // Nod for 2 beats\r\n        },\r\n        \r\n        // Pattern-specific nodding\r\n        patternOverrides: {\r\n            'waltz': {\r\n                // Graceful 3/4 nod\r\n                frequencySync: { subdivision: 'quarter' },\r\n                amplitudeSync: { onBeat: 1.6, curve: 'ease' }\r\n            },\r\n            'swing': {\r\n                // Jazzy syncopated nod\r\n                amplitudeSync: { onBeat: 1.5, offBeat: 0.9 }\r\n            },\r\n            'dubstep': {\r\n                // Heavy head-bang on drop\r\n                amplitudeSync: {\r\n                    onBeat: 1.2,\r\n                    dropBeat: 3.0,\r\n                    curve: 'pulse'\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \r\n    initialize: function(particle, motion) {\r\n        if (!particle.gestureData) {\r\n            particle.gestureData = {};\r\n        }\r\n        particle.gestureData.nod = {\r\n            startY: particle.y,\r\n            initialized: true\r\n        };\r\n    },\r\n    \r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        if (!particle.gestureData?.nod?.initialized) {\r\n            this.initialize(particle, motion);\r\n        }\r\n        \r\n        const config = { ...this.config, ...motion };\r\n        const strength = config.strength || this.config.strength || 1.0;\r\n        let frequency = config.frequency;\r\n        let amplitude = config.amplitude;\r\n        \r\n        // Apply rhythm modulation if present\r\n        if (motion.rhythmModulation) {\r\n            amplitude *= (motion.rhythmModulation.amplitudeMultiplier || 1);\r\n            amplitude *= (motion.rhythmModulation.accentMultiplier || 1);\r\n            if (motion.rhythmModulation.frequencyMultiplier) {\r\n                frequency *= motion.rhythmModulation.frequencyMultiplier;\r\n            }\r\n        }\r\n        \r\n        const oscillation = Math.sin(progress * Math.PI * 2 * frequency);\r\n        amplitude = amplitude * strength * particle.scaleFactor;\r\n        \r\n        // Apply vertical nodding motion\r\n        particle.vy += oscillation * amplitude * 0.01 * dt;\r\n        \r\n        // Dampen at the end\r\n        if (progress > 0.9) {\r\n            particle.vy *= 0.95;\r\n        }\r\n    },\r\n    \r\n    cleanup: function(particle) {\r\n        if (particle.gestureData?.nod) {\r\n            delete particle.gestureData.nod;\r\n        }\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Vibrate Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Vibrate gesture - high frequency micro-shake\r\n * @author Emotive Engine Team\r\n * @module gestures/motions/vibrate\r\n */\r\n\r\nexport default {\r\n    name: 'vibrate',\r\n    emoji: '📳',\r\n    type: 'blending',\r\n    description: 'High frequency vibration',\r\n    \r\n    // Default configuration\r\n    config: {\r\n        duration: 500,      // Animation duration\r\n        frequency: 20,      // Vibration frequency\r\n        amplitude: 8,       // Vibration amplitude\r\n        easing: 'linear',   // Animation curve type\r\n        strength: 2.0,      // Overall motion intensity\r\n        // Particle motion configuration for AnimationController\r\n        particleMotion: {\r\n            type: 'shake',\r\n            strength: 2.0,\r\n            frequency: 20,\r\n            amplitude: 8\r\n        }\r\n    },\r\n    \r\n    // Rhythm configuration - vibrate as tremolo effect\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'subdivision',\r\n        \r\n        // Vibration frequency syncs to tempo\r\n        frequencySync: {\r\n            subdivision: 'thirty-second',  // Very fast subdivisions\r\n            baseFrequency: 20,\r\n            tempoScaling: true  // Scale with BPM\r\n        },\r\n        \r\n        // Amplitude pulses with beat\r\n        amplitudeSync: {\r\n            onBeat: 1.5,\r\n            offBeat: 0.8,\r\n            curve: 'pulse'\r\n        },\r\n        \r\n        // Duration in musical time\r\n        durationSync: {\r\n            mode: 'beats',\r\n            beats: 1  // Vibrate for 1 beat\r\n        },\r\n        \r\n        // Pattern-specific vibration\r\n        patternOverrides: {\r\n            'dubstep': {\r\n                // Bass wobble vibration\r\n                frequencySync: { subdivision: 'sixteenth' },\r\n                amplitudeSync: { onBeat: 2.0, dropBeat: 3.0 }\r\n            },\r\n            'breakbeat': {\r\n                // Chaotic vibration\r\n                frequencySync: { mode: 'random', range: [15, 30] }\r\n            }\r\n        }\r\n    },\r\n    \r\n    initialize: function(particle, motion) {\r\n        if (!particle.gestureData) {\r\n            particle.gestureData = {};\r\n        }\r\n        particle.gestureData.vibrate = {\r\n            timer: 0,\r\n            seed: Math.random() * 1000,\r\n            initialized: true\r\n        };\r\n    },\r\n    \r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        if (!particle.gestureData?.vibrate?.initialized) {\r\n            this.initialize(particle, motion);\r\n        }\r\n        \r\n        const data = particle.gestureData.vibrate;\r\n        const config = { ...this.config, ...motion };\r\n        const strength = config.strength || this.config.strength || 1.0;\r\n        \r\n        // Apply rhythm modulation if present\r\n        let amplitude = config.amplitude;\r\n        let frequency = config.frequency;\r\n        if (motion.rhythmModulation) {\r\n            amplitude *= (motion.rhythmModulation.amplitudeMultiplier || 1);\r\n            amplitude *= (motion.rhythmModulation.accentMultiplier || 1);\r\n            if (motion.rhythmModulation.frequencyMultiplier) {\r\n                frequency *= motion.rhythmModulation.frequencyMultiplier;\r\n            }\r\n        }\r\n        \r\n        // Update timer\r\n        data.timer += dt * frequency;\r\n        \r\n        // High frequency vibration\r\n        const vibrateX = (Math.random() - 0.5) * amplitude * strength;\r\n        const vibrateY = (Math.random() - 0.5) * amplitude * strength;\r\n        \r\n        // Apply rapid vibration movements\r\n        particle.vx += vibrateX * 0.5 * dt;\r\n        particle.vy += vibrateY * 0.5 * dt;\r\n        \r\n        // Apply damping for control\r\n        particle.vx *= 0.9;\r\n        particle.vy *= 0.9;\r\n        \r\n        // Fade out at the end\r\n        if (progress > 0.8) {\r\n            const fadeFactor = 1 - ((progress - 0.8) * 5);\r\n            particle.vx *= fadeFactor;\r\n            particle.vy *= fadeFactor;\r\n        }\r\n    },\r\n    \r\n    cleanup: function(particle) {\r\n        if (particle.gestureData?.vibrate) {\r\n            delete particle.gestureData.vibrate;\r\n        }\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Orbit Gesture Motion\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview 3D orbital motion where particles circle around the orb\r\n * @author Emotive Engine Team\r\n * @module gestures/motions/orbit\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ Creates a mesmerizing 3D orbit effect where particles circle around the orb,      \r\n * ║ dynamically transitioning between foreground and background layers using the      \r\n * ║ z-coordinate system. Like planets orbiting a star or a hula-hoop in motion.       \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * VISUAL DIAGRAM (Top View):\r\n *     · → · → ·\r\n *   ↓           ↑\r\n *   ·    ⭐    ·   ← particles orbit around center\r\n *   ↑           ↓  \r\n *     · ← · ← ·\r\n * \r\n * VISUAL DIAGRAM (Side View):\r\n *   front  ·····   back\r\n *         /     \\\r\n *        ·   ⭐  ·  ← z-coordinate changes as particles orbit\r\n *         \\     /\r\n *   back   ·····   front\r\n */\r\n\r\n/**\r\n * Apply orbital motion to a particle\r\n * Particles orbit around the center with dynamic z-depth changes\r\n * \r\n * @param {Object} particle - The particle to animate\r\n * @param {Object} gestureData - Persistent data for this particle's gesture\r\n * @param {Object} config - Gesture configuration\r\n * @param {number} progress - Gesture progress (0-1)\r\n * @param {number} strength - Gesture strength multiplier\r\n * @param {number} centerX - Orb center X\r\n * @param {number} centerY - Orb center Y\r\n */\r\nexport function applyOrbit(particle, gestureData, config, progress, strength, centerX, centerY) {\r\n    // Initialize gesture data if needed\r\n    if (!gestureData.initialized) {\r\n        // Store original position and velocity\r\n        gestureData.originalX = particle.x;\r\n        gestureData.originalY = particle.y;\r\n        gestureData.originalZ = particle.z || 0;\r\n        gestureData.originalVx = particle.vx || 0;\r\n        gestureData.originalVy = particle.vy || 0;\r\n        \r\n        // Calculate initial angle and radius from center\r\n        const dx = particle.x - centerX;\r\n        const dy = particle.y - centerY;\r\n        gestureData.radius = Math.sqrt(dx * dx + dy * dy);\r\n        \r\n        // Ensure minimum radius to prevent clustering at center\r\n        if (gestureData.radius < 50) {\r\n            gestureData.radius = 50 + Math.random() * 100;\r\n        }\r\n        \r\n        gestureData.initialAngle = Math.atan2(dy, dx);\r\n        \r\n        // Random orbit parameters for variety\r\n        gestureData.orbitSpeed = config.speed * (0.8 + Math.random() * 0.4); // Speed variation\r\n        gestureData.orbitTilt = Math.random() * 0.3; // Slight tilt for realism\r\n        \r\n        gestureData.initialized = true;\r\n    }\r\n    \r\n    // Apply rhythm modulation if present\r\n    let rotations = config.rotations;\r\n    let radiusPulseAmount = 0.05;\r\n    if (config.rhythmModulation) {\r\n        if (config.rhythmModulation.speedMultiplier) {\r\n            gestureData.orbitSpeed *= config.rhythmModulation.speedMultiplier;\r\n        }\r\n        if (config.rhythmModulation.rotationMultiplier) {\r\n            rotations *= config.rhythmModulation.rotationMultiplier;\r\n        }\r\n        if (config.rhythmModulation.radiusPulse) {\r\n            radiusPulseAmount = config.rhythmModulation.radiusPulse;\r\n        }\r\n    }\r\n    \r\n    // Smooth entry/exit transitions\r\n    let transitionFactor = 1.0;\r\n    let velocityTransition = 1.0;\r\n    \r\n    if (progress < 0.15) {\r\n        // Smooth entry (first 15%)\r\n        transitionFactor = progress / 0.15;\r\n        transitionFactor = transitionFactor * transitionFactor * (3 - 2 * transitionFactor); // Smooth step\r\n        velocityTransition = transitionFactor;\r\n    } else if (progress > 0.85) {\r\n        // Smooth exit (last 15%)\r\n        transitionFactor = (1 - progress) / 0.15;\r\n        transitionFactor = transitionFactor * transitionFactor * (3 - 2 * transitionFactor); // Smooth step\r\n        velocityTransition = transitionFactor;\r\n    }\r\n    \r\n    // Calculate current angle based on progress with smooth acceleration\r\n    const angle = gestureData.initialAngle + (progress * Math.PI * 2 * rotations * transitionFactor);\r\n    \r\n    // Calculate orbital radius (can pulse slightly) with transition\r\n    const radiusPulse = 1 + Math.sin(progress * Math.PI * 4) * radiusPulseAmount * transitionFactor;\r\n    const currentRadius = gestureData.radius * strength * radiusPulse * transitionFactor;\r\n    \r\n    // Calculate new position in orbit\r\n    const targetX = centerX + Math.cos(angle) * currentRadius;\r\n    const targetY = centerY + Math.sin(angle) * currentRadius;\r\n    \r\n    // CRITICAL: Update z-coordinate for 3D effect with smooth transition\r\n    // Particles in front (positive z) when at top of orbit, behind (negative z) at bottom\r\n    const zAngle = angle * config.zRotations; // Can rotate in z-plane at different rate\r\n    particle.z = Math.sin(zAngle) * 0.8 * transitionFactor + gestureData.originalZ * (1 - transitionFactor);\r\n    \r\n    // During entry, smoothly transition from original position\r\n    if (progress < 0.15) {\r\n        const entryLerp = transitionFactor * 0.3; // Slower entry\r\n        particle.x = gestureData.originalX + (targetX - gestureData.originalX) * entryLerp;\r\n        particle.y = gestureData.originalY + (targetY - gestureData.originalY) * entryLerp;\r\n        \r\n        // Smooth velocity transition\r\n        const orbitalVx = -Math.sin(angle) * currentRadius * gestureData.orbitSpeed;\r\n        const orbitalVy = Math.cos(angle) * currentRadius * gestureData.orbitSpeed;\r\n        particle.vx = gestureData.originalVx + (orbitalVx - gestureData.originalVx) * velocityTransition;\r\n        particle.vy = gestureData.originalVy + (orbitalVy - gestureData.originalVy) * velocityTransition;\r\n    } \r\n    // During exit, smoothly return to original\r\n    else if (progress > 0.85) {\r\n        particle.x = targetX + (gestureData.originalX - targetX) * (1 - transitionFactor);\r\n        particle.y = targetY + (gestureData.originalY - targetY) * (1 - transitionFactor);\r\n        \r\n        // Smooth velocity transition back\r\n        const orbitalVx = -Math.sin(angle) * currentRadius * gestureData.orbitSpeed;\r\n        const orbitalVy = Math.cos(angle) * currentRadius * gestureData.orbitSpeed;\r\n        particle.vx = orbitalVx * velocityTransition + gestureData.originalVx * (1 - velocityTransition);\r\n        particle.vy = orbitalVy * velocityTransition + gestureData.originalVy * (1 - velocityTransition);\r\n    }\r\n    // Normal orbit\r\n    else {\r\n        // Add vertical oscillation for hula-hoop effect if enabled\r\n        if (config.verticalOscillation > 0) {\r\n            const verticalOffset = Math.sin(angle * 2) * config.verticalOscillation * strength;\r\n            particle.y = targetY + verticalOffset;\r\n            particle.x = targetX;\r\n        } else {\r\n            // Smooth interpolation to target position\r\n            const lerpFactor = config.smoothness || 0.1;\r\n            particle.x += (targetX - particle.x) * lerpFactor;\r\n            particle.y += (targetY - particle.y) * lerpFactor;\r\n        }\r\n        \r\n        // Set orbital velocity\r\n        particle.vx = -Math.sin(angle) * currentRadius * gestureData.orbitSpeed;\r\n        particle.vy = Math.cos(angle) * currentRadius * gestureData.orbitSpeed;\r\n    }\r\n    \r\n    // Apply centripetal acContinceleration effect (particles speed up when closer)\r\n    if (config.centripetal) {\r\n        const speed = 1 + (1 - Math.abs(particle.z)) * 0.3; // Speed varies with z-position\r\n        const speedAngle = gestureData.initialAngle + (progress * Math.PI * 2 * config.rotations * speed);\r\n        particle.x = centerX + Math.cos(speedAngle) * currentRadius;\r\n        particle.y = centerY + Math.sin(speedAngle) * currentRadius;\r\n    }\r\n}\r\n\r\n// Export gesture configuration\r\nexport default {\r\n    name: 'orbit',\r\n    emoji: '🪐',\r\n    description: '3D orbital motion around center',\r\n    type: 'override', // Takes full control of particle position\r\n    \r\n    // Default configuration\r\n    config: {\r\n        speed: 1.0,              // Base orbital speed\r\n        rotations: 1,            // Number of full rotations per gesture\r\n        zRotations: 1,           // Z-plane rotation ratio (1 = same as xy, 2 = twice as fast)\r\n        smoothness: 0.15,        // Position interpolation factor\r\n        verticalOscillation: 0,  // Hula-hoop vertical movement (0 = flat orbit)\r\n        centripetal: false,      // Enable speed variation based on position\r\n    },\r\n    \r\n    // Rhythm configuration - orbital motion syncs to musical cycles\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'bar',  // Complete orbit per bar\r\n        \r\n        // Orbital speed syncs to tempo\r\n        speedSync: {\r\n            mode: 'tempo',\r\n            baseSpeed: 1.0,\r\n            scaling: 'linear'  // Speed scales with BPM\r\n        },\r\n        \r\n        // Rotations per musical period\r\n        rotationSync: {\r\n            mode: 'bars',\r\n            rotationsPerBar: 1,  // One full orbit per bar\r\n            zSync: true  // Z-rotation also syncs\r\n        },\r\n        \r\n        // Radius pulses with beat\r\n        radiusSync: {\r\n            subdivision: 'quarter',\r\n            pulsAmount: 0.1,  // 10% radius variation\r\n            curve: 'ease'\r\n        },\r\n        \r\n        // Pattern-specific orbital styles\r\n        patternOverrides: {\r\n            'waltz': {\r\n                // Elegant 3-step orbit\r\n                rotationSync: { rotationsPerBar: 0.75 },\r\n                radiusSync: { pulsAmount: 0.15 }\r\n            },\r\n            'swing': {\r\n                // Jazzy elliptical orbit\r\n                speedSync: { mode: 'swing', ratio: 0.67 },\r\n                verticalOscillation: 0.2\r\n            },\r\n            'dubstep': {\r\n                // Wobbling orbit with drops\r\n                radiusSync: { \r\n                    subdivision: 'eighth',\r\n                    pulsAmount: 0.3,\r\n                    dropMultiplier: 2.0\r\n                }\r\n            },\r\n            'breakbeat': {\r\n                // Chaotic orbital patterns\r\n                speedSync: { mode: 'random', range: [0.5, 2.0] },\r\n                centripetal: true\r\n            }\r\n        }\r\n    },\r\n    \r\n    // Apply function\r\n    apply: applyOrbit,\r\n    \r\n    // Supported emotions (great for mystical/energetic states)\r\n    emotions: ['zen', 'love', 'excited', 'surprise'],\r\n    \r\n    // Gesture-specific features\r\n    features: {\r\n        uses3D: true,           // Uses z-coordinate system\r\n        smooth: true,           // Smooth continuous motion\r\n        looping: true,          // Natural looping animation\r\n        dramatic: true          // Visually impressive effect\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Twitch Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Paranoid twitching motion for suspicious/nervous states\r\n * @author Emotive Engine Team\r\n * @module gestures/motions/twitch\r\n * \r\n * GESTURE TYPE:\r\n * type: 'blending' - Adds to existing particle motion\r\n * \r\n * VISUAL EFFECT:\r\n * Random, sudden jerky movements that blend with existing behavior.\r\n * Creates a nervous, paranoid feeling with unpredictable micro-movements.\r\n */\r\n\r\nexport default {\r\n    name: 'twitch',\r\n    emoji: '⚡',\r\n    type: 'blending',\r\n    description: 'Nervous, paranoid twitching',\r\n    \r\n    // Default configuration\r\n    config: {\r\n        intensity: 8,           // Twitch strength\r\n        frequency: 0.08,        // Chance of twitching per frame\r\n        duration: 100,          // How long each twitch lasts (ms)\r\n        recovery: 200,          // Recovery time between twitches\r\n        maxOffset: 15,          // Maximum twitch distance\r\n        sharpness: 0.9         // How sudden the movements are\r\n    },\r\n    \r\n    // Rhythm configuration - twitch syncs to nervous subdivisions\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'subdivision',\r\n        \r\n        // Twitch probability increases on beat\r\n        probabilitySync: {\r\n            subdivision: 'sixteenth',\r\n            onBeat: 0.3,        // 30% chance on beat\r\n            offBeat: 0.05,      // 5% chance off beat\r\n            accentBoost: 2.0    // Double on accents\r\n        },\r\n        \r\n        // Intensity follows rhythm\r\n        intensitySync: {\r\n            onBeat: 2.0,\r\n            offBeat: 0.8,\r\n            curve: 'pulse'      // Sharp, sudden\r\n        },\r\n        \r\n        // Pattern-specific twitching\r\n        patternOverrides: {\r\n            'breakbeat': {\r\n                // Erratic broken twitches\r\n                probabilitySync: { onBeat: 0.5, offBeat: 0.1 },\r\n                intensitySync: { onBeat: 3.0, offBeat: 0.5 }\r\n            },\r\n            'dubstep': {\r\n                // Heavy twitch on drop\r\n                intensitySync: {\r\n                    onBeat: 1.5,\r\n                    dropBeat: 5.0,\r\n                    curve: 'pulse'\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        // Initialize twitch data if needed\r\n        if (!particle.gestureData) {\r\n            particle.gestureData = {};\r\n        }\r\n        \r\n        if (!particle.gestureData.twitch) {\r\n            particle.gestureData.twitch = {\r\n                twitchOffset: { x: 0, y: 0 },\r\n                targetOffset: { x: 0, y: 0 },\r\n                isTwitching: false,\r\n                twitchTimer: 0,\r\n                cooldownTimer: 0,\r\n                lastTwitch: 0\r\n            };\r\n        }\r\n        \r\n        const data = particle.gestureData.twitch;\r\n        const config = this.config;\r\n        let intensity = motion.intensity || config.intensity;\r\n        let frequency = config.frequency;\r\n        \r\n        // Apply rhythm modulation if present\r\n        if (motion.rhythmModulation) {\r\n            intensity *= (motion.rhythmModulation.amplitudeMultiplier || 1);\r\n            intensity *= (motion.rhythmModulation.accentMultiplier || 1);\r\n            if (motion.rhythmModulation.probabilityMultiplier) {\r\n                frequency *= motion.rhythmModulation.probabilityMultiplier;\r\n            }\r\n        }\r\n        \r\n        // Update timers\r\n        const currentTime = Date.now();\r\n        \r\n        // Check for new twitch\r\n        if (!data.isTwitching && data.cooldownTimer <= 0) {\r\n            if (Math.random() < (motion.frequency || config.frequency)) {\r\n                // Start a new twitch\r\n                data.isTwitching = true;\r\n                data.twitchTimer = config.duration;\r\n                data.cooldownTimer = config.recovery;\r\n                \r\n                // Random twitch direction and distance\r\n                const angle = Math.random() * Math.PI * 2;\r\n                const distance = (config.maxOffset * 0.5) + Math.random() * (config.maxOffset * 0.5);\r\n                \r\n                data.targetOffset = {\r\n                    x: Math.cos(angle) * distance * intensity / 8,\r\n                    y: Math.sin(angle) * distance * intensity / 8\r\n                };\r\n                \r\n                data.lastTwitch = currentTime;\r\n            }\r\n        }\r\n        \r\n        // Update cooldown\r\n        if (data.cooldownTimer > 0) {\r\n            data.cooldownTimer -= dt * 16;\r\n        }\r\n        \r\n        // Apply twitch motion\r\n        if (data.isTwitching) {\r\n            data.twitchTimer -= dt * 16;\r\n            \r\n            if (data.twitchTimer > 0) {\r\n                // Sharp movement toward target\r\n                const sharpness = config.sharpness;\r\n                data.twitchOffset.x += (data.targetOffset.x - data.twitchOffset.x) * sharpness;\r\n                data.twitchOffset.y += (data.targetOffset.y - data.twitchOffset.y) * sharpness;\r\n            } else {\r\n                // Twitch complete, start returning\r\n                data.isTwitching = false;\r\n            }\r\n        } else {\r\n            // Return to normal position\r\n            data.twitchOffset.x *= 0.85;\r\n            data.twitchOffset.y *= 0.85;\r\n        }\r\n        \r\n        // Apply the twitch offset to velocity (blending mode)\r\n        particle.vx += data.twitchOffset.x * dt * 0.5;\r\n        particle.vy += data.twitchOffset.y * dt * 0.5;\r\n        \r\n        // Add micro-jitter for constant nervousness\r\n        if (Math.random() < 0.1) {\r\n            particle.vx += (Math.random() - 0.5) * intensity * 0.3;\r\n            particle.vy += (Math.random() - 0.5) * intensity * 0.3;\r\n        }\r\n    },\r\n    \r\n    cleanup: function(particle) {\r\n        if (particle.gestureData?.twitch) {\r\n            delete particle.gestureData.twitch;\r\n        }\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Sway Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n */\r\n\r\nexport default {\r\n    name: 'sway',\r\n    type: 'blending',\r\n    emoji: '🌊',\r\n    description: 'Gentle side-to-side swaying motion',\r\n    \r\n    config: {\r\n        duration: 2000,\r\n        amplitude: 20,\r\n        frequency: 1,\r\n        strength: 0.5\r\n    },\r\n    \r\n    // Rhythm configuration - sway naturally follows the beat\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'bar',  // Sway completes one cycle per bar\r\n        \r\n        // Amplitude increases on downbeats\r\n        amplitudeSync: {\r\n            onBeat: 1.2,\r\n            offBeat: 0.9,\r\n            curve: 'ease'  // Smooth transitions\r\n        },\r\n        \r\n        // Duration syncs to bars for natural rhythm\r\n        durationSync: {\r\n            mode: 'bars',\r\n            bars: 1  // One full sway per bar\r\n        },\r\n        \r\n        // Pattern-specific swaying\r\n        patternOverrides: {\r\n            'waltz': {\r\n                // 3/4 time creates elegant waltz sway\r\n                durationSync: { bars: 1 },\r\n                amplitudeSync: { onBeat: 1.5, curve: 'ease' }\r\n            },\r\n            'swing': {\r\n                // Jazzy swing sway\r\n                amplitudeSync: { onBeat: 1.3, offBeat: 0.7, curve: 'bounce' }\r\n            }\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Apply sway motion to particle\r\n     * @param {Particle} particle - The particle to animate\r\n     * @param {number} progress - Gesture progress (0-1)\r\n     * @param {Object} motion - Gesture configuration\r\n     * @param {number} dt - Delta time\r\n     * @param {number} centerX - Orb center X\r\n     * @param {number} centerY - Orb center Y\r\n     */\r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        const config = { ...this.config, ...motion };\r\n        const amplitude = config.amplitude || this.config.amplitude;\r\n        const frequency = config.frequency || this.config.frequency;\r\n        const strength = config.strength || this.config.strength;\r\n        \r\n        // Smooth side-to-side motion\r\n        const sway = Math.sin(progress * Math.PI * 2 * frequency) * amplitude;\r\n        \r\n        // Apply horizontal sway\r\n        particle.vx += sway * 0.01 * dt * strength;\r\n        \r\n        // Slight vertical drift for natural feel\r\n        particle.vy += Math.cos(progress * Math.PI * 4) * 0.5 * dt * strength;\r\n    },\r\n    \r\n    /**\r\n     * Clean up gesture data when complete\r\n     * @param {Particle} particle - The particle to clean up\r\n     */\r\n    cleanup: function(particle) {\r\n        // No cleanup needed for sway\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Float Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n */\r\n\r\nexport default {\r\n    name: 'float',\r\n    type: 'blending',\r\n    emoji: '🎈',\r\n    description: 'Gentle floating upward motion',\r\n    \r\n    config: {\r\n        duration: 2000,\r\n        amplitude: 80,  // Increased for more visible effect\r\n        wobbleAmount: 20,  // More wobble\r\n        strength: 1.0  // Full strength\r\n    },\r\n    \r\n    // Rhythm configuration - defines how this gesture responds to musical timing\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'beat',  // 'beat', 'bar', 'continuous', or 'none'\r\n        \r\n        // How amplitude changes with beat\r\n        amplitudeSync: {\r\n            onBeat: 1.5,      // Multiply amplitude on beat\r\n            offBeat: 0.8,     // Reduce amplitude off beat\r\n            curve: 'bounce'   // Animation curve: 'linear', 'ease', 'bounce', 'pulse'\r\n        },\r\n        \r\n        // How wobble syncs to subdivisions\r\n        wobbleSync: {\r\n            subdivision: 'eighth',  // Sync to 8th notes\r\n            intensity: 0.7          // How much rhythm affects wobble\r\n        },\r\n        \r\n        // Duration can sync to musical time\r\n        durationSync: {\r\n            mode: 'bars',     // Duration in bars instead of milliseconds\r\n            bars: 2           // Float for 2 bars\r\n        },\r\n        \r\n        // Response to musical accents\r\n        accentResponse: {\r\n            enabled: true,\r\n            multiplier: 1.3   // Boost effect on accented beats\r\n        },\r\n        \r\n        // Optional: Different behavior for different patterns\r\n        patternOverrides: {\r\n            'waltz': {\r\n                wobbleSync: { subdivision: 'quarter', intensity: 0.9 }\r\n            },\r\n            'dubstep': {\r\n                amplitudeSync: { onBeat: 2.0, curve: 'pulse' }\r\n            }\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Apply float motion to particle\r\n     * @param {Particle} particle - The particle to animate\r\n     * @param {number} progress - Gesture progress (0-1)\r\n     * @param {Object} motion - Gesture configuration\r\n     * @param {number} dt - Delta time\r\n     * @param {number} centerX - Orb center X\r\n     * @param {number} centerY - Orb center Y\r\n     */\r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        // Store original values on first frame\r\n        if (!particle.gestureData) {\r\n            particle.gestureData = {};\r\n        }\r\n        if (!particle.gestureData.float) {\r\n            particle.gestureData.float = {\r\n                originalSize: particle.size,\r\n                originalOpacity: particle.opacity || 1\r\n            };\r\n        }\r\n        \r\n        const config = { ...this.config, ...motion };\r\n        let amplitude = config.amplitude || this.config.amplitude;\r\n        let wobbleAmount = config.wobbleAmount || this.config.wobbleAmount;\r\n        const strength = config.strength || this.config.strength;\r\n        \r\n        // Apply rhythm modulation if present (passed from GestureMotion.js)\r\n        if (motion.rhythmModulation) {\r\n            amplitude *= (motion.rhythmModulation.amplitudeMultiplier || 1);\r\n            amplitude *= (motion.rhythmModulation.accentMultiplier || 1);\r\n            wobbleAmount *= (motion.rhythmModulation.wobbleMultiplier || 1);\r\n        }\r\n        \r\n        // Upward floating with slight wobble\r\n        const wobble = Math.sin(progress * Math.PI * 4) * wobbleAmount;\r\n        \r\n        // Apply upward force and wobble\r\n        particle.vy -= amplitude * 0.01 * dt * strength * (1 - progress * 0.5);\r\n        particle.vx += wobble * 0.01 * dt * strength;\r\n        \r\n        // Slight size variation for depth effect\r\n        particle.size = particle.baseSize * (1 + progress * 0.1);\r\n        \r\n        // Fade slightly as it floats up\r\n        particle.opacity = 1 - progress * 0.3;\r\n    },\r\n    \r\n    /**\r\n     * Clean up gesture data when complete\r\n     * @param {Particle} particle - The particle to clean up\r\n     */\r\n    cleanup: function(particle) {\r\n        // Reset to original values\r\n        if (particle.gestureData?.float) {\r\n            particle.opacity = particle.gestureData.float.originalOpacity;\r\n            particle.size = particle.gestureData.float.originalSize;\r\n            delete particle.gestureData.float;\r\n        } else {\r\n            // Fallback if no data stored\r\n            particle.opacity = 1;\r\n            particle.size = particle.baseSize;\r\n        }\r\n        \r\n        // Dampen velocity to help particle settle\r\n        particle.vx *= 0.5;\r\n        particle.vy *= 0.5;\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Jitter Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n */\r\n\r\nexport default {\r\n    name: 'jitter',\r\n    type: 'blending',\r\n    emoji: '🫨',\r\n    description: 'Nervous jittery movement',\r\n    \r\n    config: {\r\n        duration: 1000,\r\n        intensity: 15,  // Increased for more visible jitter\r\n        frequency: 30,  // Higher frequency\r\n        strength: 1.0  // Full strength\r\n    },\r\n    \r\n    // Rhythm configuration - jitter intensifies on beat\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'beat',\r\n        \r\n        // Jitter intensity syncs to beat\r\n        amplitudeSync: {\r\n            onBeat: 2.0,      // Double jitter on beat\r\n            offBeat: 0.5,     // Calmer between beats\r\n            curve: 'pulse'    // Sharp attack\r\n        },\r\n        \r\n        // Different patterns create different nervousness\r\n        patternOverrides: {\r\n            'breakbeat': {\r\n                // Chaotic jitter for breakbeat\r\n                amplitudeSync: { onBeat: 3.0, offBeat: 0.3 }\r\n            },\r\n            'dubstep': {\r\n                // Freeze then explode\r\n                amplitudeSync: { onBeat: 5.0, offBeat: 0.1, curve: 'pulse' }\r\n            }\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Apply jitter motion to particle\r\n     * @param {Particle} particle - The particle to animate\r\n     * @param {number} progress - Gesture progress (0-1)\r\n     * @param {Object} motion - Gesture configuration\r\n     * @param {number} dt - Delta time\r\n     * @param {number} centerX - Orb center X\r\n     * @param {number} centerY - Orb center Y\r\n     */\r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        // Store original values on first frame\r\n        if (!particle.gestureData) {\r\n            particle.gestureData = {};\r\n        }\r\n        if (!particle.gestureData.jitter) {\r\n            particle.gestureData.jitter = {\r\n                originalSize: particle.size\r\n            };\r\n        }\r\n        \r\n        const config = { ...this.config, ...motion };\r\n        let intensity = config.intensity || this.config.intensity;\r\n        const strength = config.strength || this.config.strength;\r\n        \r\n        // Apply rhythm modulation if present\r\n        if (motion.rhythmModulation) {\r\n            intensity *= (motion.rhythmModulation.amplitudeMultiplier || 1);\r\n            intensity *= (motion.rhythmModulation.accentMultiplier || 1);\r\n        }\r\n        \r\n        // Random jitter in both directions\r\n        const jitterX = (Math.random() - 0.5) * intensity * strength;\r\n        const jitterY = (Math.random() - 0.5) * intensity * strength;\r\n        \r\n        // Apply jitter with decreasing intensity over time\r\n        const fadeOut = 1 - progress * 0.5;\r\n        particle.vx += jitterX * 0.1 * dt * fadeOut;\r\n        particle.vy += jitterY * 0.1 * dt * fadeOut;\r\n        \r\n        // Slight size variation for nervous effect\r\n        particle.size = particle.baseSize * (1 + (Math.random() - 0.5) * 0.1);\r\n    },\r\n    \r\n    /**\r\n     * Clean up gesture data when complete\r\n     * @param {Particle} particle - The particle to clean up\r\n     */\r\n    cleanup: function(particle) {\r\n        // Reset to original values\r\n        if (particle.gestureData?.jitter) {\r\n            particle.size = particle.gestureData.jitter.originalSize;\r\n            delete particle.gestureData.jitter;\r\n        } else {\r\n            particle.size = particle.baseSize;\r\n        }\r\n        \r\n        // Dampen velocity to help particle settle\r\n        particle.vx *= 0.7;\r\n        particle.vy *= 0.7;\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Spin Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Spin gesture - orbital rotation around center\r\n * @author Emotive Engine Team\r\n * @module gestures/transforms/spin\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ Creates a spinning vortex effect with particles orbiting around the center.       \r\n * ║ This is an OVERRIDE gesture that completely replaces particle motion.             \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * VISUAL DIAGRAM:\r\n *        ↻ Clockwise rotation\r\n *      · → ·\r\n *     ↓     ↑\r\n *    · ← ⭐ → ·\r\n *     ↑     ↓  \r\n *      · ← ·\r\n * \r\n * USED BY:\r\n * - Dizzy/confused states\r\n * - Celebration spins\r\n * - Whirlwind effects\r\n * - Portal/vortex animations\r\n */\r\n\r\n/**\r\n * Spin gesture configuration and implementation\r\n */\r\nexport default {\r\n    name: 'spin',\r\n    emoji: '🌀',\r\n    type: 'override', // Completely replaces motion\r\n    description: 'Orbital rotation around center point',\r\n    \r\n    // Default configuration\r\n    config: {\r\n        duration: 600,          // Legacy fallback\r\n        musicalDuration: { musical: true, beats: 1 }, // 1 beat (quarter note)\r\n        rotations: 1,           // Number of full rotations\r\n        direction: 'random',    // 'clockwise', 'counter-clockwise', or 'random'\r\n        radiusMultiplier: 1.0,  // Orbital radius multiplier\r\n        spiralOut: false,       // Spiral outward while spinning\r\n        accelerate: true,       // Speed up then slow down\r\n        maintainDistance: true, // Keep relative distance from center\r\n        scaleAmount: 0.1,       // Scale change during spin\r\n        easing: 'linear',       // Animation curve type\r\n        strength: 0.7,          // Particle motion strength\r\n        // Particle motion configuration for AnimationController\r\n        particleMotion: {\r\n            type: 'spin',\r\n            strength: 0.7,\r\n            rotations: 1,\r\n            radius: 1.0\r\n        }\r\n    },\r\n    \r\n    // Rhythm configuration - spin as a dance move\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'bar',\r\n        \r\n        // Rotations sync to musical time\r\n        rotationSync: {\r\n            mode: 'bars',\r\n            rotationsPerBar: 1,  // One spin per bar\r\n            accelerateOnBeat: true  // Speed up on downbeats\r\n        },\r\n        \r\n        // Radius changes with beat\r\n        radiusSync: {\r\n            subdivision: 'quarter',\r\n            expandOnBeat: 1.2,\r\n            contractOffBeat: 0.9,\r\n            curve: 'bounce'\r\n        },\r\n        \r\n        // Duration in musical time\r\n        durationSync: {\r\n            mode: 'beats',\r\n            beats: 4  // Spin for 4 beats (1 bar)\r\n        },\r\n        \r\n        // Pattern-specific spins\r\n        patternOverrides: {\r\n            'waltz': {\r\n                // Elegant waltz spin\r\n                rotationSync: { rotationsPerBar: 0.75 },\r\n                radiusSync: { curve: 'ease' }\r\n            },\r\n            'swing': {\r\n                // Jazzy swing spin\r\n                rotationSync: { accelerateOnBeat: false },\r\n                direction: 'alternating'  // Change direction each bar\r\n            },\r\n            'dubstep': {\r\n                // Aggressive spin with wobble\r\n                radiusSync: {\r\n                    subdivision: 'eighth',\r\n                    expandOnBeat: 1.5,\r\n                    dropMultiplier: 2.0\r\n                },\r\n                spiralOut: true\r\n            },\r\n            'breakbeat': {\r\n                // Chaotic spin patterns\r\n                rotationSync: { mode: 'random', range: [0.5, 2] },\r\n                direction: 'random'\r\n            }\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Initialize gesture data for a particle\r\n     * @param {Particle} particle - The particle to initialize\r\n     * @param {Object} motion - Gesture motion configuration\r\n     * @param {number} centerX - Orb center X\r\n     * @param {number} centerY - Orb center Y\r\n     */\r\n    initialize: function(particle, motion, centerX, centerY) {\r\n        if (!particle.gestureData) {\r\n            particle.gestureData = {};\r\n        }\r\n        \r\n        // Calculate starting position relative to center\r\n        const dx = particle.x - centerX;\r\n        const dy = particle.y - centerY;\r\n        \r\n        // Determine spin direction\r\n        let direction = motion.direction || this.config.direction;\r\n        if (direction === 'random') {\r\n            direction = Math.random() < 0.5 ? 'clockwise' : 'counter-clockwise';\r\n        }\r\n        \r\n        particle.gestureData.spin = {\r\n            startAngle: Math.atan2(dy, dx),\r\n            startRadius: Math.sqrt(dx * dx + dy * dy) || 30, // Min radius if at center\r\n            originalX: particle.x,\r\n            originalY: particle.y,\r\n            originalVx: particle.vx,\r\n            originalVy: particle.vy,\r\n            direction: direction, // Store chosen direction\r\n            initialized: true\r\n        };\r\n    },\r\n    \r\n    /**\r\n     * Apply spin motion to particle\r\n     * @param {Particle} particle - The particle to animate\r\n     * @param {number} progress - Gesture progress (0-1)\r\n     * @param {Object} motion - Gesture configuration\r\n     * @param {number} dt - Delta time\r\n     * @param {number} centerX - Orb center X\r\n     * @param {number} centerY - Orb center Y\r\n     */\r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        // Initialize on first frame\r\n        if (!particle.gestureData?.spin?.initialized) {\r\n            this.initialize(particle, motion, centerX, centerY);\r\n        }\r\n        \r\n        const data = particle.gestureData.spin;\r\n        const config = { ...this.config, ...motion };\r\n        const strength = motion.strength || 1.0;\r\n        \r\n        // Apply rhythm modulation if present\r\n        let rotations = config.rotations;\r\n        let radiusMultiplier = config.radiusMultiplier;\r\n        if (motion.rhythmModulation) {\r\n            if (motion.rhythmModulation.rotationMultiplier) {\r\n                rotations *= motion.rhythmModulation.rotationMultiplier;\r\n            }\r\n            if (motion.rhythmModulation.radiusMultiplier) {\r\n                radiusMultiplier *= motion.rhythmModulation.radiusMultiplier;\r\n            }\r\n        }\r\n        \r\n        // Apply acceleration curve if enabled\r\n        let speedProgress = progress;\r\n        if (config.accelerate) {\r\n            // Speed up for first half, slow down for second half\r\n            if (progress < 0.5) {\r\n                speedProgress = this.easeInQuad(progress * 2) * 0.5;\r\n            } else {\r\n                speedProgress = 0.5 + this.easeOutQuad((progress - 0.5) * 2) * 0.5;\r\n            }\r\n        }\r\n        \r\n        // Calculate rotation angle using stored direction\r\n        const rotationAmount = rotations * Math.PI * 2 * strength;\r\n        const direction = data.direction === 'counter-clockwise' ? -1 : 1;\r\n        const currentAngle = data.startAngle + (rotationAmount * speedProgress * direction);\r\n        \r\n        // Calculate radius (with optional spiral)\r\n        let currentRadius = data.startRadius;\r\n        if (config.spiralOut) {\r\n            currentRadius *= (1 + progress * 0.5); // Expand outward during spin\r\n        }\r\n        if (radiusMultiplier !== 1) {\r\n            // Apply radius multiplier with smooth curve\r\n            const radiusCurve = Math.sin(progress * Math.PI); // Peak at middle\r\n            currentRadius *= (1 + (radiusMultiplier - 1) * radiusCurve);\r\n        }\r\n        \r\n        // Calculate target position\r\n        const targetX = centerX + Math.cos(currentAngle) * currentRadius;\r\n        const targetY = centerY + Math.sin(currentAngle) * currentRadius;\r\n        \r\n        // For override gesture, directly set position with smooth interpolation\r\n        const moveSpeed = 0.25; // Adjust for smoothness\r\n        particle.x += (targetX - particle.x) * moveSpeed;\r\n        particle.y += (targetY - particle.y) * moveSpeed;\r\n        \r\n        // Set velocity to match movement (for trail effects)\r\n        particle.vx = (targetX - particle.x) * 0.5;\r\n        particle.vy = (targetY - particle.y) * 0.5;\r\n        \r\n        // Smooth ending - return to original velocities\r\n        if (progress > 0.9) {\r\n            const endFactor = (1 - progress) * 10;\r\n            particle.vx = particle.vx * endFactor + data.originalVx * (1 - endFactor);\r\n            particle.vy = particle.vy * endFactor + data.originalVy * (1 - endFactor);\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Clean up gesture data when complete\r\n     * @param {Particle} particle - The particle to clean up\r\n     */\r\n    cleanup: function(particle) {\r\n        if (particle.gestureData?.spin) {\r\n            // Restore original velocities\r\n            const data = particle.gestureData.spin;\r\n            particle.vx = data.originalVx;\r\n            particle.vy = data.originalVy;\r\n            delete particle.gestureData.spin;\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Easing function for acceleration\r\n     * @param {number} t - Progress (0-1)\r\n     * @returns {number} Eased value\r\n     */\r\n    easeInQuad: function(t) {\r\n        return t * t;\r\n    },\r\n    \r\n    /**\r\n     * Easing function for deceleration\r\n     * @param {number} t - Progress (0-1)\r\n     * @returns {number} Eased value\r\n     */\r\n    easeOutQuad: function(t) {\r\n        return t * (2 - t);\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Jump Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Jump gesture - squash, leap, and land animation\r\n * @author Emotive Engine Team\r\n * @module gestures/transforms/jump\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ Creates a classic jump animation with squash & stretch principles. Particles       \r\n * ║ compress before jumping, stretch during flight, and squash on landing.            \r\n * ║ This is an OVERRIDE gesture that completely controls particle motion.             \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * VISUAL DIAGRAM:\r\n *    Phase 1: Squash    Phase 2: Jump      Phase 3: Land\r\n *         ⭐              ↗ ⭐ ↘              ⭐\r\n *         ___            /     \\             ___\r\n *     (compressed)     (stretched)       (squashed)\r\n * \r\n * USED BY:\r\n * - Joy/excitement expressions\r\n * - Surprise reactions\r\n * - Celebration animations\r\n * - Playful interactions\r\n */\r\n\r\n/**\r\n * Jump gesture configuration and implementation\r\n */\r\nexport default {\r\n    name: 'jump',\r\n    emoji: '🦘',\r\n    type: 'override', // Completely replaces motion\r\n    description: 'Squash, leap, and land with classic animation principles',\r\n    \r\n    // Default configuration\r\n    config: {\r\n        duration: 800,         // Animation duration\r\n        jumpHeight: 60,        // Maximum vertical leap distance\r\n        squashAmount: 0.8,     // Compression ratio during squash\r\n        stretchAmount: 1.2,    // Extension ratio during stretch\r\n        anticipation: 0.2,     // Pre-jump preparation duration ratio\r\n        hangTime: 0.1,         // Pause duration at jump peak\r\n        landingImpact: true,   // Enable landing squash effect\r\n        driftOutward: true,    // Particles spread during jump\r\n        easing: 'quad',        // Animation curve type\r\n        // Particle motion configuration for AnimationController\r\n        particleMotion: {\r\n            type: 'jump',\r\n            strength: 0.9,         // Jump motion intensity\r\n            jumpHeight: 60,        // Particle jump height\r\n            squash: 0.8,          // Particle compression amount\r\n            stretch: 1.2          // Particle extension amount\r\n        }\r\n    },\r\n    \r\n    // Rhythm configuration - jump lands on beat\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'beat',  // Jump timing syncs to beat\r\n        \r\n        // Jump phases sync to rhythm\r\n        phaseSync: {\r\n            anticipation: 'eighth',    // Squash on 8th note before beat\r\n            jump: 'beat',              // Launch on the beat\r\n            landing: 'sixteenth'       // Land on 16th after beat\r\n        },\r\n        \r\n        // Jump height modulation\r\n        heightSync: {\r\n            onBeat: 1.5,              // Higher jumps on strong beats\r\n            offBeat: 0.8,             // Lower jumps on weak beats\r\n            accent: 2.0,              // Extra high on accented beats\r\n            curve: 'exponential'      // Sharp takeoff\r\n        },\r\n        \r\n        // Squash and stretch intensity\r\n        deformationSync: {\r\n            squashOnBeat: 0.6,        // More squash on beat\r\n            stretchOnBeat: 1.4,       // More stretch on beat\r\n            timing: 'anticipatory'    // Deform before beat hits\r\n        },\r\n        \r\n        // Hang time varies with tempo\r\n        hangTimeSync: {\r\n            mode: 'tempo',\r\n            baseDuration: 0.1,        // Base hang at 120 BPM\r\n            scaling: 'inverse'        // Slower tempo = longer hang\r\n        },\r\n        \r\n        // Musical dynamics\r\n        dynamics: {\r\n            forte: { jumpHeight: 80, stretch: 1.3 },   // Big jumps on loud\r\n            piano: { jumpHeight: 30, stretch: 1.1 }    // Small hops on soft\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Initialize gesture data for a particle\r\n     * @param {Particle} particle - The particle to initialize\r\n     * @param {Object} motion - Gesture motion configuration\r\n     * @param {number} centerX - Orb center X\r\n     * @param {number} centerY - Orb center Y\r\n     */\r\n    initialize: function(particle, motion, centerX, centerY) {\r\n        if (!particle.gestureData) {\r\n            particle.gestureData = {};\r\n        }\r\n        \r\n        particle.gestureData.jump = {\r\n            startX: particle.x,\r\n            startY: particle.y,\r\n            startSize: particle.size,\r\n            originalVx: particle.vx,\r\n            originalVy: particle.vy,\r\n            driftDirection: (particle.x - centerX) * 0.1, // Drift away from center\r\n            initialized: true\r\n        };\r\n    },\r\n    \r\n    /**\r\n     * Apply jump motion to particle\r\n     * @param {Particle} particle - The particle to animate\r\n     * @param {number} progress - Gesture progress (0-1)\r\n     * @param {Object} motion - Gesture configuration\r\n     * @param {number} dt - Delta time\r\n     * @param {number} centerX - Orb center X\r\n     * @param {number} centerY - Orb center Y\r\n     */\r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        // Initialize on first frame\r\n        if (!particle.gestureData?.jump?.initialized) {\r\n            this.initialize(particle, motion, centerX, centerY);\r\n        }\r\n        \r\n        const data = particle.gestureData.jump;\r\n        const config = { ...this.config, ...motion };\r\n        const strength = motion.strength || 1.0;\r\n        \r\n        const jumpHeight = config.jumpHeight * strength * particle.scaleFactor;\r\n        const squash = config.squashAmount;\r\n        const stretch = config.stretchAmount;\r\n        \r\n        // Define phase breakpoints\r\n        const anticipationEnd = config.anticipation;\r\n        const jumpEnd = 1 - config.anticipation * 0.5; // Leave time for landing\r\n        \r\n        if (progress < anticipationEnd) {\r\n            // PHASE 1: Anticipation (squash down)\r\n            const squashProgress = progress / anticipationEnd;\r\n            const easedSquash = this.easeOutQuad(squashProgress);\r\n            \r\n            // Squash size\r\n            particle.size = data.startSize * (1 - (1 - squash) * easedSquash);\r\n            \r\n            // Slightly lower position (crouch)\r\n            particle.y = data.startY + easedSquash * 5 * particle.scaleFactor;\r\n            \r\n            // Stop horizontal movement during anticipation\r\n            particle.vx = 0;\r\n            particle.vy = 0;\r\n            \r\n        } else if (progress < jumpEnd) {\r\n            // PHASE 2: Jump (arc motion with stretch)\r\n            const jumpProgress = (progress - anticipationEnd) / (jumpEnd - anticipationEnd);\r\n            \r\n            // Use sine curve for smooth arc\r\n            let jumpCurve = Math.sin(jumpProgress * Math.PI);\r\n            \r\n            // Add hang time at peak\r\n            if (config.hangTime > 0 && jumpProgress > 0.4 && jumpProgress < 0.6) {\r\n                const hangProgress = (jumpProgress - 0.4) / 0.2;\r\n                const hangCurve = this.easeInOutCubic(hangProgress);\r\n                jumpCurve = 0.95 + hangCurve * 0.05; // Flatten at peak\r\n            }\r\n            \r\n            // Vertical position\r\n            particle.y = data.startY - jumpCurve * jumpHeight;\r\n            \r\n            // Horizontal drift if enabled\r\n            if (config.driftOutward) {\r\n                particle.x = data.startX + jumpCurve * data.driftDirection;\r\n            }\r\n            \r\n            // Stretch/squash based on velocity\r\n            if (jumpProgress < 0.5) {\r\n                // Going up - stretch\r\n                const stretchProgress = jumpProgress * 2;\r\n                particle.size = data.startSize * (squash + (stretch - squash) * stretchProgress);\r\n            } else {\r\n                // Coming down - return to normal then squash slightly\r\n                const fallProgress = (jumpProgress - 0.5) * 2;\r\n                particle.size = data.startSize * (stretch - (stretch - 1) * fallProgress * 0.8);\r\n            }\r\n            \r\n            // Set velocity for motion blur/trails\r\n            particle.vx = data.driftDirection * 0.5;\r\n            particle.vy = -Math.cos(jumpProgress * Math.PI) * jumpHeight * 0.1;\r\n            \r\n        } else {\r\n            // PHASE 3: Landing (impact squash)\r\n            const landProgress = (progress - jumpEnd) / (1 - jumpEnd);\r\n            const easedLand = this.easeOutBounce(landProgress);\r\n            \r\n            // Return to ground with bounce\r\n            particle.y = data.startY;\r\n            \r\n            if (config.landingImpact) {\r\n                // Landing squash effect\r\n                if (landProgress < 0.3) {\r\n                    const impactProgress = landProgress / 0.3;\r\n                    particle.size = data.startSize * (1 - (1 - squash * 0.8) * (1 - impactProgress));\r\n                } else {\r\n                    // Recover from squash\r\n                    const recoverProgress = (landProgress - 0.3) / 0.7;\r\n                    particle.size = data.startSize * (squash * 0.8 + (1 - squash * 0.8) * recoverProgress);\r\n                }\r\n            } else {\r\n                // Simple size recovery\r\n                particle.size = data.startSize * (squash + (1 - squash) * easedLand);\r\n            }\r\n            \r\n            // Gradually stop motion\r\n            particle.vx = data.originalVx * easedLand;\r\n            particle.vy = data.originalVy * easedLand;\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Clean up gesture data when complete\r\n     * @param {Particle} particle - The particle to clean up\r\n     */\r\n    cleanup: function(particle) {\r\n        if (particle.gestureData?.jump) {\r\n            const data = particle.gestureData.jump;\r\n            // Restore original properties\r\n            particle.size = data.startSize;\r\n            particle.vx = data.originalVx;\r\n            particle.vy = data.originalVy;\r\n            delete particle.gestureData.jump;\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Easing functions\r\n     */\r\n    easeOutQuad: function(t) {\r\n        return t * (2 - t);\r\n    },\r\n    \r\n    easeInOutCubic: function(t) {\r\n        return t < 0.5 \r\n            ? 4 * t * t * t \r\n            : 1 - Math.pow(-2 * t + 2, 3) / 2;\r\n    },\r\n    \r\n    easeOutBounce: function(t) {\r\n        const n1 = 7.5625;\r\n        const d1 = 2.75;\r\n        \r\n        if (t < 1 / d1) {\r\n            return n1 * t * t;\r\n        } else if (t < 2 / d1) {\r\n            return n1 * (t -= 1.5 / d1) * t + 0.75;\r\n        } else if (t < 2.5 / d1) {\r\n            return n1 * (t -= 2.25 / d1) * t + 0.9375;\r\n        } else {\r\n            return n1 * (t -= 2.625 / d1) * t + 0.984375;\r\n        }\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Morph Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Morph gesture - form geometric patterns\r\n * @author Emotive Engine Team\r\n * @module gestures/transforms/morph\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ Transforms the particle cloud into geometric shapes like circles, stars,          \r\n * ║ hearts, or other patterns. This is an OVERRIDE gesture that moves particles       \r\n * ║ to specific positions to form recognizable shapes.                                \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * VISUAL DIAGRAM:\r\n *    Random Cloud      →      Star Pattern      →      Heart Pattern\r\n *      · · ·                    ★                         ♥♥\r\n *     · · · ·          →      ·   ·           →         ♥   ♥\r\n *      · · ·                ·   ★   ·                  ♥     ♥\r\n *                             ·   ·                      ♥   ♥\r\n *                               ★                          ♥\r\n * \r\n * USED BY:\r\n * - Love emotions (heart shape)\r\n * - Magic/special effects (star patterns)\r\n * - Achievement celebrations (trophy/medal shapes)\r\n * - Transitions between states\r\n */\r\n\r\n/**\r\n * Morph gesture configuration and implementation\r\n */\r\nexport default {\r\n    name: 'morph',\r\n    emoji: '✨',\r\n    type: 'override', // Completely replaces motion\r\n    description: 'Form geometric patterns and shapes',\r\n    \r\n    // Default configuration\r\n    config: {\r\n        // Musical duration - morph over 2 beats\r\n        musicalDuration: {\r\n            musical: true,\r\n            beats: 2,          // Default to half a bar\r\n            minBeats: 1,       // Minimum quarter note\r\n            maxBeats: 8        // Maximum 2 bars\r\n        },\r\n        \r\n        // Musical phases of the morph\r\n        phases: [\r\n            { name: 'gather', beats: 0.25 },    // Particles gather\r\n            { name: 'form', beats: 0.75 },      // Form the shape\r\n            { name: 'hold', beats: 0.5 },       // Hold the shape\r\n            { name: 'dissolve', beats: 0.5 }    // Dissolve back\r\n        ],\r\n        \r\n        morphType: 'fluid',     // Type of morph animation\r\n        pattern: 'star',        // Shape to morph into\r\n        points: 5,              // Number of points (for star/polygon)\r\n        innerRadius: 0.4,       // Inner radius ratio (for star)\r\n        size: 80,               // Base size of the pattern\r\n        amplitude: 20,          // Motion amplitude\r\n        rotation: 0,            // Rotation angle in degrees\r\n        smooth: true,           // Smooth movement to positions\r\n        randomizeOrder: false,  // Randomize which particles go where\r\n        easing: 'sine',         // Animation curve type\r\n        strength: 1.2,          // Formation strength\r\n        // Particle motion configuration for AnimationController\r\n        particleMotion: {\r\n            type: 'morph',\r\n            pattern: 'star',\r\n            strength: 1.2,\r\n            smooth: true,\r\n            points: 5\r\n        }\r\n    },\r\n    \r\n    // Rhythm configuration - morphs on musical phrases\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'phrase',  // Morph on musical phrases\r\n        \r\n        // Pattern changes with musical structure\r\n        patternSync: {\r\n            verse: 'circle',          // Simple shape for verse\r\n            chorus: 'star',           // Complex shape for chorus\r\n            bridge: 'heart',          // Special shape for bridge\r\n            drop: 'explosion'         // Dramatic for drops\r\n        },\r\n        \r\n        // Morph timing syncs to measures\r\n        timingSync: {\r\n            formationBeat: 1,         // Start forming on beat 1\r\n            holdBeats: 2,             // Hold shape for 2 beats\r\n            dissolveBeat: 4,          // Dissolve on beat 4\r\n            curve: 'anticipatory'     // Ease into formation\r\n        },\r\n        \r\n        // Size pulses with rhythm\r\n        sizeSync: {\r\n            onBeat: 1.2,              // Expand on beat\r\n            offBeat: 0.95,            // Contract off beat\r\n            subdivision: 'quarter',    // Pulse every quarter note\r\n            curve: 'elastic'          // Bouncy expansion\r\n        },\r\n        \r\n        // Rotation syncs to bars\r\n        rotationSync: {\r\n            mode: 'continuous',       // Continuous rotation\r\n            degreesPerBar: 90,        // Rotate 90° per bar\r\n            direction: 'clockwise'    // Rotation direction\r\n        },\r\n        \r\n        // Musical dynamics affect complexity\r\n        dynamics: {\r\n            forte: { points: 8, size: 100 },    // Complex shapes when loud\r\n            piano: { points: 3, size: 60 }      // Simple shapes when soft\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Initialize gesture data for a particle\r\n     * @param {Particle} particle - The particle to initialize\r\n     * @param {Object} motion - Gesture motion configuration\r\n     * @param {number} centerX - Orb center X\r\n     * @param {number} centerY - Orb center Y\r\n     * @param {EmotiveMascot} mascot - The mascot instance for core morphing\r\n     */\r\n    initialize: function(particle, motion, centerX, centerY, mascot) {\r\n        if (!particle.gestureData) {\r\n            particle.gestureData = {};\r\n        }\r\n        \r\n        const config = { ...this.config, ...motion };\r\n        \r\n        // Store original position\r\n        const startX = particle.x;\r\n        const startY = particle.y;\r\n        \r\n        // Calculate angle from center for position assignment\r\n        const angle = Math.atan2(particle.y - centerY, particle.x - centerX);\r\n        \r\n        // Random rotation direction for the pattern\r\n        const rotationDirection = Math.random() < 0.5 ? 1 : -1;\r\n        \r\n        // Calculate target position based on pattern\r\n        let targetX, targetY;\r\n        const size = config.size * particle.scaleFactor;\r\n        const rotation = ((config.rotation || 0) * Math.PI / 180) * rotationDirection;\r\n        \r\n        switch (config.pattern) {\r\n            case 'star':\r\n                targetX = centerX;\r\n                targetY = centerY;\r\n                this.calculateStarPosition(particle, angle, size, config.points, config.innerRadius, rotation, centerX, centerY);\r\n                break;\r\n                \r\n            case 'heart':\r\n                this.calculateHeartPosition(particle, angle, size, rotation, centerX, centerY);\r\n                break;\r\n                \r\n            case 'square':\r\n                this.calculateSquarePosition(particle, angle, size, rotation, centerX, centerY);\r\n                break;\r\n                \r\n            case 'triangle':\r\n                this.calculateTrianglePosition(particle, angle, size, rotation, centerX, centerY);\r\n                break;\r\n                \r\n            case 'circle':\r\n            default:\r\n                // Simple circle pattern\r\n                const targetRadius = size;\r\n                targetX = centerX + Math.cos(angle + rotation) * targetRadius;\r\n                targetY = centerY + Math.sin(angle + rotation) * targetRadius;\r\n                break;\r\n        }\r\n        \r\n        particle.gestureData.morph = {\r\n            startX: startX,\r\n            startY: startY,\r\n            targetX: particle.gestureData.morphTargetX || targetX,\r\n            targetY: particle.gestureData.morphTargetY || targetY,\r\n            originalVx: particle.vx,\r\n            originalVy: particle.vy,\r\n            rotationDirection: rotationDirection, // Store random rotation direction\r\n            initialized: true\r\n        };\r\n    },\r\n    \r\n    /**\r\n     * Calculate star pattern position\r\n     */\r\n    calculateStarPosition: function(particle, angle, size, points, innerRadius, rotation, centerX, centerY) {\r\n        const armAngle = (Math.PI * 2) / points;\r\n        const nearestArm = Math.round(angle / armAngle) * armAngle;\r\n        const armIndex = Math.round(angle / armAngle) % points;\r\n        const isOuter = Math.random() > 0.5; // Distribute between inner and outer points\r\n        \r\n        let radius;\r\n        let targetAngle;\r\n        \r\n        if (isOuter) {\r\n            // Outer point of star\r\n            radius = size;\r\n            targetAngle = armIndex * armAngle + rotation;\r\n        } else {\r\n            // Inner point of star (between arms)\r\n            radius = size * innerRadius;\r\n            targetAngle = armIndex * armAngle + armAngle * 0.5 + rotation;\r\n        }\r\n        \r\n        particle.gestureData.morphTargetX = centerX + Math.cos(targetAngle) * radius;\r\n        particle.gestureData.morphTargetY = centerY + Math.sin(targetAngle) * radius;\r\n    },\r\n    \r\n    /**\r\n     * Calculate heart pattern position\r\n     */\r\n    calculateHeartPosition: function(particle, angle, size, rotation, centerX, centerY) {\r\n        // Map angle to heart curve parameter\r\n        const t = (angle + Math.PI) / (Math.PI * 2);\r\n        \r\n        // Heart parametric equations\r\n        const scale = size * 0.05;\r\n        let x = 16 * Math.pow(Math.sin(t * Math.PI * 2), 3);\r\n        let y = -(13 * Math.cos(t * Math.PI * 2) - 5 * Math.cos(2 * t * Math.PI * 2) - \r\n                  2 * Math.cos(3 * t * Math.PI * 2) - Math.cos(4 * t * Math.PI * 2));\r\n        \r\n        // Scale and rotate\r\n        const cosR = Math.cos(rotation);\r\n        const sinR = Math.sin(rotation);\r\n        const rotX = x * cosR - y * sinR;\r\n        const rotY = x * sinR + y * cosR;\r\n        \r\n        particle.gestureData.morphTargetX = centerX + rotX * scale;\r\n        particle.gestureData.morphTargetY = centerY + rotY * scale;\r\n    },\r\n    \r\n    /**\r\n     * Calculate square pattern position\r\n     */\r\n    calculateSquarePosition: function(particle, angle, size, rotation, centerX, centerY) {\r\n        // Determine which edge the particle should go to\r\n        const rotatedAngle = angle + rotation;\r\n        const normalizedAngle = ((rotatedAngle % (Math.PI * 2)) + Math.PI * 2) % (Math.PI * 2);\r\n        \r\n        let x, y;\r\n        const halfSize = size;\r\n        \r\n        // Map to square edges\r\n        if (normalizedAngle < Math.PI / 4 || normalizedAngle >= 7 * Math.PI / 4) {\r\n            // Right edge\r\n            x = halfSize;\r\n            y = halfSize * Math.tan(normalizedAngle);\r\n        } else if (normalizedAngle < 3 * Math.PI / 4) {\r\n            // Top edge\r\n            x = halfSize / Math.tan(normalizedAngle);\r\n            y = halfSize;\r\n        } else if (normalizedAngle < 5 * Math.PI / 4) {\r\n            // Left edge\r\n            x = -halfSize;\r\n            y = -halfSize * Math.tan(normalizedAngle);\r\n        } else {\r\n            // Bottom edge\r\n            x = -halfSize / Math.tan(normalizedAngle);\r\n            y = -halfSize;\r\n        }\r\n        \r\n        // Apply rotation\r\n        const cosR = Math.cos(rotation);\r\n        const sinR = Math.sin(rotation);\r\n        const rotX = x * cosR - y * sinR;\r\n        const rotY = x * sinR + y * cosR;\r\n        \r\n        particle.gestureData.morphTargetX = centerX + rotX;\r\n        particle.gestureData.morphTargetY = centerY + rotY;\r\n    },\r\n    \r\n    /**\r\n     * Calculate triangle pattern position\r\n     */\r\n    calculateTrianglePosition: function(particle, angle, size, rotation, centerX, centerY) {\r\n        // Three vertices of equilateral triangle\r\n        const vertices = [\r\n            { x: 0, y: -size },                    // Top\r\n            { x: -size * 0.866, y: size * 0.5 },   // Bottom left\r\n            { x: size * 0.866, y: size * 0.5 }     // Bottom right\r\n        ];\r\n        \r\n        // Determine which edge the particle should go to\r\n        const edgeIndex = Math.floor(((angle + Math.PI) / (Math.PI * 2)) * 3) % 3;\r\n        const nextIndex = (edgeIndex + 1) % 3;\r\n        \r\n        // Position along the edge\r\n        const edgeProgress = Math.random();\r\n        const x = vertices[edgeIndex].x + (vertices[nextIndex].x - vertices[edgeIndex].x) * edgeProgress;\r\n        const y = vertices[edgeIndex].y + (vertices[nextIndex].y - vertices[edgeIndex].y) * edgeProgress;\r\n        \r\n        // Apply rotation\r\n        const cosR = Math.cos(rotation);\r\n        const sinR = Math.sin(rotation);\r\n        const rotX = x * cosR - y * sinR;\r\n        const rotY = x * sinR + y * cosR;\r\n        \r\n        particle.gestureData.morphTargetX = centerX + rotX;\r\n        particle.gestureData.morphTargetY = centerY + rotY;\r\n    },\r\n    \r\n    /**\r\n     * Apply morph motion to particle\r\n     * @param {Particle} particle - The particle to animate\r\n     * @param {number} progress - Gesture progress (0-1)\r\n     * @param {Object} motion - Gesture configuration\r\n     * @param {number} dt - Delta time\r\n     * @param {number} centerX - Orb center X\r\n     * @param {number} centerY - Orb center Y\r\n     */\r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        // Initialize on first frame\r\n        if (!particle.gestureData?.morph?.initialized) {\r\n            this.initialize(particle, motion, centerX, centerY);\r\n        }\r\n        \r\n        const data = particle.gestureData.morph;\r\n        const config = { ...this.config, ...motion };\r\n        \r\n        // Calculate eased progress\r\n        let morphProgress = progress;\r\n        \r\n        // Add hold time at the shape\r\n        if (config.holdTime > 0) {\r\n            const holdStart = 0.5 - config.holdTime / 2;\r\n            const holdEnd = 0.5 + config.holdTime / 2;\r\n            \r\n            if (progress < holdStart) {\r\n                morphProgress = progress / holdStart * 0.5;\r\n            } else if (progress < holdEnd) {\r\n                morphProgress = 0.5; // Hold at shape\r\n            } else {\r\n                morphProgress = 0.5 + (progress - holdEnd) / (1 - holdEnd) * 0.5;\r\n            }\r\n        }\r\n        \r\n        const easeProgress = this.easeInOutCubic(morphProgress);\r\n        \r\n        // Calculate interpolated position\r\n        let targetX, targetY;\r\n        \r\n        if (morphProgress <= 0.5) {\r\n            // Moving to shape\r\n            const moveProgress = morphProgress * 2;\r\n            targetX = data.startX + (data.targetX - data.startX) * this.easeOutQuad(moveProgress);\r\n            targetY = data.startY + (data.targetY - data.startY) * this.easeOutQuad(moveProgress);\r\n        } else {\r\n            // Returning from shape\r\n            const returnProgress = (morphProgress - 0.5) * 2;\r\n            targetX = data.targetX + (data.startX - data.targetX) * this.easeInQuad(returnProgress);\r\n            targetY = data.targetY + (data.startY - data.targetY) * this.easeInQuad(returnProgress);\r\n        }\r\n        \r\n        // Apply position\r\n        if (config.smooth) {\r\n            // Smooth movement\r\n            const moveSpeed = 0.2;\r\n            particle.x += (targetX - particle.x) * moveSpeed;\r\n            particle.y += (targetY - particle.y) * moveSpeed;\r\n        } else {\r\n            // Direct positioning\r\n            particle.x = targetX;\r\n            particle.y = targetY;\r\n        }\r\n        \r\n        // Set velocity for trails\r\n        particle.vx = (targetX - particle.x) * 0.5;\r\n        particle.vy = (targetY - particle.y) * 0.5;\r\n        \r\n        // Restore original velocities at the end\r\n        if (progress > 0.9) {\r\n            const blendFactor = (1 - progress) * 10;\r\n            particle.vx = particle.vx * blendFactor + data.originalVx * (1 - blendFactor);\r\n            particle.vy = particle.vy * blendFactor + data.originalVy * (1 - blendFactor);\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Clean up gesture data when complete\r\n     * @param {Particle} particle - The particle to clean up\r\n     */\r\n    cleanup: function(particle) {\r\n        if (particle.gestureData?.morph) {\r\n            const data = particle.gestureData.morph;\r\n            particle.vx = data.originalVx;\r\n            particle.vy = data.originalVy;\r\n            delete particle.gestureData.morph;\r\n            delete particle.gestureData.morphTargetX;\r\n            delete particle.gestureData.morphTargetY;\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Easing functions\r\n     */\r\n    easeInOutCubic: function(t) {\r\n        return t < 0.5 \r\n            ? 4 * t * t * t \r\n            : 1 - Math.pow(-2 * t + 2, 3) / 2;\r\n    },\r\n    \r\n    easeOutQuad: function(t) {\r\n        return t * (2 - t);\r\n    },\r\n    \r\n    easeInQuad: function(t) {\r\n        return t * t;\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Stretch Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Stretch gesture - scale particles along axes\r\n * @author Emotive Engine Team\r\n * @module gestures/transforms/stretch\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ Stretches or squashes the particle cloud along X and Y axes independently.        \r\n * ║ This is an OVERRIDE gesture that directly controls particle positions to          \r\n * ║ create elastic deformation effects.                                               \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * VISUAL DIAGRAM:\r\n *    Normal          Stretch X         Stretch Y        Squash\r\n *      ⭐             ← ⭐ →             ↑               ___\r\n *     ·⭐·           · · ⭐ · ·          ⭐              ·⭐·\r\n *      ⭐                                ·               ‾‾‾\r\n *                                        ·\r\n *                                        ↓\r\n * \r\n * USED BY:\r\n * - Elastic animations\r\n * - Impact effects (squash on hit)\r\n * - Breathing/pulsing variations\r\n * - Transition effects\r\n */\r\n\r\n/**\r\n * Stretch gesture configuration and implementation\r\n */\r\nexport default {\r\n    name: 'stretch',\r\n    emoji: '↔️',\r\n    type: 'override', // Completely replaces motion\r\n    description: 'Scale particles along X and Y axes',\r\n    \r\n    // Default configuration\r\n    config: {\r\n        duration: 2000,        // Animation duration\r\n        scaleX: 1.3,           // Horizontal scale factor\r\n        scaleY: 0.9,           // Vertical scale factor\r\n        alternate: false,      // Alternate between X and Y stretch\r\n        elastic: true,         // Add elastic overshoot\r\n        overshoot: 0.1,        // Elastic overshoot amount\r\n        frequency: 1,          // Number of stretches\r\n        easing: 'sine',        // Animation curve type\r\n        strength: 1.0,         // Motion strength\r\n        // Particle motion configuration for AnimationController\r\n        particleMotion: {\r\n            type: 'stretch',\r\n            scaleX: 1.8,       // Particle horizontal scale\r\n            scaleY: 0.6,       // Particle vertical scale\r\n            strength: 1.0\r\n        },\r\n        centerBased: true,     // Scale from center vs. origin\r\n        preserveArea: false    // Keep total area constant\r\n    },\r\n    \r\n    // Rhythm configuration - stretch pulses with rhythm\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'beat',  // Stretch on beats\r\n        \r\n        // Scale modulation with rhythm\r\n        scaleSync: {\r\n            onBeat: { x: 1.5, y: 0.7 },     // Stretch wide on beat\r\n            offBeat: { x: 0.8, y: 1.3 },     // Stretch tall off beat\r\n            subdivision: 'eighth',            // Change every 8th note\r\n            curve: 'elastic'                 // Bouncy stretch\r\n        },\r\n        \r\n        // Alternation pattern\r\n        alternateSync: {\r\n            pattern: 'XYXY',                 // X stretch, Y stretch pattern\r\n            beatsPerChange: 1,               // Change axis each beat\r\n            overlap: 0.1                      // Slight overlap in transitions\r\n        },\r\n        \r\n        // Elastic overshoot on accents\r\n        overshootSync: {\r\n            normal: 0.1,                     // Standard overshoot\r\n            accent: 0.3,                     // Big overshoot on accent\r\n            downbeat: 0.2,                   // Medium on downbeat\r\n            curve: 'spring'                  // Spring-like motion\r\n        },\r\n        \r\n        // Area preservation modes\r\n        preservationSync: {\r\n            verse: true,                     // Maintain area in verse\r\n            chorus: false,                   // Free deformation in chorus\r\n            bridge: true                     // Back to preservation\r\n        },\r\n        \r\n        // Musical dynamics\r\n        dynamics: {\r\n            forte: { scaleX: 2.0, scaleY: 0.5, overshoot: 0.4 },\r\n            piano: { scaleX: 1.1, scaleY: 0.95, overshoot: 0.05 }\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Initialize gesture data for a particle\r\n     * @param {Particle} particle - The particle to initialize\r\n     * @param {Object} motion - Gesture motion configuration\r\n     * @param {number} centerX - Orb center X\r\n     * @param {number} centerY - Orb center Y\r\n     */\r\n    initialize: function(particle, motion, centerX, centerY) {\r\n        if (!particle.gestureData) {\r\n            particle.gestureData = {};\r\n        }\r\n        \r\n        // Calculate offset from center\r\n        const dx = particle.x - centerX;\r\n        const dy = particle.y - centerY;\r\n        \r\n        particle.gestureData.stretch = {\r\n            offsetX: dx,\r\n            offsetY: dy,\r\n            startX: particle.x,\r\n            startY: particle.y,\r\n            originalVx: particle.vx,\r\n            originalVy: particle.vy,\r\n            initialized: true\r\n        };\r\n    },\r\n    \r\n    /**\r\n     * Apply stretch motion to particle\r\n     * @param {Particle} particle - The particle to animate\r\n     * @param {number} progress - Gesture progress (0-1)\r\n     * @param {Object} motion - Gesture configuration\r\n     * @param {number} dt - Delta time\r\n     * @param {number} centerX - Orb center X\r\n     * @param {number} centerY - Orb center Y\r\n     */\r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        // Initialize on first frame\r\n        if (!particle.gestureData?.stretch?.initialized) {\r\n            this.initialize(particle, motion, centerX, centerY);\r\n        }\r\n        \r\n        const data = particle.gestureData.stretch;\r\n        const config = { ...this.config, ...motion };\r\n        const strength = motion.strength || 1.0;\r\n        \r\n        // Calculate scale factors\r\n        let scaleX = config.scaleX;\r\n        let scaleY = config.scaleY;\r\n        \r\n        // Apply area preservation if enabled\r\n        if (config.preserveArea && scaleX !== 1 && scaleY !== 1) {\r\n            // Adjust scales to maintain area\r\n            const targetArea = scaleX * scaleY;\r\n            const factor = Math.sqrt(1 / targetArea);\r\n            scaleX *= factor;\r\n            scaleY *= factor;\r\n        }\r\n        \r\n        // Handle alternating stretch\r\n        if (config.alternate) {\r\n            // First half: stretch X\r\n            // Second half: stretch Y\r\n            if (progress < 0.5) {\r\n                const altProgress = progress * 2;\r\n                scaleX = 1 + (scaleX - 1) * this.getElasticProgress(altProgress, config);\r\n                scaleY = 1 + (1 / scaleX - 1) * (config.preserveArea ? 1 : 0); // Area compensation\r\n            } else {\r\n                const altProgress = (progress - 0.5) * 2;\r\n                scaleX = scaleX + (1 - scaleX) * this.getElasticProgress(altProgress, config);\r\n                scaleY = 1 + (scaleY - 1) * this.getElasticProgress(altProgress, config);\r\n            }\r\n        } else {\r\n            // Apply both scales simultaneously\r\n            const easeProgress = this.getElasticProgress(progress, config);\r\n            scaleX = 1 + (scaleX - 1) * easeProgress * strength;\r\n            scaleY = 1 + (scaleY - 1) * easeProgress * strength;\r\n        }\r\n        \r\n        // Calculate target position\r\n        let targetX, targetY;\r\n        \r\n        if (config.centerBased) {\r\n            // Scale from center point\r\n            targetX = centerX + data.offsetX * scaleX;\r\n            targetY = centerY + data.offsetY * scaleY;\r\n        } else {\r\n            // Scale from original position\r\n            targetX = data.startX * scaleX;\r\n            targetY = data.startY * scaleY;\r\n        }\r\n        \r\n        // Apply position\r\n        particle.x = targetX;\r\n        particle.y = targetY;\r\n        \r\n        // Set velocity based on stretch direction\r\n        particle.vx = data.offsetX * (scaleX - 1) * strength * 0.1;\r\n        particle.vy = data.offsetY * (scaleY - 1) * strength * 0.1;\r\n        \r\n        // Smooth ending\r\n        if (progress > 0.9) {\r\n            const endFactor = (1 - progress) * 10;\r\n            particle.vx = particle.vx * endFactor + data.originalVx * (1 - endFactor);\r\n            particle.vy = particle.vy * endFactor + data.originalVy * (1 - endFactor);\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Calculate progress with optional elastic overshoot\r\n     * @param {number} progress - Raw progress (0-1)\r\n     * @param {Object} config - Configuration with elastic settings\r\n     * @returns {number} Modified progress value\r\n     */\r\n    getElasticProgress: function(progress, config) {\r\n        if (!config.elastic) {\r\n            return this.easeInOutCubic(progress);\r\n        }\r\n        \r\n        // Elastic easing with overshoot\r\n        if (progress === 0) return 0;\r\n        if (progress === 1) return 1;\r\n        \r\n        const overshoot = config.overshoot || 0.1;\r\n        const p = 0.3;\r\n        const s = p / 4;\r\n        \r\n        if (progress < 0.5) {\r\n            // Ease in with slight pull back\r\n            const t = progress * 2;\r\n            return 0.5 * this.easeInElastic(t, overshoot);\r\n        } else {\r\n            // Ease out with overshoot\r\n            const t = (progress - 0.5) * 2;\r\n            return 0.5 + 0.5 * this.easeOutElastic(t, overshoot);\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Clean up gesture data when complete\r\n     * @param {Particle} particle - The particle to clean up\r\n     */\r\n    cleanup: function(particle) {\r\n        if (particle.gestureData?.stretch) {\r\n            const data = particle.gestureData.stretch;\r\n            particle.vx = data.originalVx;\r\n            particle.vy = data.originalVy;\r\n            delete particle.gestureData.stretch;\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Easing functions\r\n     */\r\n    easeInOutCubic: function(t) {\r\n        return t < 0.5 \r\n            ? 4 * t * t * t \r\n            : 1 - Math.pow(-2 * t + 2, 3) / 2;\r\n    },\r\n    \r\n    easeInElastic: function(t, overshoot) {\r\n        if (t === 0) return 0;\r\n        if (t === 1) return 1;\r\n        const p = 0.3;\r\n        const s = p / 4;\r\n        return -(Math.pow(2, 10 * (t - 1)) * Math.sin((t - 1 - s) * (2 * Math.PI) / p)) * (1 + overshoot);\r\n    },\r\n    \r\n    easeOutElastic: function(t, overshoot) {\r\n        if (t === 0) return 0;\r\n        if (t === 1) return 1;\r\n        const p = 0.3;\r\n        const s = p / 4;\r\n        return Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) * (1 + overshoot) + 1;\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Tilt Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Tilt gesture - particles gather and sway together\r\n * @author Emotive Engine Team\r\n * @module gestures/transforms/tilt\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ Creates a cohesive tilting motion where particles first gather toward the center, \r\n * ║ then tilt and sway as a unified group. Perfect for curious or questioning         \r\n * ║ expressions, like a head tilt.                                                    \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * VISUAL DIAGRAM:\r\n *    Phase 1: Gather    Phase 2: Tilt Left    Phase 3: Tilt Right\r\n *      · · ·               ↖ ⭐                    ⭐ ↗\r\n *     · · · ·      →      ↖ ⭐ ⭐        →      ⭐ ⭐ ↗\r\n *      · · ·               ↖ ⭐                    ⭐ ↗\r\n *    (scattered)         (tilted left)         (tilted right)\r\n * \r\n * USED BY:\r\n * - Curiosity/questioning states\r\n * - Contemplation animations\r\n * - Playful head-tilt effects\r\n * - Character personality expressions\r\n */\r\n\r\n/**\r\n * Tilt gesture configuration and implementation\r\n */\r\nexport default {\r\n    name: 'tilt',\r\n    emoji: '🤔',\r\n    type: 'override', // Completely replaces motion\r\n    description: 'Gather particles then tilt as unified group',\r\n    \r\n    // Default configuration\r\n    config: {\r\n        duration: 500,         // Animation duration\r\n        gatherPhase: 0.2,      // Gathering phase ratio\r\n        tiltAngle: 45,         // Maximum tilt angle in degrees\r\n        swayAmount: 80,        // Horizontal sway distance\r\n        liftAmount: 60,        // Vertical lift distance during tilt\r\n        frequency: 3,          // Number of tilt cycles\r\n        homeRadius: 20,        // Gathering radius from center\r\n        easing: 'sine',        // Animation curve type\r\n        strength: 2.5,         // Overall motion intensity\r\n        // Particle motion configuration for AnimationController\r\n        particleMotion: {\r\n            type: 'tilt',\r\n            strength: 2.5,\r\n            frequency: 3,\r\n            swayAmount: 80,\r\n            liftAmount: 60\r\n        },\r\n        smoothness: 0.25       // Movement smoothing factor\r\n    },\r\n    \r\n    // Rhythm configuration - tilts sync to swing rhythm\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'swing',  // Tilt with swing feel\r\n        \r\n        // Tilt angle syncs to beat pattern\r\n        angleSync: {\r\n            onBeat: 45,                      // Full tilt on beat\r\n            offBeat: -30,                    // Counter-tilt off beat\r\n            swing: 15,                       // Extra tilt on swing beats\r\n            subdivision: 'triplet',          // Triplet feel for smooth sway\r\n            curve: 'ease-in-out'            // Smooth tilt transitions\r\n        },\r\n        \r\n        // Gathering phase timing\r\n        gatherSync: {\r\n            beatsBefore: 0.5,                // Gather half beat before tilt\r\n            releaseAfter: 0.25,              // Release quarter beat after\r\n            intensity: 'dynamic'             // Gather speed varies with tempo\r\n        },\r\n        \r\n        // Sway amount modulation\r\n        swaySync: {\r\n            verse: 60,                       // Gentle sway in verse\r\n            chorus: 100,                     // Big sway in chorus\r\n            bridge: 80,                      // Medium in bridge\r\n            syncopated: true                 // Off-beat emphasis\r\n        },\r\n        \r\n        // Lift coordination\r\n        liftSync: {\r\n            upOnTilt: true,                  // Lift when tilting\r\n            heightOnAccent: 80,              // Higher lift on accents\r\n            normalHeight: 40,                // Standard lift height\r\n            curve: 'bounce'                  // Bouncy lift motion\r\n        },\r\n        \r\n        // Musical expression\r\n        dynamics: {\r\n            forte: { tiltAngle: 60, swayAmount: 120, frequency: 4 },\r\n            piano: { tiltAngle: 20, swayAmount: 40, frequency: 2 }\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Initialize gesture data for a particle\r\n     * @param {Particle} particle - The particle to initialize\r\n     * @param {Object} motion - Gesture motion configuration\r\n     * @param {number} centerX - Orb center X\r\n     * @param {number} centerY - Orb center Y\r\n     */\r\n    initialize: function(particle, motion, centerX, centerY) {\r\n        if (!particle.gestureData) {\r\n            particle.gestureData = {};\r\n        }\r\n        \r\n        // Calculate initial position and angle\r\n        const dx = particle.x - centerX;\r\n        const dy = particle.y - centerY;\r\n        const angle = Math.atan2(dy, dx);\r\n        const distance = Math.sqrt(dx * dx + dy * dy);\r\n        \r\n        // Assign a role for variation (some particles lag slightly)\r\n        const role = Math.random();\r\n        \r\n        // Calculate home position (where particle gathers to)\r\n        const config = { ...this.config, ...motion };\r\n        const homeRadius = (config.homeRadius + Math.random() * 20) * particle.scaleFactor;\r\n        \r\n        particle.gestureData.tilt = {\r\n            startX: particle.x,\r\n            startY: particle.y,\r\n            originalVx: particle.vx,\r\n            originalVy: particle.vy,\r\n            angle: angle,\r\n            distance: distance,\r\n            homeRadius: homeRadius,\r\n            homeX: centerX + Math.cos(angle) * homeRadius,\r\n            homeY: centerY + Math.sin(angle) * homeRadius,\r\n            role: role, // Variation factor for timing and smoothness\r\n            initialized: true\r\n        };\r\n    },\r\n    \r\n    /**\r\n     * Apply tilt motion to particle\r\n     * @param {Particle} particle - The particle to animate\r\n     * @param {number} progress - Gesture progress (0-1)\r\n     * @param {Object} motion - Gesture configuration\r\n     * @param {number} dt - Delta time\r\n     * @param {number} centerX - Orb center X\r\n     * @param {number} centerY - Orb center Y\r\n     */\r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        // Initialize on first frame\r\n        if (!particle.gestureData?.tilt?.initialized) {\r\n            this.initialize(particle, motion, centerX, centerY);\r\n        }\r\n        \r\n        const data = particle.gestureData.tilt;\r\n        const config = { ...this.config, ...motion };\r\n        const strength = motion.strength || 1.0;\r\n        \r\n        let targetX, targetY;\r\n        \r\n        if (progress < config.gatherPhase) {\r\n            // PHASE 1: Gather toward center\r\n            const gatherProgress = progress / config.gatherPhase;\r\n            const easedGather = this.easeInOutCubic(gatherProgress);\r\n            \r\n            // Interpolate from start to home position\r\n            targetX = data.startX + (data.homeX - data.startX) * easedGather;\r\n            targetY = data.startY + (data.homeY - data.startY) * easedGather;\r\n            \r\n            // Apply gathering motion\r\n            const speed = 0.6;  // Gathering speed factor\r\n            particle.x += (targetX - particle.x) * speed;\r\n            particle.y += (targetY - particle.y) * speed;\r\n            \r\n        } else {\r\n            // PHASE 2: Tilting motion\r\n            const tiltPhase = (progress - config.gatherPhase) / (1 - config.gatherPhase);\r\n            const t = tiltPhase * Math.PI * config.frequency;\r\n            const tiltProgress = Math.sin(t);\r\n            \r\n            // Convert tilt angle to radians\r\n            const maxTiltRad = (config.tiltAngle * Math.PI / 180) * strength;\r\n            \r\n            // Calculate sway angle (oscillates left and right)\r\n            const swayAngle = data.angle + (tiltProgress * maxTiltRad);\r\n            \r\n            // Add lift effect (particles rise slightly during tilt)\r\n            const liftAmount = Math.abs(tiltProgress) * config.liftAmount * particle.scaleFactor;\r\n            const currentRadius = data.homeRadius + liftAmount;\r\n            \r\n            // Calculate target position with tilt\r\n            targetX = centerX + Math.cos(swayAngle) * currentRadius;\r\n            targetY = centerY + Math.sin(swayAngle) * currentRadius - liftAmount * 0.3; // Add upward bias\r\n            \r\n            // Apply role-based variation (some particles lag)\r\n            const smoothness = config.smoothness + data.role * 0.1;\r\n            \r\n            // Smooth movement to target\r\n            particle.x += (targetX - particle.x) * smoothness;\r\n            particle.y += (targetY - particle.y) * smoothness;\r\n            \r\n            // Add subtle rotation feel with velocity\r\n            const tangentX = -Math.sin(swayAngle);\r\n            const tangentY = Math.cos(swayAngle);\r\n            particle.vx = tangentX * tiltProgress * 2;\r\n            particle.vy = tangentY * tiltProgress * 2;\r\n        }\r\n        \r\n        // Store current velocity for trails\r\n        if (progress < config.gatherPhase) {\r\n            particle.vx = (targetX - particle.x) * 0.25;\r\n            particle.vy = (targetY - particle.y) * 0.25;\r\n        }\r\n        \r\n        // Smooth ending - return to original velocities\r\n        if (progress > 0.9) {\r\n            const endFactor = (1 - progress) * 10;\r\n            const returnX = data.startX + (particle.x - data.startX) * endFactor;\r\n            const returnY = data.startY + (particle.y - data.startY) * endFactor;\r\n            \r\n            particle.x = returnX;\r\n            particle.y = returnY;\r\n            particle.vx = particle.vx * endFactor + data.originalVx * (1 - endFactor);\r\n            particle.vy = particle.vy * endFactor + data.originalVy * (1 - endFactor);\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Clean up gesture data when complete\r\n     * @param {Particle} particle - The particle to clean up\r\n     */\r\n    cleanup: function(particle) {\r\n        if (particle.gestureData?.tilt) {\r\n            const data = particle.gestureData.tilt;\r\n            particle.vx = data.originalVx;\r\n            particle.vy = data.originalVy;\r\n            delete particle.gestureData.tilt;\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Easing function for smooth animation\r\n     * @param {number} t - Progress (0-1)\r\n     * @returns {number} Eased value\r\n     */\r\n    easeInOutCubic: function(t) {\r\n        return t < 0.5 \r\n            ? 4 * t * t * t \r\n            : 1 - Math.pow(-2 * t + 2, 3) / 2;\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Orbital Gesture with 3D Depth\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview 3D orbital gesture - particles orbit with dynamic z-depth changes\r\n * @author Emotive Engine Team\r\n * @module gestures/transforms/orbital\r\n * \r\n * GESTURE TYPE:\r\n * type: 'override' - Takes complete control of particle motion\r\n * \r\n * ACCEPTABLE TYPES:\r\n * - 'blending' : Adds motion to existing particle behavior (used in motions/)\r\n * - 'override' : Replaces particle motion completely (used in transforms/)\r\n * - 'effect'   : Visual effects without changing position (used in effects/)\r\n * \r\n * VISUAL EFFECT:\r\n * Particles orbit around the center while transitioning between foreground and\r\n * background layers, creating a true 3D effect where particles pass behind and\r\n * in front of the orb.\r\n */\r\n\r\nexport default {\r\n    name: 'orbital',\r\n    emoji: '🪐',\r\n    type: 'override',\r\n    description: 'Orbital motion around center',\r\n    \r\n    // Default configuration\r\n    config: {\r\n        speed: 0.02,              // Orbital rotation speed\r\n        maintainRadius: true,     // Keep constant orbit radius\r\n        elliptical: false,        // Use circular orbit\r\n        use3D: true,              // Enable z-coordinate animation\r\n        zPhaseOffset: 0,          // Phase offset for z-oscillation\r\n        verticalOscillation: 0,   // Vertical movement for hula-hoop effect\r\n        duration: 3000,           // Animation duration\r\n        // Particle motion configuration for AnimationController\r\n        particleMotion: {\r\n            type: 'orbital',\r\n            strength: 1.0\r\n        }\r\n    },\r\n    \r\n    // Rhythm configuration - orbital paths sync to harmony\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'harmonic',  // Orbit follows harmonic intervals\r\n        \r\n        // Speed based on harmonic ratios\r\n        speedSync: {\r\n            tonic: 0.02,              // Base orbit speed\r\n            fifth: 0.03,              // 3:2 ratio (perfect fifth)\r\n            octave: 0.04,             // 2:1 ratio (octave)\r\n            third: 0.025,             // 5:4 ratio (major third)\r\n            curve: 'smooth'           // Smooth transitions\r\n        },\r\n        \r\n        // Orbital layers by pitch\r\n        radiusSync: {\r\n            bass: 150,                // Outer orbit for low notes\r\n            mid: 100,                 // Middle orbit for mids\r\n            treble: 50,               // Inner orbit for highs\r\n            scaling: 'logarithmic'    // Natural pitch scaling\r\n        },\r\n        \r\n        // 3D depth syncs to chord progression\r\n        depthSync: {\r\n            major: { z: 1.0, phase: 0 },        // Front-facing for major\r\n            minor: { z: -1.0, phase: Math.PI }, // Back-facing for minor\r\n            diminished: { z: 0.5, phase: Math.PI/2 }, // Side angle\r\n            augmented: { z: 0.8, phase: -Math.PI/2 }  // Other side\r\n        },\r\n        \r\n        // Phase relationships\r\n        phaseSync: {\r\n            mode: 'harmonic',         // Particles phase-lock harmonically\r\n            intervals: [1, 1.5, 2],   // Unison, fifth, octave\r\n            drift: 0.05               // Slight phase drift for organic feel\r\n        },\r\n        \r\n        // Musical dynamics\r\n        dynamics: {\r\n            forte: { speed: 0.04, maintainRadius: false }, // Chaotic orbits\r\n            piano: { speed: 0.01, maintainRadius: true }   // Stable orbits\r\n        }\r\n    },\r\n    \r\n    initialize: function(particle, motion, centerX, centerY) {\r\n        if (!particle.gestureData) {\r\n            particle.gestureData = {};\r\n        }\r\n        \r\n        const dx = particle.x - centerX;\r\n        const dy = particle.y - centerY;\r\n        const calculatedRadius = Math.sqrt(dx * dx + dy * dy);\r\n        \r\n        // Random direction for orbit\r\n        const direction = Math.random() < 0.5 ? 1 : -1;\r\n        \r\n        // Set minimum radius to prevent center clustering - 3x larger spread\r\n        const MIN_RADIUS = 100;\r\n        const radius = Math.max(calculatedRadius, MIN_RADIUS + Math.random() * 180); // At least 180-360 pixels\r\n        \r\n        particle.gestureData.orbital = {\r\n            radius: radius,\r\n            targetRadius: radius, // Store target for smooth transitions\r\n            angle: calculatedRadius < 5 ? Math.random() * Math.PI * 2 : Math.atan2(dy, dx), // Random angle if at center\r\n            originalVx: particle.vx,\r\n            originalVy: particle.vy,\r\n            originalZ: particle.z || 0,  // Store original z-coordinate\r\n            zPhase: Math.random() * Math.PI * 2,  // Random phase for variety\r\n            direction: direction  // Random orbit direction\r\n        };\r\n    },\r\n    \r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        if (!particle.gestureData?.orbital) {\r\n            this.initialize(particle, motion, centerX, centerY);\r\n        }\r\n        \r\n        const data = particle.gestureData.orbital;\r\n        const speed = (motion.speed || this.config.speed) * (motion.strength || 1);\r\n        \r\n        // Update angle with direction (dt is already normalized to 60fps)\r\n        data.angle += speed * dt * data.direction;\r\n        \r\n        // Use the stored radius (which has minimum enforced)\r\n        let radius = data.radius;\r\n        \r\n        if (!motion.maintainRadius) {\r\n            // Allow radius to vary slightly for organic motion\r\n            radius = data.radius * (1 + Math.sin(progress * Math.PI * 2) * 0.1);\r\n        }\r\n        \r\n        particle.x = centerX + Math.cos(data.angle) * radius;\r\n        particle.y = centerY + Math.sin(data.angle) * radius;\r\n        \r\n        // 3D DEPTH: Animate z-coordinate for particles passing behind/in front\r\n        if (motion.use3D !== false) {  // Default to true\r\n            // Z oscillates as particle orbits, creating 3D effect\r\n            // When angle is 0/2π (right side), z is positive (front)\r\n            // When angle is π (left side), z is negative (back)\r\n            const zAngle = data.angle + data.zPhase + (motion.zPhaseOffset || 0);\r\n            particle.z = Math.sin(zAngle) * 0.8; // Z-depth range for layering\r\n            \r\n            // Add vertical oscillation for hula-hoop effect\r\n            if (motion.verticalOscillation) {\r\n                const verticalOffset = Math.cos(zAngle) * motion.verticalOscillation * radius * 0.1;\r\n                particle.y += verticalOffset;\r\n            }\r\n        }\r\n        \r\n        // Set velocity to match motion\r\n        particle.vx = -Math.sin(data.angle) * radius * speed;\r\n        particle.vy = Math.cos(data.angle) * radius * speed;\r\n        \r\n        // Restore original velocity at end\r\n        if (progress > 0.9) {\r\n            const blendFactor = (1 - progress) * 10;\r\n            particle.vx = particle.vx * blendFactor + data.originalVx * (1 - blendFactor);\r\n            particle.vy = particle.vy * blendFactor + data.originalVy * (1 - blendFactor);\r\n        }\r\n    },\r\n    \r\n    cleanup: function(particle) {\r\n        if (particle.gestureData?.orbital) {\r\n            const data = particle.gestureData.orbital;\r\n            particle.vx = data.originalVx;\r\n            particle.vy = data.originalVy;\r\n            particle.z = data.originalZ;  // Restore original z-coordinate\r\n            delete particle.gestureData.orbital;\r\n        }\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Hula-Hoop Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Hula-hoop variation of orbital with vertical oscillation\r\n * @author Emotive Engine Team\r\n * @module gestures/transforms/hula\r\n * \r\n * VISUAL EFFECT:\r\n * Like a hula-hoop spinning around the orb - particles orbit horizontally while\r\n * oscillating vertically, creating a tilted ring effect with 3D depth.\r\n */\r\n\r\nexport default {\r\n    name: 'hula',\r\n    emoji: '🌀',\r\n    type: 'override',\r\n    description: 'Hula-hoop motion with vertical waves',\r\n    \r\n    // Default configuration\r\n    config: {\r\n        speed: 0.015,             // Rotation speed\r\n        maintainRadius: false,     // Allow radius variation for organic feel\r\n        elliptical: true,          // Elliptical orbit shape\r\n        use3D: true,               // Enable 3D depth effect\r\n        zPhaseOffset: Math.PI / 4, // Ring tilt angle\r\n        verticalOscillation: 0.3,  // Vertical wave amount\r\n        wobbleAmount: 0.15,        // Ring wobble intensity\r\n        duration: 2500,            // Animation duration\r\n        // Particle motion configuration for AnimationController\r\n        particleMotion: {\r\n            type: 'hula',\r\n            strength: 1.0,\r\n            verticalOscillation: 0.3\r\n        }\r\n    },\r\n    \r\n    // Rhythm configuration - hula syncs to groove\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'bar',  // Full rotation per bar\r\n        \r\n        // Speed syncs to tempo for consistent rotation\r\n        speedSync: {\r\n            mode: 'tempo',\r\n            baseSpeed: 0.015,      // Base speed at 120 BPM\r\n            scaling: 'proportional' // Speed scales with BPM\r\n        },\r\n        \r\n        // Wobble syncs to beat for rhythmic variation\r\n        wobbleSync: {\r\n            onBeat: 0.25,          // More wobble on beat\r\n            offBeat: 0.1,          // Less wobble off beat\r\n            curve: 'sine'          // Smooth transitions\r\n        },\r\n        \r\n        // Vertical oscillation creates wave patterns\r\n        verticalSync: {\r\n            subdivision: 'quarter', // Wave every quarter note\r\n            amplitude: 0.4,        // Wave height on beat\r\n            phase: 'sequential'    // Waves follow rotation\r\n        },\r\n        \r\n        // Musical expression\r\n        dynamics: {\r\n            forte: { wobbleAmount: 0.3, speed: 1.2 },  // Wilder on loud\r\n            piano: { wobbleAmount: 0.05, speed: 0.8 }  // Gentler on soft\r\n        }\r\n    },\r\n    \r\n    initialize: function(particle, motion, centerX, centerY) {\r\n        if (!particle.gestureData) {\r\n            particle.gestureData = {};\r\n        }\r\n        \r\n        const dx = particle.x - centerX;\r\n        const dy = particle.y - centerY;\r\n        const calculatedRadius = Math.sqrt(dx * dx + dy * dy);\r\n        \r\n        // Random direction for hula-hoop\r\n        const direction = Math.random() < 0.5 ? 1 : -1;\r\n        \r\n        // Set minimum radius to prevent center clustering - 3x larger spread\r\n        const MIN_RADIUS = 100; // Slightly larger for hula effect\r\n        const radius = Math.max(calculatedRadius, MIN_RADIUS + Math.random() * 180); // At least 210-390 pixels\r\n        \r\n        particle.gestureData.hula = {\r\n            radius: radius,\r\n            angle: calculatedRadius < 5 ? Math.random() * Math.PI * 2 : Math.atan2(dy, dx), // Random angle if at center\r\n            originalVx: particle.vx,\r\n            originalVy: particle.vy,\r\n            originalZ: particle.z || 0,\r\n            zPhase: Math.random() * Math.PI * 2,\r\n            wobblePhase: Math.random() * Math.PI * 2,\r\n            direction: direction  // Random hula direction\r\n        };\r\n    },\r\n    \r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        if (!particle.gestureData?.hula) {\r\n            this.initialize(particle, motion, centerX, centerY);\r\n        }\r\n        \r\n        const data = particle.gestureData.hula;\r\n        const speed = (motion.speed || this.config.speed) * (motion.strength || 1);\r\n        \r\n        // Smooth entry/exit transitions\r\n        let transitionFactor = 1.0;\r\n        if (progress < 0.1) {\r\n            // Smooth entry (first 10%)\r\n            transitionFactor = progress / 0.1;\r\n            transitionFactor = Math.sin(transitionFactor * Math.PI * 0.5); // Smooth ease-in\r\n        } else if (progress > 0.9) {\r\n            // Smooth exit (last 10%)\r\n            transitionFactor = (1 - progress) / 0.1;\r\n            transitionFactor = Math.sin(transitionFactor * Math.PI * 0.5); // Smooth ease-out\r\n        }\r\n        \r\n        // Update angle with direction (dt is already normalized to 60fps)\r\n        data.angle += speed * dt * data.direction * transitionFactor;\r\n        \r\n        // Wobble effect - the hoop wobbles as it spins\r\n        const wobble = Math.sin(data.angle * 2 + data.wobblePhase) * (motion.wobbleAmount || this.config.wobbleAmount) * transitionFactor;\r\n        \r\n        // Calculate elliptical radius with wobble and transition\r\n        let radiusX = data.radius * (1 + wobble) * transitionFactor;\r\n        let radiusY = data.radius * (0.7 + wobble) * transitionFactor; // Elliptical shape factor\r\n        \r\n        // Smoothly transition from original position to orbit position\r\n        const targetX = centerX + Math.cos(data.angle) * radiusX;\r\n        const targetY = centerY + Math.sin(data.angle) * radiusY;\r\n        \r\n        if (progress < 0.1) {\r\n            // During entry, lerp from original position\r\n            const dx = particle.x - centerX;\r\n            const dy = particle.y - centerY;\r\n            const currentRadius = Math.sqrt(dx * dx + dy * dy);\r\n            if (currentRadius < 50) {\r\n                // If particle is at center, move it out smoothly\r\n                particle.x = centerX + Math.cos(data.angle) * radiusX;\r\n                particle.y = centerY + Math.sin(data.angle) * radiusY;\r\n            } else {\r\n                particle.x = particle.x + (targetX - particle.x) * transitionFactor * 0.5;\r\n                particle.y = particle.y + (targetY - particle.y) * transitionFactor * 0.5;\r\n            }\r\n        } else {\r\n            particle.x = targetX;\r\n            particle.y = targetY;\r\n        }\r\n        \r\n        // 3D DEPTH with strong vertical oscillation\r\n        const zAngle = data.angle + data.zPhase + (motion.zPhaseOffset || this.config.zPhaseOffset);\r\n        \r\n        // Z-coordinate for depth (behind/in front) with transition\r\n        particle.z = Math.sin(zAngle) * 0.9 * transitionFactor;\r\n        \r\n        // Vertical oscillation synchronized with z-depth\r\n        const verticalAmount = motion.verticalOscillation || this.config.verticalOscillation;\r\n        const verticalOffset = Math.cos(zAngle * 2) * verticalAmount * data.radius * 0.2 * transitionFactor;\r\n        particle.y += verticalOffset;\r\n        \r\n        // Tilt effect - particles higher when in front, lower when behind\r\n        const tiltOffset = particle.z * data.radius * 0.1;\r\n        particle.y -= tiltOffset;\r\n        \r\n        // Set velocity to match motion with smooth transitions\r\n        const targetVx = -Math.sin(data.angle) * radiusX * speed;\r\n        const targetVy = Math.cos(data.angle) * radiusY * speed;\r\n        \r\n        if (progress < 0.1) {\r\n            // Smooth velocity transition during entry\r\n            particle.vx = data.originalVx + (targetVx - data.originalVx) * transitionFactor;\r\n            particle.vy = data.originalVy + (targetVy - data.originalVy) * transitionFactor;\r\n        } else if (progress > 0.9) {\r\n            // Smooth velocity transition during exit\r\n            particle.vx = targetVx * transitionFactor + data.originalVx * (1 - transitionFactor);\r\n            particle.vy = targetVy * transitionFactor + data.originalVy * (1 - transitionFactor);\r\n            particle.z = particle.z * transitionFactor + data.originalZ * (1 - transitionFactor);\r\n        } else {\r\n            particle.vx = targetVx;\r\n            particle.vy = targetVy;\r\n        }\r\n    },\r\n    \r\n    cleanup: function(particle) {\r\n        if (particle.gestureData?.hula) {\r\n            const data = particle.gestureData.hula;\r\n            particle.vx = data.originalVx;\r\n            particle.vy = data.originalVy;\r\n            particle.z = data.originalZ;\r\n            delete particle.gestureData.hula;\r\n        }\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Scan Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Searchlight scanning gesture for suspicious states\r\n * @author Emotive Engine Team\r\n * @module gestures/transforms/scan\r\n * \r\n * GESTURE TYPE:\r\n * type: 'override' - Takes complete control of particle motion\r\n * \r\n * VISUAL EFFECT:\r\n * Particles sweep back and forth in a searchlight pattern, pausing at edges\r\n * to simulate surveillance scanning or paranoid checking behavior.\r\n */\r\n\r\nexport default {\r\n    name: 'scan',\r\n    emoji: '🔍',\r\n    type: 'override',\r\n    description: 'Searchlight scanning motion',\r\n    \r\n    // Default configuration\r\n    config: {\r\n        scanSpeed: 0.008,         // Slow, deliberate scanning\r\n        scanWidth: 120,           // Width of scan arc in pixels\r\n        pauseDuration: 300,       // Pause at edges in ms\r\n        scanHeight: 40,           // Vertical variation\r\n        layers: 3,                // Number of scan layers\r\n        duration: 3000            // Total animation duration\r\n    },\r\n    \r\n    // Rhythm configuration - scanning syncs to measures\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'measure',  // Scan sweeps align with measures\r\n        \r\n        // Scan timing to musical structure\r\n        sweepSync: {\r\n            beatsPerSweep: 4,         // One sweep per measure\r\n            pauseOnDownbeat: true,    // Pause at measure start\r\n            reverseOnBar: true,       // Change direction each bar\r\n            curve: 'linear'           // Steady scan motion\r\n        },\r\n        \r\n        // Layer activation by dynamics\r\n        layerSync: {\r\n            quiet: 1,                 // Single layer when quiet\r\n            moderate: 2,              // Two layers at medium\r\n            loud: 3,                  // All layers when loud\r\n            stagger: 'sequential'     // Layers activate in order\r\n        },\r\n        \r\n        // Pause duration on beats\r\n        pauseSync: {\r\n            onBeat: 500,              // Longer pause on beat\r\n            offBeat: 100,             // Quick pause off beat\r\n            accent: 800,              // Extra pause on accent\r\n            subdivision: 'quarter'    // Check every quarter note\r\n        },\r\n        \r\n        // Width modulation\r\n        widthSync: {\r\n            verse: 80,                // Narrow scan in verse\r\n            chorus: 140,              // Wide scan in chorus\r\n            bridge: 100,              // Medium in bridge\r\n            transition: 'smooth'      // Smooth width changes\r\n        },\r\n        \r\n        // Musical tension mapping\r\n        dynamics: {\r\n            forte: { scanSpeed: 0.012, layers: 4 },    // Frantic scanning\r\n            piano: { scanSpeed: 0.004, layers: 1 }     // Slow, single beam\r\n        }\r\n    },\r\n    \r\n    initialize: function(particle, motion, centerX, centerY) {\r\n        if (!particle.gestureData) {\r\n            particle.gestureData = {};\r\n        }\r\n        \r\n        // Assign particles to different scan layers\r\n        const layer = Math.floor(Math.random() * this.config.layers);\r\n        \r\n        particle.gestureData.scan = {\r\n            layer: layer,\r\n            phase: Math.random() * Math.PI * 2,  // Random starting phase\r\n            direction: Math.random() < 0.5 ? 1 : -1,  // Start direction\r\n            pauseTimer: 0,\r\n            isPaused: false,\r\n            originalX: particle.x,\r\n            originalY: particle.y,\r\n            originalVx: particle.vx,\r\n            originalVy: particle.vy,\r\n            scanOffset: (Math.random() - 0.5) * 20,  // Individual variation\r\n            verticalOffset: layer * 30 - 30,  // Layer separation\r\n            initialized: true,\r\n            startTime: Date.now()\r\n        };\r\n    },\r\n    \r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        if (!particle.gestureData?.scan) {\r\n            this.initialize(particle, motion, centerX, centerY);\r\n        }\r\n        \r\n        const data = particle.gestureData.scan;\r\n        const speed = motion.scanSpeed || this.config.scanSpeed;\r\n        const width = motion.scanWidth || this.config.scanWidth;\r\n        const pauseDuration = motion.pauseDuration || this.config.pauseDuration;\r\n        \r\n        // Handle pause at edges\r\n        if (data.isPaused) {\r\n            data.pauseTimer -= dt * 16;\r\n            if (data.pauseTimer <= 0) {\r\n                data.isPaused = false;\r\n                data.direction *= -1;  // Reverse direction after pause\r\n            }\r\n        } else {\r\n            // Update scan phase\r\n            data.phase += speed * data.direction * dt;\r\n            \r\n            // Check for edge reached\r\n            const scanPosition = Math.sin(data.phase);\r\n            if (Math.abs(scanPosition) > 0.95) {\r\n                data.isPaused = true;\r\n                data.pauseTimer = pauseDuration;\r\n            }\r\n        }\r\n        \r\n        // Calculate position\r\n        const scanX = Math.sin(data.phase) * width;\r\n        const scanY = Math.cos(data.phase * 0.5) * (this.config.scanHeight / 2);\r\n        \r\n        // Smooth entry transition (first 15% of animation)\r\n        let transitionFactor = 1.0;\r\n        if (progress < 0.15) {\r\n            transitionFactor = progress / 0.15;\r\n            transitionFactor = transitionFactor * transitionFactor; // Ease in\r\n        }\r\n        // Smooth exit transition (last 15% of animation)\r\n        else if (progress > 0.85) {\r\n            transitionFactor = (1 - progress) / 0.15;\r\n            transitionFactor = transitionFactor * transitionFactor; // Ease out\r\n        }\r\n        \r\n        // Apply layer-specific positioning with smooth transitions\r\n        const targetX = centerX + scanX + data.scanOffset;\r\n        const targetY = centerY + scanY + data.verticalOffset;\r\n        \r\n        particle.x = data.originalX + (targetX - data.originalX) * transitionFactor;\r\n        particle.y = data.originalY + (targetY - data.originalY) * transitionFactor;\r\n        \r\n        // Slow down during pauses for more realistic scanning\r\n        if (data.isPaused) {\r\n            particle.vx *= 0.85;\r\n            particle.vy *= 0.85;\r\n        } else {\r\n            // Set velocity based on scan motion\r\n            particle.vx = -Math.cos(data.phase) * width * speed * 60;\r\n            particle.vy = -Math.sin(data.phase * 0.5) * this.config.scanHeight * speed * 30;\r\n        }\r\n        \r\n        // Add slight jitter for realism\r\n        if (Math.random() < 0.02) {\r\n            particle.vx += (Math.random() - 0.5) * 2;\r\n            particle.vy += (Math.random() - 0.5) * 2;\r\n        }\r\n    },\r\n    \r\n    cleanup: function(particle) {\r\n        if (particle.gestureData?.scan) {\r\n            const data = particle.gestureData.scan;\r\n            // Restore original velocities for smooth exit\r\n            particle.vx = data.originalVx;\r\n            particle.vy = data.originalVy;\r\n            delete particle.gestureData.scan;\r\n        }\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Twist Gesture\r\n *  └─○═╝\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Twist gesture - alternating rotational dance motion\r\n * @author Emotive Engine Team\r\n * @module gestures/transforms/twist\r\n *\r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE\r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ Creates a twisting dance motion with alternating rotation and contraction.\r\n * ║ This is an OVERRIDE gesture that replaces existing particle motion.\r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * VISUAL DIAGRAM:\r\n *     ↻ ⭐ ↺      <- twist left/right\r\n *    ╱     ╲\r\n *   ⭐       ⭐    <- particles contract\r\n *    ╲     ╱\r\n *     ↺ ⭐ ↻      <- twist opposite\r\n *\r\n * USED BY:\r\n * - Dance gestures\r\n * - Playful emotions\r\n * - Music synchronization\r\n */\r\n\r\n/**\r\n * Twist gesture configuration and implementation\r\n */\r\nexport default {\r\n    name: 'twist',\r\n    emoji: '🌀',\r\n    type: 'override', // Replaces existing motion\r\n    description: 'Twisting dance motion with alternating rotation',\r\n\r\n    // Default configuration\r\n    config: {\r\n        duration: 1200,      // Animation duration\r\n        rotationAngle: 45,   // Max rotation angle in degrees\r\n        contractionFactor: 0.8, // How much to contract during twist\r\n        twistFrequency: 2,   // Number of twist cycles\r\n        easing: 'smooth',    // Animation curve type\r\n        strength: 0.8,       // Overall motion intensity\r\n        // Particle motion configuration\r\n        particleMotion: {\r\n            type: 'twist',\r\n            rotationAngle: 45,\r\n            contractionFactor: 0.8,\r\n            twistFrequency: 2\r\n        }\r\n    },\r\n\r\n    // Rhythm configuration - twist syncs to beat\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'beat',\r\n        timingSync: 'nextBeat',\r\n        interruptible: true,\r\n        priority: 4,\r\n        blendable: false,  // Override gesture, no blending\r\n        crossfadePoint: 'anyBeat',\r\n\r\n        // Twist intensity syncs to beat\r\n        amplitudeSync: {\r\n            onBeat: 1.5,      // Stronger twist on beat\r\n            offBeat: 0.7,     // Lighter between beats\r\n            curve: 'elastic'  // Bouncy twist motion\r\n        },\r\n\r\n        // Pattern-specific twisting styles\r\n        patternOverrides: {\r\n            'funk': {\r\n                // Funky twist with more rotation\r\n                rotationAngle: 60,\r\n                contractionFactor: 0.7\r\n            },\r\n            'disco': {\r\n                // Classic disco twist\r\n                twistFrequency: 3,\r\n                rotationAngle: 50\r\n            },\r\n            'latin': {\r\n                // Latin-style hip twist\r\n                rotationAngle: 35,\r\n                contractionFactor: 0.85,\r\n                twistFrequency: 2.5\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Initialize gesture data for a particle\r\n     */\r\n    initialize: function(particle, motion) {\r\n        if (!particle.gestureData) {\r\n            particle.gestureData = {};\r\n        }\r\n\r\n        particle.gestureData.twist = {\r\n            startX: particle.x,\r\n            startY: particle.y,\r\n            startAngle: Math.atan2(particle.y - motion.centerY, particle.x - motion.centerX),\r\n            startDistance: Math.sqrt(\r\n                Math.pow(particle.x - motion.centerX, 2) +\r\n                Math.pow(particle.y - motion.centerY, 2)\r\n            ),\r\n            initialized: true\r\n        };\r\n    },\r\n\r\n    /**\r\n     * Apply twist motion to particle\r\n     * @param {Particle} particle - The particle to animate\r\n     * @param {number} progress - Gesture progress (0-1)\r\n     * @param {Object} motion - Gesture configuration\r\n     * @param {number} dt - Delta time\r\n     * @param {number} centerX - Orb center X\r\n     * @param {number} centerY - Orb center Y\r\n     */\r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        // Initialize on first frame\r\n        if (!particle.gestureData?.twist?.initialized) {\r\n            this.initialize(particle, { ...motion, centerX, centerY });\r\n        }\r\n\r\n        const config = { ...this.config, ...motion };\r\n        const data = particle.gestureData.twist;\r\n        const strength = config.strength || this.config.strength || 1.0;\r\n\r\n        // Calculate twist oscillation\r\n        const twistProgress = progress * config.twistFrequency * Math.PI * 2;\r\n        const twistAmount = Math.sin(twistProgress) * strength;\r\n\r\n        // Apply rhythm modulation if present\r\n        let rotationAngle = config.rotationAngle;\r\n        let contractionFactor = config.contractionFactor;\r\n\r\n        if (motion.rhythmModulation) {\r\n            rotationAngle *= (motion.rhythmModulation.amplitudeMultiplier || 1);\r\n            contractionFactor = 1 - ((1 - contractionFactor) * (motion.rhythmModulation.amplitudeMultiplier || 1));\r\n        }\r\n\r\n        // Convert rotation to radians\r\n        const rotationRad = (rotationAngle * Math.PI / 180) * twistAmount;\r\n\r\n        // Calculate contraction (pull particles closer during twist)\r\n        const currentContraction = 1 - ((1 - contractionFactor) * Math.abs(twistAmount));\r\n\r\n        // Apply twist transformation\r\n        const newAngle = data.startAngle + rotationRad;\r\n        const newDistance = data.startDistance * currentContraction;\r\n\r\n        // Calculate new position\r\n        const targetX = centerX + Math.cos(newAngle) * newDistance;\r\n        const targetY = centerY + Math.sin(newAngle) * newDistance;\r\n\r\n        // Smoothly move to target position\r\n        const moveStrength = 0.15 * strength;\r\n        particle.x += (targetX - particle.x) * moveStrength;\r\n        particle.y += (targetY - particle.y) * moveStrength;\r\n\r\n        // Add some velocity for fluid motion\r\n        particle.vx = (targetX - particle.x) * 0.05;\r\n        particle.vy = (targetY - particle.y) * 0.05;\r\n\r\n        // Add slight vertical bounce for more dynamic feel\r\n        const bounceAmount = Math.sin(progress * Math.PI * 4) * 5 * strength;\r\n        particle.y += bounceAmount * 0.1;\r\n\r\n        // Smooth ending\r\n        if (progress > 0.9) {\r\n            const endFactor = 1 - ((progress - 0.9) * 10);\r\n            particle.vx *= endFactor;\r\n            particle.vy *= endFactor;\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * Clean up gesture data when complete\r\n     */\r\n    cleanup: function(particle) {\r\n        if (particle.gestureData?.twist) {\r\n            delete particle.gestureData.twist;\r\n        }\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Wave Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Wave gesture - infinity pattern flow\r\n * @author Emotive Engine Team\r\n * @module gestures/effects/wave\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ Creates a flowing wave motion with particles moving in an infinity (∞) pattern.   \r\n * ║ This is an OVERRIDE gesture that creates smooth, hypnotic figure-8 movements.     \r\n * ║ Particles phase in and out for a dreamlike effect.                                \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * VISUAL DIAGRAM:\r\n *        ∞ Infinity Pattern\r\n *      ↗ → ↘     ↙ ← ↖\r\n *     ⭐     ⭐ ⭐     ⭐\r\n *      ↖ ← ↙     ↘ → ↗\r\n *         (continuous flow)\r\n * \r\n * USED BY:\r\n * - Hypnotic/mesmerizing effects\r\n * - Dreamy transitions\r\n * - Magical gestures\r\n * - Flow states\r\n */\r\n\r\n/**\r\n * Wave gesture configuration and implementation\r\n */\r\nexport default {\r\n    name: 'wave',\r\n    emoji: '🌊',\r\n    type: 'override', // Completely replaces motion\r\n    description: 'Infinity pattern flow with phasing',\r\n    \r\n    // Default configuration\r\n    config: {\r\n        // Musical duration - wave flows for exactly 1 bar\r\n        musicalDuration: {\r\n            musical: true,\r\n            bars: 1,           // Default to 1 bar of wave motion\r\n            minBeats: 4,       // Minimum 1 bar\r\n            maxBeats: 16       // Maximum 4 bars\r\n        },\r\n        \r\n        // Musical phases of the wave gesture\r\n        phases: [\r\n            { name: 'gather', beats: 0.5 },     // Particles gather\r\n            { name: 'rise', beats: 0.5 },       // Begin rising motion\r\n            { name: 'waveLeft', beats: 1 },     // Wave to the left\r\n            { name: 'waveRight', beats: 1 },    // Wave to the right\r\n            { name: 'settle', beats: 1 }        // Settle back to center\r\n        ],\r\n        \r\n        amplitude: 40,         // Infinity pattern width\r\n        frequency: 1,          // Complete cycle count\r\n        phaseShift: 0.3,       // Particle timing offset\r\n        liftHeight: 20,        // Vertical movement range\r\n        fadeInOut: true,       // Enable opacity transitions\r\n        smoothness: 0.1,       // Motion fluidity factor\r\n        easing: 'sine',        // Animation curve type\r\n        strength: 1.0,         // Overall effect intensity\r\n        // Particle motion configuration for AnimationController\r\n        particleMotion: {\r\n            type: 'wave',\r\n            strength: 1.0,     // Wave motion strength\r\n            amplitude: 50      // Pattern size\r\n        }\r\n    },\r\n    \r\n    // Rhythm configuration - flowing wave patterns synchronized to musical waves and phrases\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'wave',    // Flow with musical wave patterns and melodic contours\r\n        \r\n        // Amplitude responds to musical dynamics and melodic range\r\n        amplitudeSync: {\r\n            onWave: 65,           // Large waves during musical waves\r\n            onStatic: 25,         // Small waves during static sections\r\n            curve: 'flowing'      // Smooth, continuous transitions\r\n        },\r\n        \r\n        // Frequency matches musical phrase rhythm\r\n        frequencySync: {\r\n            mode: 'phrase',\r\n            slow: 0.7,            // Slower waves for slow phrases\r\n            fast: 1.8,            // Faster waves for quick phrases\r\n            curve: 'melodic'      // Follows melodic contour\r\n        },\r\n        \r\n        // Duration automatically syncs to bars via musicalDuration config\r\n        durationSync: {\r\n            mode: 'bars',         // Uses bars from musicalDuration\r\n            adaptToPhrase: true,  // Extend to complete musical phrases\r\n            sustain: true         // Maintain wave through phrase\r\n        },\r\n        \r\n        // Phase shift creates ensemble wave effects\r\n        phaseSync: {\r\n            enabled: true,\r\n            multiplier: 0.5,      // Moderate phase variation\r\n            type: 'ensemble'      // Creates group wave patterns\r\n        },\r\n        \r\n        // Response to melodic contour\r\n        melodicResponse: {\r\n            enabled: true,\r\n            multiplier: 1.4,      // Wave amplitude follows melody\r\n            type: 'amplitude'     // Affects wave size\r\n        },\r\n        \r\n        // Style variations for different music types\r\n        patternOverrides: {\r\n            'ambient': {\r\n                // Slow, hypnotic waves\r\n                amplitudeSync: { onWave: 80, onStatic: 40, curve: 'hypnotic' },\r\n                frequencySync: { slow: 0.5, fast: 1.2 },\r\n                durationSync: { minBeats: 16, maxBeats: 64 }\r\n            },\r\n            'ocean': {\r\n                // Natural, oceanic wave patterns\r\n                amplitudeSync: { onWave: 90, onStatic: 20, curve: 'natural' },\r\n                phaseSync: { multiplier: 0.8 },\r\n                melodicResponse: { multiplier: 1.8 }\r\n            },\r\n            'electronic': {\r\n                // Precise, digital wave forms\r\n                amplitudeSync: { onWave: 70, onStatic: 30, curve: 'digital' },\r\n                frequencySync: { slow: 0.8, fast: 2.5, curve: 'precise' }\r\n            },\r\n            'orchestral': {\r\n                // Rich, complex wave interactions\r\n                amplitudeSync: { onWave: 75, onStatic: 35 },\r\n                phaseSync: { multiplier: 0.7 },\r\n                melodicResponse: { multiplier: 2.0 }\r\n            }\r\n        },\r\n        \r\n        // Musical dynamics\r\n        dynamics: {\r\n            forte: {\r\n                // Powerful, sweeping waves\r\n                amplitudeSync: { \r\n                    onWave: { multiplier: 1.8 },\r\n                    onStatic: { multiplier: 1.4 }\r\n                },\r\n                frequencySync: { multiplier: 1.3 },\r\n                melodicResponse: { multiplier: 2.2 }\r\n            },\r\n            piano: {\r\n                // Gentle, subtle waves\r\n                amplitudeSync: { \r\n                    onWave: { multiplier: 0.6 },\r\n                    onStatic: { multiplier: 0.4 }\r\n                },\r\n                frequencySync: { multiplier: 0.7 },\r\n                melodicResponse: { multiplier: 1.1 }\r\n            }\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Initialize gesture data for a particle\r\n     * @param {Particle} particle - The particle to initialize\r\n     * @param {Object} motion - Gesture motion configuration\r\n     * @param {number} centerX - Orb center X\r\n     * @param {number} centerY - Orb center Y\r\n     */\r\n    initialize: function(particle, motion, centerX, centerY) {\r\n        if (!particle.gestureData) {\r\n            particle.gestureData = {};\r\n        }\r\n        \r\n        // Calculate initial position relative to center\r\n        const dx = particle.x - centerX;\r\n        const dy = particle.y - centerY;\r\n        const angle = Math.atan2(dy, dx);\r\n        const radius = Math.sqrt(dx * dx + dy * dy);\r\n        \r\n        // Random direction for wave motion\r\n        const direction = Math.random() < 0.5 ? 1 : -1;\r\n        \r\n        particle.gestureData.wave = {\r\n            startX: particle.x,\r\n            startY: particle.y,\r\n            originalVx: particle.vx,\r\n            originalVy: particle.vy,\r\n            baseOpacity: particle.opacity || particle.life || 1,\r\n            angle: angle,\r\n            radius: radius,\r\n            offset: Math.random() * Math.PI * 2, // Random phase offset\r\n            role: Math.random(), // 0-1 for variation\r\n            direction: direction, // Random wave direction\r\n            initialized: true\r\n        };\r\n    },\r\n    \r\n    /**\r\n     * Apply wave motion to particle\r\n     * @param {Particle} particle - The particle to animate\r\n     * @param {number} progress - Gesture progress (0-1)\r\n     * @param {Object} motion - Gesture configuration\r\n     * @param {number} dt - Delta time\r\n     * @param {number} centerX - Orb center X\r\n     * @param {number} centerY - Orb center Y\r\n     */\r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        // Initialize on first frame\r\n        if (!particle.gestureData?.wave?.initialized) {\r\n            this.initialize(particle, motion, centerX, centerY);\r\n        }\r\n        \r\n        const data = particle.gestureData.wave;\r\n        const config = { ...this.config, ...motion };\r\n        const strength = motion.strength || 1.0;\r\n        \r\n        // Apply easing to progress\r\n        const easeProgress = this.easeInOutSine(progress);\r\n        \r\n        // Add phase shift based on particle role (creates wave effect)\r\n        const phaseShift = data.role * config.phaseShift;\r\n        const adjustedPhase = Math.max(0, easeProgress - phaseShift);\r\n        \r\n        // Calculate infinity pattern (lemniscate) with direction\r\n        const t = adjustedPhase * Math.PI * 2 * config.frequency * data.direction + data.offset;\r\n        \r\n        // Scale amplitude based on distance from center\r\n        const radiusFactor = 0.5 + (data.radius / 100) * 0.5;\r\n        const amplitude = config.amplitude * radiusFactor * strength * particle.scaleFactor;\r\n        \r\n        // Infinity pattern equations\r\n        const infinityX = Math.sin(t) * amplitude;\r\n        const infinityY = Math.sin(t * 2) * amplitude * 0.3; // Smaller vertical component\r\n        \r\n        // Add vertical lift effect\r\n        const lift = -Math.abs(Math.sin(easeProgress * Math.PI)) * config.liftHeight * particle.scaleFactor;\r\n        \r\n        // Calculate target position\r\n        const targetX = centerX + infinityX;\r\n        const targetY = centerY + infinityY + lift;\r\n        \r\n        // Smooth movement with role-based variation\r\n        const smoothness = config.smoothness + data.role * 0.12;\r\n        \r\n        // Apply position with smoothing\r\n        particle.x += (targetX - particle.x) * smoothness;\r\n        particle.y += (targetY - particle.y) * smoothness;\r\n        \r\n        // Set velocity for trails\r\n        particle.vx = (targetX - particle.x) * 0.3;\r\n        particle.vy = (targetY - particle.y) * 0.3;\r\n        \r\n        // Apply fade effect if enabled\r\n        if (config.fadeInOut) {\r\n            let fadeFactor;\r\n            \r\n            if (adjustedPhase < 0.1) {\r\n                // Fade in\r\n                fadeFactor = adjustedPhase / 0.1;\r\n            } else if (adjustedPhase > 0.9) {\r\n                // Fade out\r\n                fadeFactor = (1 - adjustedPhase) / 0.1;\r\n            } else {\r\n                // Full opacity with sine variation\r\n                fadeFactor = 0.5 + Math.sin(adjustedPhase * Math.PI) * 0.5;\r\n            }\r\n            \r\n            particle.opacity = data.baseOpacity * (0.3 + fadeFactor * 0.7);\r\n            \r\n            // Update life for particles that use it instead of opacity\r\n            if (particle.life !== undefined) {\r\n                particle.life = particle.opacity;\r\n            }\r\n        }\r\n        \r\n        // Smooth ending\r\n        if (progress >= 0.95) {\r\n            const endFactor = (1 - progress) * 20;\r\n            particle.vx = particle.vx * endFactor + data.originalVx * (1 - endFactor);\r\n            particle.vy = particle.vy * endFactor + data.originalVy * (1 - endFactor);\r\n            \r\n            // Restore opacity\r\n            if (config.fadeInOut) {\r\n                particle.opacity = data.baseOpacity * endFactor;\r\n                if (particle.life !== undefined) {\r\n                    particle.life = particle.opacity;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Clean up gesture data when complete\r\n     * @param {Particle} particle - The particle to clean up\r\n     */\r\n    cleanup: function(particle) {\r\n        if (particle.gestureData?.wave) {\r\n            const data = particle.gestureData.wave;\r\n            particle.vx = data.originalVx;\r\n            particle.vy = data.originalVy;\r\n            particle.opacity = data.baseOpacity;\r\n            if (particle.life !== undefined) {\r\n                particle.life = data.baseOpacity;\r\n            }\r\n            delete particle.gestureData.wave;\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Sine easing for smooth wave motion\r\n     * @param {number} t - Progress (0-1)\r\n     * @returns {number} Eased value\r\n     */\r\n    easeInOutSine: function(t) {\r\n        return -(Math.cos(Math.PI * t) - 1) / 2;\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Drift Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Drift gesture - controlled floating motion\r\n * @author Emotive Engine Team\r\n * @module gestures/effects/drift\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ Creates a dreamy drifting effect where particles float outward then return home.  \r\n * ║ This is an OVERRIDE gesture with smooth, controlled movement and fading effects.  \r\n * ║ Perfect for transitions, sleepy states, or ethereal moments.                      \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * VISUAL DIAGRAM:\r\n *    Start         Drift Out        Hold         Return\r\n *      ⭐           · · ⭐           · · ·          ⭐\r\n *     ⭐⭐    →    · ⭐ · ⭐    →   · · · ·    →   ⭐⭐\r\n *      ⭐           ⭐ · ·           · · ·          ⭐\r\n *   (grouped)     (spread)        (faded)      (regrouped)\r\n * \r\n * USED BY:\r\n * - Sleepy/drowsy states\r\n * - Dreamy transitions\r\n * - Dispersal effects\r\n * - Meditation/calm states\r\n */\r\n\r\n/**\r\n * Drift gesture configuration and implementation\r\n */\r\nexport default {\r\n    name: 'drift',\r\n    emoji: '☁️',\r\n    type: 'override', // Completely replaces motion\r\n    description: 'Controlled floating with fade effects',\r\n    \r\n    // Default configuration\r\n    config: {\r\n        duration: 800,         // Animation duration\r\n        distance: 50,          // Maximum drift distance\r\n        angle: 45,             // Primary drift direction\r\n        returnToOrigin: true,  // Return to starting position\r\n        fadeOut: false,        // Apply fade effect during drift (disabled to prevent disappearing)\r\n        holdTime: 0.2,         // Pause duration at drift peak\r\n        turbulence: 0.1,       // Random movement variation amount\r\n        angleSpread: 45,       // Directional spread range\r\n        smoothness: 0.08,      // Movement fluidity factor\r\n        easing: 'ease',        // Animation curve type\r\n        strength: 1.0,         // Overall drift intensity\r\n        // Particle motion configuration for AnimationController\r\n        particleMotion: {\r\n            type: 'drift',\r\n            strength: 1.0,     // Drift motion strength\r\n            distance: 60       // Maximum drift distance\r\n        }\r\n    },\r\n    \r\n    // Rhythm configuration - ethereal drift following ambient musical textures\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'ambient',  // Sync to ambient musical textures\r\n        \r\n        // Distance varies with musical dynamics\r\n        distanceSync: {\r\n            quiet: 30,            // Small drift in quiet sections\r\n            loud: 80,             // Large drift in loud sections\r\n            crescendo: 'expand',  // Expand drift on crescendos\r\n            diminuendo: 'contract' // Contract drift on diminuendos\r\n        },\r\n        \r\n        // Angle follows harmonic progression\r\n        angleSync: {\r\n            major: 45,            // Upward drift in major keys\r\n            minor: 225,           // Downward drift in minor keys\r\n            modulation: 'smooth', // Smooth angle changes\r\n            cadence: 'return'     // Return to center on cadences\r\n        },\r\n        \r\n        // Hold time syncs to phrase length\r\n        holdSync: {\r\n            shortPhrase: 0.1,     // Brief hold for short phrases\r\n            longPhrase: 0.4,      // Extended hold for long phrases\r\n            fermata: 'sustain'    // Sustain hold on fermatas\r\n        },\r\n        \r\n        // Gentle accent response\r\n        accentResponse: {\r\n            enabled: true,\r\n            multiplier: 1.3,      // Subtle drift increase on accents\r\n            type: 'distance'      // Accent affects drift distance\r\n        },\r\n        \r\n        // Pattern-specific drift styles\r\n        patternOverrides: {\r\n            'ambient': {\r\n                // Slow, ethereal drifting\r\n                distanceSync: { quiet: 40, loud: 100 },\r\n                holdSync: { shortPhrase: 0.3, longPhrase: 0.6 }\r\n            },\r\n            'classical': {\r\n                // Elegant, controlled drifting\r\n                angleSync: { major: 30, minor: 210 },\r\n                distanceSync: { quiet: 25, loud: 60 }\r\n            },\r\n            'jazz': {\r\n                // Syncopated, unpredictable drifting\r\n                angleSync: { \r\n                    major: 60, \r\n                    minor: 240,\r\n                    swing: true,\r\n                    syncopated: true\r\n                }\r\n            },\r\n            'new_age': {\r\n                // Meditative, flowing drift\r\n                distanceSync: { quiet: 35, loud: 70 },\r\n                holdSync: { shortPhrase: 0.4, longPhrase: 0.8 },\r\n                angleSync: { modulation: 'gradual' }\r\n            }\r\n        },\r\n        \r\n        // Musical dynamics variations\r\n        dynamics: {\r\n            forte: {\r\n                // Expansive, bold drifting\r\n                distanceSync: { \r\n                    quiet: { multiplier: 1.5 },\r\n                    loud: { multiplier: 1.8 }\r\n                },\r\n                holdSync: { multiplier: 1.2 },\r\n                accentResponse: { multiplier: 1.6 }\r\n            },\r\n            piano: {\r\n                // Delicate, subtle drifting\r\n                distanceSync: { \r\n                    quiet: { multiplier: 0.6 },\r\n                    loud: { multiplier: 0.8 }\r\n                },\r\n                holdSync: { multiplier: 0.8 },\r\n                accentResponse: { multiplier: 1.1 }\r\n            }\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Initialize gesture data for a particle\r\n     * @param {Particle} particle - The particle to initialize\r\n     * @param {Object} motion - Gesture motion configuration\r\n     * @param {number} centerX - Orb center X\r\n     * @param {number} centerY - Orb center Y\r\n     */\r\n    initialize: function(particle, motion, centerX, centerY) {\r\n        if (!particle.gestureData) {\r\n            particle.gestureData = {};\r\n        }\r\n        \r\n        // Calculate drift direction\r\n        const dx = particle.x - centerX;\r\n        const dy = particle.y - centerY;\r\n        let driftAngle = Math.atan2(dy, dx);\r\n        \r\n        // Add some spread to the drift angle\r\n        const config = { ...this.config, ...motion };\r\n        const spreadRad = (config.angleSpread * Math.PI / 180);\r\n        const angleOffset = (Math.random() - 0.5) * spreadRad;\r\n        driftAngle += angleOffset;\r\n        \r\n        // Determine home position (closer to center)\r\n        const homeRadius = 30 + Math.random() * 30;\r\n        \r\n        particle.gestureData.drift = {\r\n            startX: particle.x,\r\n            startY: particle.y,\r\n            originalVx: particle.vx,\r\n            originalVy: particle.vy,\r\n            baseOpacity: particle.opacity || particle.life || 1,\r\n            driftAngle: driftAngle,\r\n            angleOffset: angleOffset,\r\n            homeRadius: homeRadius * particle.scaleFactor,\r\n            homeX: centerX + Math.cos(driftAngle) * homeRadius,\r\n            homeY: centerY + Math.sin(driftAngle) * homeRadius,\r\n            role: Math.random(), // 0-1 for timing variation\r\n            turbulencePhase: Math.random() * Math.PI * 2,\r\n            initialized: true\r\n        };\r\n    },\r\n    \r\n    /**\r\n     * Apply drift motion to particle\r\n     * @param {Particle} particle - The particle to animate\r\n     * @param {number} progress - Gesture progress (0-1)\r\n     * @param {Object} motion - Gesture configuration\r\n     * @param {number} dt - Delta time\r\n     * @param {number} centerX - Orb center X\r\n     * @param {number} centerY - Orb center Y\r\n     */\r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        // Initialize on first frame\r\n        if (!particle.gestureData?.drift?.initialized) {\r\n            this.initialize(particle, motion, centerX, centerY);\r\n        }\r\n        \r\n        const data = particle.gestureData.drift;\r\n        const config = { ...this.config, ...motion };\r\n        const strength = motion.strength || 1.0;\r\n        \r\n        // Apply easing\r\n        const easeProgress = this.easeInOutCubic(progress);\r\n        \r\n        // Add role-based phase shift for staggered movement\r\n        const adjustedPhase = Math.max(0, easeProgress - data.role * 0.1);\r\n        \r\n        let targetX, targetY;\r\n        let currentRadius;\r\n        \r\n        // Determine phase of drift\r\n        if (!config.returnToOrigin) {\r\n            // Simple outward drift\r\n            const driftProgress = adjustedPhase;\r\n            currentRadius = data.homeRadius + driftProgress * config.distance * strength * particle.scaleFactor;\r\n            \r\n        } else if (adjustedPhase < 0.4) {\r\n            // Phase 1: Move to home position\r\n            const homeProgress = adjustedPhase / 0.4;\r\n            const easedHome = this.easeOutQuad(homeProgress);\r\n            targetX = data.startX + (data.homeX - data.startX) * easedHome;\r\n            targetY = data.startY + (data.homeY - data.startY) * easedHome;\r\n            \r\n        } else if (adjustedPhase < 0.6 + config.holdTime) {\r\n            // Phase 2: Drift outward\r\n            const driftPhase = (adjustedPhase - 0.4) / (0.2 + config.holdTime);\r\n            currentRadius = data.homeRadius + \r\n                Math.sin(driftPhase * Math.PI * 0.5) * config.distance * strength * particle.scaleFactor;\r\n            \r\n        } else {\r\n            // Phase 3: Return to origin\r\n            const returnPhase = (adjustedPhase - 0.6 - config.holdTime) / (0.4 - config.holdTime);\r\n            currentRadius = data.homeRadius + \r\n                Math.cos(returnPhase * Math.PI * 0.5) * config.distance * strength * particle.scaleFactor;\r\n        }\r\n        \r\n        // Calculate position with turbulence\r\n        if (currentRadius !== undefined) {\r\n            // Add turbulence\r\n            data.turbulencePhase += config.turbulence * dt;\r\n            const turbulenceX = Math.sin(data.turbulencePhase) * config.turbulence * 10;\r\n            const turbulenceY = Math.cos(data.turbulencePhase * 1.3) * config.turbulence * 10;\r\n            \r\n            const angle = data.driftAngle + data.angleOffset;\r\n            targetX = centerX + Math.cos(angle) * currentRadius + turbulenceX;\r\n            targetY = centerY + Math.sin(angle) * currentRadius + turbulenceY;\r\n        }\r\n        \r\n        // Smooth movement with role variation\r\n        const smoothness = config.smoothness + data.role * 0.08;\r\n        particle.x += (targetX - particle.x) * smoothness;\r\n        particle.y += (targetY - particle.y) * smoothness;\r\n        \r\n        // Set velocity for trails\r\n        particle.vx = (targetX - particle.x) * 0.25;\r\n        particle.vy = (targetY - particle.y) * 0.25;\r\n        \r\n        // Apply fade effect\r\n        if (config.fadeOut) {\r\n            let fadeFactor;\r\n            \r\n            if (progress < 0.25) {\r\n                // Fade in\r\n                fadeFactor = 0.3 + (progress / 0.25) * 0.7;\r\n            } else if (progress < 0.75) {\r\n                // Main phase with sine variation\r\n                fadeFactor = 0.7 + Math.sin((progress - 0.25) * Math.PI / 0.5) * 0.3;\r\n            } else {\r\n                // Fade back\r\n                fadeFactor = (1 - progress) * 4;\r\n            }\r\n            \r\n            particle.opacity = data.baseOpacity * fadeFactor;\r\n            if (particle.life !== undefined) {\r\n                particle.life = particle.opacity;\r\n            }\r\n        }\r\n        \r\n        // Clean ending\r\n        if (progress >= 0.99) {\r\n            particle.vx = data.originalVx * 0.1;\r\n            particle.vy = data.originalVy * 0.1;\r\n            \r\n            if (config.fadeOut) {\r\n                particle.opacity = data.baseOpacity;\r\n                if (particle.life !== undefined) {\r\n                    particle.life = data.baseOpacity;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Clean up gesture data when complete\r\n     * @param {Particle} particle - The particle to clean up\r\n     */\r\n    cleanup: function(particle) {\r\n        if (particle.gestureData?.drift) {\r\n            const data = particle.gestureData.drift;\r\n            particle.vx = data.originalVx;\r\n            particle.vy = data.originalVy;\r\n            particle.opacity = data.baseOpacity;\r\n            if (particle.life !== undefined) {\r\n                particle.life = data.baseOpacity;\r\n            }\r\n            delete particle.gestureData.drift;\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Easing functions\r\n     */\r\n    easeInOutCubic: function(t) {\r\n        return t < 0.5 \r\n            ? 4 * t * t * t \r\n            : 1 - Math.pow(-2 * t + 2, 3) / 2;\r\n    },\r\n    \r\n    easeOutQuad: function(t) {\r\n        return t * (2 - t);\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Flicker Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Flicker gesture - opacity and motion variation\r\n * @author Emotive Engine Team\r\n * @module gestures/effects/flicker\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ Creates a flickering effect with rapid opacity changes and subtle motion jitter.  \r\n * ║ This is a BLENDING gesture that adds visual instability, perfect for glitches,   \r\n * ║ electrical effects, or nervous energy.                                            \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * VISUAL DIAGRAM:\r\n *    Frame 1      Frame 2      Frame 3      Frame 4\r\n *      ⭐          ·⭐·         ⭐⭐⭐         ·⭐\r\n *    (100%)       (30%)        (120%)        (50%)\r\n *    normal       dimmed       bright        partial\r\n * \r\n * USED BY:\r\n * - Glitch/digital effects\r\n * - Electrical sparks\r\n * - Nervous/unstable states\r\n * - Teleportation effects\r\n * - Broken/malfunctioning states\r\n */\r\n\r\n/**\r\n * Flicker gesture configuration and implementation\r\n */\r\nexport default {\r\n    name: 'flicker',\r\n    emoji: '⚡',\r\n    type: 'blending', // Adds to existing motion\r\n    description: 'Rapid opacity changes with motion jitter',\r\n    \r\n    // Default configuration\r\n    config: {\r\n        duration: 800,         // Animation duration\r\n        flickerRate: 15,       // Flicker speed\r\n        frequency: 6,          // Flicker count\r\n        minOpacity: 0.3,       // Minimum visibility\r\n        maxOpacity: 1.0,       // Maximum visibility\r\n        jitterAmount: 2,       // Position wobble range\r\n        colorShift: false,     // Enable hue variation\r\n        strobe: false,         // Regular vs random pattern\r\n        pulseMode: false,      // Smooth vs sharp transitions\r\n        groupFlicker: 0.3,     // Group synchronization probability\r\n        easing: 'linear',      // Animation curve type\r\n        strength: 0.7,         // Overall effect intensity\r\n        // Particle motion configuration for AnimationController\r\n        particleMotion: {\r\n            type: 'flicker',\r\n            strength: 0.7,     // Particle flicker strength\r\n            frequency: 6       // Particle flicker rate\r\n        }\r\n    },\r\n    \r\n    // Rhythm configuration - flicker syncs to subdivisions\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'subdivision',  // Flicker on subdivisions\r\n        \r\n        // Flicker rate syncs to tempo\r\n        rateSync: {\r\n            subdivision: 'sixteenth',  // Flicker on 16th notes\r\n            onBeat: 30,               // Rapid flicker on beat\r\n            offBeat: 10,              // Slower between beats\r\n            triplet: 20,              // Medium on triplets\r\n            curve: 'step'             // Instant changes\r\n        },\r\n        \r\n        // Opacity patterns with rhythm\r\n        opacitySync: {\r\n            pattern: 'HLMH',          // High-Low-Medium-High\r\n            subdivision: 'eighth',     // Pattern rate\r\n            onAccent: 0.1,           // Nearly off on accent (dramatic)\r\n            regular: 0.5              // Medium normally\r\n        },\r\n        \r\n        // Jitter amount varies\r\n        jitterSync: {\r\n            onBeat: 5,                // Big jitter on beat\r\n            offBeat: 1,               // Minimal between\r\n            accent: 10,               // Extreme on accent\r\n            curve: 'random'           // Chaotic motion\r\n        },\r\n        \r\n        // Strobe modes\r\n        strobeSync: {\r\n            verse: false,             // No strobe in verse\r\n            chorus: true,             // Strobe in chorus\r\n            drop: 'intense',          // Intense strobe on drop\r\n            pattern: 'XOXO'          // Strobe pattern\r\n        },\r\n        \r\n        // Musical dynamics\r\n        dynamics: {\r\n            forte: { flickerRate: 25, jitterAmount: 5, minOpacity: 0.1 },\r\n            piano: { flickerRate: 8, jitterAmount: 1, minOpacity: 0.5 }\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Initialize gesture data for a particle\r\n     * @param {Particle} particle - The particle to initialize\r\n     * @param {Object} motion - Gesture motion configuration\r\n     */\r\n    initialize: function(particle, motion) {\r\n        if (!particle.gestureData) {\r\n            particle.gestureData = {};\r\n        }\r\n        \r\n        const config = { ...this.config, ...motion };\r\n        \r\n        // Determine if this particle is part of a synchronized group\r\n        const isGrouped = Math.random() < config.groupFlicker;\r\n        \r\n        particle.gestureData.flicker = {\r\n            baseOpacity: particle.opacity || particle.life || 1,\r\n            baseColor: particle.color,\r\n            baseX: particle.x,\r\n            baseY: particle.y,\r\n            flickerTimer: 0,\r\n            lastFlicker: 0,\r\n            flickerState: true,\r\n            isGrouped: isGrouped,\r\n            groupId: isGrouped ? Math.floor(Math.random() * 3) : -1, // Assign to flicker group\r\n            phase: Math.random() * Math.PI * 2,  // Random phase offset\r\n            colorHue: 0,\r\n            initialized: true\r\n        };\r\n    },\r\n    \r\n    /**\r\n     * Apply flicker effect to particle\r\n     * @param {Particle} particle - The particle to animate\r\n     * @param {number} progress - Gesture progress (0-1)\r\n     * @param {Object} motion - Gesture configuration\r\n     * @param {number} dt - Delta time\r\n     * @param {number} centerX - Orb center X\r\n     * @param {number} centerY - Orb center Y\r\n     */\r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        // Initialize on first frame\r\n        if (!particle.gestureData?.flicker?.initialized) {\r\n            this.initialize(particle, motion);\r\n        }\r\n        \r\n        const data = particle.gestureData.flicker;\r\n        const config = { ...this.config, ...motion };\r\n        const strength = motion.strength || 1.0;\r\n        \r\n        // Update flicker timer\r\n        data.flickerTimer += dt * config.flickerRate;\r\n        \r\n        // Calculate opacity based on mode\r\n        let opacityMultiplier;\r\n        \r\n        if (config.strobe) {\r\n            // Strobe pattern - regular on/off\r\n            const strobePhase = (data.flickerTimer + data.phase) % 1;\r\n            opacityMultiplier = strobePhase < 0.5 ? 1 : config.minOpacity;\r\n            \r\n        } else if (config.pulseMode) {\r\n            // Smooth pulsing\r\n            const pulsePhase = data.flickerTimer + data.phase;\r\n            opacityMultiplier = config.minOpacity + \r\n                (config.maxOpacity - config.minOpacity) * (Math.sin(pulsePhase) * 0.5 + 0.5);\r\n            \r\n        } else {\r\n            // Random flicker\r\n            if (data.flickerTimer - data.lastFlicker > 1) {\r\n                data.lastFlicker = data.flickerTimer;\r\n                \r\n                // Group flicker logic\r\n                if (data.isGrouped) {\r\n                    // Flicker based on group timing\r\n                    const groupPhase = Math.floor(data.flickerTimer) % 3;\r\n                    data.flickerState = groupPhase === data.groupId;\r\n                } else {\r\n                    // Individual random flicker\r\n                    data.flickerState = Math.random() > 0.3;\r\n                }\r\n            }\r\n            \r\n            // Calculate target opacity\r\n            const targetOpacity = data.flickerState ? \r\n                config.maxOpacity : \r\n                config.minOpacity + Math.random() * 0.3;\r\n            \r\n            // Smooth transition for less harsh flicker\r\n            const currentOpacity = particle.opacity / data.baseOpacity;\r\n            opacityMultiplier = currentOpacity + (targetOpacity - currentOpacity) * 0.3;\r\n        }\r\n        \r\n        // Apply opacity with strength\r\n        const finalOpacity = data.baseOpacity * (1 + (opacityMultiplier - 1) * strength);\r\n        particle.opacity = Math.max(0, Math.min(1, finalOpacity)); // Clamp to 0-1\r\n        \r\n        // Update life if used instead of opacity\r\n        if (particle.life !== undefined) {\r\n            particle.life = particle.opacity;\r\n        }\r\n        \r\n        // Apply position jitter\r\n        if (config.jitterAmount > 0 && opacityMultiplier > config.minOpacity) {\r\n            const jitter = config.jitterAmount * strength * particle.scaleFactor;\r\n            const jitterX = (Math.random() - 0.5) * jitter * opacityMultiplier;\r\n            const jitterY = (Math.random() - 0.5) * jitter * opacityMultiplier;\r\n            \r\n            particle.vx += jitterX * 0.1 * dt;\r\n            particle.vy += jitterY * 0.1 * dt;\r\n        }\r\n        \r\n        // Apply color shift if enabled\r\n        if (config.colorShift && particle.color) {\r\n            data.colorHue += 0.01 * dt;\r\n            const hueShift = Math.sin(data.colorHue) * 30; // ±30 degree hue shift\r\n            particle.color = this.shiftHue(data.baseColor, hueShift * strength);\r\n        }\r\n        \r\n        // Smooth fade in/out at gesture boundaries\r\n        let fadeFactor = 1;\r\n        if (progress < 0.1) {\r\n            fadeFactor = progress / 0.1;  // Fade in\r\n        } else if (progress > 0.9) {\r\n            fadeFactor = (1 - progress) / 0.1;  // Fade out\r\n        }\r\n        \r\n        particle.opacity *= fadeFactor;\r\n        if (particle.life !== undefined) {\r\n            particle.life = particle.opacity;\r\n        }\r\n        \r\n        // Dampen velocity slightly for stability\r\n        if (progress > 0.8) {\r\n            particle.vx *= 0.95;\r\n            particle.vy *= 0.95;\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Shift the hue of a color\r\n     * @param {string} color - Hex color string\r\n     * @param {number} degrees - Degrees to shift hue\r\n     * @returns {string} New hex color\r\n     */\r\n    shiftHue: function(color, degrees) {\r\n        // Simple hue shift implementation\r\n        // In production, use a proper color library\r\n        if (!color || !color.startsWith('#')) return color;\r\n        \r\n        // Convert hex to RGB\r\n        const hex = color.slice(1);\r\n        const r = parseInt(hex.substr(0, 2), 16) / 255;\r\n        const g = parseInt(hex.substr(2, 2), 16) / 255;\r\n        const b = parseInt(hex.substr(4, 2), 16) / 255;\r\n        \r\n        // Simple hue rotation (approximate)\r\n        const hueRad = degrees * Math.PI / 180;\r\n        const cos = Math.cos(hueRad);\r\n        const sin = Math.sin(hueRad);\r\n        \r\n        // Rotate around luminance axis (simplified)\r\n        const newR = r * cos - g * sin;\r\n        const newG = r * sin + g * cos;\r\n        const newB = b;\r\n        \r\n        // Convert back to hex\r\n        const toHex = (n) => {\r\n            const val = Math.max(0, Math.min(255, Math.round(n * 255)));\r\n            return val.toString(16).padStart(2, '0');\r\n        };\r\n        \r\n        return '#' + toHex(newR) + toHex(newG) + toHex(newB);\r\n    },\r\n    \r\n    /**\r\n     * Clean up gesture data when complete\r\n     * @param {Particle} particle - The particle to clean up\r\n     */\r\n    cleanup: function(particle) {\r\n        if (particle.gestureData?.flicker) {\r\n            const data = particle.gestureData.flicker;\r\n            particle.opacity = data.baseOpacity;\r\n            particle.color = data.baseColor;\r\n            if (particle.life !== undefined) {\r\n                particle.life = data.baseOpacity;\r\n            }\r\n            delete particle.gestureData.flicker;\r\n        }\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Burst Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Burst gesture - explosive outward motion\r\n * @author Emotive Engine Team\r\n * @module gestures/effects/burst\r\n */\r\n\r\nexport default {\r\n    name: 'burst',\r\n    emoji: '💥',\r\n    type: 'blending',\r\n    description: 'Explosive outward burst from center',\r\n    \r\n    // Default configuration\r\n    config: {\r\n        decay: 0.5,      // Force reduction over time\r\n        strength: 2.0    // Initial explosion intensity\r\n    },\r\n    \r\n    // Rhythm configuration - explosive bursts on strong beats\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'beat',  // Burst on strong beats and accents\r\n        \r\n        // Strength syncs to beat intensity\r\n        strengthSync: {\r\n            onBeat: 3.5,          // Powerful burst on beats\r\n            offBeat: 1.0,         // Gentle burst off-beat\r\n            curve: 'explosion'    // Sharp attack, rapid decay\r\n        },\r\n        \r\n        // Decay rate responds to tempo\r\n        decaySync: {\r\n            mode: 'tempo',\r\n            fast: 0.8,            // Quick decay for fast songs\r\n            slow: 0.3,            // Slow decay for slow songs\r\n            curve: 'exponential'\r\n        },\r\n        \r\n        // Duration matches beat timing\r\n        durationSync: {\r\n            mode: 'beats',\r\n            beats: 0.5,           // Half-beat burst duration\r\n            sustain: false        // No sustain, pure burst\r\n        },\r\n        \r\n        // Strong response to accents\r\n        accentResponse: {\r\n            enabled: true,\r\n            multiplier: 2.5,      // Massive burst on accents\r\n            type: 'strength'      // Accent affects burst power\r\n        },\r\n        \r\n        // Pattern-specific burst styles\r\n        patternOverrides: {\r\n            'rock': {\r\n                // Heavy, aggressive bursts\r\n                strengthSync: { onBeat: 4.0, offBeat: 1.5 },\r\n                decaySync: { fast: 0.6, slow: 0.4 }\r\n            },\r\n            'electronic': {\r\n                // Sharp, precise bursts\r\n                strengthSync: { onBeat: 3.8, offBeat: 0.8, curve: 'sharp' },\r\n                decaySync: { fast: 0.9, slow: 0.7 }\r\n            },\r\n            'jazz': {\r\n                // Syncopated, varied bursts\r\n                strengthSync: { \r\n                    onBeat: 2.8, \r\n                    offBeat: 1.8,  // Strong off-beat emphasis\r\n                    swing: true \r\n                },\r\n                decaySync: { fast: 0.5, slow: 0.2 }\r\n            },\r\n            'orchestral': {\r\n                // Dynamic, expressive bursts\r\n                strengthSync: { onBeat: 3.2, offBeat: 0.5 },\r\n                accentResponse: { multiplier: 3.0 }  // Very responsive to dynamics\r\n            }\r\n        },\r\n        \r\n        // Musical dynamics variations\r\n        dynamics: {\r\n            forte: {\r\n                // Explosive, powerful bursts\r\n                strengthSync: { \r\n                    onBeat: { multiplier: 2.0 },\r\n                    offBeat: { multiplier: 1.5 }\r\n                },\r\n                decaySync: { multiplier: 0.7 },  // Slower decay for impact\r\n                accentResponse: { multiplier: 3.5 }\r\n            },\r\n            piano: {\r\n                // Subtle, gentle bursts\r\n                strengthSync: { \r\n                    onBeat: { multiplier: 0.6 },\r\n                    offBeat: { multiplier: 0.3 }\r\n                },\r\n                decaySync: { multiplier: 1.3 },  // Faster decay for gentleness\r\n                accentResponse: { multiplier: 1.8 }\r\n            }\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Apply explosive burst motion to particle\r\n     * Pushes particles radially outward with decaying force\r\n     */\r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        // Calculate force decay over gesture duration\r\n        const decay = motion.decay || this.config.decay;\r\n        const strength = (motion.strength || this.config.strength) * (1 - progress * decay);\r\n        \r\n        // Calculate direction from center to particle\r\n        const dx = particle.x - centerX;\r\n        const dy = particle.y - centerY;\r\n        const distance = Math.sqrt(dx * dx + dy * dy);\r\n        \r\n        // Apply outward force if particle isn't at center\r\n        if (distance > 1) {\r\n            // Normalize direction and apply explosive force\r\n            particle.vx += (dx / distance) * strength * 2 * dt;\r\n            particle.vy += (dy / distance) * strength * 2 * dt;\r\n        }\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Directional Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Directional gesture - move particles in specific direction\r\n * @author Emotive Engine Team\r\n * @module gestures/effects/directional\r\n */\r\n\r\nexport default {\r\n    name: 'directional',\r\n    emoji: '➡️',\r\n    type: 'blending',\r\n    description: 'Move particles in a specific direction',\r\n    \r\n    // Default configuration\r\n    config: {\r\n        angle: 0,                // Movement direction in degrees\r\n        returnToOrigin: false,   // Whether particles return to start\r\n        strength: 1.0           // Force intensity\r\n    },\r\n    \r\n    // Rhythm configuration - directional movement following musical flow\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'flow',  // Follow musical flow and direction\r\n        \r\n        // Direction changes with musical progression\r\n        angleSync: {\r\n            verse: 0,             // Right movement in verses\r\n            chorus: 90,           // Upward movement in choruses  \r\n            bridge: 180,          // Left movement in bridges\r\n            outro: 270,           // Downward movement in outros\r\n            transition: 'smooth'  // Smooth direction changes\r\n        },\r\n        \r\n        // Strength pulses with rhythm\r\n        strengthSync: {\r\n            onBeat: 1.8,          // Strong push on beats\r\n            offBeat: 0.6,         // Gentle drift off-beat\r\n            curve: 'wave'         // Wave-like motion curve\r\n        },\r\n        \r\n        // Return motion syncs to musical sections\r\n        returnSync: {\r\n            enabled: true,\r\n            onSectionChange: true, // Return on section changes\r\n            duration: 'transition', // Use transition timing\r\n            strength: 1.2\r\n        },\r\n        \r\n        // Accent response affects direction\r\n        accentResponse: {\r\n            enabled: true,\r\n            multiplier: 2.0,      // Sharp directional push on accents\r\n            type: 'strength'      // Accent affects movement force\r\n        },\r\n        \r\n        // Pattern-specific directional styles\r\n        patternOverrides: {\r\n            'march': {\r\n                // Military-style directional movement\r\n                angleSync: { verse: 0, chorus: 0 }, // Always forward\r\n                strengthSync: { onBeat: 2.5, offBeat: 1.0 }\r\n            },\r\n            'waltz': {\r\n                // Flowing, circular directional movement\r\n                angleSync: { \r\n                    verse: 45, \r\n                    chorus: 135,\r\n                    bridge: 225,\r\n                    outro: 315,\r\n                    transition: 'circular'\r\n                }\r\n            },\r\n            'swing': {\r\n                // Syncopated directional swaying\r\n                strengthSync: { \r\n                    onBeat: 1.6, \r\n                    offBeat: 1.4,  // Strong off-beat emphasis\r\n                    swing: true \r\n                }\r\n            },\r\n            'electronic': {\r\n                // Sharp, precise directional cuts\r\n                angleSync: { transition: 'instant' },\r\n                strengthSync: { onBeat: 2.2, offBeat: 0.4, curve: 'sharp' }\r\n            }\r\n        },\r\n        \r\n        // Musical dynamics variations\r\n        dynamics: {\r\n            forte: {\r\n                // Powerful, decisive direction changes\r\n                strengthSync: { \r\n                    onBeat: { multiplier: 1.6 },\r\n                    offBeat: { multiplier: 1.2 }\r\n                },\r\n                angleSync: { transition: 'sharp' },\r\n                accentResponse: { multiplier: 2.5 }\r\n            },\r\n            piano: {\r\n                // Gentle, subtle directional drift\r\n                strengthSync: { \r\n                    onBeat: { multiplier: 0.7 },\r\n                    offBeat: { multiplier: 0.8 }\r\n                },\r\n                angleSync: { transition: 'gradual' },\r\n                accentResponse: { multiplier: 1.4 }\r\n            }\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Initialize directional movement data\r\n     * Stores particle's starting position for return motion\r\n     */\r\n    initialize: function(particle) {\r\n        if (!particle.gestureData) {\r\n            particle.gestureData = {};\r\n        }\r\n        particle.gestureData.directional = {\r\n            initialX: particle.x,\r\n            initialY: particle.y\r\n        };\r\n    },\r\n    \r\n    /**\r\n     * Apply directional force to particle\r\n     * Pushes particles in specified direction with optional return\r\n     */\r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        if (!particle.gestureData?.directional) {\r\n            this.initialize(particle);\r\n        }\r\n        \r\n        // Convert angle to radians for calculation\r\n        const angle = (motion.angle || this.config.angle) * Math.PI / 180;\r\n        const strength = motion.strength || this.config.strength;\r\n        \r\n        // Apply directional force\r\n        particle.vx += Math.cos(angle) * strength * 0.3 * dt;\r\n        particle.vy += Math.sin(angle) * strength * 0.3 * dt;\r\n        \r\n        // Optional return motion in second half of gesture\r\n        if (motion.returnToOrigin && progress > 0.5) {\r\n            const returnProgress = (progress - 0.5) * 2;\r\n            const data = particle.gestureData.directional;\r\n            // Calculate return force toward initial position\r\n            const dx = data.initialX - particle.x;\r\n            const dy = data.initialY - particle.y;\r\n            particle.vx += dx * returnProgress * 0.02 * dt;\r\n            particle.vy += dy * returnProgress * 0.02 * dt;\r\n        }\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Settle Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Settle gesture - gradually reduce velocity\r\n * @author Emotive Engine Team\r\n * @module gestures/effects/settle\r\n */\r\n\r\nexport default {\r\n    name: 'settle',\r\n    emoji: '🍃',\r\n    type: 'blending',\r\n    description: 'Gradually settle particles to rest',\r\n    \r\n    // Default configuration\r\n    config: {\r\n        damping: 0.02,     // Velocity reduction rate\r\n        threshold: 0.01    // Minimum velocity before stop\r\n    },\r\n    \r\n    // Rhythm configuration - gradual settling synchronized to musical resolution\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'resolution', // Settle during chord resolutions and phrase endings\r\n        \r\n        // Damping rate responds to musical tension/release\r\n        dampingSync: {\r\n            onResolution: 0.035,    // Faster settling on resolution\r\n            onTension: 0.015,       // Slower settling during tension\r\n            curve: 'gradual'        // Smooth, natural decay\r\n        },\r\n        \r\n        // Threshold adapts to dynamic level\r\n        thresholdSync: {\r\n            mode: 'dynamics',\r\n            forte: 0.02,            // Higher threshold for loud music\r\n            piano: 0.005,           // Lower threshold for quiet music\r\n            curve: 'exponential'\r\n        },\r\n        \r\n        // Duration follows musical phrase structure\r\n        durationSync: {\r\n            mode: 'phrase',\r\n            minBeats: 2,            // Minimum 2-beat settling\r\n            maxBeats: 12,           // Maximum phrase-length settling\r\n            sustain: true           // Maintain settling through resolution\r\n        },\r\n        \r\n        // Response to cadential movements\r\n        cadenceResponse: {\r\n            enabled: true,\r\n            multiplier: 1.6,        // Enhanced settling on cadences\r\n            type: 'damping'         // Affects settling rate\r\n        },\r\n        \r\n        // Style variations for different music types\r\n        patternOverrides: {\r\n            'ambient': {\r\n                // Slow, atmospheric settling\r\n                dampingSync: { onResolution: 0.025, onTension: 0.008, curve: 'atmospheric' },\r\n                durationSync: { minBeats: 8, maxBeats: 32 }\r\n            },\r\n            'jazz': {\r\n                // Smooth settling with swing feel\r\n                dampingSync: { onResolution: 0.040, onTension: 0.020 },\r\n                cadenceResponse: { multiplier: 1.8 }\r\n            },\r\n            'classical': {\r\n                // Expressive settling following harmonic rhythm\r\n                dampingSync: { onResolution: 0.045, onTension: 0.012, curve: 'expressive' },\r\n                cadenceResponse: { multiplier: 2.0 }\r\n            },\r\n            'minimalist': {\r\n                // Very gradual, meditative settling\r\n                dampingSync: { onResolution: 0.020, onTension: 0.005 },\r\n                durationSync: { minBeats: 16, maxBeats: 64 }\r\n            }\r\n        },\r\n        \r\n        // Musical dynamics\r\n        dynamics: {\r\n            forte: {\r\n                // Decisive, clear settling\r\n                dampingSync: { \r\n                    onResolution: { multiplier: 1.4 },\r\n                    onTension: { multiplier: 0.8 }\r\n                },\r\n                thresholdSync: { multiplier: 2.0 },\r\n                cadenceResponse: { multiplier: 2.2 }\r\n            },\r\n            piano: {\r\n                // Gentle, soft settling\r\n                dampingSync: { \r\n                    onResolution: { multiplier: 0.7 },\r\n                    onTension: { multiplier: 1.2 }\r\n                },\r\n                thresholdSync: { multiplier: 0.5 },\r\n                cadenceResponse: { multiplier: 1.3 }\r\n            }\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Apply settling effect to particle\r\n     * Gradually reduces velocity until particles come to rest\r\n     */\r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        const damping = motion.damping || this.config.damping;\r\n        const threshold = motion.threshold || this.config.threshold;\r\n        \r\n        // Apply exponential velocity damping\r\n        particle.vx *= Math.max(0, 1 - damping * dt * 60);\r\n        particle.vy *= Math.max(0, 1 - damping * dt * 60);\r\n        \r\n        // Stop completely when velocity falls below threshold\r\n        if (Math.abs(particle.vx) < threshold) particle.vx = 0;\r\n        if (Math.abs(particle.vy) < threshold) particle.vy = 0;\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Fade Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Fade gesture - opacity fade effect\r\n * @author Emotive Engine Team\r\n * @module gestures/effects/fade\r\n */\r\n\r\nexport default {\r\n    name: 'fade',\r\n    emoji: '👻',\r\n    type: 'blending',\r\n    description: 'Fade particle opacity',\r\n    \r\n    // Default configuration\r\n    config: {\r\n        fadeIn: false,      // Enable fade in effect\r\n        fadeOut: true,      // Enable fade out effect\r\n        minOpacity: 0,      // Minimum opacity level\r\n        maxOpacity: 1       // Maximum opacity level\r\n    },\r\n    \r\n    // Rhythm configuration - fades sync to musical dynamics\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'dynamic',  // Fade with volume/intensity changes\r\n        \r\n        // Opacity modulation with beat\r\n        opacitySync: {\r\n            onBeat: 0.9,              // Nearly visible on beat\r\n            offBeat: 0.3,             // Ghostly between beats\r\n            subdivision: 'eighth',     // Check every 8th note\r\n            curve: 'exponential'      // Sharp opacity changes\r\n        },\r\n        \r\n        // Fade timing with musical structure\r\n        fadePhaseSync: {\r\n            verse: { fadeIn: true, fadeOut: false },    // Build in verse\r\n            chorus: { fadeIn: false, fadeOut: false },  // Full visibility\r\n            bridge: { fadeIn: true, fadeOut: true },    // In and out\r\n            outro: { fadeIn: false, fadeOut: true }     // Fade to end\r\n        },\r\n        \r\n        // Pulse with rhythm\r\n        pulseSync: {\r\n            enabled: true,\r\n            frequency: 'quarter',     // Pulse every quarter note\r\n            intensity: 0.2,           // Pulse depth\r\n            onAccent: 0.4            // Deeper pulse on accents\r\n        },\r\n        \r\n        // Musical dynamics\r\n        dynamics: {\r\n            forte: { minOpacity: 0.5, maxOpacity: 1.0 },    // More visible when loud\r\n            piano: { minOpacity: 0.0, maxOpacity: 0.4 }     // Ghostly when quiet\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Initialize fade data\r\n     * Stores particle's original opacity\r\n     */\r\n    initialize: function(particle) {\r\n        if (!particle.gestureData) {\r\n            particle.gestureData = {};\r\n        }\r\n        particle.gestureData.fade = {\r\n            baseOpacity: particle.opacity || particle.life || 1\r\n        };\r\n    },\r\n    \r\n    /**\r\n     * Apply fade effect to particle\r\n     * Smoothly transitions opacity based on configuration\r\n     */\r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        if (!particle.gestureData?.fade) {\r\n            this.initialize(particle);\r\n        }\r\n        \r\n        const data = particle.gestureData.fade;\r\n        const config = { ...this.config, ...motion };\r\n        \r\n        let targetOpacity;\r\n        if (config.fadeIn && !config.fadeOut) {\r\n            // Fade in only - opacity increases over time\r\n            targetOpacity = config.minOpacity + (config.maxOpacity - config.minOpacity) * progress;\r\n        } else if (config.fadeOut && !config.fadeIn) {\r\n            // Fade out only - opacity decreases over time\r\n            targetOpacity = config.maxOpacity - (config.maxOpacity - config.minOpacity) * progress;\r\n        } else {\r\n            // Fade in then out - peak opacity at midpoint\r\n            if (progress < 0.5) {\r\n                targetOpacity = config.minOpacity + (config.maxOpacity - config.minOpacity) * (progress * 2);\r\n            } else {\r\n                targetOpacity = config.maxOpacity - (config.maxOpacity - config.minOpacity) * ((progress - 0.5) * 2);\r\n            }\r\n        }\r\n        \r\n        // Apply calculated opacity\r\n        particle.opacity = data.baseOpacity * targetOpacity;\r\n        // Also update life property for particles that use it\r\n        if (particle.life !== undefined) {\r\n            particle.life = particle.opacity;\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Clean up fade effect\r\n     * Restores original opacity values\r\n     */\r\n    cleanup: function(particle) {\r\n        if (particle.gestureData?.fade) {\r\n            particle.opacity = particle.gestureData.fade.baseOpacity;\r\n            if (particle.life !== undefined) {\r\n                particle.life = particle.opacity;\r\n            }\r\n            delete particle.gestureData.fade;\r\n        }\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Hold Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Hold gesture - freeze particles in place\r\n * @author Emotive Engine Team\r\n * @module gestures/effects/hold\r\n */\r\n\r\nexport default {\r\n    name: 'hold',\r\n    emoji: '⏸️',\r\n    type: 'override',\r\n    description: 'Hold particles in current position',\r\n    \r\n    // Default configuration\r\n    config: {\r\n        holdStrength: 0.95,  // Position retention strength\r\n        allowDrift: false    // Enable slight movement\r\n    },\r\n    \r\n    // Rhythm configuration - synchronized pause effects following musical structure\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'rest',    // Hold particles during musical rests and pauses\r\n        \r\n        // Hold strength responds to musical silence\r\n        holdSync: {\r\n            onRest: 0.98,         // Very strong hold during rests\r\n            onSound: 0.80,        // Looser hold when music plays\r\n            curve: 'immediate'    // Instant response to silence/sound\r\n        },\r\n        \r\n        // Duration matches rest length\r\n        durationSync: {\r\n            mode: 'rests',\r\n            minBeats: 0.5,        // Minimum half-beat hold\r\n            maxBeats: 8,          // Maximum 8-beat hold\r\n            sustain: true         // Maintain hold through entire rest\r\n        },\r\n        \r\n        // Response to fermatas and caesuras\r\n        pauseResponse: {\r\n            enabled: true,\r\n            multiplier: 1.5,      // Stronger hold during marked pauses\r\n            type: 'strength'      // Affects hold strength\r\n        },\r\n        \r\n        // Style variations for different music types\r\n        patternOverrides: {\r\n            'classical': {\r\n                // Expressive holds for dramatic pauses\r\n                holdSync: { onRest: 0.99, onSound: 0.75, curve: 'dramatic' },\r\n                pauseResponse: { multiplier: 2.0 }\r\n            },\r\n            'minimal': {\r\n                // Extended, meditative holds\r\n                holdSync: { onRest: 0.95, onSound: 0.85 },\r\n                durationSync: { minBeats: 2, maxBeats: 16 }\r\n            },\r\n            'jazz': {\r\n                // Subtle holds that allow for swing\r\n                holdSync: { onRest: 0.90, onSound: 0.70 },\r\n                allowDrift: true  // Enable slight movement for swing feel\r\n            },\r\n            'electronic': {\r\n                // Precise, digital-style holds\r\n                holdSync: { onRest: 0.99, onSound: 0.60, curve: 'digital' },\r\n                pauseResponse: { multiplier: 1.2 }\r\n            }\r\n        },\r\n        \r\n        // Musical dynamics\r\n        dynamics: {\r\n            forte: {\r\n                // Strong, definitive holds\r\n                holdSync: { \r\n                    onRest: { multiplier: 1.02 },\r\n                    onSound: { multiplier: 0.9 }\r\n                },\r\n                pauseResponse: { multiplier: 2.2 }\r\n            },\r\n            piano: {\r\n                // Gentle, floating holds\r\n                holdSync: { \r\n                    onRest: { multiplier: 0.97 },\r\n                    onSound: { multiplier: 0.85 }\r\n                },\r\n                pauseResponse: { multiplier: 1.3 }\r\n            }\r\n        }\r\n    },\r\n    \r\n    initialize: function(particle) {\r\n        if (!particle.gestureData) {\r\n            particle.gestureData = {};\r\n        }\r\n        particle.gestureData.hold = {\r\n            holdX: particle.x,\r\n            holdY: particle.y,\r\n            originalVx: particle.vx,\r\n            originalVy: particle.vy\r\n        };\r\n    },\r\n    \r\n    /**\r\n     * Apply hold effect to particle\r\n     * Freezes or slows particle movement based on configuration\r\n     */\r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        if (!particle.gestureData?.hold) {\r\n            this.initialize(particle);\r\n        }\r\n        \r\n        const data = particle.gestureData.hold;\r\n        const holdStrength = motion.holdStrength || this.config.holdStrength;\r\n        \r\n        if (motion.allowDrift) {\r\n            // Allow slight drift with velocity damping\r\n            particle.vx *= holdStrength;\r\n            particle.vy *= holdStrength;\r\n        } else {\r\n            // Hard hold - lock to position\r\n            particle.x += (data.holdX - particle.x) * (1 - holdStrength);\r\n            particle.y += (data.holdY - particle.y) * (1 - holdStrength);\r\n            particle.vx = 0;\r\n            particle.vy = 0;\r\n        }\r\n        \r\n        // Gradually restore velocity near end\r\n        if (progress > 0.9) {\r\n            const restoreFactor = (progress - 0.9) * 10;\r\n            particle.vx = particle.vx * (1 - restoreFactor) + data.originalVx * restoreFactor;\r\n            particle.vy = particle.vy * (1 - restoreFactor) + data.originalVy * restoreFactor;\r\n        }\r\n    },\r\n    \r\n    cleanup: function(particle) {\r\n        if (particle.gestureData?.hold) {\r\n            const data = particle.gestureData.hold;\r\n            particle.vx = data.originalVx;\r\n            particle.vy = data.originalVy;\r\n            delete particle.gestureData.hold;\r\n        }\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Breathe Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Breathe gesture - inhale/exhale particle motion\r\n * @author Emotive Engine Team\r\n * @module gestures/effects/breathe\r\n */\r\n\r\nexport default {\r\n    name: 'breathe',\r\n    emoji: '🫁',\r\n    type: 'blending',\r\n    description: 'Breathing rhythm with inhale and exhale',\r\n    \r\n    // Default configuration\r\n    config: {\r\n        // Musical duration - one full breath per bar\r\n        musicalDuration: {\r\n            musical: true,\r\n            bars: 1,           // Default to 1 bar breathing cycle\r\n            minBeats: 2,       // Minimum half bar\r\n            maxBeats: 16       // Maximum 4 bars for slow breathing\r\n        },\r\n        \r\n        // Musical phases of breathing\r\n        phases: [\r\n            { name: 'inhale', beats: 1.5 },     // Inhale phase\r\n            { name: 'hold_in', beats: 0.5 },    // Hold at peak\r\n            { name: 'exhale', beats: 1.5 },     // Exhale phase\r\n            { name: 'hold_out', beats: 0.5 }    // Hold at rest\r\n        ],\r\n        \r\n        inhaleRadius: 1.5,     // Maximum expansion distance\r\n        exhaleRadius: 0.3,     // Minimum contraction distance\r\n        breathRate: 0.3,       // Breathing rhythm speed\r\n        spiralStrength: 0.002, // Subtle spiral motion intensity\r\n        scaleAmount: 0.25,     // Core size variation amount\r\n        glowAmount: 0.4,       // Glow intensity variation\r\n        frequency: 1,          // Number of breath cycles\r\n        easing: 'sine',        // Smooth, natural curve type\r\n        strength: 0.8,         // Overall motion influence\r\n        // Particle motion configuration for AnimationController\r\n        particleMotion: {\r\n            type: 'breathe',\r\n            strength: 0.8,         // Particle response strength\r\n            inhaleRadius: 1.5,     // Particle expansion limit\r\n            exhaleRadius: 0.3      // Particle contraction limit\r\n        }\r\n    },\r\n    \r\n    // Rhythm configuration - breathing synced to musical phrases\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'phrase',  // Long breathing cycles across musical phrases\r\n        \r\n        // Breath rate syncs to musical tempo\r\n        breathRateSync: {\r\n            mode: 'tempo',\r\n            bpm: 'auto',          // Match song tempo\r\n            subdivision: 'whole', // Full breaths on whole notes\r\n            curve: 'sine'         // Natural breathing curve\r\n        },\r\n        \r\n        // Inhale/exhale expansion syncs to dynamics\r\n        radiusSync: {\r\n            inhale: {\r\n                onUpbeat: 1.8,    // Deeper inhale on upbeats\r\n                onDownbeat: 1.4,  // Standard inhale on downbeats\r\n                curve: 'ease-in'\r\n            },\r\n            exhale: {\r\n                onUpbeat: 0.2,    // Complete exhale on upbeats\r\n                onDownbeat: 0.4,  // Gentle exhale on downbeats\r\n                curve: 'ease-out'\r\n            }\r\n        },\r\n        \r\n        // Duration matches musical phrasing\r\n        durationSync: {\r\n            mode: 'phrases',\r\n            phrases: 2,           // Breathe across 2 musical phrases\r\n            hold: 'fermata'       // Hold breath on fermatas\r\n        },\r\n        \r\n        // Respond to musical accents\r\n        accentResponse: {\r\n            enabled: true,\r\n            multiplier: 1.5,      // Deeper breath on accents\r\n            type: 'expansion'     // Accent affects radius expansion\r\n        },\r\n        \r\n        // Pattern-specific breathing styles\r\n        patternOverrides: {\r\n            'ballad': {\r\n                // Slow, deep breathing for emotional ballads\r\n                breathRateSync: { subdivision: 'double-whole' },\r\n                radiusSync: { \r\n                    inhale: { onUpbeat: 2.2, onDownbeat: 1.8 },\r\n                    exhale: { onUpbeat: 0.1, onDownbeat: 0.2 }\r\n                }\r\n            },\r\n            'uptempo': {\r\n                // Quick, energetic breathing\r\n                breathRateSync: { subdivision: 'half' },\r\n                radiusSync: { \r\n                    inhale: { onUpbeat: 1.4, onDownbeat: 1.2 },\r\n                    exhale: { onUpbeat: 0.3, onDownbeat: 0.4 }\r\n                }\r\n            },\r\n            'ambient': {\r\n                // Ethereal, floating breathing\r\n                breathRateSync: { subdivision: 'whole', curve: 'ease' },\r\n                radiusSync: { \r\n                    inhale: { onUpbeat: 1.6, onDownbeat: 1.6 },\r\n                    exhale: { onUpbeat: 0.2, onDownbeat: 0.2 }\r\n                }\r\n            }\r\n        },\r\n        \r\n        // Musical dynamics variations\r\n        dynamics: {\r\n            forte: {\r\n                // Powerful, deep breathing\r\n                radiusSync: { \r\n                    inhale: { multiplier: 1.8 },\r\n                    exhale: { multiplier: 0.5 }\r\n                },\r\n                spiralStrength: 0.004,  // More spiral motion\r\n                scaleAmount: 0.4\r\n            },\r\n            piano: {\r\n                // Gentle, subtle breathing\r\n                radiusSync: { \r\n                    inhale: { multiplier: 1.2 },\r\n                    exhale: { multiplier: 0.8 }\r\n                },\r\n                spiralStrength: 0.001,  // Minimal spiral\r\n                scaleAmount: 0.1\r\n            }\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Initialize breathing data for a particle\r\n     * Stores particle's starting position and relationship to center\r\n     */\r\n    initialize: function(particle, motion, centerX, centerY) {\r\n        if (!particle.gestureData) {\r\n            particle.gestureData = {};\r\n        }\r\n        \r\n        // Calculate particle's position relative to orb center\r\n        const dx = particle.x - centerX;\r\n        const dy = particle.y - centerY;\r\n        \r\n        particle.gestureData.breathe = {\r\n            startX: particle.x,                        // Original X position\r\n            startY: particle.y,                        // Original Y position\r\n            angle: Math.atan2(dy, dx),                // Direction from center\r\n            baseRadius: Math.sqrt(dx * dx + dy * dy), // Distance from center\r\n            phaseOffset: Math.random() * 0.2 - 0.1    // Slight timing variation for organic feel\r\n        };\r\n    },\r\n    \r\n    /**\r\n     * Apply breathing motion to particle\r\n     * Creates expansion/contraction movement synchronized with breath rhythm\r\n     */\r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        // Initialize particle data if needed\r\n        if (!particle.gestureData?.breathe) {\r\n            this.initialize(particle, motion, centerX, centerY);\r\n        }\r\n        \r\n        const data = particle.gestureData.breathe;\r\n        const config = { ...this.config, ...motion };\r\n        \r\n        // Calculate breath phase - creates smooth sine wave between exhale and inhale\r\n        // Result oscillates smoothly between 0 (exhale) and 1 (inhale)\r\n        const breathPhase = (Math.sin(progress * Math.PI * 2 * config.breathRate) + 1) / 2;\r\n        \r\n        // Define breathing boundaries relative to orb size\r\n        // Scale boundaries based on particle's size factor for consistent appearance\r\n        const referenceRadius = 100 * (particle.scaleFactor || 1);\r\n        const inhaleRadius = config.inhaleRadius * referenceRadius;\r\n        const exhaleRadius = config.exhaleRadius * referenceRadius;\r\n        \r\n        // Interpolate target position between exhale and inhale boundaries\r\n        const targetRadius = exhaleRadius + (inhaleRadius - exhaleRadius) * breathPhase;\r\n        \r\n        // Calculate particle's current distance from center\r\n        const currentDx = particle.x - centerX;\r\n        const currentDy = particle.y - centerY;\r\n        const currentRadius = Math.sqrt(currentDx * currentDx + currentDy * currentDy);\r\n        \r\n        // Calculate radial movement needed to reach target breathing position\r\n        const radiusDiff = targetRadius - currentRadius;\r\n        const moveStrength = (motion.strength || 0.8) * 0.05 * dt;\r\n        \r\n        // Apply radial motion (move in/out from center)\r\n        if (currentRadius > 0) {\r\n            // Normalize direction and apply movement\r\n            const moveX = (currentDx / currentRadius) * radiusDiff * moveStrength;\r\n            const moveY = (currentDy / currentRadius) * radiusDiff * moveStrength;\r\n            \r\n            particle.vx += moveX;\r\n            particle.vy += moveY;\r\n            \r\n            // Add organic spiral motion for more natural breathing feel\r\n            // Creates slight circular drift during expansion/contraction\r\n            const spiralStrength = config.spiralStrength * dt * (motion.strength || 1);\r\n            const tangentX = -currentDy / currentRadius;  // Perpendicular to radial direction\r\n            const tangentY = currentDx / currentRadius;\r\n            \r\n            // Spiral motion stronger during inhale, creating expanding spiral\r\n            particle.vx += tangentX * spiralStrength * breathPhase;\r\n            particle.vy += tangentY * spiralStrength * breathPhase;\r\n        }\r\n        \r\n        // Apply velocity damping for smooth, controlled motion\r\n        // Prevents particles from overshooting or oscillating\r\n        particle.vx *= 0.98;\r\n        particle.vy *= 0.98;\r\n    },\r\n    \r\n    /**\r\n     * Clean up breathing data when gesture completes\r\n     * Removes stored data to free memory\r\n     */\r\n    cleanup: function(particle) {\r\n        if (particle.gestureData?.breathe) {\r\n            delete particle.gestureData.breathe;\r\n        }\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Expand Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Expand gesture - particles move outward from center\r\n * @author Emotive Engine Team\r\n * @module gestures/effects/expand\r\n */\r\n\r\nexport default {\r\n    name: 'expand',\r\n    emoji: '💫',\r\n    type: 'blending',\r\n    description: 'Radial expansion from center',\r\n    \r\n    // Default configuration\r\n    config: {\r\n        duration: 600,        // Gesture duration\r\n        scaleAmount: 3.0,     // Core scale expansion amount\r\n        scaleTarget: 3.0,     // Target expansion distance ratio\r\n        glowAmount: 0.5,      // Glow intensity increase\r\n        easing: 'back',       // Overshoot animation curve\r\n        strength: 3.0,        // Outward push force intensity\r\n        // Particle motion configuration for AnimationController\r\n        particleMotion: {\r\n            type: 'pulse',\r\n            strength: 3.0,        // Particle push strength\r\n            direction: 'outward', // Movement away from center\r\n            persist: true         // Maintain expanded position\r\n        }\r\n    },\r\n    \r\n    // Rhythm configuration - expansive growth synced to musical crescendos\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'crescendo',  // Expand during musical crescendos\r\n        \r\n        // Expansion strength follows dynamics\r\n        strengthSync: {\r\n            pianissimo: 1.5,      // Gentle expansion in quiet sections\r\n            fortissimo: 5.0,      // Massive expansion in loud sections\r\n            crescendo: 'build',   // Gradual build during crescendos\r\n            sforzando: 'burst'    // Sudden expansion on sforzandos\r\n        },\r\n        \r\n        // Scale target responds to musical intensity\r\n        scaleTargetSync: {\r\n            verse: 2.0,           // Moderate expansion in verses\r\n            chorus: 4.5,          // Large expansion in choruses\r\n            climax: 6.0,          // Maximum expansion at climax\r\n            curve: 'exponential'  // Exponential growth curve\r\n        },\r\n        \r\n        // Duration matches musical phrasing\r\n        durationSync: {\r\n            mode: 'phrases',\r\n            build: 1.2,           // Extended duration during builds\r\n            release: 0.8,         // Quick expansion on releases\r\n            sustain: 'hold'       // Hold expansion during sustains\r\n        },\r\n        \r\n        // Strong accent response\r\n        accentResponse: {\r\n            enabled: true,\r\n            multiplier: 2.8,      // Massive expansion on accents\r\n            type: 'strength'      // Accent affects expansion force\r\n        },\r\n        \r\n        // Pattern-specific expansion styles\r\n        patternOverrides: {\r\n            'orchestral': {\r\n                // Epic, cinematic expansion\r\n                strengthSync: { \r\n                    pianissimo: 2.0, \r\n                    fortissimo: 6.5,\r\n                    crescendo: 'dramatic'\r\n                },\r\n                scaleTargetSync: { climax: 8.0 }\r\n            },\r\n            'rock': {\r\n                // Aggressive, powerful expansion\r\n                strengthSync: { \r\n                    pianissimo: 1.8, \r\n                    fortissimo: 5.5,\r\n                    curve: 'power'\r\n                },\r\n                accentResponse: { multiplier: 3.2 }\r\n            },\r\n            'ambient': {\r\n                // Gentle, organic expansion\r\n                strengthSync: { \r\n                    pianissimo: 1.2, \r\n                    fortissimo: 3.5,\r\n                    crescendo: 'organic'\r\n                },\r\n                durationSync: { build: 1.8, release: 1.2 }\r\n            },\r\n            'electronic': {\r\n                // Sharp, controlled expansion\r\n                strengthSync: { \r\n                    pianissimo: 1.6, \r\n                    fortissimo: 4.8,\r\n                    curve: 'digital'\r\n                },\r\n                scaleTargetSync: { curve: 'linear' }\r\n            }\r\n        },\r\n        \r\n        // Musical dynamics variations\r\n        dynamics: {\r\n            forte: {\r\n                // Powerful, overwhelming expansion\r\n                strengthSync: { \r\n                    pianissimo: { multiplier: 1.4 },\r\n                    fortissimo: { multiplier: 1.8 }\r\n                },\r\n                scaleTargetSync: { multiplier: 1.6 },\r\n                accentResponse: { multiplier: 3.5 }\r\n            },\r\n            piano: {\r\n                // Delicate, controlled expansion\r\n                strengthSync: { \r\n                    pianissimo: { multiplier: 0.8 },\r\n                    fortissimo: { multiplier: 1.2 }\r\n                },\r\n                scaleTargetSync: { multiplier: 0.7 },\r\n                accentResponse: { multiplier: 2.0 }\r\n            }\r\n        }\r\n    },\r\n    \r\n    initialize: function(particle, motion, centerX, centerY) {\r\n        if (!particle.gestureData) {\r\n            particle.gestureData = {};\r\n        }\r\n        const dx = particle.x - centerX;\r\n        const dy = particle.y - centerY;\r\n        particle.gestureData.expand = {\r\n            startX: particle.x,\r\n            startY: particle.y,\r\n            angle: Math.atan2(dy, dx),\r\n            baseRadius: Math.sqrt(dx * dx + dy * dy),\r\n            initialized: true\r\n        };\r\n    },\r\n    \r\n    /**\r\n     * Apply expansion motion to particle\r\n     * Pushes particles outward from center with explosive force\r\n     */\r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        if (!particle.gestureData?.expand?.initialized) {\r\n            this.initialize(particle, motion, centerX, centerY);\r\n        }\r\n        \r\n        const data = particle.gestureData.expand;\r\n        const config = { ...this.config, ...motion };\r\n        const strength = config.strength || 1.0;\r\n        \r\n        // Calculate expansion amount based on progress\r\n        const expandFactor = 1 + (config.scaleTarget - 1) * progress * strength;\r\n        const targetRadius = data.baseRadius * expandFactor;\r\n        \r\n        // Calculate target position farther from center\r\n        const targetX = centerX + Math.cos(data.angle) * targetRadius;\r\n        const targetY = centerY + Math.sin(data.angle) * targetRadius;\r\n        \r\n        // Apply strong outward push forces\r\n        const dx = targetX - particle.x;\r\n        const dy = targetY - particle.y;\r\n        particle.vx += dx * 0.8 * dt;  // Strong explosive push\r\n        particle.vy += dy * 0.8 * dt;  // Strong explosive push\r\n        \r\n        // Apply velocity damping for controlled motion\r\n        particle.vx *= 0.95;\r\n        particle.vy *= 0.95;\r\n    },\r\n    \r\n    cleanup: function(particle) {\r\n        if (particle.gestureData?.expand) {\r\n            delete particle.gestureData.expand;\r\n        }\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Contract Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Contract gesture - particles move inward toward center\r\n * @author Emotive Engine Team\r\n * @module gestures/effects/contract\r\n */\r\n\r\nexport default {\r\n    name: 'contract',\r\n    emoji: '🌀',\r\n    type: 'blending',\r\n    description: 'Radial contraction toward center',\r\n    \r\n    // Default configuration\r\n    config: {\r\n        duration: 600,        // Gesture duration\r\n        scaleAmount: 0.2,     // Core scale reduction amount\r\n        scaleTarget: 0.2,     // Target contraction distance ratio\r\n        glowAmount: -0.2,     // Glow intensity reduction\r\n        easing: 'cubic',      // Smooth acceleration curve\r\n        strength: 2.5,        // Inward pull force intensity\r\n        // Particle motion configuration for AnimationController\r\n        particleMotion: {\r\n            type: 'pulse',\r\n            strength: 2.5,        // Particle pull strength\r\n            direction: 'inward',  // Movement toward center\r\n            persist: true         // Effect continues after gesture\r\n        }\r\n    },\r\n    \r\n    // Rhythm configuration - magnetic contraction synced to musical tension\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'tension',  // Contract during musical tension builds\r\n        \r\n        // Contraction strength responds to musical intensity\r\n        strengthSync: {\r\n            onTension: 4.0,       // Strong pull during tension\r\n            onRelease: 1.5,       // Gentle pull during release\r\n            curve: 'magnetic'     // Smooth magnetic pull curve\r\n        },\r\n        \r\n        // Scale target changes with dynamics\r\n        scaleTargetSync: {\r\n            forte: 0.1,           // Tight contraction for loud sections\r\n            piano: 0.4,           // Gentle contraction for soft sections\r\n            crescendo: 'gradual', // Gradual tightening on crescendos\r\n            diminuendo: 'ease'    // Easy relaxation on diminuendos\r\n        },\r\n        \r\n        // Duration responds to phrase length\r\n        durationSync: {\r\n            mode: 'phrases',\r\n            shortPhrase: 0.8,     // Quick contraction for short phrases  \r\n            longPhrase: 1.5,      // Extended contraction for long phrases\r\n            hold: 'sustain'       // Maintain contraction during holds\r\n        },\r\n        \r\n        // Strong accent response\r\n        accentResponse: {\r\n            enabled: true,\r\n            multiplier: 2.2,      // Sharp contraction on accents\r\n            type: 'strength'      // Accent affects pull force\r\n        },\r\n        \r\n        // Pattern-specific contraction styles\r\n        patternOverrides: {\r\n            'classical': {\r\n                // Elegant, controlled contraction\r\n                strengthSync: { onTension: 3.5, onRelease: 1.8 },\r\n                scaleTargetSync: { forte: 0.15, piano: 0.35 }\r\n            },\r\n            'metal': {\r\n                // Aggressive, tight contraction\r\n                strengthSync: { onTension: 5.0, onRelease: 2.0, curve: 'sharp' },\r\n                scaleTargetSync: { forte: 0.05, piano: 0.25 }\r\n            },\r\n            'ambient': {\r\n                // Slow, atmospheric contraction\r\n                strengthSync: { onTension: 2.8, onRelease: 1.2, curve: 'ease' },\r\n                durationSync: { shortPhrase: 1.2, longPhrase: 2.0 }\r\n            },\r\n            'trap': {\r\n                // Sudden, rhythmic contraction on drops\r\n                strengthSync: { \r\n                    onTension: 4.5, \r\n                    onRelease: 1.0,\r\n                    dropBeat: 6.0   // Massive contraction on trap drops\r\n                },\r\n                scaleTargetSync: { forte: 0.08, piano: 0.3 }\r\n            }\r\n        },\r\n        \r\n        // Musical dynamics variations\r\n        dynamics: {\r\n            forte: {\r\n                // Powerful, crushing contraction\r\n                strengthSync: { \r\n                    onTension: { multiplier: 1.8 },\r\n                    onRelease: { multiplier: 1.4 }\r\n                },\r\n                scaleTargetSync: { multiplier: 0.6 },  // Tighter contraction\r\n                accentResponse: { multiplier: 2.8 }\r\n            },\r\n            piano: {\r\n                // Gentle, subtle contraction\r\n                strengthSync: { \r\n                    onTension: { multiplier: 0.7 },\r\n                    onRelease: { multiplier: 0.8 }\r\n                },\r\n                scaleTargetSync: { multiplier: 1.4 },  // Looser contraction\r\n                accentResponse: { multiplier: 1.6 }\r\n            }\r\n        }\r\n    },\r\n    \r\n    initialize: function(particle, motion, centerX, centerY) {\r\n        if (!particle.gestureData) {\r\n            particle.gestureData = {};\r\n        }\r\n        const dx = particle.x - centerX;\r\n        const dy = particle.y - centerY;\r\n        particle.gestureData.contract = {\r\n            startX: particle.x,\r\n            startY: particle.y,\r\n            angle: Math.atan2(dy, dx),\r\n            baseRadius: Math.sqrt(dx * dx + dy * dy),\r\n            initialized: true\r\n        };\r\n    },\r\n    \r\n    /**\r\n     * Apply contraction motion to particle\r\n     * Pulls particles toward center with magnetic-like force\r\n     */\r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        if (!particle.gestureData?.contract?.initialized) {\r\n            this.initialize(particle, motion, centerX, centerY);\r\n        }\r\n        \r\n        const data = particle.gestureData.contract;\r\n        const config = { ...this.config, ...motion };\r\n        const strength = config.strength || 1.0;\r\n        \r\n        // Calculate contraction amount based on progress\r\n        const contractFactor = 1 - (1 - config.scaleTarget) * progress * strength;\r\n        const targetRadius = data.baseRadius * contractFactor;\r\n        \r\n        // Calculate target position closer to center\r\n        const targetX = centerX + Math.cos(data.angle) * targetRadius;\r\n        const targetY = centerY + Math.sin(data.angle) * targetRadius;\r\n        \r\n        // Apply strong inward pull forces\r\n        const dx = targetX - particle.x;\r\n        const dy = targetY - particle.y;\r\n        particle.vx += dx * 0.5 * dt;  // Strong magnetic pull\r\n        particle.vy += dy * 0.5 * dt;  // Strong magnetic pull\r\n        \r\n        // Apply velocity damping for controlled motion\r\n        particle.vx *= 0.95;\r\n        particle.vy *= 0.95;\r\n    },\r\n    \r\n    cleanup: function(particle) {\r\n        if (particle.gestureData?.contract) {\r\n            delete particle.gestureData.contract;\r\n        }\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Flash Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Flash gesture - bright burst effect\r\n * @author Emotive Engine Team\r\n * @module gestures/effects/flash\r\n */\r\n\r\nexport default {\r\n    name: 'flash',\r\n    emoji: '⚡',\r\n    type: 'blending',\r\n    description: 'Bright flash burst effect',\r\n    \r\n    // Default configuration\r\n    config: {\r\n        duration: 400,       // Animation duration\r\n        glowAmount: 2.5,     // Overall brightness increase\r\n        glowPeak: 3.0,       // Maximum intensity level\r\n        scalePeak: 1.1,      // Size expansion at peak\r\n        easing: 'cubic',     // Animation curve type\r\n        strength: 1.0,       // Effect intensity\r\n        // Particle motion configuration for AnimationController\r\n        particleMotion: {\r\n            type: 'burst',\r\n            strength: 1.0,   // Burst force intensity\r\n            decay: 0.3       // Force reduction rate\r\n        }\r\n    },\r\n    \r\n    // Rhythm configuration - flash on beats and accents\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'beat',  // Flash on beats\r\n        timingSync: 'immediate',    // Flash immediately (for impact)\r\n        interruptible: true,         // Can interrupt\r\n        priority: 8,                 // High priority\r\n        blendable: true,             // Can layer over other effects\r\n        \r\n        // Flash intensity syncs to beat strength\r\n        intensitySync: {\r\n            onBeat: 3.5,              // Bright flash on beat\r\n            offBeat: 1.0,             // Dim between beats\r\n            accent: 5.0,              // Blinding on accent\r\n            subdivision: 'quarter',    // Flash every quarter note\r\n            curve: 'exponential'      // Sharp flash attack\r\n        },\r\n        \r\n        // Duration varies with tempo\r\n        durationSync: {\r\n            mode: 'tempo',\r\n            baseDuration: 400,        // Base at 120 BPM\r\n            scaling: 'inverse'        // Faster tempo = shorter flash\r\n        },\r\n        \r\n        // Scale pulse with flash\r\n        scaleSync: {\r\n            onBeat: 1.2,              // Expand on beat\r\n            offBeat: 1.0,             // Normal size off beat\r\n            accent: 1.4,              // Big expansion on accent\r\n            curve: 'elastic'          // Bouncy scale\r\n        },\r\n        \r\n        // Strobe patterns\r\n        strobeSync: {\r\n            enabled: false,           // Enable for strobe effect\r\n            pattern: 'XXOX',          // X=flash, O=dark\r\n            subdivision: 'sixteenth'  // Strobe rate\r\n        },\r\n        \r\n        // Musical dynamics\r\n        dynamics: {\r\n            forte: { glowPeak: 4.0, scalePeak: 1.3, duration: 300 },\r\n            piano: { glowPeak: 2.0, scalePeak: 1.05, duration: 500 }\r\n        }\r\n    },\r\n    \r\n    initialize: function(particle, motion) {\r\n        if (!particle.gestureData) {\r\n            particle.gestureData = {};\r\n        }\r\n        particle.gestureData.flash = {\r\n            originalOpacity: particle.opacity,\r\n            originalSize: particle.size,\r\n            initialized: true\r\n        };\r\n    },\r\n    \r\n    /**\r\n     * Apply flash effect to particle\r\n     * Creates bright burst with size expansion and outward motion\r\n     */\r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        if (!particle.gestureData?.flash?.initialized) {\r\n            this.initialize(particle, motion);\r\n        }\r\n        \r\n        const data = particle.gestureData.flash;\r\n        const config = { ...this.config, ...motion };\r\n        const strength = config.strength || 1.0;\r\n        \r\n        // Calculate flash intensity curve\r\n        let flashIntensity;\r\n        if (progress < 0.3) {\r\n            // Quick rise to peak brightness\r\n            flashIntensity = (progress / 0.3) * config.glowPeak;\r\n        } else {\r\n            // Gradual fade from peak\r\n            flashIntensity = config.glowPeak * (1 - (progress - 0.3) / 0.7);\r\n        }\r\n        \r\n        // Apply brightness and size changes\r\n        particle.opacity = Math.min(1, data.originalOpacity * (1 + flashIntensity * strength));\r\n        particle.size = data.originalSize * (1 + (config.scalePeak - 1) * flashIntensity * strength * 0.1);\r\n        \r\n        // Initial burst motion - particles briefly explode outward\r\n        if (progress < 0.2) {\r\n            const burstStrength = (1 - progress / 0.2) * strength;\r\n            const angle = Math.atan2(particle.y - centerY, particle.x - centerX);\r\n            particle.vx += Math.cos(angle) * burstStrength * 2 * dt;\r\n            particle.vy += Math.sin(angle) * burstStrength * 2 * dt;\r\n        }\r\n\r\n        // Apply velocity decay for natural deceleration\r\n        particle.vx *= (1 - config.particleMotion.decay * 0.1);\r\n        particle.vy *= (1 - config.particleMotion.decay * 0.1);\r\n    },\r\n    \r\n    cleanup: function(particle) {\r\n        if (particle.gestureData?.flash) {\r\n            particle.opacity = particle.gestureData.flash.originalOpacity;\r\n            particle.size = particle.gestureData.flash.originalSize;\r\n            delete particle.gestureData.flash;\r\n        }\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Glow Gesture\r\n *  └─○═╝\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Glow gesture - based on pulse but focused on luminosity without movement\r\n * @author Emotive Engine Team\r\n * @module gestures/effects/glow\r\n *\r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE\r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ Creates a pure luminous glow effect without particle movement.\r\n * ║ This is a BLENDING gesture that only modifies brightness/glow.\r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * VISUAL DIAGRAM:\r\n *      Dim            Bright           Dim\r\n *    · · · ·         ✨ ✨ ✨         · · · ·\r\n *    · · ⭐ · ·   →  ✨ 🌟 ✨    →   · · ⭐ · ·\r\n *    · · · ·         ✨ ✨ ✨         · · · ·\r\n *\r\n * USED BY:\r\n * - Emphasis effects\r\n * - Magic/mystical states\r\n * - Energy charging\r\n */\r\n\r\n/**\r\n * Glow gesture configuration and implementation\r\n */\r\nexport default {\r\n    name: 'glow',\r\n    emoji: '✨',\r\n    type: 'blending', // Adds to existing motion\r\n    description: 'Pure luminous glow without movement',\r\n\r\n    // Default configuration\r\n    config: {\r\n        duration: 1500,      // Animation duration (longer than pulse for sustained glow)\r\n        amplitude: 0,        // NO expansion distance (removed from pulse)\r\n        frequency: 1,        // Number of glow pulses\r\n        holdPeak: 0.3,       // Peak glow hold time (longer for sustained effect)\r\n        easing: 'sine',      // Animation curve type\r\n        scaleAmount: 0.1,    // Very subtle orb scale variation (reduced from pulse)\r\n        glowAmount: 0.8,     // Strong orb glow intensity change (increased from pulse)\r\n        strength: 0,         // NO particle motion strength (removed from pulse)\r\n        direction: 'none',   // No movement direction\r\n        // Particle motion configuration for AnimationController\r\n        particleMotion: {\r\n            type: 'glow',\r\n            strength: 0,     // No particle movement\r\n            direction: 'none',\r\n            frequency: 1\r\n        }\r\n    },\r\n\r\n    // Rhythm configuration - glow pulses with musical phrases\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'phrase',  // Glow on musical phrases\r\n\r\n        // Glow strength syncs to dynamics\r\n        amplitudeSync: {\r\n            onBeat: 2.0,      // Strong glow on beat\r\n            offBeat: 1.2,     // Sustained glow off beat\r\n            curve: 'smooth'   // Smooth transitions\r\n        },\r\n\r\n        // Frequency locks to phrase length\r\n        frequencySync: {\r\n            mode: 'phrase',\r\n            subdivision: 'bar'\r\n        },\r\n\r\n        // Duration in musical time\r\n        durationSync: {\r\n            mode: 'bars',\r\n            bars: 2           // Glow over 2 bars\r\n        },\r\n\r\n        // Stronger glow on accents\r\n        accentResponse: {\r\n            enabled: true,\r\n            multiplier: 2.5   // Bright glow on accent\r\n        },\r\n\r\n        // Pattern-specific glow styles\r\n        patternOverrides: {\r\n            'ambient': {\r\n                // Ethereal sustained glow\r\n                amplitudeSync: { onBeat: 2.5, offBeat: 1.8 },\r\n                durationSync: { bars: 4 }\r\n            },\r\n            'electronic': {\r\n                // Pulsing neon glow\r\n                amplitudeSync: { onBeat: 3.0, offBeat: 0.5, curve: 'sharp' },\r\n                frequencySync: { subdivision: 'quarter' }\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Initialize gesture data for a particle\r\n     * @param {Particle} particle - The particle to initialize\r\n     * @param {Object} motion - Gesture motion configuration\r\n     * @param {number} centerX - Orb center X\r\n     * @param {number} centerY - Orb center Y\r\n     */\r\n    initialize: function(particle, motion, centerX, centerY) {\r\n        if (!particle.gestureData) {\r\n            particle.gestureData = {};\r\n        }\r\n\r\n        // Store initial state (no position data needed for glow)\r\n        particle.gestureData.glow = {\r\n            startOpacity: particle.opacity,\r\n            startGlow: particle.glowSizeMultiplier || 0,\r\n            initialized: true\r\n        };\r\n    },\r\n\r\n    /**\r\n     * Apply glow effect to particle (no motion, just luminosity)\r\n     * @param {Particle} particle - The particle to animate\r\n     * @param {number} progress - Gesture progress (0-1)\r\n     * @param {Object} motion - Gesture configuration\r\n     * @param {number} dt - Delta time\r\n     * @param {number} centerX - Orb center X\r\n     * @param {number} centerY - Orb center Y\r\n     */\r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        // Initialize on first frame\r\n        if (!particle.gestureData?.glow?.initialized) {\r\n            this.initialize(particle, motion, centerX, centerY);\r\n        }\r\n\r\n        const data = particle.gestureData.glow;\r\n        const config = { ...this.config, ...motion };\r\n\r\n        // Apply easing\r\n        const easeProgress = this.easeInOutSine(progress);\r\n\r\n        // Calculate glow pulse with peak hold\r\n        let glowValue;\r\n        let frequency = config.frequency;\r\n        let glowAmount = config.glowAmount;\r\n\r\n        // Apply rhythm modulation if present\r\n        if (motion.rhythmModulation) {\r\n            glowAmount *= (motion.rhythmModulation.amplitudeMultiplier || 1);\r\n            glowAmount *= (motion.rhythmModulation.accentMultiplier || 1);\r\n            if (motion.rhythmModulation.frequencyMultiplier) {\r\n                frequency *= motion.rhythmModulation.frequencyMultiplier;\r\n            }\r\n        }\r\n\r\n        const rawPulse = (easeProgress * frequency * 2) % 2;\r\n\r\n        if (config.holdPeak > 0 && rawPulse > (1 - config.holdPeak) && rawPulse < (1 + config.holdPeak)) {\r\n            // Hold at peak glow\r\n            glowValue = 1;\r\n        } else {\r\n            // Normal sine wave for glow\r\n            glowValue = Math.sin(easeProgress * Math.PI * 2 * frequency);\r\n        }\r\n\r\n        // NO PARTICLE MOVEMENT - just glow effects\r\n        // Unlike pulse, we don't calculate target positions or apply velocity\r\n\r\n        // Apply glow fade effect at the end\r\n        let glowMultiplier = 1;\r\n        if (progress > 0.9) {\r\n            const fadeFactor = 1 - ((progress - 0.9) * 10);\r\n            glowMultiplier = (0.5 + fadeFactor * 0.5);\r\n        }\r\n\r\n        // Modify particle glow properties (if your system supports it)\r\n        // This is where the actual glow effect happens\r\n        // Note: The actual visual implementation depends on your renderer\r\n        // Set glow intensity directly, don't multiply to prevent accumulation\r\n        particle.glowIntensity = 1 + glowValue * glowAmount * glowMultiplier;\r\n    },\r\n\r\n    /**\r\n     * Clean up gesture data when complete\r\n     * @param {Particle} particle - The particle to clean up\r\n     */\r\n    cleanup: function(particle) {\r\n        if (particle.gestureData?.glow) {\r\n            // Reset any glow properties\r\n            particle.glowIntensity = 1;\r\n            delete particle.gestureData.glow;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Sine easing for smooth glow transitions\r\n     * @param {number} t - Progress (0-1)\r\n     * @returns {number} Eased value\r\n     */\r\n    easeInOutSine: function(t) {\r\n        return -(Math.cos(Math.PI * t) - 1) / 2;\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Peek Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Quick peek/hide motion for suspicious checking behavior\r\n * @author Emotive Engine Team\r\n * @module gestures/effects/peek\r\n * \r\n * GESTURE TYPE:\r\n * type: 'effect' - Visual effect without changing core position\r\n * \r\n * VISUAL EFFECT:\r\n * Particles quickly expand outward (peeking) then contract back (hiding),\r\n * like peeking around a corner or quickly checking surroundings.\r\n */\r\n\r\nexport default {\r\n    name: 'peek',\r\n    emoji: '👀',\r\n    type: 'effect',\r\n    description: 'Quick peek and hide motion',\r\n    \r\n    // Default configuration\r\n    config: {\r\n        peekDistance: 40,       // How far to peek out\r\n        peekSpeed: 0.15,        // Speed of peek motion\r\n        holdDuration: 200,      // How long to hold peek position (ms)\r\n        hideSpeed: 0.25,        // Speed of hiding (faster than peeking)\r\n        stagger: true,          // Stagger particle peeks\r\n        duration: 1500          // Total animation duration\r\n    },\r\n    \r\n    // Rhythm configuration - quick glimpse movements synchronized to rhythmic accents\r\n    rhythm: {\r\n        enabled: true,\r\n        syncMode: 'accent',  // Peek on rhythmic accents and syncopation\r\n        \r\n        // Peek distance responds to accent strength\r\n        distanceSync: {\r\n            onAccent: 60,         // Far peek on accents\r\n            offAccent: 25,        // Short peek off-accent\r\n            curve: 'quick'        // Sharp, sudden movement\r\n        },\r\n        \r\n        // Speed adapts to musical tempo\r\n        speedSync: {\r\n            mode: 'tempo',\r\n            fast: 0.25,           // Quick peeks for fast music\r\n            slow: 0.10,           // Slower peeks for slow music\r\n            hideMultiplier: 1.8   // Hide speed relative to peek speed\r\n        },\r\n        \r\n        // Duration matches rhythmic subdivisions\r\n        durationSync: {\r\n            mode: 'subdivision',\r\n            beats: 0.25,          // Quarter-beat peek duration\r\n            staggerBeats: 0.125,  // Eighth-beat stagger delay\r\n            sustain: false        // No sustain, quick action\r\n        },\r\n        \r\n        // Strong response to syncopated rhythms\r\n        syncopationResponse: {\r\n            enabled: true,\r\n            multiplier: 1.8,      // More dramatic peek on syncopation\r\n            type: 'distance'      // Affects peek distance\r\n        },\r\n        \r\n        // Style variations for different music types\r\n        patternOverrides: {\r\n            'funk': {\r\n                // Sharp, syncopated peeks\r\n                distanceSync: { onAccent: 70, offAccent: 35, curve: 'funky' },\r\n                syncopationResponse: { multiplier: 2.2 }\r\n            },\r\n            'latin': {\r\n                // Rhythmic, dance-like peeks\r\n                speedSync: { fast: 0.30, slow: 0.12 },\r\n                durationSync: { beats: 0.5, staggerBeats: 0.25 }\r\n            },\r\n            'breakbeat': {\r\n                // Erratic, complex peek patterns\r\n                distanceSync: { onAccent: 55, offAccent: 40 },\r\n                syncopationResponse: { multiplier: 2.5 }\r\n            },\r\n            'classical': {\r\n                // Subtle, expressive peeks\r\n                distanceSync: { onAccent: 45, offAccent: 20, curve: 'elegant' },\r\n                speedSync: { fast: 0.18, slow: 0.08 }\r\n            }\r\n        },\r\n        \r\n        // Musical dynamics\r\n        dynamics: {\r\n            forte: {\r\n                // Bold, assertive peeks\r\n                distanceSync: { \r\n                    onAccent: { multiplier: 1.6 },\r\n                    offAccent: { multiplier: 1.3 }\r\n                },\r\n                speedSync: { multiplier: 1.4 },\r\n                syncopationResponse: { multiplier: 2.8 }\r\n            },\r\n            piano: {\r\n                // Cautious, subtle peeks\r\n                distanceSync: { \r\n                    onAccent: { multiplier: 0.6 },\r\n                    offAccent: { multiplier: 0.4 }\r\n                },\r\n                speedSync: { multiplier: 0.7 },\r\n                syncopationResponse: { multiplier: 1.2 }\r\n            }\r\n        }\r\n    },\r\n    \r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        // Initialize peek data if needed\r\n        if (!particle.gestureData) {\r\n            particle.gestureData = {};\r\n        }\r\n        \r\n        if (!particle.gestureData.peek) {\r\n            const dx = particle.x - centerX;\r\n            const dy = particle.y - centerY;\r\n            const angle = Math.atan2(dy, dx);\r\n            const distance = Math.sqrt(dx * dx + dy * dy);\r\n            \r\n            particle.gestureData.peek = {\r\n                originalX: particle.x,\r\n                originalY: particle.y,\r\n                peekAngle: angle,\r\n                originalDistance: distance,\r\n                staggerDelay: this.config.stagger ? Math.random() * 0.3 : 0,\r\n                phase: 'waiting',  // 'waiting', 'peeking', 'holding', 'hiding'\r\n                phaseTimer: 0,\r\n                peekOffset: { x: 0, y: 0 }\r\n            };\r\n        }\r\n        \r\n        const data = particle.gestureData.peek;\r\n        const config = this.config;\r\n        \r\n        // Adjust progress for stagger\r\n        const adjustedProgress = Math.max(0, Math.min(1, (progress - data.staggerDelay) / (1 - data.staggerDelay)));\r\n        \r\n        // Determine phase based on progress\r\n        if (adjustedProgress === 0) {\r\n            data.phase = 'waiting';\r\n        } else if (adjustedProgress < 0.3) {\r\n            data.phase = 'peeking';\r\n        } else if (adjustedProgress < 0.6) {\r\n            data.phase = 'holding';\r\n        } else if (adjustedProgress < 1) {\r\n            data.phase = 'hiding';\r\n        }\r\n        \r\n        // Calculate peek offset based on phase\r\n        let targetOffset = 0;\r\n        \r\n        switch (data.phase) {\r\n            case 'peeking':\r\n                // Smooth peek out\r\n                const peekProgress = adjustedProgress / 0.3;\r\n                targetOffset = this.easeOutCubic(peekProgress) * config.peekDistance;\r\n                break;\r\n                \r\n            case 'holding':\r\n                // Hold at peek position\r\n                targetOffset = config.peekDistance;\r\n                // Add slight tremor while holding\r\n                if (Math.random() < 0.1) {\r\n                    data.peekOffset.x += (Math.random() - 0.5) * 2;\r\n                    data.peekOffset.y += (Math.random() - 0.5) * 2;\r\n                }\r\n                break;\r\n                \r\n            case 'hiding':\r\n                // Quick hide back\r\n                const hideProgress = (adjustedProgress - 0.6) / 0.4;\r\n                targetOffset = (1 - this.easeInCubic(hideProgress)) * config.peekDistance;\r\n                break;\r\n        }\r\n        \r\n        // Apply the peek offset\r\n        if (data.phase !== 'waiting') {\r\n            const peekX = Math.cos(data.peekAngle) * targetOffset;\r\n            const peekY = Math.sin(data.peekAngle) * targetOffset;\r\n            \r\n            // Smooth transition to target position\r\n            data.peekOffset.x += (peekX - data.peekOffset.x) * config.peekSpeed;\r\n            data.peekOffset.y += (peekY - data.peekOffset.y) * config.peekSpeed;\r\n            \r\n            // Apply offset to particle\r\n            particle.x = data.originalX + data.peekOffset.x;\r\n            particle.y = data.originalY + data.peekOffset.y;\r\n        }\r\n        \r\n        // Add opacity effect - slightly fade during peek\r\n        if (particle.alpha !== undefined) {\r\n            if (data.phase === 'peeking' || data.phase === 'holding') {\r\n                particle.alpha = 0.7 + Math.random() * 0.3;  // Flickering visibility\r\n            } else {\r\n                particle.alpha = 1.0;\r\n            }\r\n        }\r\n    },\r\n    \r\n    // Easing functions\r\n    easeOutCubic: function(t) {\r\n        return 1 - Math.pow(1 - t, 3);\r\n    },\r\n    \r\n    easeInCubic: function(t) {\r\n        return t * t * t;\r\n    },\r\n    \r\n    cleanup: function(particle) {\r\n        if (particle.gestureData?.peek) {\r\n            // Restore original position\r\n            particle.x = particle.gestureData.peek.originalX;\r\n            particle.y = particle.gestureData.peek.originalY;\r\n            if (particle.alpha !== undefined) {\r\n                particle.alpha = 1.0;\r\n            }\r\n            delete particle.gestureData.peek;\r\n        }\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Running Man Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Running Man gesture - hip-hop shuffle dance move\r\n * @author Emotive Engine Team\r\n * @module gestures/effects/runningman\r\n */\r\n\r\nexport default {\r\n    name: 'runningman',\r\n    emoji: '🏃',\r\n    type: 'effect',\r\n    description: 'Hip-hop running man shuffle',\r\n    \r\n    // Default configuration\r\n    config: {\r\n        duration: 2000,        // Animation duration\r\n        slideDistance: 30,     // Horizontal slide distance\r\n        stepHeight: 15,        // Vertical step height\r\n        speed: 1.2,            // Animation speed multiplier\r\n        strength: 0.8,         // Overall effect intensity\r\n        // Particle motion configuration\r\n        particleMotion: {\r\n            type: 'runningman',\r\n            strength: 0.7\r\n        }\r\n    },\r\n    \r\n    // Rhythm configuration - synchronized to beat\r\n    rhythm: {\r\n        enabled: true,\r\n        syncToBeat: true,      // Snap to beat grid\r\n        beatMultiplier: 1,     // Steps per beat\r\n        accentBeats: [1, 3]    // Emphasized steps\r\n    },\r\n    \r\n    /**\r\n     * Apply running man motion - handled by GestureAnimator\r\n     * This is a placeholder for the gesture system\r\n     */\r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        // Motion is handled by GestureAnimator.applyRunningMan()\r\n        return false;\r\n    },\r\n    \r\n    /**\r\n     * Blend with existing motion\r\n     */\r\n    blend: function(particle, progress, motion) {\r\n        // Allow blending with other gestures\r\n        return false;\r\n    }\r\n}","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Charleston Gesture\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Charleston gesture - classic hip-hop shuffle with modern twist\r\n * @author Emotive Engine Team\r\n * @module gestures/effects/charleston\r\n */\r\n\r\nexport default {\r\n    name: 'charleston',\r\n    emoji: '🕺',\r\n    type: 'effect',\r\n    description: 'Hip-hop Charleston shuffle with crisscross',\r\n    \r\n    // Default configuration\r\n    config: {\r\n        duration: 2500,        // Animation duration\r\n        kickDistance: 35,      // Kick extension distance\r\n        swivelRange: 40,       // Hip swivel range\r\n        bounceHeight: 12,      // Vertical bounce\r\n        strength: 0.9,         // Overall effect intensity\r\n        // Particle motion configuration\r\n        particleMotion: {\r\n            type: 'charleston',\r\n            strength: 0.8\r\n        }\r\n    },\r\n    \r\n    // Rhythm configuration - tight sync with beat\r\n    rhythm: {\r\n        enabled: true,\r\n        syncToBeat: true,      // Lock to beat grid\r\n        beatMultiplier: 2,     // Double-time feel\r\n        accentBeats: [1, 2.5, 3, 4.5]  // Syncopated accents\r\n    },\r\n    \r\n    /**\r\n     * Apply charleston motion - handled by GestureAnimator\r\n     * This is a placeholder for the gesture system\r\n     */\r\n    apply: function(particle, progress, motion, dt, centerX, centerY) {\r\n        // Motion is handled by GestureAnimator.applyCharleston()\r\n        return false;\r\n    },\r\n    \r\n    /**\r\n     * Blend with existing motion\r\n     */\r\n    blend: function(particle, progress, motion) {\r\n        // Allow blending with other gestures\r\n        return false;\r\n    }\r\n}","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE v4.0 - Gesture Registry\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Central registry for all gesture animations with plugin support\n * @author Emotive Engine Team\n * @version 4.0.0\n * @module gestures\n * \n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                                   PURPOSE                                         \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ Control center for all gestures with full plugin adapter integration.             \n * ║ • Three gesture types: blending (motions), override (transforms), effects        \n * ║ • Core gestures loaded synchronously at startup                                   \n * ║ • Plugin gestures registered dynamically via adapter                              \n * ║ • Value-agnostic configurations for easy tuning                                   \n * ║                                                                                    \n * ║ TO ADD A PLUGIN GESTURE:                                                          \n * ║ Use pluginAdapter.registerPluginGesture() from your plugin                        \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n */\n\nimport pluginAdapter from './plugin-adapter.js';\n\n// ┌─────────────────────────────────────────────────────────────────────────────────────\n// │ IMPORT MOTION GESTURES (Blending - add to existing motion)\n// └─────────────────────────────────────────────────────────────────────────────────────\nimport bounce from './motions/bounce.js';\nimport pulse from './motions/pulse.js';\nimport shake from './motions/shake.js';\nimport nod from './motions/nod.js';\nimport vibrate from './motions/vibrate.js';\nimport orbit from './motions/orbit.js';\nimport twitch from './motions/twitch.js';\nimport sway from './motions/sway.js';\nimport float from './motions/float.js';\nimport jitter from './motions/jitter.js';\n\n// ┌─────────────────────────────────────────────────────────────────────────────────────\n// │ IMPORT TRANSFORM GESTURES (Override - replace motion completely)\n// └─────────────────────────────────────────────────────────────────────────────────────\nimport spin from './transforms/spin.js';\nimport jump from './transforms/jump.js';\nimport morph from './transforms/morph.js';\nimport stretch from './transforms/stretch.js';\nimport tilt from './transforms/tilt.js';\nimport orbital from './transforms/orbital.js';\nimport hula from './transforms/hula.js';\nimport scan from './transforms/scan.js';\nimport twist from './transforms/twist.js';\n\n// ┌─────────────────────────────────────────────────────────────────────────────────────\n// │ IMPORT EFFECT GESTURES (Visual effects)\n// └─────────────────────────────────────────────────────────────────────────────────────\nimport wave from './effects/wave.js';\nimport drift from './effects/drift.js';\nimport flicker from './effects/flicker.js';\nimport burst from './effects/burst.js';\nimport directional from './effects/directional.js';\nimport settle from './effects/settle.js';\nimport fade from './effects/fade.js';\nimport hold from './effects/hold.js';\nimport breathe from './effects/breathe.js';\nimport expand from './effects/expand.js';\nimport contract from './effects/contract.js';\nimport flash from './effects/flash.js';\nimport glow from './effects/glow.js';\nimport peek from './effects/peek.js';\nimport runningman from './effects/runningman.js';\nimport charleston from './effects/charleston.js';\n\n// ┌─────────────────────────────────────────────────────────────────────────────────────\n// │ PLACEHOLDER GESTURES FOR NEW ANIMATIONS\n// └─────────────────────────────────────────────────────────────────────────────────────\n// These are handled by GestureAnimator but need registry entries for rhythm system\nconst createPlaceholderGesture = (name, emoji = '✨') => ({\n    name,\n    emoji,\n    type: 'blending', // Use blending type so they don't interfere\n    description: `${name} animation`,\n    config: {\n        duration: 1000, // Legacy fallback only\n        musicalDuration: { musical: true, beats: 2 } // Default: 2 beats\n    },\n    rhythm: {\n        enabled: true,\n        syncMode: 'beat',\n        timingSync: 'nextBeat',\n        durationSync: { mode: 'beats', beats: 2 }, // Musical duration\n        interruptible: true,\n        priority: 3,\n        blendable: true,\n        crossfadePoint: 'anyBeat',\n        maxQueue: 3\n    },\n    apply: (particle, progress, params) => {\n        // No-op - handled by GestureAnimator\n        return false;\n    },\n    blend: (particle, progress, params) => {\n        // No-op - handled by GestureAnimator\n        return false;\n    }\n});\n\nconst sparkle = createPlaceholderGesture('sparkle', '✨');\n\n// Shimmer gesture - makes particles shimmer with wave effect\nconst shimmer = {\n    name: 'shimmer',\n    emoji: '🌟',\n    type: 'particle',  // Particle type to affect particle behavior\n    description: 'Shimmer effect with sparkling particles',\n    config: {\n        duration: 2000,  // Legacy fallback\n        musicalDuration: { musical: true, bars: 1 }, // 1 bar (4 beats)\n        particleMotion: 'radiant'  // Use radiant behavior for shimmering effect\n    },\n    rhythm: {\n        enabled: true,\n        syncType: 'beat',\n        durationSync: { mode: 'bars', bars: 1 }, // Musical: 1 bar\n        intensity: 0.8\n    },\n    override: (particle, progress, params) => {\n        // Shimmer makes particles sparkle with wave effect\n        particle.shimmerEffect = true;\n        particle.shimmerProgress = progress;\n        return true;\n    },\n    blend: (particle, progress, params) => {\n        // Blend with other gestures\n        return false;\n    }\n};\nconst wiggle = createPlaceholderGesture('wiggle', '〰️');\nconst groove = createPlaceholderGesture('groove', '🎵');\nconst point = createPlaceholderGesture('point', '👉');\nconst lean = createPlaceholderGesture('lean', '↗️');\nconst reach = createPlaceholderGesture('reach', '🤚');\nconst headBob = createPlaceholderGesture('headBob', '🎧');\n\n// Rain gesture - applies doppler effect to particles\nconst rain = {\n    name: 'rain',\n    emoji: '🌧️',\n    type: 'particle',  // Particle type to affect particle behavior\n    description: 'Rain effect with falling particles',\n    config: {\n        duration: 3000,  // Legacy fallback\n        musicalDuration: { musical: true, bars: 2 }, // 2 bars (8 beats)\n        particleMotion: 'falling'  // Use the falling particle behavior\n    },\n    rhythm: {\n        enabled: true,\n        syncType: 'off-beat',\n        durationSync: { mode: 'bars', bars: 2 }, // Musical: 2 bars\n        intensity: 0.8\n    },\n    apply: (particle, progress, params) => {\n        // The doppler behavior is handled by the particle system\n        // This just marks particles as being affected by rain\n        particle.rainEffect = true;\n        particle.rainProgress = progress;\n        return true;\n    },\n    blend: (particle, progress, params) => {\n        // Blend with other gestures\n        return false;\n    }\n};\n\n// ┌─────────────────────────────────────────────────────────────────────────────────────\n// │ GESTURE COLLECTIONS\n// └─────────────────────────────────────────────────────────────────────────────────────\nconst MOTION_GESTURES = [\n    bounce,\n    pulse,\n    shake,\n    nod,\n    vibrate,\n    orbit,\n    twitch,\n    sway,\n    float,\n    jitter,\n    // New gestures\n    sparkle,\n    shimmer,\n    wiggle,\n    groove,\n    point,\n    lean,\n    reach,\n    headBob,\n    rain\n];\n\nconst TRANSFORM_GESTURES = [\n    spin,\n    jump,\n    morph,\n    stretch,\n    tilt,\n    orbital,\n    hula,\n    scan,\n    twist\n];\n\nconst EFFECT_GESTURES = [\n    wave,\n    drift,\n    flicker,\n    burst,\n    directional,\n    settle,\n    fade,\n    hold,\n    breathe,\n    expand,\n    contract,\n    flash,\n    glow,\n    peek,\n    runningman,\n    charleston\n];\n\n// ┌─────────────────────────────────────────────────────────────────────────────────────\n// │ GESTURE REGISTRY - Fast lookup by name\n// └─────────────────────────────────────────────────────────────────────────────────────\nexport const GESTURE_REGISTRY = {};\n\n// Build the registry from all gesture arrays - SYNCHRONOUSLY\n[...MOTION_GESTURES, ...TRANSFORM_GESTURES, ...EFFECT_GESTURES].forEach(gesture => {\n    GESTURE_REGISTRY[gesture.name] = gesture;\n});\n\n// ┌─────────────────────────────────────────────────────────────────────────────────────\n// │ GESTURE TYPE MAPPING - Quick type lookup\n// └─────────────────────────────────────────────────────────────────────────────────────\nexport const GESTURE_TYPES = {\n    blending: MOTION_GESTURES.map(g => g.name),\n    override: TRANSFORM_GESTURES.map(g => g.name),\n    effect: EFFECT_GESTURES.map(g => g.name)\n};\n\n/**\n * Get a gesture by name (checks both core and plugin gestures)\n * @param {string} name - Gesture name (e.g., 'bounce', 'spin')\n * @returns {Object|null} Gesture object or null if not found\n */\nexport function getGesture(name) {\n    // Check core gestures first\n    if (GESTURE_REGISTRY[name]) {\n        return GESTURE_REGISTRY[name];\n    }\n    \n    // Check plugin gestures\n    const pluginGesture = pluginAdapter.getPluginGesture(name);\n    if (pluginGesture) {\n        return pluginGesture;\n    }\n    \n    return null;\n}\n\n/**\n * Check if a gesture is a blending type\n * @param {string} name - Gesture name\n * @returns {boolean} True if gesture blends with existing motion\n */\nexport function isBlendingGesture(name) {\n    const gesture = getGesture(name);\n    return gesture ? gesture.type === 'blending' : false;\n}\n\n/**\n * Check if a gesture is an override type\n * @param {string} name - Gesture name\n * @returns {boolean} True if gesture overrides existing motion\n */\nexport function isOverrideGesture(name) {\n    const gesture = getGesture(name);\n    return gesture ? gesture.type === 'override' : false;\n}\n\n/**\n * Apply a gesture to a particle\n * @param {Particle} particle - The particle to animate\n * @param {string} gestureName - Name of the gesture\n * @param {number} progress - Animation progress (0-1)\n * @param {Object} motion - Motion configuration\n * @param {number} dt - Delta time\n * @param {number} centerX - Orb center X\n * @param {number} centerY - Orb center Y\n * @returns {boolean} True if gesture was applied\n */\nexport function applyGesture(particle, gestureName, progress, motion, dt, centerX, centerY) {\n    const gesture = getGesture(gestureName);\n    \n    if (!gesture) {\n        return false;\n    }\n    \n    // Apply the gesture\n    if (gesture.apply) {\n        gesture.apply(particle, progress, motion, dt, centerX, centerY);\n    }\n    \n    // Clean up if complete\n    if (progress >= 1 && gesture.cleanup) {\n        gesture.cleanup(particle);\n    }\n    \n    return true;\n}\n\n/**\n * Get list of all available gestures (core and plugin)\n * @returns {Array} Array of gesture info objects\n */\nexport function listGestures() {\n    const allGestures = [];\n    \n    // Add core gestures\n    Object.values(GESTURE_REGISTRY).forEach(gesture => {\n        allGestures.push({\n            name: gesture.name,\n            emoji: gesture.emoji || '🎭',\n            type: gesture.type,\n            description: gesture.description || 'No description',\n            source: 'core'\n        });\n    });\n    \n    // Add plugin gestures\n    const pluginGestureNames = pluginAdapter.getAllPluginGestures();\n    pluginGestureNames.forEach(name => {\n        const gesture = pluginAdapter.getPluginGesture(name);\n        allGestures.push({\n            name: gesture.name,\n            emoji: gesture.emoji || '🔌',\n            type: gesture.type,\n            description: gesture.description || 'Plugin gesture',\n            source: 'plugin'\n        });\n    });\n    \n    return allGestures;\n}\n\n// Debug utilities can be imported directly if needed\n// Export them instead of polluting global scope\n\n// Export plugin adapter for external use\nexport { pluginAdapter };\n\n// Export everything\nexport default {\n    GESTURE_REGISTRY,\n    GESTURE_TYPES,\n    getGesture,\n    isBlendingGesture,\n    isOverrideGesture,\n    applyGesture,\n    listGestures,\n    pluginAdapter\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Rhythm Core\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n * \r\n * @fileoverview Core rhythm timing engine for musical synchronization\r\n * @author Emotive Engine Team\r\n * @module core/rhythm\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ CONCEPT                                                                           \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ Central timing engine that provides musical time references to all subsystems.    \r\n * ║ Does NOT dictate what animations do - only provides timing information.           \r\n * ║ Each subsystem maintains its own rhythm configuration in its files.              \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n * \r\n * ARCHITECTURE:\r\n * • Provides beat events and musical time references\r\n * • Supports multiple time signatures and tempo changes\r\n * • Enables audio synchronization from external sources\r\n * • Each gesture/emotion/behavior defines its own rhythm response\r\n * \r\n * ┌──────────────────────────────────────────────────────────────────────────────────┐\r\n * │  TIMING FLOW                                                                      │\r\n * │                                                                                   │\r\n * │  Audio Input ──┐                                                                 │\r\n * │                ↓                                                                  │\r\n * │  [Rhythm Engine] ← Internal Clock                                                │\r\n * │        ↓                                                                          │\r\n * │   Beat Events → Subsystems (each with own rhythm config)                        │\r\n * │                                                                                   │\r\n * └──────────────────────────────────────────────────────────────────────────────────┘\r\n */\r\n\r\nclass RhythmEngine {\r\n    constructor() {\r\n        // Core timing properties\r\n        this.bpm = 120;                    // Default BPM (beats per minute)\r\n        this.timeSignature = [4, 4];       // Default 4/4 time\r\n        this.isPlaying = false;            // Whether rhythm is active\r\n        \r\n        // Musical time tracking\r\n        this.startTime = 0;                // When rhythm started\r\n        this.currentBeat = 0;              // Current beat number\r\n        this.currentBar = 0;               // Current bar/measure number\r\n        this.beatProgress = 0;             // Progress within current beat (0-1)\r\n        this.barProgress = 0;              // Progress within current bar (0-1)\r\n        \r\n        // Timing calculations\r\n        this.beatDuration = 60000 / this.bpm;  // Milliseconds per beat\r\n        this.barDuration = this.beatDuration * this.timeSignature[0];\r\n        this.lastBeatTime = 0;             // Timestamp of last beat\r\n        this.nextBeatTime = 0;             // Timestamp of next beat\r\n        \r\n        // Event listeners\r\n        this.listeners = new Map();        // Event type -> Set of callbacks\r\n        this.beatCallbacks = new Set();    // Callbacks for every beat\r\n        this.barCallbacks = new Set();     // Callbacks for every bar\r\n        \r\n        // Subdivisions for finer timing\r\n        this.subdivisions = {\r\n            sixteenth: 0,    // 16th note position\r\n            eighth: 0,       // 8th note position\r\n            triplet: 0,      // Triplet position\r\n            swing: 0         // Swing timing offset\r\n        };\r\n        \r\n        // Sync state\r\n        this.audioSync = null;             // External audio sync source\r\n        this.syncOffset = 0;               // Timing offset for sync\r\n        this.autoSync = false;             // Auto-detect tempo from audio\r\n        \r\n        // Musical dynamics\r\n        this.intensity = 1.0;              // Current musical intensity (0-1)\r\n        this.groove = 0;                   // Groove/swing amount (0-1)\r\n        this.humanize = 0.05;              // Timing humanization factor\r\n        \r\n        // Pattern tracking\r\n        this.patterns = new Map();         // Named rhythm patterns\r\n        this.currentPattern = null;        // Active rhythm pattern\r\n        \r\n        // Initialize default patterns\r\n        this.initializePatterns();\r\n    }\r\n    \r\n    /**\r\n     * Initialize default rhythm patterns\r\n     */\r\n    initializePatterns() {\r\n        // Basic patterns - these are just timing references\r\n        // Actual animations define their own responses to these patterns\r\n        \r\n        // Common time signatures\r\n        this.patterns.set('4/4', {\r\n            name: '4/4',\r\n            description: 'Common time - 4 beats per bar',\r\n            timeSignature: [4, 4],\r\n            groove: 0,\r\n            accents: [1, 0.5, 0.7, 0.5]  // Beat emphasis pattern\r\n        });\r\n        \r\n        this.patterns.set('straight', {\r\n            name: 'straight',\r\n            description: 'Straight, even timing',\r\n            groove: 0,\r\n            accents: [1, 0.5, 0.7, 0.5]  // Beat emphasis pattern\r\n        });\r\n        \r\n        this.patterns.set('swing', {\r\n            name: 'swing',\r\n            description: 'Swing/shuffle timing',\r\n            groove: 0.67,  // 2:1 swing ratio\r\n            accents: [1, 0.3, 0.8, 0.3]\r\n        });\r\n        \r\n        this.patterns.set('3/4', {\r\n            name: '3/4',\r\n            description: 'Waltz time - 3 beats per bar',\r\n            timeSignature: [3, 4],\r\n            accents: [1, 0.5, 0.5]\r\n        });\r\n        \r\n        this.patterns.set('waltz', {\r\n            name: 'waltz',\r\n            description: '3/4 waltz timing',\r\n            timeSignature: [3, 4],\r\n            accents: [1, 0.5, 0.5]\r\n        });\r\n        \r\n        this.patterns.set('6/8', {\r\n            name: '6/8',\r\n            description: 'Compound duple time',\r\n            timeSignature: [6, 8],\r\n            accents: [1, 0.3, 0.3, 0.7, 0.3, 0.3]\r\n        });\r\n        \r\n        this.patterns.set('5/4', {\r\n            name: '5/4',\r\n            description: 'Complex meter - 5 beats per bar',\r\n            timeSignature: [5, 4],\r\n            accents: [1, 0.5, 0.6, 0.5, 0.7]\r\n        });\r\n        \r\n        this.patterns.set('7/8', {\r\n            name: '7/8',\r\n            description: 'Irregular meter',\r\n            timeSignature: [7, 8],\r\n            accents: [1, 0.5, 0.5, 0.7, 0.5, 0.5, 0.6]\r\n        });\r\n        \r\n        this.patterns.set('dubstep', {\r\n            name: 'dubstep',\r\n            description: 'Dubstep half-time feel',\r\n            accents: [0.2, 0.2, 1, 0.2],  // Heavy on beat 3\r\n            subdivisions: { wobble: true }\r\n        });\r\n        \r\n        this.patterns.set('breakbeat', {\r\n            name: 'breakbeat',\r\n            description: 'Broken beat pattern',\r\n            accents: [1, 0.2, 0.7, 0.9, 0.2, 0.8, 0.4, 0.2]\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Start the rhythm engine\r\n     */\r\n    start() {\r\n        if (this.isPlaying) return;\r\n\r\n        this.isPlaying = true;\r\n        this.isRunning = true; // Add explicit running flag\r\n        this.startTime = performance.now();\r\n        this.lastBeatTime = this.startTime;\r\n        this.nextBeatTime = this.startTime + this.beatDuration;\r\n        this.currentBeat = 0;\r\n        this.currentBar = 0;\r\n\r\n        // Emit start event\r\n        this.emit('start', {\r\n            bpm: this.bpm,\r\n            timeSignature: this.timeSignature,\r\n            pattern: this.currentPattern\r\n        });\r\n\r\n        // Start update loop\r\n        this.update();\r\n    }\r\n    \r\n    /**\r\n     * Stop the rhythm engine\r\n     */\r\n    stop() {\r\n        if (!this.isPlaying) return;\r\n        \r\n        this.isPlaying = false;\r\n        this.emit('stop', {\r\n            totalBeats: this.currentBeat,\r\n            totalBars: this.currentBar\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Main update loop\r\n     */\r\n    update() {\r\n        if (!this.isPlaying) return;\r\n        \r\n        const now = performance.now();\r\n        const elapsed = now - this.startTime;\r\n        \r\n        // Calculate musical time positions\r\n        const beatsSinceStart = elapsed / this.beatDuration;\r\n        const newBeat = Math.floor(beatsSinceStart);\r\n        this.beatProgress = beatsSinceStart % 1;\r\n        \r\n        // Check for beat change\r\n        if (newBeat > this.currentBeat) {\r\n            this.onBeat(newBeat);\r\n        }\r\n        \r\n        // Calculate bar position\r\n        const newBar = Math.floor(newBeat / this.timeSignature[0]);\r\n        if (newBar > this.currentBar) {\r\n            this.onBar(newBar);\r\n        }\r\n        \r\n        this.currentBeat = newBeat;\r\n        this.currentBar = newBar;\r\n        this.barProgress = (newBeat % this.timeSignature[0]) / this.timeSignature[0];\r\n        \r\n        // Calculate subdivisions\r\n        this.updateSubdivisions();\r\n        \r\n        // Emit continuous update\r\n        this.emit('update', this.getTimeInfo());\r\n        \r\n        // Continue loop only if still playing\r\n        if (this.isPlaying) {\r\n            requestAnimationFrame(() => this.update());\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Handle beat event\r\n     */\r\n    onBeat(beatNumber) {\r\n        const beatInBar = beatNumber % this.timeSignature[0];\r\n        const accent = this.getAccent(beatInBar);\r\n        \r\n        // Add humanization\r\n        const humanTiming = this.humanize * (Math.random() - 0.5) * this.beatDuration;\r\n        \r\n        const beatInfo = {\r\n            beat: beatNumber,\r\n            beatInBar: beatInBar,\r\n            bar: this.currentBar,\r\n            accent: accent,\r\n            intensity: this.intensity * accent,\r\n            humanTiming: humanTiming,\r\n            timestamp: performance.now()\r\n        };\r\n        \r\n        // Emit beat event\r\n        this.emit('beat', beatInfo);\r\n        \r\n        // Call beat callbacks\r\n        this.beatCallbacks.forEach(callback => callback(beatInfo));\r\n        \r\n        // Update timing\r\n        this.lastBeatTime = performance.now();\r\n        this.nextBeatTime = this.lastBeatTime + this.beatDuration;\r\n    }\r\n    \r\n    /**\r\n     * Handle bar event\r\n     */\r\n    onBar(barNumber) {\r\n        const barInfo = {\r\n            bar: barNumber,\r\n            timeSignature: this.timeSignature,\r\n            pattern: this.currentPattern,\r\n            timestamp: performance.now()\r\n        };\r\n        \r\n        // Emit bar event\r\n        this.emit('bar', barInfo);\r\n        \r\n        // Call bar callbacks\r\n        this.barCallbacks.forEach(callback => callback(barInfo));\r\n    }\r\n    \r\n    /**\r\n     * Update subdivision timings\r\n     */\r\n    updateSubdivisions() {\r\n        // Calculate subdivision positions within beat\r\n        this.subdivisions.sixteenth = (this.beatProgress * 4) % 1;\r\n        this.subdivisions.eighth = (this.beatProgress * 2) % 1;\r\n        this.subdivisions.triplet = (this.beatProgress * 3) % 1;\r\n        \r\n        // Apply swing/groove\r\n        if (this.groove > 0) {\r\n            const swingRatio = 0.5 + this.groove * 0.17; // Max 67% swing\r\n            if (this.subdivisions.eighth < 0.5) {\r\n                this.subdivisions.swing = this.subdivisions.eighth / swingRatio;\r\n            } else {\r\n                this.subdivisions.swing = 0.5 + (this.subdivisions.eighth - 0.5) / (1 - swingRatio);\r\n            }\r\n        } else {\r\n            this.subdivisions.swing = this.subdivisions.eighth;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Get accent level for beat position\r\n     */\r\n    getAccent(beatInBar) {\r\n        if (this.currentPattern && this.patterns.has(this.currentPattern)) {\r\n            const pattern = this.patterns.get(this.currentPattern);\r\n            if (pattern.accents && pattern.accents[beatInBar] !== undefined) {\r\n                return pattern.accents[beatInBar];\r\n            }\r\n        }\r\n        \r\n        // Default accent pattern (strong on 1, medium on 3 in 4/4)\r\n        if (beatInBar === 0) return 1.0;\r\n        if (beatInBar === 2 && this.timeSignature[0] === 4) return 0.7;\r\n        return 0.5;\r\n    }\r\n    \r\n    /**\r\n     * Get current time information\r\n     */\r\n    getTimeInfo() {\r\n        return {\r\n            // Absolute time\r\n            elapsed: performance.now() - this.startTime,\r\n            \r\n            // Musical time\r\n            beat: this.currentBeat,\r\n            bar: this.currentBar,\r\n            beatInBar: this.currentBeat % this.timeSignature[0],\r\n            \r\n            // Progress values (0-1)\r\n            beatProgress: this.beatProgress,\r\n            barProgress: this.barProgress,\r\n            \r\n            // Subdivisions\r\n            subdivisions: { ...this.subdivisions },\r\n            \r\n            // Timing info\r\n            bpm: this.bpm,\r\n            beatDuration: this.beatDuration,\r\n            timeSignature: [...this.timeSignature],\r\n            \r\n            // Musical properties\r\n            intensity: this.intensity,\r\n            groove: this.groove,\r\n            pattern: this.currentPattern,\r\n            \r\n            // Next beat timing\r\n            nextBeatIn: this.nextBeatTime - performance.now(),\r\n            \r\n            // Accent for current beat\r\n            accent: this.getAccent(this.currentBeat % this.timeSignature[0])\r\n        };\r\n    }\r\n    \r\n    /**\r\n     * Set BPM (beats per minute)\r\n     */\r\n    setBPM(bpm) {\r\n        this.bpm = Math.max(20, Math.min(360, bpm));\r\n        this.beatDuration = 60000 / this.bpm;\r\n        this.barDuration = this.beatDuration * this.timeSignature[0];\r\n        \r\n        this.emit('tempoChange', { bpm: this.bpm });\r\n    }\r\n    \r\n    /**\r\n     * Set time signature\r\n     */\r\n    setTimeSignature(numerator, denominator) {\r\n        this.timeSignature = [numerator, denominator];\r\n        this.barDuration = this.beatDuration * numerator;\r\n        \r\n        this.emit('timeSignatureChange', { \r\n            timeSignature: this.timeSignature \r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Set rhythm pattern\r\n     */\r\n    setPattern(patternName) {\r\n        if (!this.patterns.has(patternName)) {\r\n            return;\r\n        }\r\n        \r\n        const pattern = this.patterns.get(patternName);\r\n        this.currentPattern = patternName;\r\n        \r\n        // Apply pattern settings\r\n        if (pattern.timeSignature) {\r\n            this.setTimeSignature(...pattern.timeSignature);\r\n        }\r\n        if (pattern.groove !== undefined) {\r\n            this.groove = pattern.groove;\r\n        }\r\n        \r\n        this.emit('patternChange', { pattern: patternName });\r\n    }\r\n    \r\n    /**\r\n     * Register for beat events\r\n     */\r\n    onBeatCallback(callback) {\r\n        this.beatCallbacks.add(callback);\r\n        return () => this.beatCallbacks.delete(callback);\r\n    }\r\n    \r\n    /**\r\n     * Register for bar events\r\n     */\r\n    onBarCallback(callback) {\r\n        this.barCallbacks.add(callback);\r\n        return () => this.barCallbacks.delete(callback);\r\n    }\r\n    \r\n    /**\r\n     * Emit event to listeners\r\n     */\r\n    emit(event, data) {\r\n        if (this.listeners.has(event)) {\r\n            this.listeners.get(event).forEach(callback => callback(data));\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Listen for events\r\n     */\r\n    on(event, callback) {\r\n        if (!this.listeners.has(event)) {\r\n            this.listeners.set(event, new Set());\r\n        }\r\n        this.listeners.get(event).add(callback);\r\n        \r\n        // Return unsubscribe function\r\n        return () => {\r\n            if (this.listeners.has(event)) {\r\n                this.listeners.get(event).delete(callback);\r\n            }\r\n        };\r\n    }\r\n    \r\n    /**\r\n     * Sync to audio source (stub for future implementation)\r\n     */\r\n    syncToAudio(audioContext, audioSource) {\r\n        this.audioSync = { context: audioContext, source: audioSource };\r\n        // Future: Implement beat detection and tempo extraction\r\n    }\r\n    \r\n    /**\r\n     * Get rhythm adapter for subsystems\r\n     * Returns timing info and utilities for rhythm-aware animations\r\n     */\r\n    getAdapter() {\r\n        return {\r\n            // Current time info\r\n            getTimeInfo: () => this.getTimeInfo(),\r\n            \r\n            // Check if on beat (with tolerance)\r\n            isOnBeat: (tolerance = 0.1) => {\r\n                return this.beatProgress < tolerance || this.beatProgress > (1 - tolerance);\r\n            },\r\n            \r\n            // Check if on specific subdivision\r\n            isOnSubdivision: (subdivision, tolerance = 0.1) => {\r\n                const value = this.subdivisions[subdivision] || 0;\r\n                return value < tolerance || value > (1 - tolerance);\r\n            },\r\n            \r\n            // Get interpolated value synced to beat\r\n            getBeatSync: (min = 0, max = 1, curve = 'linear') => {\r\n                let progress = this.beatProgress;\r\n                \r\n                // Apply curve\r\n                switch(curve) {\r\n                    case 'ease':\r\n                        progress = 0.5 - Math.cos(progress * Math.PI) / 2;\r\n                        break;\r\n                    case 'bounce':\r\n                        progress = Math.abs(Math.sin(progress * Math.PI));\r\n                        break;\r\n                    case 'pulse':\r\n                        progress = Math.pow(Math.sin(progress * Math.PI), 2);\r\n                        break;\r\n                }\r\n                \r\n                return min + (max - min) * progress;\r\n            },\r\n            \r\n            // Get value with musical accent\r\n            getAccentedValue: (baseValue, accentMultiplier = 2) => {\r\n                const accent = this.getAccent(this.currentBeat % this.timeSignature[0]);\r\n                return baseValue * (1 + (accent - 0.5) * accentMultiplier);\r\n            },\r\n            \r\n            // Subscribe to beat events\r\n            onBeat: (callback) => this.onBeatCallback(callback),\r\n            onBar: (callback) => this.onBarCallback(callback),\r\n            \r\n            // Musical time utilities\r\n            beatsToMs: (beats) => beats * this.beatDuration,\r\n            msToBeats: (ms) => ms / this.beatDuration,\r\n            \r\n            // Current musical state\r\n            isPlaying: () => this.isPlaying,\r\n            getBPM: () => this.bpm,\r\n            getPattern: () => this.currentPattern\r\n        };\r\n    }\r\n}\r\n\r\n// Create singleton instance\r\nconst rhythmEngine = new RhythmEngine();\r\n\r\n// Export both the engine and the class\r\nexport { rhythmEngine, RhythmEngine };\r\nexport default rhythmEngine;","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Rhythm Integration Module\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n * \r\n * @fileoverview Integration layer between rhythm engine and existing subsystems\r\n * @author Emotive Engine Team\r\n * @module core/rhythmIntegration\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ CONCEPT                                                                           \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ This module connects the rhythm engine to existing subsystems without modifying   \r\n * ║ their core behavior. It reads rhythm configurations from individual files and     \r\n * ║ applies timing modulations based on musical events.                              \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n * \r\n * INTEGRATION POINTS:\r\n * • Particle System - Emission timing, behavior modulation\r\n * • Gesture System - Animation sync, duration adjustment\r\n * • Emotion System - Intensity mapping, transition timing\r\n * • Renderer - Glow pulsing, visual effects sync\r\n * \r\n * ┌──────────────────────────────────────────────────────────────────────────────────┐\r\n * │  MODULAR RHYTHM FLOW                                                             │\r\n * │                                                                                   │\r\n * │  gesture.js ──┐                                                                  │\r\n * │  emotion.js ──┼→ [Integration] ← [Rhythm Engine]                                │\r\n * │  behavior.js ─┘         ↓                                                        │\r\n * │                   Apply Timing                                                   │\r\n * │                                                                                   │\r\n * └──────────────────────────────────────────────────────────────────────────────────┘\r\n */\r\n\r\nimport rhythmEngine from './rhythm.js';\r\n\r\nclass RhythmIntegration {\r\n    constructor() {\r\n        this.enabled = false;\r\n        this.adapter = null;\r\n        this.subsystemConfigs = new Map();\r\n        this.activeModulations = new Map();\r\n    }\r\n    \r\n    /**\r\n     * Initialize rhythm integration\r\n     */\r\n    initialize() {\r\n        this.adapter = rhythmEngine.getAdapter();\r\n        this.enabled = true;\r\n        \r\n        // Subscribe to rhythm events\r\n        this.adapter.onBeat(this.handleBeat.bind(this));\r\n        this.adapter.onBar(this.handleBar.bind(this));\r\n        \r\n    }\r\n    \r\n    /**\r\n     * Update BPM from detected audio\r\n     * @param {number} newBPM - Detected BPM from audio analysis\r\n     */\r\n    updateBPM(newBPM) {\r\n        if (newBPM >= 60 && newBPM <= 220) {\r\n            // Check if rhythm was manually stopped\r\n            if (window.rhythmManuallyStoppedForCurrentAudio) {\r\n                return; // Don't auto-update if manually stopped\r\n            }\r\n\r\n            // Auto-start rhythm engine if not running\r\n            if (!rhythmEngine.isRunning) {\r\n\r\n                // Auto-start the rhythm engine for gesture sync\r\n                this.start(newBPM, 'straight');\r\n\r\n                // Trigger the rhythm sync visualizer to show BPM\r\n                if (window.rhythmSyncVisualizer && !window.rhythmSyncVisualizer.state.active) {\r\n                    console.log('RhythmIntegration: Auto-starting rhythm sync visualizer with BPM:', newBPM);\r\n                    window.rhythmSyncVisualizer.start();\r\n                }\r\n\r\n                return;\r\n            }\r\n            \r\n            // If running, always update BPM regardless of whether it changed\r\n            // This ensures new tracks get their correct BPM\r\n            rhythmEngine.setBPM(newBPM);\r\n            \r\n            // BPM is now shown visually through the beat histogram bars\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Register a subsystem's rhythm configuration\r\n     * Called when loading gestures, emotions, behaviors, etc.\r\n     */\r\n    registerConfig(type, name, config) {\r\n        if (!config.rhythm || !config.rhythm.enabled) return;\r\n        \r\n        const key = `${type}:${name}`;\r\n        this.subsystemConfigs.set(key, {\r\n            type,\r\n            name,\r\n            rhythmConfig: config.rhythm,\r\n            originalConfig: config\r\n        });\r\n        \r\n    }\r\n    \r\n    /**\r\n     * Apply rhythm modulation to a gesture\r\n     */\r\n    applyGestureRhythm(gesture, particle, progress, dt) {\r\n        if (!this.enabled || !gesture.rhythm?.enabled) return {};\r\n        \r\n        const timeInfo = this.adapter.getTimeInfo();\r\n        const rhythmConfig = gesture.rhythm;\r\n        const modulation = {};\r\n        \r\n        // Apply amplitude sync\r\n        if (rhythmConfig.amplitudeSync) {\r\n            const sync = rhythmConfig.amplitudeSync;\r\n            const beatSync = this.adapter.getBeatSync(\r\n                sync.offBeat || 0.8,\r\n                sync.onBeat || 1.5,\r\n                sync.curve || 'linear'\r\n            );\r\n            modulation.amplitudeMultiplier = beatSync;\r\n        }\r\n        \r\n        // Apply wobble sync\r\n        if (rhythmConfig.wobbleSync) {\r\n            const sync = rhythmConfig.wobbleSync;\r\n            if (this.adapter.isOnSubdivision(sync.subdivision, 0.1)) {\r\n                modulation.wobbleMultiplier = 1 + sync.intensity;\r\n            } else {\r\n                modulation.wobbleMultiplier = 1;\r\n            }\r\n        }\r\n        \r\n        // Apply accent response\r\n        if (rhythmConfig.accentResponse?.enabled) {\r\n            const accentedValue = this.adapter.getAccentedValue(\r\n                1,\r\n                rhythmConfig.accentResponse.multiplier || 1.5\r\n            );\r\n            modulation.accentMultiplier = accentedValue;\r\n        }\r\n        \r\n        // Apply pattern overrides\r\n        const currentPattern = this.adapter.getPattern();\r\n        if (currentPattern && rhythmConfig.patternOverrides?.[currentPattern]) {\r\n            Object.assign(modulation, rhythmConfig.patternOverrides[currentPattern]);\r\n        }\r\n        \r\n        return modulation;\r\n    }\r\n    \r\n    /**\r\n     * Apply rhythm modulation to particle emission\r\n     */\r\n    applyParticleRhythm(emotionState, particleSystem) {\r\n        if (!this.enabled || !emotionState.rhythm?.enabled) return {};\r\n        \r\n        const timeInfo = this.adapter.getTimeInfo();\r\n        const rhythmConfig = emotionState.rhythm;\r\n        const modulation = {};\r\n        \r\n        // Particle emission sync\r\n        if (rhythmConfig.particleEmission) {\r\n            const emission = rhythmConfig.particleEmission;\r\n            \r\n            if (emission.syncMode === 'beat' && this.adapter.isOnBeat(0.1)) {\r\n                // Emit burst on beat\r\n                modulation.emitBurst = emission.burstSize || 3;\r\n            } else if (emission.offBeatRate !== undefined) {\r\n                // Reduce emission between beats\r\n                modulation.emissionRate = emission.offBeatRate;\r\n            }\r\n        }\r\n        \r\n        // Glow sync\r\n        if (rhythmConfig.glowSync) {\r\n            const glow = rhythmConfig.glowSync;\r\n            const glowIntensity = this.adapter.getBeatSync(\r\n                glow.intensityRange[0] || 1.0,\r\n                glow.intensityRange[1] || 2.0,\r\n                'pulse'\r\n            );\r\n            modulation.glowIntensity = glowIntensity;\r\n        }\r\n        \r\n        // Breathing sync\r\n        if (rhythmConfig.breathSync?.mode === 'bars') {\r\n            const breath = rhythmConfig.breathSync;\r\n            const barsElapsed = timeInfo.bar % breath.barsPerBreath;\r\n            const breathProgress = barsElapsed / breath.barsPerBreath;\r\n            modulation.breathPhase = breathProgress * Math.PI * 2;\r\n        }\r\n        \r\n        return modulation;\r\n    }\r\n    \r\n    /**\r\n     * Apply rhythm to particle behavior\r\n     */\r\n    applyBehaviorRhythm(behavior, particle, dt) {\r\n        if (!this.enabled || !behavior.rhythm?.enabled) return {};\r\n        \r\n        const timeInfo = this.adapter.getTimeInfo();\r\n        const rhythmConfig = behavior.rhythm;\r\n        const modulation = {};\r\n        \r\n        // Glitch timing for glitchy behavior\r\n        if (rhythmConfig.glitchTiming) {\r\n            const glitch = rhythmConfig.glitchTiming;\r\n            const isOnSubdivision = this.adapter.isOnSubdivision(glitch.subdivision, 0.05);\r\n            \r\n            if (isOnSubdivision && Math.random() < glitch.probability) {\r\n                const intensity = this.adapter.isOnBeat() \r\n                    ? glitch.intensityOnBeat \r\n                    : glitch.intensityOffBeat;\r\n                modulation.triggerGlitch = true;\r\n                modulation.glitchIntensity = intensity;\r\n            }\r\n        }\r\n        \r\n        // Orbital rhythm\r\n        if (rhythmConfig.orbitRhythm) {\r\n            const orbit = rhythmConfig.orbitRhythm;\r\n            \r\n            if (orbit.baseSpeed === 'tempo') {\r\n                modulation.speedMultiplier = this.adapter.getBPM() / 120; // Normalize to 120 BPM\r\n            }\r\n            \r\n            if (orbit.beatAcceleration && this.adapter.isOnBeat(0.1)) {\r\n                modulation.speedBoost = orbit.beatAcceleration;\r\n            }\r\n            \r\n            if (orbit.barReset && timeInfo.beatInBar === 0) {\r\n                modulation.resetOrbit = true;\r\n            }\r\n        }\r\n        \r\n        // Stutter sync\r\n        if (rhythmConfig.stutterSync) {\r\n            const stutter = rhythmConfig.stutterSync;\r\n            const pattern = this.adapter.getPattern();\r\n            \r\n            if (pattern && stutter.patterns?.[pattern]) {\r\n                const patternConfig = stutter.patterns[pattern];\r\n                \r\n                if (patternConfig.freezeOnDrop && timeInfo.beatInBar === 2) {\r\n                    modulation.freeze = true;\r\n                    modulation.freezeDuration = patternConfig.dropDuration;\r\n                } else if (patternConfig.randomFreeze && Math.random() < patternConfig.randomFreeze) {\r\n                    modulation.freeze = true;\r\n                    modulation.freezeDuration = patternConfig.duration;\r\n                }\r\n            }\r\n        }\r\n        \r\n        return modulation;\r\n    }\r\n    \r\n    /**\r\n     * Handle beat event\r\n     */\r\n    handleBeat(beatInfo) {\r\n        // Store beat info for subsystems to access\r\n        this.lastBeatInfo = beatInfo;\r\n        \r\n        // Could trigger specific effects here if needed\r\n        // But mainly subsystems will query rhythm state during their update\r\n    }\r\n    \r\n    /**\r\n     * Handle bar event\r\n     */\r\n    handleBar(barInfo) {\r\n        // Store bar info for subsystems to access\r\n        this.lastBarInfo = barInfo;\r\n    }\r\n    \r\n    /**\r\n     * Get duration adjusted for musical time\r\n     */\r\n    getMusicalDuration(rhythmConfig, originalDuration) {\r\n        if (!this.enabled || !rhythmConfig?.durationSync) return originalDuration;\r\n        \r\n        const sync = rhythmConfig.durationSync;\r\n        \r\n        if (sync.mode === 'bars') {\r\n            return this.adapter.beatsToMs(sync.bars * 4); // Assuming 4/4 time\r\n        } else if (sync.mode === 'beats') {\r\n            return this.adapter.beatsToMs(sync.beats);\r\n        }\r\n        \r\n        return originalDuration;\r\n    }\r\n    \r\n    /**\r\n     * Check if rhythm is enabled globally\r\n     */\r\n    isEnabled() {\r\n        return this.enabled && this.adapter.isPlaying();\r\n    }\r\n    \r\n    /**\r\n     * Start rhythm playback\r\n     */\r\n    start(bpm = 120, pattern = 'straight') {\r\n        if (bpm) rhythmEngine.setBPM(bpm);\r\n        if (pattern) rhythmEngine.setPattern(pattern);\r\n        rhythmEngine.start();\r\n        this.enabled = true;\r\n    }\r\n    \r\n    /**\r\n     * Stop rhythm playback\r\n     */\r\n    stop() {\r\n        rhythmEngine.stop();\r\n        this.enabled = false;\r\n        // Unlock BPM when stopping\r\n        this.bpmLocked = false;\r\n        this.lockedBPM = null;\r\n    }\r\n    \r\n    /**\r\n     * Set rhythm pattern\r\n     */\r\n    setPattern(pattern) {\r\n        rhythmEngine.setPattern(pattern);\r\n    }\r\n    \r\n    /**\r\n     * Set BPM\r\n     */\r\n    setBPM(bpm) {\r\n        rhythmEngine.setBPM(bpm);\r\n        // Update the locked BPM if manually changed\r\n        if (this.bpmLocked) {\r\n            this.lockedBPM = bpm;\r\n            console.log('🔒 BPM manually updated to:', bpm);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Resample BPM - unlocks detection for one update\r\n     */\r\n    resampleBPM() {\r\n        console.log('🔓 Unlocking BPM for resampling');\r\n        this.bpmLocked = false;\r\n        this.lockedBPM = null;\r\n    }\r\n    \r\n    /**\r\n     * Set time signature from detected pattern\r\n     */\r\n    setTimeSignature(signature) {\r\n        this.timeSignature = signature;\r\n        \r\n        // Update UI if available\r\n        const timeSigDisplay = document.getElementById('time-sig-display');\r\n        if (timeSigDisplay) {\r\n            timeSigDisplay.textContent = signature;\r\n        }\r\n        \r\n        // Could update rhythm patterns based on time signature here\r\n        // For example, switch to waltz pattern for 3/4\r\n        if (signature === '3/4' && rhythmEngine.getPattern() !== 'waltz') {\r\n            // Could auto-switch to waltz pattern\r\n            // rhythmEngine.setPattern('waltz');\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Sync to external audio\r\n     */\r\n    syncToAudio(audioContext, audioSource) {\r\n        rhythmEngine.syncToAudio(audioContext, audioSource);\r\n    }\r\n}\r\n\r\n// Create singleton instance\r\nconst rhythmIntegration = new RhythmIntegration();\r\n\r\nexport { rhythmIntegration, RhythmIntegration };\r\nexport default rhythmIntegration;","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE - Gesture Motion Orchestrator\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Orchestrator for modular gesture system - replaces monolithic switch\n * @author Emotive Engine Team\n * @module gestures/GestureMotion\n * \n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                                   PURPOSE                                         \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ This orchestrator manages gesture application using the modular gesture system.   \n * ║ It replaces the old 538-line switch statement with clean, modular lookups.        \n * ║ Drop-in replacement for the old applyGestureMotion function.                      \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n */\n\nimport { getGesture, isBlendingGesture, isOverrideGesture } from './index.js';\nimport rhythmIntegration from '../rhythmIntegration.js';\n\n/**\n * Apply gesture motion to a particle using the modular system\n * This is a drop-in replacement for the old applyGestureMotion function\n * \n * @param {Particle} particle - The particle to animate\n * @param {number} dt - Delta time (normalized to 60fps)\n * @param {Object} motion - Gesture motion configuration\n * @param {number} progress - Gesture progress (0-1)\n * @param {number} centerX - Orb center X position\n * @param {number} centerY - Orb center Y position\n */\nexport function applyGestureMotion(particle, dt, motion, progress, centerX, centerY) {\n    // Validate inputs\n    if (!motion || !motion.type || progress >= 1) {\n        return;\n    }\n    \n    // Initialize gesture data if needed\n    if (!particle.gestureData) {\n        particle.gestureData = {\n            originalVx: particle.vx,\n            originalVy: particle.vy,\n            initialX: particle.x,\n            initialY: particle.y,\n            // For compatibility with gestures that expect these\n            startAngle: Math.atan2(particle.y - centerY, particle.x - centerX),\n            startRadius: Math.sqrt(Math.pow(particle.x - centerX, 2) + Math.pow(particle.y - centerY, 2))\n        };\n    }\n    \n    // Look up the gesture from registry\n    const gesture = getGesture(motion.type);\n    \n    if (!gesture) {\n        return;\n    }\n    \n    // Apply rhythm modulation if enabled\n    let rhythmModifiedMotion = motion;\n    if (rhythmIntegration.isEnabled() && gesture.rhythm?.enabled) {\n        const modulation = rhythmIntegration.applyGestureRhythm(gesture, particle, progress, dt);\n        \n        // Create modified motion with rhythm adjustments\n        rhythmModifiedMotion = {\n            ...motion,\n            amplitude: (motion.amplitude || 1) * (modulation.amplitudeMultiplier || 1) * (modulation.accentMultiplier || 1),\n            wobbleAmount: (motion.wobbleAmount || 0) * (modulation.wobbleMultiplier || 1),\n            // Allow rhythm to affect other parameters as needed\n            rhythmModulation: modulation\n        };\n    }\n    \n    // Apply the gesture using its modular implementation\n    if (gesture.apply) {\n        gesture.apply(particle, progress, rhythmModifiedMotion, dt, centerX, centerY);\n    }\n    \n    // Handle cleanup when gesture completes\n    if (progress >= 0.99 && gesture.cleanup) {\n        gesture.cleanup(particle);\n        // Reset gesture data for next gesture\n        particle.gestureData = null;\n    }\n}\n\n/**\n * Helper function to check if a gesture should override particle behavior\n * Used by Particle.js to determine update flow\n * \n * @param {string} gestureType - The gesture type name\n * @returns {boolean} True if gesture completely overrides particle motion\n */\nexport function isGestureOverriding(gestureType) {\n    return isOverrideGesture(gestureType);\n}\n\n/**\n * Helper function to check if a gesture blends with existing motion\n * Used by Particle.js to determine update flow\n * \n * @param {string} gestureType - The gesture type name\n * @returns {boolean} True if gesture blends with existing motion\n */\nexport function isGestureBlending(gestureType) {\n    return isBlendingGesture(gestureType);\n}\n\n/**\n * Get list of all available gesture types\n * Useful for debugging and UI generation\n * \n * @returns {Array<string>} Array of gesture type names\n */\nexport function getAvailableGestures() {\n    const gestures = [];\n    \n    // Import the registry to get all gestures\n    import('./index.js').then(module => {\n        const allGestures = module.listGestures();\n        allGestures.forEach(g => gestures.push(g.name));\n    });\n    \n    return gestures;\n}\n\n/**\n * Legacy compatibility layer\n * Maps old gesture motion configurations to new system\n * \n * @param {Object} motion - Old-style motion object\n * @returns {Object} Normalized motion object\n */\nfunction normalizeMotion(motion) {\n    // Handle legacy motion properties\n    const normalized = { ...motion };\n    \n    // Map legacy aliases to their primary gestures\n    if (motion.type === 'radial') {\n        normalized.type = 'pulse';\n    }\n    \n    if (motion.type === 'oscillate') {\n        normalized.type = 'bounce';\n        normalized.axis = motion.axis || 'vertical';\n    }\n    \n    if (motion.type === 'jitter') {\n        normalized.type = 'shake';\n    }\n    \n    return normalized;\n}\n\n/**\n * Main export - drop-in replacement for old applyGestureMotion\n * Includes legacy compatibility\n */\nexport default function(particle, dt, motion, progress, centerX, centerY) {\n    // Normalize motion for legacy compatibility\n    const normalizedMotion = normalizeMotion(motion);\n    \n    // Apply using modular system\n    applyGestureMotion(particle, dt, normalizedMotion, progress, centerX, centerY);\n}\n\n// Also export named function for clarity\nexport { applyGestureMotion as applyModularGestureMotion };","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Modular Particle System with 3D Depth\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Orchestrator for the modular particle system with z-coordinate depth\r\n * @author Emotive Engine Team\r\n * @module core/Particle-modular\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                               MODULAR ARCHITECTURE                                \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ This is a drop-in replacement for the original Particle.js                        \r\n * ║ Same API, but with modular architecture for easier maintenance                    \r\n * ║                                                                                    \r\n * ║ STRUCTURE:                                                                         \r\n * ║ - Particle class (this file) - orchestrates everything                            \r\n * ║ - particles/behaviors/* - behavior modules                                     \r\n * ║ - particles/config/* - configuration constants                                    \r\n * ║ - particles/utils/* - utility functions                                           \r\n * ║ - gestures/* - modular gesture system                                             \r\n * ║                                                                                    \r\n * ║ 3D DEPTH SYSTEM:                                                                   \r\n * ║ - Z-coordinate ranges from -1 (behind orb) to +1 (in front)                       \r\n * ║ - 1/13 particles spawn in foreground, 12/13 in background                         \r\n * ║ - Depth affects visual size (20% scaling based on z)                              \r\n * ║ - Foreground particles spawn with offset to prevent stacking                      \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n */\r\n\r\n// Import behaviors\r\nimport { initializeBehavior, updateBehavior } from './particles/behaviors/index.js';\r\n\r\n// Import utilities\r\nimport { selectWeightedColor } from './particles/utils/colorUtils.js';\r\n\r\n// Import config\r\nimport { PHYSICS } from './particles/config/physics.js';\r\n\r\n// Import gesture system - NOW USING MODULAR GESTURES!\r\nimport { \r\n    applyGestureMotion as applyFullGestureMotion,\r\n    isGestureOverriding,\r\n    isGestureBlending \r\n} from './gestures/GestureMotion.js';\r\n\r\n/**\r\n * Particle class - Individual particle with behavior and rendering\r\n * \r\n * LIFECYCLE:\r\n * 1. Created by ParticleSystem with position and behavior\r\n * 2. Initialized with behavior-specific properties\r\n * 3. Updated each frame (position, behavior, lifecycle)\r\n * 4. Rendered to canvas\r\n * 5. Removed when life reaches 0\r\n */\r\nclass Particle {\r\n    /**\r\n     * Creates a new particle with specific behavior and appearance\r\n     * \r\n     * @param {number} x - Starting X position on canvas\r\n     * @param {number} y - Starting Y position on canvas\r\n     * @param {string} behavior - Behavior type (ambient, rising, falling, etc.)\r\n     * @param {number} scaleFactor - Global scale multiplier (affects size/distance)\r\n     * @param {number} particleSizeMultiplier - Additional size multiplier\r\n     * @param {Array} emotionColors - Array of color options with weights\r\n     */\r\n    constructor(x, y, behavior = 'ambient', scaleFactor = 1, particleSizeMultiplier = 1, emotionColors = null) {\r\n        // Position and movement (now with z-coordinate for depth)\r\n        // 1/13 chance of being in front (z > 0), 12/13 chance of being behind (z < 0)\r\n        const zRoll = Math.random();\r\n        this.z = zRoll < (1/13) ? 0.5 + Math.random() * 0.5 : -1 + Math.random() * 0.9;\r\n        \r\n        // Add spawn offset to prevent stacking\r\n        // Much larger offset for foreground particles to completely avoid visual stacking\r\n        const spawnRadius = this.z > 0 ? (20 + Math.random() * 20) * scaleFactor : 3 * scaleFactor;\r\n        const angle = Math.random() * Math.PI * 2;\r\n        this.x = x + Math.cos(angle) * spawnRadius;\r\n        this.y = y + Math.sin(angle) * spawnRadius;\r\n        this.vx = 0;\r\n        this.vy = 0;\r\n        this.vz = 0; // For future 3D motion effects\r\n        \r\n        // Lifecycle\r\n        this.life = 0.0; // Start at 0 for fade-in\r\n        this.maxLife = 1.0;\r\n        this.lifeDecay = 0.01; // Life lost per frame\r\n        this.fadeInTime = 0.15; // 15% of life for fade-in\r\n        this.fadeOutTime = 0.3; // Last 30% of life for fade-out\r\n        this.isFadingOut = false; // Track if particle is in fade-out phase\r\n        this.age = 0; // Track particle age for smooth fading\r\n        \r\n        // Visual properties - matching original Emotive scale\r\n        this.scaleFactor = scaleFactor;\r\n        this.particleSizeMultiplier = particleSizeMultiplier;\r\n        this.size = (4 + Math.random() * 6) * scaleFactor * particleSizeMultiplier; // 4-10 pixels scaled\r\n        this.baseSize = this.size;\r\n        this.emotionColors = emotionColors; // Store emotion colors for use in behaviors\r\n        this.color = '#ffffff';\r\n        this.opacity = 1.0;\r\n        \r\n        // Glow properties - 1/3 of particles have glow with varying sizes\r\n        this.hasGlow = Math.random() < 0.333;  // 1/3 chance of glow\r\n        this.glowSizeMultiplier = this.hasGlow ? (1.33 + Math.random() * 0.33) : 0;  // 1.33x to 1.66x particle size\r\n        \r\n        // Cell shading - 1/3 of particles are cell shaded (cartoon style)\r\n        this.isCellShaded = Math.random() < 0.333;  // 1/3 chance of cell shading\r\n        \r\n        // Make particles more ephemeral\r\n        this.baseOpacity = 0.3 + Math.random() * 0.4;  // 30-70% max opacity for ethereal look\r\n        \r\n        // Color caching for performance\r\n        this.cachedColors = new Map(); // Cache RGBA strings\r\n        this.lastColor = null;\r\n        this.lastOpacity = -1;\r\n        \r\n        // Behavior properties\r\n        this.behavior = behavior;\r\n        this.behaviorData = {}; // Behavior-specific data\r\n        \r\n        // Gesture properties for motion system\r\n        this.gestureData = {\r\n            initialX: x,\r\n            initialY: y\r\n        };\r\n        \r\n        // Initialize behavior-specific properties\r\n        initializeBehavior(this, behavior);\r\n    }\r\n\r\n    /**\r\n     * Updates particle position and behavior\r\n     * @param {number} deltaTime - Time since last update in milliseconds\r\n     * @param {number} centerX - Center X coordinate for behavior calculations\r\n     * @param {number} centerY - Center Y coordinate for behavior calculations\r\n     * @param {Object} undertoneModifier - Optional undertone modifications\r\n     * @param {Object} gestureMotion - Optional gesture motion to apply\r\n     * @param {number} gestureProgress - Progress of the gesture (0-1)\r\n     */\r\n    update(deltaTime, centerX, centerY, undertoneModifier = null, gestureMotion = null, gestureProgress = 0) {\r\n        // Cap deltaTime to prevent huge jumps\r\n        const cappedDeltaTime = Math.min(deltaTime, 50);\r\n        // Normalize to 60 FPS equivalent for consistent physics\r\n        const dt = cappedDeltaTime / 16.67; // 16.67ms = 60 FPS frame time\r\n        \r\n        // Universal law: Gestures override state behavior based on their motion type\r\n        // Use the modular gesture system to determine gesture behavior\r\n        const gestureIsOverriding = gestureMotion && gestureMotion.type && gestureProgress > 0 && \r\n            isGestureOverriding(gestureMotion.type);\r\n        \r\n        if (gestureIsOverriding) {\r\n            // Gesture completely controls particle - skip normal behavior\r\n            this.applyGestureMotion(gestureMotion, gestureProgress, dt, centerX, centerY);\r\n        } else if (this.gestureBehavior === 'falling') {\r\n            // Rain gesture is active - use falling behavior instead of normal behavior\r\n            updateBehavior(this, 'falling', dt, centerX, centerY);\r\n        } else if (this.gestureBehavior === 'radiant') {\r\n            // Shimmer gesture is active - use radiant behavior for shimmering effect\r\n            updateBehavior(this, 'radiant', dt, centerX, centerY);\r\n        } else {\r\n            // Normal behavior update\r\n            updateBehavior(this, this.behavior, dt, centerX, centerY);\r\n            \r\n            // Don't apply undertone modifications to particle motion\r\n            // Undertones only affect color saturation and core behaviors\r\n            \r\n            // Apply non-overriding gesture motion if present\r\n            if (gestureMotion && gestureProgress > 0) {\r\n                this.applyGestureMotion(gestureMotion, gestureProgress, dt, centerX, centerY);\r\n            }\r\n        }\r\n        \r\n        // Apply velocity to position (unless gesture is directly controlling position)\r\n        if (!gestureIsOverriding) {\r\n            this.x += this.vx * dt;\r\n            this.y += this.vy * dt;\r\n        }\r\n        \r\n        // HARD BOUNDARY CONSTRAINTS - particles NEVER leave canvas\r\n        const canvasWidth = centerX * 2;\r\n        const canvasHeight = centerY * 2;\r\n        const margin = 20;\r\n        \r\n        // Bounce off boundaries\r\n        if (this.x - this.size < margin) {\r\n            this.x = margin + this.size;\r\n            this.vx = Math.abs(this.vx) * 0.5;\r\n        } else if (this.x + this.size > canvasWidth - margin) {\r\n            this.x = canvasWidth - margin - this.size;\r\n            this.vx = -Math.abs(this.vx) * 0.5;\r\n        }\r\n        \r\n        if (this.y - this.size < margin) {\r\n            this.y = margin + this.size;\r\n            this.vy = Math.abs(this.vy) * 0.5;\r\n        } else if (this.y + this.size > canvasHeight - margin) {\r\n            this.y = canvasHeight - margin - this.size;\r\n            this.vy = -Math.abs(this.vy) * 0.5;\r\n        }\r\n        \r\n        // Update age and life (EXACT COPY FROM ORIGINAL)\r\n        this.age += this.lifeDecay * dt;\r\n        \r\n        // Smooth fade-in at birth\r\n        if (this.age < this.fadeInTime) {\r\n            this.life = this.age / this.fadeInTime;\r\n        }\r\n        // Full opacity in middle of life\r\n        else if (this.age < (1.0 - this.fadeOutTime)) {\r\n            this.life = 1.0;\r\n        }\r\n        // Smooth fade-out at death\r\n        else {\r\n            this.life = (1.0 - this.age) / this.fadeOutTime;\r\n            this.isFadingOut = true;\r\n            \r\n            // Dynamic size reduction for popcorn during fade-out\r\n            if (this.behavior === 'popcorn') {\r\n                this.size = this.baseSize * (0.5 + 0.5 * this.life);\r\n            }\r\n        }\r\n        \r\n        this.life = Math.max(0, Math.min(1, this.life));\r\n        \r\n        // Update opacity with easing for extra smoothness\r\n        this.opacity = this.easeInOutCubic(this.life);\r\n        \r\n        // Update size based on life for some behaviors\r\n        if (this.behavior === 'burst' && this.behaviorData && this.life < this.behaviorData.fadeStart) {\r\n            this.size = this.baseSize * (this.life / this.behaviorData.fadeStart);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * DEPRECATED - Undertones no longer affect particle motion\r\n     * Kept for compatibility but does nothing\r\n     * @param {number} dt - Normalized delta time\r\n     * @param {Object} modifier - Undertone modifier settings\r\n     */\r\n    applyUndertoneModifier(dt, modifier) {\r\n        // Undertones no longer affect particles\r\n        // They only affect color saturation and core behaviors\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Apply gesture motion to particle\r\n     * @param {Object} motion - Gesture motion configuration\r\n     * @param {number} progress - Gesture progress (0-1)\r\n     * @param {number} dt - Normalized delta time\r\n     * @param {number} centerX - Orb center X\r\n     * @param {number} centerY - Orb center Y\r\n     */\r\n    applyGestureMotion(motion, progress, dt, centerX, centerY) {\r\n        // Use the full gesture system from the original\r\n        applyFullGestureMotion(this, dt, motion, progress, centerX, centerY);\r\n    }\r\n\r\n    /**\r\n     * Check if particle is out of bounds\r\n     * @param {number} width - Canvas width\r\n     * @param {number} height - Canvas height\r\n     * @returns {boolean} True if particle is out of bounds\r\n     */\r\n    isOutOfBounds(width, height) {\r\n        const margin = 50; // Allow some margin for particles to re-enter\r\n        return this.x < -margin || this.x > width + margin || \r\n               this.y < -margin || this.y > height + margin;\r\n    }\r\n\r\n    /**\r\n     * Check if particle is still alive\r\n     * @returns {boolean} True if particle life > 0\r\n     */\r\n    isAlive() {\r\n        return this.life > 0;\r\n    }\r\n\r\n    /**\r\n     * Set outward velocity for gesture effects\r\n     * @param {number} angle - Direction angle in radians\r\n     */\r\n    setOutwardVelocity(angle) {\r\n        if (this.behaviorData && this.behaviorData.outwardSpeed !== undefined) {\r\n            const speed = this.behaviorData.outwardSpeed;\r\n            this.vx = Math.cos(angle) * speed;\r\n            this.vy = Math.sin(angle) * speed + (this.behaviorData.upwardBias || 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get depth-adjusted size for 3D effect\r\n     * Particles farther away (negative z) appear smaller for depth perception\r\n     * \r\n     * @returns {number} Adjusted size based on z-depth\r\n     * \r\n     * DEPTH SCALING:\r\n     * - z = -1.0: 80% size (farthest back)\r\n     * - z =  0.0: 100% size (orb plane)\r\n     * - z = +1.0: 120% size (closest to viewer)\r\n     */\r\n    getDepthAdjustedSize() {\r\n        // Map z from [-1, 1] to scale [0.8, 1.2]\r\n        // Negative z (behind) = smaller, positive z (front) = larger\r\n        const depthScale = 1 + (this.z * 0.2);\r\n        return this.size * depthScale;\r\n    }\r\n    \r\n    /**\r\n     * Get particle state for debugging\r\n     * @returns {Object} Current particle state\r\n     */\r\n    getState() {\r\n        return {\r\n            position: { x: this.x, y: this.y, z: this.z },\r\n            velocity: { x: this.vx, y: this.vy, z: this.vz },\r\n            life: this.life,\r\n            behavior: this.behavior,\r\n            size: this.size,\r\n            opacity: this.opacity\r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n     * Reset particle for reuse from pool\r\n     * @param {number} x - New X position\r\n     * @param {number} y - New Y position\r\n     * @param {string} behavior - New behavior type\r\n     * @param {number} scaleFactor - Scale factor\r\n     * @param {number} particleSizeMultiplier - Size multiplier\r\n     * @param {Array} emotionColors - Emotion colors\r\n     */\r\n    reset(x, y, behavior = 'ambient', scaleFactor = 1, particleSizeMultiplier = 1, emotionColors = null) {\r\n        // 1/13 chance of being in front (z > 0), 12/13 chance of being behind (z < 0)\r\n        const zRoll = Math.random();\r\n        this.z = zRoll < (1/13) ? 0.5 + Math.random() * 0.5 : -1 + Math.random() * 0.9;\r\n        \r\n        // Add spawn offset to prevent stacking\r\n        // Much larger offset for foreground particles to completely avoid visual stacking\r\n        const spawnRadius = this.z > 0 ? (20 + Math.random() * 20) * scaleFactor : 3 * scaleFactor;\r\n        const angle = Math.random() * Math.PI * 2;\r\n        this.x = x + Math.cos(angle) * spawnRadius;\r\n        this.y = y + Math.sin(angle) * spawnRadius;\r\n        this.vx = 0;\r\n        this.vy = 0;\r\n        this.vz = 0;\r\n        this.life = 0.0;  // Start at 0 for fade-in\r\n        this.age = 0;  // Reset age\r\n        this.scaleFactor = scaleFactor;\r\n        this.particleSizeMultiplier = particleSizeMultiplier;\r\n        this.size = (4 + Math.random() * 6) * scaleFactor * particleSizeMultiplier;  // Scaled size\r\n        this.baseSize = this.size;\r\n        this.emotionColors = emotionColors;  // Store emotion colors\r\n        \r\n        // Clear cached colors for reuse\r\n        this.cachedColors.clear();\r\n        this.opacity = 0.0;  // Start invisible\r\n        this.isFadingOut = false;\r\n        this.baseOpacity = 0.3 + Math.random() * 0.4;  // Reset base opacity\r\n        this.color = '#ffffff';  // Reset color to white before reinitializing\r\n        this.behavior = behavior;\r\n        \r\n        // Clear gesture data if it exists\r\n        this.gestureData = null;\r\n        \r\n        // Reset behavior data\r\n        if (!this.behaviorData) {\r\n            this.behaviorData = {};\r\n        } else {\r\n            // Clear existing properties\r\n            for (let key in this.behaviorData) {\r\n                delete this.behaviorData[key];\r\n            }\r\n        }\r\n        \r\n        // Reinitialize behavior\r\n        initializeBehavior(this, behavior);\r\n    }\r\n\r\n    /**\r\n     * Get cached color string for performance\r\n     * @param {string} hexColor - Hex color code\r\n     * @param {number} opacity - Opacity value (0-1)\r\n     * @returns {string} RGBA color string\r\n     */\r\n    getCachedColor(hexColor, opacity) {\r\n        // Round opacity to reduce cache entries\r\n        const roundedOpacity = Math.round(opacity * 100) / 100;\r\n        const cacheKey = `${hexColor}_${roundedOpacity}`;\r\n        \r\n        if (!this.cachedColors.has(cacheKey)) {\r\n            this.cachedColors.set(cacheKey, this.hexToRgba(hexColor, roundedOpacity));\r\n        }\r\n        \r\n        return this.cachedColors.get(cacheKey);\r\n    }\r\n\r\n    /**\r\n     * Convert hex color to RGBA string\r\n     * @param {string} hex - Hex color code\r\n     * @param {number} alpha - Alpha value (0-1)\r\n     * @returns {string} RGBA color string\r\n     */\r\n    hexToRgba(hex, alpha) {\r\n        const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        if (!result) return `rgba(255, 255, 255, ${alpha})`;\r\n        \r\n        return `rgba(${parseInt(result[1], 16)}, ${parseInt(result[2], 16)}, ${parseInt(result[3], 16)}, ${alpha})`;\r\n    }\r\n\r\n    /**\r\n     * Cubic ease in/out function for smooth animations\r\n     * @param {number} t - Progress value (0-1)\r\n     * @returns {number} Eased value (0-1)\r\n     */\r\n    easeInOutCubic(t) {\r\n        return t < 0.5 \r\n            ? 4 * t * t * t \r\n            : 1 - Math.pow(-2 * t + 2, 3) / 2;\r\n    }\r\n\r\n    /**\r\n     * Render the particle to canvas\r\n     * @param {CanvasRenderingContext2D} ctx - Canvas context\r\n     * @param {string} emotionColor - Color to use for rendering\r\n     */\r\n    render(ctx, emotionColor = '#ffffff') {\r\n        if (this.life <= 0) return;\r\n        \r\n        // Validate position values to prevent rendering errors\r\n        if (!isFinite(this.x) || !isFinite(this.y)) {\r\n            return;\r\n        }\r\n        \r\n        // Use sub-pixel accurate coordinates for smooth rendering\r\n        const renderX = this.x;\r\n        const renderY = this.y;\r\n        \r\n        // Ensure size is never negative\r\n        const safeSize = Math.max(0.1, this.size);\r\n        \r\n        // Use the particle's own color if set, otherwise fall back to emotion color\r\n        const particleColor = this.tempColor || this.color || emotionColor;\r\n        \r\n        ctx.save();\r\n        \r\n        if (this.isCellShaded) {\r\n            // Cell shaded style - hard edges, no gradients\r\n            \r\n            // Draw outline (darker color)\r\n            ctx.strokeStyle = this.getCachedColor(particleColor, this.opacity * 0.9);\r\n            ctx.lineWidth = 2;\r\n            ctx.beginPath();\r\n            ctx.arc(renderX, renderY, safeSize, 0, Math.PI * 2);\r\n            ctx.stroke();\r\n            \r\n            // Draw flat color fill with discrete opacity levels\r\n            const discreteOpacity = Math.floor(this.opacity * 3) / 3;\r\n            ctx.fillStyle = this.getCachedColor(particleColor, discreteOpacity * (this.baseOpacity || 0.5) * 0.5);\r\n            ctx.beginPath();\r\n            ctx.arc(renderX, renderY, Math.max(0.1, safeSize - 1), 0, Math.PI * 2);\r\n            ctx.fill();\r\n            \r\n            // Add hard-edged highlight\r\n            if (discreteOpacity > 0.5) {\r\n                ctx.fillStyle = this.getCachedColor('#FFFFFF', 0.3);\r\n                ctx.beginPath();\r\n                ctx.arc(renderX - safeSize * 0.3, renderY - safeSize * 0.3, safeSize * 0.3, 0, Math.PI * 2);\r\n                ctx.fill();\r\n            }\r\n        } else {\r\n            // Standard gradient style\r\n            \r\n            // Create radial gradient for soft particle\r\n            const gradient = ctx.createRadialGradient(renderX, renderY, 0, renderX, renderY, safeSize);\r\n            \r\n            // Core is full opacity with base opacity applied\r\n            gradient.addColorStop(0, this.getCachedColor(particleColor, this.opacity * (this.baseOpacity || 0.5)));\r\n            // Mid fade\r\n            gradient.addColorStop(0.5, this.getCachedColor(particleColor, this.opacity * (this.baseOpacity || 0.5) * 0.5));\r\n            // Edge is transparent\r\n            gradient.addColorStop(1, this.getCachedColor(particleColor, 0));\r\n            \r\n            ctx.fillStyle = gradient;\r\n            ctx.beginPath();\r\n            ctx.arc(renderX, renderY, safeSize, 0, Math.PI * 2);\r\n            ctx.fill();\r\n            \r\n            // Add glow effect if enabled\r\n            if (this.hasGlow && this.glowSizeMultiplier > 0) {\r\n                const glowSize = safeSize * this.glowSizeMultiplier;\r\n                const glowGradient = ctx.createRadialGradient(renderX, renderY, safeSize * 0.5, renderX, renderY, glowSize);\r\n\r\n                // Make glow visible even when particles are subdued\r\n                // Use a minimum opacity for glow to ensure visibility\r\n                const minGlowOpacity = 0.3; // Minimum glow visibility\r\n                const particleOpacity = Math.max(minGlowOpacity, this.opacity);\r\n\r\n                // Scale glow intensity based on glowSizeMultiplier\r\n                // Higher multiplier = more intense glow (especially for gesture effects)\r\n                const glowIntensity = Math.min(1.0, this.glowSizeMultiplier / 3); // More aggressive scaling\r\n\r\n                // Create bright, visible glow with minimum opacity thresholds\r\n                glowGradient.addColorStop(0, this.getCachedColor(particleColor, Math.max(0.5, particleOpacity * 0.8) * glowIntensity));\r\n                glowGradient.addColorStop(0.25, this.getCachedColor(particleColor, Math.max(0.3, particleOpacity * 0.6) * glowIntensity));\r\n                glowGradient.addColorStop(0.5, this.getCachedColor(particleColor, Math.max(0.2, particleOpacity * 0.4) * glowIntensity));\r\n                glowGradient.addColorStop(0.75, this.getCachedColor(particleColor, Math.max(0.1, particleOpacity * 0.2) * glowIntensity));\r\n                glowGradient.addColorStop(1, this.getCachedColor(particleColor, 0));\r\n\r\n                // Use additive blending for brighter glow effect\r\n                ctx.save();\r\n                ctx.globalCompositeOperation = 'screen';\r\n                ctx.fillStyle = glowGradient;\r\n                ctx.beginPath();\r\n                ctx.arc(renderX, renderY, glowSize, 0, Math.PI * 2);\r\n                ctx.fill();\r\n                ctx.restore();\r\n            }\r\n        }\r\n        \r\n        ctx.restore();\r\n    }\r\n}\r\n\r\n// Export the Particle class as default\r\nexport default Particle;","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE\r\n *  └─○═╝                                                                             \r\n *                     ◐ ◑ ◒ ◓  PARTICLE SYSTEM  ◓ ◒ ◑ ◐                     \r\n *                                                                                    \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Particle System - Orchestrator of Emotional Atmosphere with 3D Depth\r\n * @author Emotive Engine Team\r\n * @version 2.4.0\r\n * @module ParticleSystem\r\n * @changelog 2.4.0 - Added z-coordinate depth system with split rendering layers\r\n * @changelog 2.3.0 - Batch rendering optimization for reduced state changes\r\n * @changelog 2.2.0 - Added undertone saturation system for dynamic particle depth\r\n * @changelog 2.1.0 - Added support for passing emotion colors to individual particles\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ The CONDUCTOR of particle chaos. Manages the lifecycle, behavior, and             \r\n * ║ performance of all particles. Uses object pooling to prevent memory leaks         \r\n * ║ and coordinates particles to create emotional atmospheres around the orb.         \r\n * ║                                                                                    \r\n * ║ NEW: Undertone saturation dynamically adjusts particle colors based on emotional  \r\n * ║ intensity, creating visual depth through saturation levels.                       \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ 🎭 SYSTEM FEATURES                                                                \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ • Object pooling for performance (reuse dead particles)                           \r\n * │ • Time-based spawning with accumulator                                            \r\n * │ • Automatic cleanup every 5 seconds                                               \r\n * │ • Memory leak detection and prevention                                            \r\n * │ • Dynamic particle limits based on emotion                                        \r\n * │ • 13 different particle behaviors                                                 \r\n * │ • Undertone-based saturation adjustments for particle colors                      \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ 🔄 OBJECT POOL STRATEGY                                                           \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ • Lazy initialization (create as needed)                                          \r\n * │ • Max pool size: 50 particles                                                     \r\n * │ • Reuse dead particles before creating new                                        \r\n * │ • Track pool hits/misses for optimization                                         \r\n * │ • Absolute max: 2x configured limit (prevents runaway)                            \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ 📊 PERFORMANCE LIMITS                                                             \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ • Default max particles  : 50                                                     \r\n * │ • Absolute max particles : 100 (2x default)                                       \r\n * │ • Pool size             : Min(maxParticles, 50)                                  \r\n * │ • Cleanup interval      : 5000ms                                                 \r\n * │ • Spawn rate            : Based on emotion config                                \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                              MEMORY MANAGEMENT                                    \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ Critical for preventing memory leaks:                                             \r\n * ║ 1. Reuse particles from pool when available                                       \r\n * ║ 2. Clear references when returning to pool                                        \r\n * ║ 3. Periodic cleanup of excess particles                                           \r\n * ║ 4. Track creation/destruction for leak detection                                  \r\n * ║ 5. Hard limits prevent runaway particle creation                                  \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * ════════════════════════════════════════════════════════════════════════════════════\r\n */\r\n\r\nimport Particle from './Particle.js';\r\nimport { applyUndertoneSaturationToArray } from '../utils/colorUtils.js';\r\nimport rhythmIntegration from './rhythmIntegration.js';\r\nimport { getEmotion } from './emotions/index.js';\r\n\r\nclass ParticleSystem {\r\n    constructor(maxParticles = 50, errorBoundary = null) {\r\n        this.errorBoundary = errorBoundary;\r\n        this.maxParticles = maxParticles;\r\n        this.absoluteMaxParticles = maxParticles * 2; // Hard limit to prevent leaks\r\n        \r\n        // Active particles\r\n        this.particles = [];\r\n        \r\n        // Object pool for performance - reduced to prevent memory buildup\r\n        this.pool = [];\r\n        this.poolSize = Math.min(maxParticles, 50); // Limit pool to max 50 particles\r\n        \r\n        // Memory leak detection\r\n        this.totalParticlesCreated = 0;\r\n        this.totalParticlesDestroyed = 0;\r\n        this.stateChangeCount = 0;\r\n        this.lastMemoryCheck = Date.now();\r\n        this.lastLeakedCount = 0;\r\n        \r\n        // TIME-BASED spawning using accumulation for smooth, consistent particle creation\r\n        this.spawnAccumulator = 0; // Accumulates time to spawn particles\r\n        \r\n        // Performance tracking\r\n        this.particleCount = 0;\r\n        this.poolHits = 0;\r\n        this.poolMisses = 0;\r\n        \r\n        // Cleanup timer to prevent memory buildup\r\n        this.cleanupTimer = 0;\r\n        this.cleanupInterval = 5000; // Clean up every 5 seconds\r\n        \r\n        // Initialize object pool\r\n        this.initializePool();\r\n        \r\n        // ParticleSystem initialized\r\n    }\r\n\r\n    /**\r\n     * Initialize the object pool with pre-created particles\r\n     */\r\n    initializePool() {\r\n        // Don't pre-create particles - create them lazily as needed\r\n        // This prevents memory buildup on initialization\r\n        this.pool = [];\r\n    }\r\n\r\n    /**\r\n     * Gets a particle from the pool or creates a new one\r\n     * @param {number} x - X position\r\n     * @param {number} y - Y position\r\n     * @param {string} behavior - Particle behavior type\r\n     * @returns {Particle} Particle instance\r\n     */\r\n    getParticleFromPool(x, y, behavior) {\r\n        let particle;\r\n        \r\n        if (this.pool.length > 0) {\r\n            // Reuse from pool\r\n            particle = this.pool.pop();\r\n            particle.reset(x, y, behavior, this.scaleFactor || 1, this.particleSizeMultiplier || 1, this.currentEmotionColors);\r\n            this.poolHits++;\r\n        } else {\r\n            // Create new particle\r\n            particle = new Particle(x, y, behavior, this.scaleFactor || 1, this.particleSizeMultiplier || 1, this.currentEmotionColors);\r\n            this.poolMisses++;\r\n            this.totalParticlesCreated++;\r\n        }\r\n        \r\n        // Set the emotion for behavior customization\r\n        particle.emotion = this.currentEmotion;\r\n        \r\n        // Apply gesture behavior if active (e.g., doppler for rain)\r\n        if (this.gestureBehavior) {\r\n            particle.gestureBehavior = this.gestureBehavior;\r\n        }\r\n        \r\n        return particle;\r\n    }\r\n\r\n    /**\r\n     * Returns a particle to the pool for reuse\r\n     * @param {Particle} particle - Particle to return to pool\r\n     */\r\n    returnParticleToPool(particle) {\r\n        if (this.pool.length < this.poolSize) {\r\n            // Clear references before pooling\r\n            particle.cachedGradient = null;\r\n            particle.cachedGradientKey = null;\r\n            // Clear behaviorData properties but keep the object\r\n            if (particle.behaviorData) {\r\n                for (let key in particle.behaviorData) {\r\n                    delete particle.behaviorData[key];\r\n                }\r\n            }\r\n            this.pool.push(particle);\r\n        } else {\r\n            // If pool is full, count as destroyed since it will be GC'd\r\n            this.totalParticlesDestroyed++;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Spawns particles based on emotional state and particle rate\r\n     * NEW APPROACH: Fixed timestep - only spawn at specific intervals\r\n     * \r\n     * @param {string} behavior - Particle behavior type (ambient, rising, falling, etc.)\r\n     * @param {string} emotion - Current emotional state\r\n     * @param {number} particleRate - Rate of particle spawning (particles per second at 60fps)\r\n     * @param {number} centerX - X coordinate of spawn center\r\n     * @param {number} centerY - Y coordinate of spawn center\r\n     * @param {number} deltaTime - Time since last frame in milliseconds\r\n     * @param {number|null} count - Force spawn this many particles (null for rate-based)\r\n     * @param {number} minParticles - Minimum particles to maintain\r\n     * @param {number} maxParticles - Maximum particles allowed\r\n     * @param {number} scaleFactor - Scale multiplier for particle sizes\r\n     * @param {number} particleSizeMultiplier - Additional size multiplier\r\n     * @param {Array|null} emotionColors - Array of color strings or weighted color objects\r\n     * @param {string|null} undertone - Emotional undertone for saturation adjustment\r\n     *                                   (intense, confident, nervous, clear, tired, subdued)\r\n     *                                   Affects particle color saturation to create depth\r\n     */\r\n    spawn(behavior, emotion, particleRate, centerX, centerY, deltaTime, count = null, minParticles = 0, maxParticles = 10, scaleFactor = 1, particleSizeMultiplier = 1, emotionColors = null, undertone = null) {\r\n        this.scaleFactor = scaleFactor; // Store for particle creation\r\n        this.particleSizeMultiplier = particleSizeMultiplier; // Store for particle sizing\r\n        if (this.errorBoundary) {\r\n            return this.errorBoundary.wrap(() => {\r\n                this._spawn(behavior, emotion, particleRate, centerX, centerY, deltaTime, count, minParticles, maxParticles, emotionColors, undertone);\r\n            }, 'particle-spawn')();\r\n        } else {\r\n            this._spawn(behavior, emotion, particleRate, centerX, centerY, deltaTime, count, minParticles, maxParticles, emotionColors, undertone);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Resets the spawn accumulator (for tab switches)\r\n     */\r\n    resetAccumulator() {\r\n        this.spawnAccumulator = 0;\r\n    }\r\n\r\n    /**\r\n     * Internal spawn implementation - TIME-BASED accumulation for smooth spawning\r\n     * \r\n     * Applies undertone saturation adjustments to particle colors before spawning.\r\n     * The saturation system creates visual depth:\r\n     * - Intense/Confident: Oversaturated colors appear to pop forward\r\n     * - Clear: Normal midtone colors sit in the middle ground  \r\n     * - Tired/Subdued: Desaturated colors recede into background\r\n     * \r\n     * This creates a natural transition as particles cycle through their lifecycle,\r\n     * with new particles spawning with current undertone saturation while existing\r\n     * particles maintain their original colors until expiration.\r\n     */\r\n    _spawn(behavior, emotion, particleRate, centerX, centerY, deltaTime, count, minParticles = 0, maxParticles = 10, emotionColors = null, undertone = null) {\r\n        // Store emotion for particle initialization\r\n        this.currentEmotion = emotion;\r\n        \r\n        // Debug logging for excited emotion\r\n        if (emotion === 'excited' && !this._excitedDebugLogged) {\r\n            console.log('[ParticleSystem] Excited emotion spawn:', {\r\n                behavior,\r\n                emotion,\r\n                particleRate,\r\n                minParticles,\r\n                maxParticles,\r\n                emotionColors,\r\n                currentParticleCount: this.particles.length\r\n            });\r\n            this._excitedDebugLogged = true;\r\n            setTimeout(() => { this._excitedDebugLogged = false; }, 5000); // Reset after 5 seconds\r\n        }\r\n        \r\n        // Store base colors and undertone separately to ensure consistent application\r\n        this.baseEmotionColors = emotionColors;\r\n        this.currentUndertone = undertone;\r\n        \r\n        // Apply undertone saturation to emotion colors for all particles\r\n        // This adjustment persists for the lifetime of each particle, creating\r\n        // smooth visual transitions as particles naturally cycle\r\n        this.currentEmotionColors = emotionColors && undertone ? \r\n            applyUndertoneSaturationToArray(emotionColors, undertone) : \r\n            emotionColors;\r\n        \r\n        // Apply rhythm modulation if enabled\r\n        let rhythmModulatedRate = particleRate;\r\n        if (rhythmIntegration.isEnabled()) {\r\n            const emotionConfig = getEmotion(emotion);\r\n            if (emotionConfig) {\r\n                const modulation = rhythmIntegration.applyParticleRhythm(emotionConfig, this);\r\n                \r\n                // Apply emission burst on beat\r\n                if (modulation.emitBurst) {\r\n                    for (let i = 0; i < modulation.emitBurst && this.particles.length < maxParticles; i++) {\r\n                        this.spawnSingleParticle(behavior, centerX, centerY);\r\n                    }\r\n                }\r\n                \r\n                // Modulate emission rate\r\n                if (modulation.emissionRate !== undefined) {\r\n                    rhythmModulatedRate *= modulation.emissionRate;\r\n                }\r\n            }\r\n        }\r\n        \r\n        \r\n        // If specific count is provided, spawn that many\r\n        if (count !== null) {\r\n            for (let i = 0; i < count && this.particles.length < this.maxParticles; i++) {\r\n                this.spawnSingleParticle(behavior, centerX, centerY);\r\n            }\r\n            return;\r\n        }\r\n        \r\n        // Skip spawning if frame rate is too low (performance optimization)\r\n        if (this.skipSpawnThisFrame) {\r\n            return;\r\n        }\r\n        \r\n        // Always maintain minimum particles\r\n        while (this.particles.length < minParticles && this.particles.length < this.maxParticles) {\r\n            this.spawnSingleParticle(behavior, centerX, centerY);\r\n        }\r\n        \r\n        // If we're at or above max for this emotion, don't spawn more\r\n        if (this.particles.length >= maxParticles) {\r\n            return;\r\n        }\r\n        \r\n        // Don't spawn if rate is 0\r\n        if (rhythmModulatedRate <= 0) return;\r\n        \r\n        // TIME-BASED SPAWNING using accumulation\r\n        // rhythmModulatedRate represents desired particles at 60 FPS\r\n        // So rate of 1 = 1 particle per 60 frames = 1 particle per second at 60fps\r\n        // Cap deltaTime to prevent huge accumulation spikes\r\n        const cappedDeltaTime = Math.min(deltaTime, 50);\r\n        const particlesPerSecond = rhythmModulatedRate; // Direct mapping: rate = particles/second\r\n        const particlesPerMs = particlesPerSecond / 1000;\r\n        \r\n        // Accumulate spawn time with capped delta\r\n        this.spawnAccumulator += particlesPerMs * cappedDeltaTime;\r\n        \r\n        // Cap accumulator to prevent excessive spawning after long pauses\r\n        this.spawnAccumulator = Math.min(this.spawnAccumulator, 3.0);\r\n        \r\n        // Spawn accumulated particles smoothly\r\n        while (this.spawnAccumulator >= 1.0 && this.particles.length < maxParticles) {\r\n            this.spawnSingleParticle(behavior, centerX, centerY);\r\n            this.spawnAccumulator -= 1.0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Spawns a single particle with the specified behavior\r\n     * @param {string} behavior - Particle behavior type\r\n     * @param {number} centerX - Center X coordinate\r\n     * @param {number} centerY - Center Y coordinate\r\n     */\r\n    spawnSingleParticle(behavior, centerX, centerY) {\r\n        // Hard limit check to prevent memory leaks\r\n        if (this.particles.length >= this.absoluteMaxParticles) {\r\n            return;\r\n        }\r\n        \r\n        // Calculate spawn position based on behavior\r\n        let spawnPos = this.getSpawnPosition(behavior, centerX, centerY);\r\n        \r\n        // CLAMP spawn position to canvas boundaries\r\n        const clampedPos = this.clampToCanvas(spawnPos.x, spawnPos.y, centerX, centerY);\r\n        spawnPos.x = clampedPos.x;\r\n        spawnPos.y = clampedPos.y;\r\n        \r\n        // Get particle from pool\r\n        const particle = this.getParticleFromPool(spawnPos.x, spawnPos.y, behavior);\r\n        \r\n        // Pass additional data for meditation_swirl\r\n        if (behavior === 'meditation_swirl' && spawnPos.palmCenter) {\r\n            particle.palmCenter = spawnPos.palmCenter;\r\n            particle.swirlAngle = spawnPos.swirlAngle;\r\n        }\r\n        \r\n        // Add to active particles\r\n        this.particles.push(particle);\r\n        this.particleCount++;\r\n        \r\n        // Debug logging disabled to prevent console spam\r\n        // Only uncomment for debugging particle spawning issues\r\n        // if (this.particleCount <= 3) {\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * Calculates spawn position based on behavior type\r\n     * @param {string} behavior - Particle behavior type\r\n     * @param {number} centerX - Center X coordinate\r\n     * @param {number} centerY - Center Y coordinate\r\n     * @returns {Object} Spawn position {x, y}\r\n     */\r\n    getSpawnPosition(behavior, centerX, centerY) {\r\n        // Calculate orb radius based on canvas size (matching EmotiveRenderer)\r\n        const canvasSize = Math.min(centerX * 2, centerY * 2);\r\n        const orbRadius = canvasSize / 12;  // Core radius\r\n        const glowRadius = orbRadius * 2.5; // Glow extends this far\r\n        \r\n        // CONSTRAIN spawn positions to stay within canvas boundaries\r\n        const canvasWidth = centerX * 2;\r\n        const canvasHeight = centerY * 2;\r\n        const margin = 30; // Keep spawns away from edges\r\n        \r\n        // Spawn particles outside the glow radius so they're visible\r\n        const minSpawnRadius = glowRadius * 1.1; // 10% beyond glow edge\r\n        const maxSpawnRadius = Math.min(glowRadius * 1.5, \r\n            centerX - margin, centerY - margin); // Constrain to canvas\r\n        \r\n        switch (behavior) {\r\n            case 'ambient':\r\n            case 'resting':\r\n                // Spawn at edge of glow where particles become visible\r\n                // They'll move outward to create \"emanating from center\" effect\r\n                const ambientAngle = Math.random() * Math.PI * 2;\r\n                const ambientRadius = glowRadius * 0.9; // Just at glow edge\r\n                return {\r\n                    x: centerX + Math.cos(ambientAngle) * ambientRadius,\r\n                    y: centerY + Math.sin(ambientAngle) * ambientRadius,\r\n                    angle: ambientAngle  // Pass angle for outward velocity\r\n                };\r\n                \r\n            case 'rising':\r\n            case 'falling':\r\n                // These can spawn from outside for visibility\r\n                const angle = Math.random() * Math.PI * 2;\r\n                const radius = minSpawnRadius + Math.random() * (maxSpawnRadius - minSpawnRadius);\r\n                return {\r\n                    x: centerX + Math.cos(angle) * radius,\r\n                    y: centerY + Math.sin(angle) * radius\r\n                };\r\n                \r\n            case 'aggressive':\r\n                // Spawn just outside the glow for aggressive burst effect\r\n                const aggressiveAngle = Math.random() * Math.PI * 2;\r\n                const aggressiveRadius = glowRadius + Math.random() * orbRadius;\r\n                return {\r\n                    x: centerX + Math.cos(aggressiveAngle) * aggressiveRadius,\r\n                    y: centerY + Math.sin(aggressiveAngle) * aggressiveRadius\r\n                };\r\n                \r\n            case 'scattering':\r\n                // Spawn at center for outward movement (scattering needs this)\r\n                return { x: centerX, y: centerY };\r\n                \r\n            case 'burst':\r\n                // Spawn at edge of orb so particles are visible\r\n                const burstAngle = Math.random() * Math.PI * 2;\r\n                if (this.currentEmotion === 'suspicion') {\r\n                    const burstRadius = orbRadius * 1.5; // Further outside for suspicion\r\n                    return {\r\n                        x: centerX + Math.cos(burstAngle) * burstRadius,\r\n                        y: centerY + Math.sin(burstAngle) * burstRadius\r\n                    };\r\n                } else if (this.currentEmotion === 'surprise') {\r\n                    // Surprise spawns around the orb edge for visibility\r\n                    const burstRadius = orbRadius * 1.2; // Just outside the orb\r\n                    return {\r\n                        x: centerX + Math.cos(burstAngle) * burstRadius,\r\n                        y: centerY + Math.sin(burstAngle) * burstRadius\r\n                    };\r\n                } else {\r\n                    // Other emotions spawn at center\r\n                    return { x: centerX, y: centerY };\r\n                }\r\n                \r\n            case 'repelling':\r\n                // Spawn at edge of glow so particles are visible\r\n                const repelAngle = Math.random() * Math.PI * 2;\r\n                const repelRadius = glowRadius * 0.9; // Just at glow edge\r\n                return {\r\n                    x: centerX + Math.cos(repelAngle) * repelRadius,\r\n                    y: centerY + Math.sin(repelAngle) * repelRadius\r\n                };\r\n                \r\n            case 'orbiting':\r\n                // Spawn at orbital distance outside the glow\r\n                const orbitAngle = Math.random() * Math.PI * 2;\r\n                const orbitRadius = glowRadius * 1.2 + Math.random() * glowRadius * 0.5;\r\n                return {\r\n                    x: centerX + Math.cos(orbitAngle) * orbitRadius,\r\n                    y: centerY + Math.sin(orbitAngle) * orbitRadius\r\n                };\r\n                \r\n            default:\r\n                return { x: centerX, y: centerY };\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Clamps a position to stay within canvas boundaries\r\n     */\r\n    clampToCanvas(x, y, centerX, centerY, margin = 30) {\r\n        const canvasWidth = centerX * 2;\r\n        const canvasHeight = centerY * 2;\r\n        return {\r\n            x: Math.max(margin, Math.min(canvasWidth - margin, x)),\r\n            y: Math.max(margin, Math.min(canvasHeight - margin, y))\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Updates all particles and manages lifecycle\r\n     * @param {number} deltaTime - Time since last update in milliseconds\r\n     * @param {number} centerX - Center X coordinate for behavior calculations\r\n     * @param {number} centerY - Center Y coordinate for behavior calculations\r\n     * @param {Object} gestureMotion - Optional gesture motion to apply\r\n     * @param {number} gestureProgress - Progress of gesture (0-1)\r\n     * @param {Object} undertoneModifier - Optional undertone modifications\r\n     */\r\n    update(deltaTime, centerX, centerY, gestureMotion = null, gestureProgress = 0, undertoneModifier = null) {\r\n        if (this.errorBoundary) {\r\n            const wrappedUpdate = this.errorBoundary.wrap(\r\n                (dt, cx, cy, gm, gp, um) => this._update(dt, cx, cy, gm, gp, um), \r\n                'particle-update'\r\n            );\r\n            return wrappedUpdate(deltaTime, centerX, centerY, gestureMotion, gestureProgress, undertoneModifier);\r\n        } else {\r\n            this._update(deltaTime, centerX, centerY, gestureMotion, gestureProgress, undertoneModifier);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Internal update implementation\r\n     */\r\n    _update(deltaTime, centerX, centerY, gestureMotion = null, gestureProgress = 0, undertoneModifier = null) {\r\n        // Update cleanup timer\r\n        this.cleanupTimer += deltaTime;\r\n        \r\n        // Periodic cleanup to prevent memory buildup\r\n        if (this.cleanupTimer >= this.cleanupInterval) { // Clean up every 5 seconds\r\n            this.performCleanup();\r\n            this.cleanupTimer = 0;\r\n        }\r\n        \r\n        // Memory leak detection - log every 30 seconds (reduced frequency)\r\n        if (Date.now() - this.lastMemoryCheck > 30000) {\r\n            const leaked = this.totalParticlesCreated - this.totalParticlesDestroyed;\r\n            // Only warn if leak is significant and growing\r\n            if (leaked > 200 && leaked > this.lastLeakedCount + 50) {\r\n                this.lastLeakedCount = leaked;\r\n            }\r\n            this.lastMemoryCheck = Date.now();\r\n        }\r\n        \r\n        // Update all particles\r\n        for (let i = this.particles.length - 1; i >= 0; i--) {\r\n            const particle = this.particles[i];\r\n            \r\n            // Update particle with gesture motion and undertone modifier\r\n            particle.update(deltaTime, centerX, centerY, undertoneModifier, gestureMotion, gestureProgress);\r\n            \r\n            // Remove dead particles\r\n            if (!particle.isAlive()) {\r\n                this.removeParticle(i);\r\n            }\r\n        }\r\n        \r\n        // Enforce particle limit by removing oldest if necessary\r\n        while (this.particles.length > this.maxParticles) {\r\n            this.removeParticle(0); // Remove oldest (first in array)\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set a temporary gesture behavior for particles\r\n     * @param {string} behaviorName - Name of the behavior (e.g., 'doppler')\r\n     * @param {boolean} active - Whether the behavior is active\r\n     */\r\n    setGestureBehavior(behaviorName, active) {\r\n        this.gestureBehavior = active ? behaviorName : null;\r\n        \r\n        // Apply gesture behavior to existing particles\r\n        if (active) {\r\n            this.particles.forEach(particle => {\r\n                particle.gestureBehavior = behaviorName;\r\n            });\r\n        } else {\r\n            // Clear gesture behavior from particles\r\n            this.particles.forEach(particle => {\r\n                particle.gestureBehavior = null;\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Removes a particle at the specified index\r\n     * @param {number} index - Index of particle to remove\r\n     */\r\n    removeParticle(index) {\r\n        if (index >= 0 && index < this.particles.length) {\r\n            const particle = this.particles.splice(index, 1)[0];\r\n            // Clear any cached data before returning to pool\r\n            particle.cachedGradient = null;\r\n            particle.cachedGradientKey = null;\r\n            // Don't set behaviorData to null - let reset handle it properly\r\n            this.returnParticleToPool(particle);\r\n            this.particleCount = Math.max(0, this.particleCount - 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Renders all particles to the canvas context\r\n     * @param {CanvasRenderingContext2D} ctx - Canvas rendering context\r\n     * @param {string} emotionColor - Color to use for particle rendering\r\n     * @param {Object} gestureTransform - Optional gesture transform data\r\n     */\r\n    render(ctx, emotionColor = '#ffffff', gestureTransform = null) {\r\n        if (this.errorBoundary) {\r\n            return this.errorBoundary.wrap(() => {\r\n                this._render(ctx, emotionColor, gestureTransform);\r\n            }, 'particle-render')();\r\n        } else {\r\n            this._render(ctx, emotionColor, gestureTransform);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Renders particles in the background layer (behind orb)\r\n     * Particles with z < 0 are rendered, appearing smaller based on depth\r\n     * \r\n     * @param {CanvasRenderingContext2D} ctx - Canvas rendering context\r\n     * @param {string} emotionColor - Color to use for particle rendering\r\n     * \r\n     * LAYER DISTRIBUTION:\r\n     * - ~92% of particles render in background (z < 0)\r\n     * - Particles scale from 80% to 100% size based on z-depth\r\n     */\r\n    renderBackground(ctx, emotionColor = '#ffffff', gestureTransform = null) {\r\n        if (this.errorBoundary) {\r\n            return this.errorBoundary.wrap(() => {\r\n                this._renderLayer(ctx, emotionColor, false, gestureTransform); // false = background (z < 0)\r\n            }, 'particle-render-bg')();\r\n        } else {\r\n            this._renderLayer(ctx, emotionColor, false, gestureTransform);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Renders particles in the foreground layer (in front of orb)\r\n     * Particles with z >= 0 are rendered, appearing larger based on depth\r\n     * \r\n     * @param {CanvasRenderingContext2D} ctx - Canvas rendering context\r\n     * @param {string} emotionColor - Color to use for particle rendering\r\n     * \r\n     * LAYER DISTRIBUTION:\r\n     * - ~8% of particles render in foreground (z >= 0) \r\n     * - Particles scale from 100% to 120% size based on z-depth\r\n     * - Spawn with offset to prevent visual stacking\r\n     */\r\n    renderForeground(ctx, emotionColor = '#ffffff', gestureTransform = null) {\r\n        if (this.errorBoundary) {\r\n            return this.errorBoundary.wrap(() => {\r\n                this._renderLayer(ctx, emotionColor, true, gestureTransform); // true = foreground (z >= 0)\r\n            }, 'particle-render-fg')();\r\n        } else {\r\n            this._renderLayer(ctx, emotionColor, true, gestureTransform);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Internal render implementation for a specific layer\r\n     * @param {CanvasRenderingContext2D} ctx - Canvas rendering context\r\n     * @param {string} emotionColor - Color to use for particle rendering\r\n     * @param {boolean} isForeground - true for foreground (z >= 0), false for background (z < 0)\r\n     */\r\n    _renderLayer(ctx, emotionColor, isForeground, gestureTransform = null) {\r\n        // Sort particles by rendering properties to minimize state changes\r\n        const visibleParticles = [];\r\n        \r\n        // First pass: cull off-screen, dead, and wrong-layer particles\r\n        const margin = 50;\r\n        const canvasWidth = ctx.canvas.width;\r\n        const canvasHeight = ctx.canvas.height;\r\n        \r\n        for (const particle of this.particles) {\r\n            // Filter by z-layer\r\n            const particleInForeground = particle.z >= 0;\r\n            if (particleInForeground !== isForeground) {\r\n                continue; // Skip particles in wrong layer\r\n            }\r\n            \r\n            // Skip off-screen particles (culling)\r\n            if (particle.x < -margin || particle.x > canvasWidth + margin ||\r\n                particle.y < -margin || particle.y > canvasHeight + margin) {\r\n                continue;\r\n            }\r\n            \r\n            // Skip dead particles\r\n            if (particle.life <= 0) continue;\r\n            \r\n            visibleParticles.push(particle);\r\n        }\r\n        \r\n        // Sort by render type to minimize state changes\r\n        visibleParticles.sort((a, b) => {\r\n            if (a.isCellShaded !== b.isCellShaded) {\r\n                return a.isCellShaded ? -1 : 1;\r\n            }\r\n            if (a.hasGlow !== b.hasGlow) {\r\n                return a.hasGlow ? -1 : 1;\r\n            }\r\n            return 0;\r\n        });\r\n        \r\n        // Actually render the particles\r\n        this._renderParticles(ctx, visibleParticles, emotionColor, gestureTransform);\r\n    }\r\n    \r\n    /**\r\n     * Internal render implementation - batch optimized rendering (legacy, renders all)\r\n     */\r\n    _render(ctx, emotionColor, gestureTransform = null) {\r\n        // Sort particles by rendering properties to minimize state changes\r\n        const visibleParticles = [];\r\n        \r\n        // First pass: cull off-screen and dead particles\r\n        const margin = 50;\r\n        const canvasWidth = ctx.canvas.width;\r\n        const canvasHeight = ctx.canvas.height;\r\n        \r\n        for (const particle of this.particles) {\r\n            // Skip off-screen particles (culling)\r\n            if (particle.x < -margin || particle.x > canvasWidth + margin ||\r\n                particle.y < -margin || particle.y > canvasHeight + margin) {\r\n                continue;\r\n            }\r\n            \r\n            // Skip dead particles\r\n            if (particle.life <= 0) continue;\r\n            \r\n            visibleParticles.push(particle);\r\n        }\r\n        \r\n        // Sort by render type to minimize state changes\r\n        // Group: cellShaded first, then by hasGlow, then by color\r\n        visibleParticles.sort((a, b) => {\r\n            if (a.isCellShaded !== b.isCellShaded) {\r\n                return a.isCellShaded ? -1 : 1;\r\n            }\r\n            if (a.hasGlow !== b.hasGlow) {\r\n                return a.hasGlow ? -1 : 1;\r\n            }\r\n            // Group by color to reduce fillStyle changes\r\n            const colorA = a.color || emotionColor;\r\n            const colorB = b.color || emotionColor;\r\n            if (colorA !== colorB) {\r\n                return colorA < colorB ? -1 : 1;\r\n            }\r\n            return 0;\r\n        });\r\n        \r\n        // Actually render the particles\r\n        this._renderParticles(ctx, visibleParticles, emotionColor, gestureTransform);\r\n    }\r\n    \r\n    /**\r\n     * Render a list of particles with batch optimization\r\n     * @param {CanvasRenderingContext2D} ctx - Canvas rendering context\r\n     * @param {Array} visibleParticles - Array of particles to render\r\n     * @param {string} emotionColor - Color to use for particle rendering\r\n     * @param {Object} gestureTransform - Optional gesture transform data\r\n     */\r\n    _renderParticles(ctx, visibleParticles, emotionColor, gestureTransform = null) {\r\n        // Batch render with minimized state changes\r\n        ctx.save();\r\n        let lastFillStyle = null;\r\n        let lastStrokeStyle = null;\r\n        let lastLineWidth = null;\r\n\r\n        for (const particle of visibleParticles) {\r\n            // For cell-shaded, use original render (they need complex stroke/fill combos)\r\n            if (particle.isCellShaded) {\r\n                particle.render(ctx, emotionColor);\r\n                // Reset cached values since particle.render may have changed them\r\n                lastFillStyle = null;\r\n                lastStrokeStyle = null;\r\n                lastLineWidth = null;\r\n            } else {\r\n                // Batch-optimized rendering for regular particles\r\n                const particleColor = particle.color || emotionColor;\r\n                \r\n                // Only set fillStyle if it changed\r\n                if (particleColor !== lastFillStyle) {\r\n                    ctx.fillStyle = particleColor;\r\n                    lastFillStyle = particleColor;\r\n                }\r\n                \r\n                // Validate position once\r\n                if (!isFinite(particle.x) || !isFinite(particle.y)) continue;\r\n                \r\n                // Use depth-adjusted size if particle has the method\r\n                const depthSize = particle.getDepthAdjustedSize ? particle.getDepthAdjustedSize() : particle.size;\r\n                const safeSize = Math.max(0.1, depthSize);\r\n                \r\n                // Apply firefly effect if sparkle gesture is active\r\n                let fireflyGlow = 1.0;\r\n                if (gestureTransform && gestureTransform.fireflyEffect) {\r\n                    // Each particle gets unique phase for async firefly blinking\r\n                    const particlePhase = (particle.x * 0.01 + particle.y * 0.01 + particle.size * 0.1) % (Math.PI * 2);\r\n                    const time = gestureTransform.fireflyTime || (Date.now() * 0.001);\r\n                    const intensity = gestureTransform.particleGlow || 2.0;\r\n                    \r\n                    // Create firefly pulse pattern\r\n                    fireflyGlow = 0.3 + Math.max(0, Math.sin(time * 3 + particlePhase)) * intensity;\r\n                }\r\n                \r\n                // Apply flicker effect if flicker gesture is active (now does particle shimmer)\r\n                if (gestureTransform && gestureTransform.flickerEffect) {\r\n                    // Each particle shimmers with a wave pattern\r\n                    const particlePhase = (particle.x * 0.02 + particle.y * 0.02) % (Math.PI * 2);\r\n                    const time = gestureTransform.flickerTime || (Date.now() * 0.001);\r\n                    const intensity = gestureTransform.particleGlow || 2.0;\r\n                    \r\n                    // Create shimmer wave pattern - faster oscillation\r\n                    fireflyGlow = 0.5 + Math.sin(time * 12 + particlePhase) * intensity * 0.5;\r\n                }\r\n                \r\n                // Apply shimmer effect if shimmer gesture is active (subtle glow)\r\n                if (gestureTransform && gestureTransform.shimmerEffect) {\r\n                    // Each particle gets a subtle brightness variation based on distance from center\r\n                    const dx = particle.x - (ctx.canvas.width / 2);\r\n                    const dy = particle.y - (ctx.canvas.height / 2);\r\n                    const distance = Math.sqrt(dx * dx + dy * dy);\r\n                    const normalizedDistance = distance / 200; // Normalize to reasonable range\r\n                    \r\n                    const time = gestureTransform.shimmerTime || (Date.now() * 0.001);\r\n                    const wave = gestureTransform.shimmerWave || 0;\r\n                    const intensity = gestureTransform.particleGlow || 1.2;\r\n                    \r\n                    // Subtle traveling wave from center outward\r\n                    const travelingWave = Math.sin(time * 3 - normalizedDistance + wave);\r\n                    \r\n                    // Very subtle glow modulation\r\n                    fireflyGlow = 1 + travelingWave * 0.15 * intensity;\r\n                }\r\n                \r\n                // Apply glow effect if glow gesture is active (radiant burst)\r\n                if (gestureTransform && gestureTransform.glowEffect) {\r\n                    const envelope = gestureTransform.glowEnvelope || 0;\r\n                    const progress = gestureTransform.glowProgress || 0;\r\n                    const intensity = gestureTransform.particleGlow || 2.0;\r\n\r\n                    // Particles brighten based on distance - closer particles glow first\r\n                    const dx = particle.x - (ctx.canvas.width / 2);\r\n                    const dy = particle.y - (ctx.canvas.height / 2);\r\n                    const distance = Math.sqrt(dx * dx + dy * dy);\r\n                    const normalizedDistance = distance / 300;\r\n\r\n                    // Glow radiates outward\r\n                    const radiateDelay = Math.min(normalizedDistance * 0.3, 0.5);\r\n                    const localProgress = Math.max(0, (progress - radiateDelay) / (1 - radiateDelay));\r\n                    const localEnvelope = Math.sin(localProgress * Math.PI);\r\n\r\n                    // ACTUALLY MAKE PARTICLES GLOW by temporarily setting glow properties\r\n                    // Store original values if not already stored\r\n                    if (!particle._originalGlow) {\r\n                        particle._originalGlow = {\r\n                            hasGlow: particle.hasGlow,\r\n                            glowSizeMultiplier: particle.glowSizeMultiplier || 0\r\n                        };\r\n                    }\r\n\r\n                    // Enable glow and set a large multiplier for visibility\r\n                    particle.hasGlow = true;\r\n                    particle.glowSizeMultiplier = Math.max(3.0, particle._originalGlow.glowSizeMultiplier) + localEnvelope * intensity * 3;\r\n\r\n                    // Also boost particle size slightly\r\n                    const glowSizeBoost = 1 + localEnvelope * 0.3;\r\n                    safeSize = safeSize * glowSizeBoost;\r\n\r\n                    // Cleanup flag - restore original values when effect ends\r\n                    if (progress >= 0.99 && particle._originalGlow) {\r\n                        particle.hasGlow = particle._originalGlow.hasGlow;\r\n                        particle.glowSizeMultiplier = particle._originalGlow.glowSizeMultiplier;\r\n                        delete particle._originalGlow;\r\n                    }\r\n                }\r\n                \r\n                // Draw glow layers if needed\r\n                if (particle.hasGlow || fireflyGlow > 1.0) {\r\n                    const glowRadius = Math.max(0.1, safeSize * (particle.glowSizeMultiplier || 1.5) * fireflyGlow);\r\n                    \r\n                    // Outer glow (enhanced by firefly effect)\r\n                    ctx.globalAlpha = particle.opacity * 0.15 * fireflyGlow;\r\n                    ctx.beginPath();\r\n                    ctx.arc(particle.x, particle.y, glowRadius, 0, Math.PI * 2);\r\n                    ctx.fill();\r\n                    \r\n                    // Inner glow (enhanced by firefly effect)\r\n                    ctx.globalAlpha = particle.opacity * 0.25 * fireflyGlow;\r\n                    ctx.beginPath();\r\n                    ctx.arc(particle.x, particle.y, glowRadius * 0.6, 0, Math.PI * 2);\r\n                    ctx.fill();\r\n                }\r\n                \r\n                // Draw core (also brightened by firefly effect)\r\n                ctx.globalAlpha = particle.opacity * (particle.baseOpacity || 0.5) * 0.6 * Math.min(2.0, fireflyGlow);\r\n                ctx.beginPath();\r\n                ctx.arc(particle.x, particle.y, safeSize, 0, Math.PI * 2);\r\n                ctx.fill();\r\n            }\r\n        }\r\n        \r\n        ctx.restore();\r\n    }\r\n\r\n    /**\r\n     * Clears all particles and returns them to the pool\r\n     */\r\n    clear() {\r\n        this.stateChangeCount++;\r\n        \r\n        // Return all particles to pool but avoid duplicates\r\n        while (this.particles.length > 0) {\r\n            const particle = this.particles.pop();\r\n            // Clear cached data before returning\r\n            if (particle.cachedColors) {\r\n                particle.cachedColors.clear();\r\n            }\r\n            // Clear behaviorData properties but keep the object\r\n            if (particle.behaviorData) {\r\n                for (let key in particle.behaviorData) {\r\n                    delete particle.behaviorData[key];\r\n                }\r\n            }\r\n            // Only add to pool if it's not already there and pool has space\r\n            if (this.pool.length < this.poolSize && !this.pool.includes(particle)) {\r\n                this.pool.push(particle);\r\n            }\r\n        }\r\n        \r\n        this.particles.length = 0;\r\n        this.particleCount = 0;\r\n        this.spawnAccumulator = 0; // Reset accumulator when clearing\r\n        \r\n        // Trim pool if it's grown too large\r\n        if (this.pool.length > this.poolSize) {\r\n            // Actually remove excess particles from pool\r\n            const excess = this.pool.length - this.poolSize;\r\n            this.pool.splice(this.poolSize, excess);\r\n        }\r\n        \r\n    }\r\n\r\n    /**\r\n     * Triggers a burst of particles for gesture effects\r\n     * @param {number} count - Number of particles to burst\r\n     * @param {string} behavior - Behavior type for burst particles\r\n     * @param {number} centerX - Center X coordinate\r\n     * @param {number} centerY - Center Y coordinate\r\n     */\r\n    burst(count, behavior, centerX, centerY) {\r\n        if (this.errorBoundary) {\r\n            return this.errorBoundary.wrap(() => {\r\n                this._burst(count, behavior, centerX, centerY);\r\n            }, 'particle-burst')();\r\n        } else {\r\n            this._burst(count, behavior, centerX, centerY);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Internal burst implementation\r\n     */\r\n    _burst(count, behavior, centerX, centerY) {\r\n        const actualCount = Math.min(count, this.maxParticles - this.particles.length);\r\n        \r\n        for (let i = 0; i < actualCount; i++) {\r\n            this.spawnSingleParticle(behavior, centerX, centerY);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Performs periodic cleanup to prevent memory buildup\r\n     */\r\n    performCleanup() {\r\n        // Trim pool if it's grown too large\r\n        if (this.pool.length > this.poolSize) {\r\n            // Clear excess particles from pool\r\n            const excess = this.pool.length - this.poolSize;\r\n            for (let i = 0; i < excess; i++) {\r\n                const particle = this.pool.pop();\r\n                // Ensure all references are cleared\r\n                if (particle) {\r\n                    particle.cachedGradient = null;\r\n                    particle.cachedGradientKey = null;\r\n                    particle.behaviorData = null;\r\n                }\r\n            }\r\n        }\r\n        \r\n        // Clear any cached data from active particles\r\n        for (const particle of this.particles) {\r\n            if (particle.cachedGradient && particle.life < 0.5) {\r\n                // Clear gradient cache for fading particles\r\n                particle.cachedGradient = null;\r\n                particle.cachedGradientKey = null;\r\n            }\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Gets current particle system statistics\r\n     * @returns {Object} Performance and state information\r\n     */\r\n    getStats() {\r\n        return {\r\n            activeParticles: this.particles.length,\r\n            maxParticles: this.maxParticles,\r\n            poolSize: this.pool.length,\r\n            poolHits: this.poolHits,\r\n            poolMisses: this.poolMisses,\r\n            poolEfficiency: this.poolHits / Math.max(1, this.poolHits + this.poolMisses),\r\n            spawnAccumulator: this.spawnAccumulator\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Sets the maximum number of particles\r\n     * @param {number} maxParticles - New maximum particle count\r\n     */\r\n    setMaxParticles(maxParticles) {\r\n        this.originalMaxParticles = this.originalMaxParticles || this.maxParticles;\r\n        this.maxParticles = Math.max(1, maxParticles);\r\n        \r\n        // Remove excess particles if new limit is lower\r\n        while (this.particles.length > this.maxParticles) {\r\n            this.removeParticle(0);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Cleans up dead particles and optimizes the pool\r\n     */\r\n    cleanupDeadParticles() {\r\n        // Remove any dead particles that shouldn't be there\r\n        const beforeCount = this.particles.length;\r\n        this.particles = this.particles.filter(particle => particle.isAlive());\r\n        const removed = beforeCount - this.particles.length;\r\n        \r\n        // Clear excess items from the pool to free memory\r\n        if (this.pool.length > 20) {\r\n            this.pool.length = 20;\r\n        }\r\n        \r\n        return removed;\r\n    }\r\n\r\n    /**\r\n     * Gets particles by behavior type for debugging\r\n     * @param {string} behavior - Behavior type to filter by\r\n     * @returns {Array} Particles with matching behavior\r\n     */\r\n    getParticlesByBehavior(behavior) {\r\n        return this.particles.filter(particle => particle.behavior === behavior);\r\n    }\r\n\r\n    /**\r\n     * Validates that all particles are in valid state\r\n     * @returns {boolean} True if all particles are valid\r\n     */\r\n    validateParticles() {\r\n        for (const particle of this.particles) {\r\n            if (!particle.isAlive() || particle.life < 0 || particle.life > 1) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Forces cleanup of dead particles (for testing)\r\n     */\r\n    cleanup() {\r\n        for (let i = this.particles.length - 1; i >= 0; i--) {\r\n            if (!this.particles[i].isAlive()) {\r\n                this.removeParticle(i);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Destroys the particle system and cleans up resources\r\n     */\r\n    destroy() {\r\n        this.clear();\r\n        this.pool.length = 0;\r\n        this.poolHits = 0;\r\n        this.poolMisses = 0;\r\n        // ParticleSystem destroyed\r\n    }\r\n}\r\n\r\nexport default ParticleSystem;","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE\n *  └─○═╝                                                                             \n *                      ◐ ◑ ◒ ◓  UNDERTONE MODIFIERS  ◓ ◒ ◑ ◐                      \n *                                                                                    \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Undertone Modifiers - Subtle Emotion Variations\n * @author Emotive Engine Team\n * @version 2.0.0\n * @module UndertoneModifiers\n * \n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                                   PURPOSE                                         \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ Undertones add NUANCE to emotions - like being \"nervously happy\" or              \n * ║ \"confidently angry\". These modifiers STACK on top of emotion modifiers            \n * ║ to create more complex, realistic emotional expressions.                          \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n *\n * ┌───────────────────────────────────────────────────────────────────────────────────\n * │ 🎨 MULTIPLIER EFFECTS (Applied to Base Gesture)                                   \n * ├───────────────────────────────────────────────────────────────────────────────────\n * │ • speed        : Animation speed (0.5=half speed, 2.0=double speed)               \n * │ • amplitude    : Movement size (0.5=smaller, 2.0=bigger)                          \n * │ • intensity    : Effect strength (0.5=subtle, 2.0=extreme)                        \n * │ • smoothness   : Animation smoothing (0.5=jerky, 1.5=very smooth)                 \n * │ • regularity   : Pattern consistency (0.5=chaotic, 1.0=regular)                   \n * └───────────────────────────────────────────────────────────────────────────────────\n *\n * ┌───────────────────────────────────────────────────────────────────────────────────\n * │ ⚡ SPECIAL EFFECTS (Boolean Flags)                                                \n * ├───────────────────────────────────────────────────────────────────────────────────\n * │ • addFlutter      : Butterfly-like motion (nervous)                               \n * │ • addMicroShake   : Tiny trembling (nervous, tired)                               \n * │ • addPower        : Strong, decisive motion (confident)                           \n * │ • addDrag         : Sluggish, heavy motion (tired)                                \n * │ • addTension      : Tight, controlled motion (intense)                            \n * │ • addSoftness     : Gentle, flowing motion (subdued)                              \n * └───────────────────────────────────────────────────────────────────────────────────\n *\n * ┌───────────────────────────────────────────────────────────────────────────────────\n * │ ❌ DO NOT ADD HERE (Belongs in Other Files)                                       \n * ├───────────────────────────────────────────────────────────────────────────────────\n * │ ✗ Base gesture definitions   → use gestureConfig.js                              \n * │ ✗ Emotion modifiers         → use emotionModifiers.js                            \n * │ ✗ Visual properties         → use emotionMap.js                                  \n * │ ✗ Particle behaviors        → use Particle.js                                    \n * │ ✗ State logic              → use EmotiveStateMachine.js                          \n * └───────────────────────────────────────────────────────────────────────────────────\n *\n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                           ADDING NEW UNDERTONES                                   \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ 1. Create new undertone object with all base multipliers (default to 1.0)         \n * ║ 2. Add special effect flags as needed (addXXX properties)                         \n * ║ 3. Test combinations with ALL emotions for unexpected interactions                \n * ║ 4. Document the intended \"feel\" and use cases                                     \n * ║ 5. Add to valid undertones in ErrorBoundary.js                                    \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n *\n * ════════════════════════════════════════════════════════════════════════════════════\n */\n\nexport const UNDERTONE_MODIFIERS = {\n    // No undertone - neutral multipliers\n    none: {\n        speed: 1.0,\n        amplitude: 1.0,\n        intensity: 1.0,\n        smoothness: 1.0,\n        regularity: 1.0\n    },\n    \n    nervous: {\n        speed: 1.2,        // 20% faster\n        amplitude: 0.9,    // 10% smaller (contained)\n        intensity: 1.1,    // 10% more intense\n        smoothness: 0.7,   // 30% less smooth (fluttery)\n        regularity: 0.6,   // Irregular (butterflies)\n        addFlutter: true,  // Butterfly-like flutter\n        addMicroShake: true // Subtle tremor\n    },\n    \n    confident: {\n        speed: 0.9,        // 10% slower (deliberate)\n        amplitude: 1.3,    // 30% bigger (bold)\n        intensity: 1.2,    // 20% more intense\n        smoothness: 1.1,   // 10% smoother (controlled)\n        regularity: 1.2,   // Very regular (assured)\n        addPower: true,    // Strong, decisive motion\n        addHold: true      // Brief pause at peaks\n    },\n    \n    tired: {\n        speed: 0.7,        // 30% slower\n        amplitude: 0.7,    // 30% smaller\n        intensity: 0.8,    // 20% less intense\n        smoothness: 1.3,   // 30% smoother (sluggish)\n        regularity: 0.8,   // Slightly irregular (drowsy)\n        addDroop: true,    // Downward tendency\n        addPause: true     // Occasional hesitation\n    },\n    \n    intense: {\n        speed: 1.3,        // 30% faster\n        amplitude: 1.2,    // 20% bigger\n        intensity: 1.4,    // 40% more intense\n        smoothness: 0.6,   // 40% less smooth (sharp)\n        regularity: 0.9,   // Slightly irregular\n        addPulse: true,    // Pulsing intensity\n        addFocus: true     // Concentrated motion\n    },\n    \n    subdued: {\n        speed: 0.8,        // 20% slower\n        amplitude: 0.8,    // 20% smaller\n        intensity: 0.7,    // 30% less intense\n        smoothness: 1.2,   // 20% smoother\n        regularity: 1.1,   // Regular (restrained)\n        addSoftness: true, // Gentle, muted motion\n        addFade: true      // Fading at edges\n    }\n};\n\n/**\n * Get undertone modifier\n * @param {string} undertone - Name of the undertone\n * @returns {Object} Modifier object with default values if undertone not found\n */\nexport function getUndertoneModifier(undertone) {\n    if (!undertone || undertone === '') {\n        return UNDERTONE_MODIFIERS.none;\n    }\n    return UNDERTONE_MODIFIERS[undertone] || UNDERTONE_MODIFIERS.none;\n}","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE\r\n *  └─○═╝                                                                             \r\n *                   ◐ ◑ ◒ ◓  GESTURE COMPOSITOR  ◓ ◒ ◑ ◐                   \r\n *                                                                                    \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Gesture Compositor - Emotion-Modified Animation Synthesis\r\n * @author Emotive Engine Team\r\n * @version 2.0.0\r\n * @module GestureCompositor\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ The ANIMATOR'S MIXER. Takes base gestures (bounce, pulse, etc.) and blends        \r\n * ║ them with emotional modifiers and undertones to create nuanced animations.        \r\n * ║ A happy bounce is different from a sad bounce - this is where that happens!       \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ 🎭 COMPOSITION FORMULA                                                             \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ Final Animation = Base Gesture × Emotion Modifier × Undertone Modifier            \r\n * │                                                                                    \r\n * │ Example: Bounce + Joy + Confident                                                 \r\n * │   = Fast, big, springy bounce with extra confidence                               \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ 🔗 DEPENDENCIES                                                                    \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ • gestures/index.js     : Modular gesture system with base configs                \r\n * │ • emotionModifiers.js   : How emotions affect movement                            \r\n * │ • undertoneModifiers.js : Subtle variations in expression                         \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ════════════════════════════════════════════════════════════════════════════════════\r\n */\r\n\r\nimport { getGesture } from './gestures/index.js';\r\nimport { getEmotionModifiers } from './emotions/index.js';\r\nimport { getUndertoneModifier } from '../config/undertoneModifiers.js';\r\n\r\nclass GestureCompositor {\r\n    constructor() {\r\n        // Cache for computed parameters\r\n        this.cache = new Map();\r\n        \r\n        // Pre-calculate common easing curves for performance\r\n        this.easingCache = new Map();\r\n        this.preCalculateEasingCurves();\r\n    }\r\n    \r\n    /**\r\n     * Pre-calculate common easing curves to avoid repeated calculations\r\n     */\r\n    preCalculateEasingCurves() {\r\n        const steps = 100;\r\n        const easingTypes = ['linear', 'ease-in', 'ease-out', 'ease-in-out', 'bounce'];\r\n        \r\n        for (const type of easingTypes) {\r\n            const curve = new Float32Array(steps + 1);\r\n            for (let i = 0; i <= steps; i++) {\r\n                const t = i / steps;\r\n                curve[i] = this.calculateEasing(t, type);\r\n            }\r\n            this.easingCache.set(type, curve);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Calculate easing value\r\n     */\r\n    calculateEasing(t, type) {\r\n        switch(type) {\r\n            case 'ease-in':\r\n                return t * t;\r\n            case 'ease-out':\r\n                return t * (2 - t);\r\n            case 'ease-in-out':\r\n                return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\r\n            case 'bounce':\r\n                if (t < 0.363636) return 7.5625 * t * t;\r\n                if (t < 0.727272) return 7.5625 * (t -= 0.545454) * t + 0.75;\r\n                if (t < 0.909090) return 7.5625 * (t -= 0.818181) * t + 0.9375;\r\n                return 7.5625 * (t -= 0.954545) * t + 0.984375;\r\n            default:\r\n                return t; // linear\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Get easing value from cache\r\n     */\r\n    getEasingValue(progress, type) {\r\n        const curve = this.easingCache.get(type);\r\n        if (!curve) return progress; // Fallback to linear\r\n        \r\n        const index = Math.min(Math.floor(progress * 100), 100);\r\n        return curve[index];\r\n    }\r\n    \r\n    /**\r\n     * Compose final gesture parameters\r\n     * @param {string} gesture - Name of the gesture\r\n     * @param {string} emotion - Current emotion state\r\n     * @param {string} undertone - Current undertone (optional)\r\n     * @returns {Object} Final composed parameters for the gesture\r\n     */\r\n    compose(gesture, emotion, undertone = null) {\r\n        // Check cache first\r\n        const cacheKey = `${gesture}-${emotion}-${undertone || 'none'}`;\r\n        if (this.cache.has(cacheKey)) {\r\n            return this.cache.get(cacheKey);\r\n        }\r\n        \r\n        // Get base configuration from modular gesture system\r\n        const gestureModule = getGesture(gesture);\r\n        const base = gestureModule ? gestureModule.config : {\r\n            duration: 500,\r\n            amplitude: 20,\r\n            easing: 'sine'\r\n        };\r\n        const emotionMod = getEmotionModifiers(emotion);\r\n        const undertoneMod = getUndertoneModifier(undertone);\r\n        \r\n        // Compose the final parameters\r\n        const composed = this.applyModifiers(base, emotionMod, undertoneMod, gesture);\r\n        \r\n        // Cache the result with size limit\r\n        if (this.cache.size > 100) {\r\n            // Clear cache if it gets too large\r\n            this.cache.clear();\r\n        }\r\n        this.cache.set(cacheKey, composed);\r\n        \r\n        return composed;\r\n    }\r\n    \r\n    /**\r\n     * Apply modifiers to base parameters\r\n     * @param {Object} base - Base gesture configuration\r\n     * @param {Object} emotionMod - Emotion modifiers\r\n     * @param {Object} undertoneMod - Undertone modifiers\r\n     * @param {string} gesture - Gesture name for special handling\r\n     * @returns {Object} Modified parameters\r\n     */\r\n    applyModifiers(base, emotionMod, undertoneMod, gesture) {\r\n        const result = { ...base };\r\n        \r\n        // Apply speed modifiers (affects duration inversely)\r\n        const speedMultiplier = emotionMod.speed * undertoneMod.speed;\r\n        result.duration = Math.round(base.duration / speedMultiplier);\r\n        \r\n        // Apply amplitude modifiers\r\n        if (result.amplitude !== undefined) {\r\n            result.amplitude = base.amplitude * emotionMod.amplitude * undertoneMod.amplitude;\r\n        }\r\n        \r\n        // Apply scale modifiers\r\n        if (result.scaleAmount !== undefined) {\r\n            result.scaleAmount = base.scaleAmount * emotionMod.intensity * undertoneMod.intensity;\r\n        }\r\n        if (result.scaleTarget !== undefined) {\r\n            const scaleModifier = emotionMod.amplitude * undertoneMod.amplitude;\r\n            result.scaleTarget = 1 + (base.scaleTarget - 1) * scaleModifier;\r\n        }\r\n        \r\n        // Apply glow modifiers\r\n        if (result.glowAmount !== undefined) {\r\n            result.glowAmount = base.glowAmount * emotionMod.intensity * undertoneMod.intensity;\r\n        }\r\n        if (result.glowPeak !== undefined) {\r\n            result.glowPeak = 1 + (base.glowPeak - 1) * emotionMod.intensity * undertoneMod.intensity;\r\n        }\r\n        \r\n        // Apply rotation modifiers\r\n        if (result.rotations !== undefined) {\r\n            result.rotations = base.rotations * emotionMod.amplitude * undertoneMod.amplitude;\r\n        }\r\n        if (result.angle !== undefined) {\r\n            result.angle = base.angle * emotionMod.amplitude * undertoneMod.amplitude;\r\n        }\r\n        \r\n        // Apply distance modifiers (for drift)\r\n        if (result.distance !== undefined) {\r\n            result.distance = base.distance * emotionMod.amplitude * undertoneMod.amplitude;\r\n        }\r\n        \r\n        // Apply smoothness (affects easing)\r\n        const smoothness = emotionMod.smoothness * undertoneMod.smoothness;\r\n        result.smoothness = smoothness;\r\n        result.easing = this.selectEasing(base.easing, smoothness);\r\n        \r\n        // Apply regularity (affects patterns)\r\n        result.regularity = emotionMod.regularity * undertoneMod.regularity;\r\n        \r\n        // Add special effects based on emotion\r\n        result.effects = [];\r\n        if (emotionMod.addBounce) result.effects.push('bounce');\r\n        if (emotionMod.addGravity) result.effects.push('gravity');\r\n        if (emotionMod.addShake) result.effects.push('shake');\r\n        if (emotionMod.addJitter) result.effects.push('shake');\r\n        if (emotionMod.addPop) result.effects.push('pop');\r\n        if (emotionMod.addRecoil) result.effects.push('recoil');\r\n        if (emotionMod.addWarmth) result.effects.push('warmth');\r\n        if (emotionMod.addFlow) result.effects.push('flow');\r\n        if (emotionMod.addWobble) result.effects.push('wobble');\r\n        if (emotionMod.addVibration) result.effects.push('vibration');\r\n        if (emotionMod.addDrag) result.effects.push('drag');\r\n        if (emotionMod.addWeight) result.effects.push('weight');\r\n        if (emotionMod.addTension) result.effects.push('tension');\r\n        if (emotionMod.addPrecision) result.effects.push('precision');\r\n        \r\n        // Add undertone effects\r\n        if (undertoneMod.addFlutter) result.effects.push('flutter');\r\n        if (undertoneMod.addMicroShake) result.effects.push('microShake');\r\n        if (undertoneMod.addPower) result.effects.push('power');\r\n        if (undertoneMod.addHold) result.effects.push('hold');\r\n        if (undertoneMod.addDroop) result.effects.push('droop');\r\n        if (undertoneMod.addPause) result.effects.push('pause');\r\n        if (undertoneMod.addPulse) result.effects.push('pulse');\r\n        if (undertoneMod.addFocus) result.effects.push('focus');\r\n        if (undertoneMod.addSoftness) result.effects.push('softness');\r\n        if (undertoneMod.addFade) result.effects.push('fade');\r\n        \r\n        // Apply gesture-specific modifications\r\n        this.applyGestureSpecificMods(result, gesture, emotionMod, undertoneMod);\r\n        \r\n        // Include particleMotion if it exists in base config\r\n        if (base.particleMotion) {\r\n            result.particleMotion = { ...base.particleMotion };\r\n            \r\n            // Apply modifiers to particle motion strength\r\n            if (result.particleMotion.strength !== undefined) {\r\n                result.particleMotion.strength *= emotionMod.intensity * undertoneMod.intensity;\r\n            }\r\n            \r\n            // Apply speed modifiers to particle motion frequency\r\n            if (result.particleMotion.frequency !== undefined) {\r\n                result.particleMotion.frequency *= speedMultiplier;\r\n            }\r\n            \r\n            // Apply amplitude modifiers to particle motion amplitude\r\n            if (result.particleMotion.amplitude !== undefined) {\r\n                result.particleMotion.amplitude *= emotionMod.amplitude * undertoneMod.amplitude;\r\n            }\r\n        }\r\n        \r\n        return result;\r\n    }\r\n    \r\n    /**\r\n     * Select easing function based on smoothness\r\n     * @param {string} baseEasing - Base easing type\r\n     * @param {number} smoothness - Smoothness multiplier\r\n     * @returns {string} Selected easing function\r\n     */\r\n    selectEasing(baseEasing, smoothness) {\r\n        if (smoothness < 0.5) {\r\n            return 'linear'; // Very sharp\r\n        } else if (smoothness < 0.8) {\r\n            return 'quad'; // Somewhat sharp\r\n        } else if (smoothness < 1.2) {\r\n            return baseEasing; // Normal\r\n        } else if (smoothness < 1.5) {\r\n            return 'cubic'; // Smooth\r\n        } else {\r\n            return 'sine'; // Very smooth\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Apply gesture-specific modifications\r\n     * @param {Object} result - Current parameters\r\n     * @param {string} gesture - Gesture name\r\n     * @param {Object} emotionMod - Emotion modifiers\r\n     * @param {Object} undertoneMod - Undertone modifiers\r\n     */\r\n    applyGestureSpecificMods(result, gesture, emotionMod, undertoneMod) {\r\n        switch(gesture) {\r\n            case 'bounce':\r\n                // Angry bounce is more violent\r\n                if (emotionMod.addShake) {\r\n                    result.frequency = Math.floor(result.frequency * 1.5);\r\n                }\r\n                // Sad bounce barely leaves ground\r\n                if (emotionMod.addGravity) {\r\n                    result.amplitude *= 0.6;\r\n                    result.frequency = 1;\r\n                }\r\n                break;\r\n                \r\n            case 'pulse':\r\n                // Love pulse is like a heartbeat\r\n                if (emotionMod.addWarmth) {\r\n                    result.frequency = 2; // Double beat\r\n                    result.glowAmount *= 1.5;\r\n                }\r\n                // Nervous pulse is irregular\r\n                if (undertoneMod.addFlutter) {\r\n                    result.irregular = true;\r\n                }\r\n                break;\r\n                \r\n            case 'shake':\r\n                // Fear shake is more intense\r\n                if (emotionMod.addJitter) {\r\n                    result.frequency *= 1.5;\r\n                    result.amplitude *= 1.2;\r\n                }\r\n                // Anger shake is violent\r\n                if (emotionMod.addShake) {\r\n                    result.amplitude *= 1.5;\r\n                    result.decay = false; // Sustained shaking\r\n                }\r\n                break;\r\n                \r\n            case 'spin':\r\n                // Joy spin has extra rotations\r\n                if (emotionMod.addBounce) {\r\n                    result.rotations *= 1.5;\r\n                }\r\n                // Confused spin reverses direction\r\n                if (emotionMod.addWobble) {\r\n                    result.wobble = true;\r\n                }\r\n                break;\r\n                \r\n            // Add more gesture-specific modifications as needed\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Clear the cache (useful when configs change)\r\n     */\r\n    clearCache() {\r\n        this.cache.clear();\r\n    }\r\n}\r\n\r\nexport default GestureCompositor;","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Zen Vortex Effect\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Zen meditation vortex visual effect\r\n * @author Emotive Engine Team\r\n * @module effects/zen-vortex\r\n */\r\n\r\nexport default {\r\n    name: 'zen-vortex',\r\n    emoji: '🌀',\r\n    description: 'Swirling meditation vortex effect',\r\n    \r\n    // Configuration\r\n    config: {\r\n        vortexSpeed: 0.02,\r\n        spiralTightness: 0.15,\r\n        maxRadius: 1.5,\r\n        lineWidth: 2,\r\n        segments: 50,\r\n        arms: 3,\r\n        fadeStart: 0.7,\r\n        baseOpacity: 0.3,\r\n        pulseSpeed: 0.01\r\n    },\r\n    \r\n    // State for animation\r\n    state: {\r\n        rotation: 0,\r\n        pulsePhase: 0,\r\n        intensity: 0\r\n    },\r\n    \r\n    /**\r\n     * Check if effect should be active\r\n     * @param {Object} state - Renderer state\r\n     * @returns {boolean}\r\n     */\r\n    shouldActivate: function(state) {\r\n        return state.emotion === 'zen' || state.zenTransition?.active;\r\n    },\r\n    \r\n    /**\r\n     * Apply the zen vortex effect\r\n     * @param {CanvasRenderingContext2D} ctx - Canvas context\r\n     * @param {Object} params - Effect parameters\r\n     */\r\n    apply: function(ctx, params) {\r\n        const { x, y, radius, intensity = 1.0, deltaTime = 16.67 } = params;\r\n        \r\n        // Update animation state\r\n        this.state.rotation += this.config.vortexSpeed * (deltaTime / 16.67);\r\n        this.state.pulsePhase += this.config.pulseSpeed * (deltaTime / 16.67);\r\n        this.state.intensity = intensity;\r\n        \r\n        ctx.save();\r\n        \r\n        // Draw multiple spiral arms\r\n        for (let arm = 0; arm < this.config.arms; arm++) {\r\n            const armOffset = (Math.PI * 2 / this.config.arms) * arm;\r\n            this.drawSpiralArm(ctx, x, y, radius, armOffset);\r\n        }\r\n        \r\n        // Draw meditation circle (∩∩ shape)\r\n        this.drawMeditationEyes(ctx, x, y, radius * 0.6, intensity);\r\n        \r\n        ctx.restore();\r\n    },\r\n    \r\n    /**\r\n     * Draw a single spiral arm\r\n     */\r\n    drawSpiralArm: function(ctx, centerX, centerY, baseRadius, offset) {\r\n        ctx.beginPath();\r\n        \r\n        const pulseMod = 1 + Math.sin(this.state.pulsePhase) * 0.1;\r\n        \r\n        for (let i = 0; i <= this.config.segments; i++) {\r\n            const t = i / this.config.segments;\r\n            const angle = this.state.rotation + offset + t * Math.PI * 4;\r\n            const spiralRadius = t * baseRadius * this.config.maxRadius * pulseMod;\r\n            \r\n            // Spiral equation\r\n            const x = centerX + Math.cos(angle) * spiralRadius;\r\n            const y = centerY + Math.sin(angle) * spiralRadius;\r\n            \r\n            if (i === 0) {\r\n                ctx.moveTo(x, y);\r\n            } else {\r\n                ctx.lineTo(x, y);\r\n            }\r\n        }\r\n        \r\n        // Create gradient for fade effect\r\n        const gradient = ctx.createLinearGradient(\r\n            centerX - baseRadius, centerY,\r\n            centerX + baseRadius, centerY\r\n        );\r\n        \r\n        const opacity = this.config.baseOpacity * this.state.intensity;\r\n        gradient.addColorStop(0, `rgba(147, 112, 219, 0)`);\r\n        gradient.addColorStop(0.3, `rgba(147, 112, 219, ${opacity * 0.5})`);\r\n        gradient.addColorStop(this.config.fadeStart, `rgba(147, 112, 219, ${opacity})`);\r\n        gradient.addColorStop(1, `rgba(147, 112, 219, 0)`);\r\n        \r\n        ctx.strokeStyle = gradient;\r\n        ctx.lineWidth = this.config.lineWidth;\r\n        ctx.stroke();\r\n    },\r\n    \r\n    /**\r\n     * Draw meditation eyes (∩∩)\r\n     */\r\n    drawMeditationEyes: function(ctx, x, y, radius, intensity) {\r\n        ctx.save();\r\n        \r\n        const eyeWidth = radius * 0.4;\r\n        const eyeHeight = radius * 0.3;\r\n        const eyeSpacing = radius * 0.3;\r\n        \r\n        ctx.strokeStyle = `rgba(255, 255, 255, ${0.8 * intensity})`;\r\n        ctx.lineWidth = 2;\r\n        \r\n        // Left eye (∩)\r\n        ctx.beginPath();\r\n        ctx.arc(x - eyeSpacing, y, eyeWidth, Math.PI, 0, true);\r\n        ctx.stroke();\r\n        \r\n        // Right eye (∩)\r\n        ctx.beginPath();\r\n        ctx.arc(x + eyeSpacing, y, eyeWidth, Math.PI, 0, true);\r\n        ctx.stroke();\r\n        \r\n        ctx.restore();\r\n    },\r\n    \r\n    /**\r\n     * Reset the effect state\r\n     */\r\n    reset: function() {\r\n        this.state.rotation = 0;\r\n        this.state.pulsePhase = 0;\r\n        this.state.intensity = 0;\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Recording Glow Effect\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Pulsating red glow for recording state\r\n * @author Emotive Engine Team\r\n * @module effects/recording-glow\r\n */\r\n\r\nexport default {\r\n    name: 'recording-glow',\r\n    emoji: '🔴',\r\n    description: 'Pulsating red recording indicator',\r\n    \r\n    // Configuration\r\n    config: {\r\n        color: '#FF0000',\r\n        pulseSpeed: 0.08,\r\n        minIntensity: 0.6,\r\n        maxIntensity: 1.0,\r\n        radiusMultiplier: 2.0,\r\n        gradientStops: [\r\n            { position: 0, opacity: 1.0 },\r\n            { position: 0.3, opacity: 0.7 },\r\n            { position: 0.6, opacity: 0.4 },\r\n            { position: 0.85, opacity: 0.2 },\r\n            { position: 1, opacity: 0 }\r\n        ]\r\n    },\r\n    \r\n    // State for animation\r\n    state: {\r\n        pulsePhase: 0,\r\n        intensity: 0.8  // Start with visible intensity\r\n    },\r\n    \r\n    /**\r\n     * Check if effect should be active\r\n     * @param {Object} state - Renderer state\r\n     * @returns {boolean}\r\n     */\r\n    shouldActivate: function(state) {\r\n        return state.recording === true;\r\n    },\r\n    \r\n    /**\r\n     * Apply the recording glow effect\r\n     * @param {CanvasRenderingContext2D} ctx - Canvas context\r\n     * @param {Object} params - Effect parameters\r\n     */\r\n    apply: function(ctx, params) {\r\n        const { deltaTime = 16.67 } = params;\r\n        \r\n        // Update pulse animation for the indicator only\r\n        this.state.pulsePhase += this.config.pulseSpeed * (deltaTime / 16.67);\r\n        \r\n        // Calculate pulsating intensity\r\n        const pulse = (Math.sin(this.state.pulsePhase) + 1) / 2;\r\n        this.state.intensity = this.config.minIntensity + \r\n            (this.config.maxIntensity - this.config.minIntensity) * pulse;\r\n        \r\n        // Don't draw any glow on the mascot - only update the animation state\r\n        // The REC indicator will be drawn separately in drawRecordingIndicator\r\n        return true; // Return true to indicate effect was applied\r\n    },\r\n    \r\n    /**\r\n     * Draw recording indicator text only\r\n     */\r\n    drawRecordingIndicator: function(ctx, canvasWidth, canvasHeight) {\r\n        ctx.save();\r\n        \r\n        // Dynamic text size\r\n        const baseSize = Math.min(canvasWidth, canvasHeight);\r\n        const textSize = Math.floor(baseSize * 0.08);  // 8% of smallest dimension (bigger)\r\n        \r\n        // Position in upper-left corner with padding\r\n        const x = textSize * 1.5;\r\n        const y = textSize * 1.5;\r\n        \r\n        // Draw red recording dot\r\n        const dotRadius = textSize * 0.3;\r\n        ctx.fillStyle = this.hexToRgba('#FF0000', this.state.intensity);\r\n        ctx.beginPath();\r\n        ctx.arc(x - textSize, y, dotRadius, 0, Math.PI * 2);\r\n        ctx.fill();\r\n        \r\n        // Add white outline for visibility\r\n        ctx.strokeStyle = this.hexToRgba('#FFFFFF', this.state.intensity * 0.8);\r\n        ctx.lineWidth = 3;\r\n        ctx.font = `bold ${textSize}px 'Arial', sans-serif`;\r\n        ctx.textAlign = 'left';\r\n        ctx.textBaseline = 'middle';\r\n        ctx.strokeText('REC', x, y);\r\n        \r\n        // Draw \"REC\" text on top\r\n        ctx.fillStyle = this.hexToRgba('#FF0000', this.state.intensity);\r\n        ctx.fillText('REC', x, y);\r\n        \r\n        ctx.restore();\r\n    },\r\n    \r\n    /**\r\n     * Convert hex to rgba\r\n     */\r\n    hexToRgba: function(hex, alpha) {\r\n        const r = parseInt(hex.slice(1, 3), 16);\r\n        const g = parseInt(hex.slice(3, 5), 16);\r\n        const b = parseInt(hex.slice(5, 7), 16);\r\n        return `rgba(${r}, ${g}, ${b}, ${alpha})`;\r\n    },\r\n    \r\n    /**\r\n     * Reset the effect state\r\n     */\r\n    reset: function() {\r\n        this.state.pulsePhase = 0;\r\n        this.state.intensity = 0;\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Speaking Pulse Effect\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n */\r\n\r\nexport default {\r\n    name: 'speaking-pulse',\r\n    emoji: '🗣️',\r\n    description: 'Audio-reactive pulse when speaking',\r\n    \r\n    config: {\r\n        scaleMultiplier: 0.15,  // Max scale increase when speaking\r\n        smoothing: 0.1,         // Smoothing factor for audio levels\r\n        minPulse: 0.02,         // Minimum pulse even when quiet\r\n        colorShift: true,       // Shift glow color when speaking\r\n        ringEffect: true        // Show expanding rings\r\n    },\r\n    \r\n    state: {\r\n        audioLevel: 0,\r\n        smoothedLevel: 0,\r\n        rings: []  // Array of expanding rings\r\n    },\r\n    \r\n    shouldActivate: function(state) {\r\n        return state.speaking === true;\r\n    },\r\n    \r\n    apply: function(ctx, params) {\r\n        const { x, y, radius, audioLevel = 0, deltaTime = 16.67 } = params;\r\n        \r\n        // Smooth audio level\r\n        this.state.smoothedLevel += (audioLevel - this.state.smoothedLevel) * this.config.smoothing;\r\n        \r\n        // Create expanding rings on audio peaks\r\n        if (audioLevel > 0.5 && this.state.audioLevel <= 0.5) {\r\n            this.state.rings.push({\r\n                radius: radius,\r\n                opacity: 0.5,\r\n                speed: 2\r\n            });\r\n        }\r\n        \r\n        // Update and draw rings\r\n        if (this.config.ringEffect) {\r\n            this.drawRings(ctx, x, y, deltaTime);\r\n        }\r\n        \r\n        // Store for next frame\r\n        this.state.audioLevel = audioLevel;\r\n    },\r\n    \r\n    drawRings: function(ctx, x, y, deltaTime) {\r\n        ctx.save();\r\n        ctx.strokeStyle = 'rgba(100, 200, 255, 0.5)';\r\n        ctx.lineWidth = 2;\r\n        \r\n        // Update and draw each ring\r\n        for (let i = this.state.rings.length - 1; i >= 0; i--) {\r\n            const ring = this.state.rings[i];\r\n            \r\n            // Update ring\r\n            ring.radius += ring.speed * (deltaTime / 16.67);\r\n            ring.opacity -= 0.02 * (deltaTime / 16.67);\r\n            \r\n            // Remove if faded\r\n            if (ring.opacity <= 0) {\r\n                this.state.rings.splice(i, 1);\r\n                continue;\r\n            }\r\n            \r\n            // Draw ring\r\n            ctx.globalAlpha = ring.opacity;\r\n            ctx.beginPath();\r\n            ctx.arc(x, y, ring.radius, 0, Math.PI * 2);\r\n            ctx.stroke();\r\n        }\r\n        \r\n        ctx.restore();\r\n    },\r\n    \r\n    getScaleModifier: function() {\r\n        return 1 + (this.state.smoothedLevel * this.config.scaleMultiplier);\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Sleeping Effect\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n */\r\n\r\nexport default {\r\n    name: 'sleeping',\r\n    emoji: '😴',\r\n    description: 'Sleeping with closed eyes and Z particles',\r\n    \r\n    config: {\r\n        eyeClosedScale: 0.1,    // How closed the eyes are (0.1 = 90% closed)\r\n        breathingDepth: 0.15,    // Deeper breathing when sleeping\r\n        breathingRate: 0.8,      // Slower breathing\r\n        zParticleInterval: 2000, // Spawn Z every 2 seconds\r\n        zDriftSpeed: 1,          // Speed of Z particles floating up\r\n        zFadeSpeed: 0.01,        // How fast Z's fade out\r\n        orbDimming: 0.3,         // Dim orb to 30% brightness when sleeping\r\n        glowDimming: 0.2         // Dim glow even more (20% brightness)\r\n    },\r\n    \r\n    state: {\r\n        lastZSpawn: 0,\r\n        zParticles: []\r\n    },\r\n    \r\n    shouldActivate: function(state) {\r\n        return state.sleeping === true || state.emotion === 'resting';\r\n    },\r\n    \r\n    apply: function(ctx, params) {\r\n        const { x, y, radius, deltaTime = 16.67 } = params;\r\n        const now = Date.now();\r\n        \r\n        // Spawn new Z particle\r\n        if (now - this.state.lastZSpawn > this.config.zParticleInterval) {\r\n            // Random Poppins font weights: 100-900\r\n            const weights = [100, 200, 300, 400, 500, 600, 700, 800, 900];\r\n            const randomWeight = weights[Math.floor(Math.random() * weights.length)];\r\n            \r\n            this.state.zParticles.push({\r\n                x: x + radius,\r\n                y: y - radius,\r\n                opacity: 1.0,\r\n                size: 12 + Math.random() * 8, // Random size 12-20px\r\n                drift: Math.random() * 0.5 - 0.25, // Slight random drift\r\n                weight: randomWeight, // Random font weight\r\n                rotation: Math.random() * 30 - 15 // Random rotation -15 to 15 degrees\r\n            });\r\n            this.state.lastZSpawn = now;\r\n        }\r\n        \r\n        // Update and draw Z particles\r\n        this.drawZParticles(ctx, deltaTime);\r\n    },\r\n    \r\n    drawZParticles: function(ctx, deltaTime) {\r\n        ctx.save();\r\n        ctx.textAlign = 'center';\r\n        ctx.textBaseline = 'middle';\r\n        \r\n        for (let i = this.state.zParticles.length - 1; i >= 0; i--) {\r\n            const z = this.state.zParticles[i];\r\n            \r\n            // Update position\r\n            z.y -= this.config.zDriftSpeed * (deltaTime / 16.67);\r\n            z.x += z.drift * (deltaTime / 16.67);\r\n            z.opacity -= this.config.zFadeSpeed * (deltaTime / 16.67);\r\n            z.rotation += 0.5 * (deltaTime / 16.67); // Slow rotation\r\n            \r\n            // Remove if faded\r\n            if (z.opacity <= 0) {\r\n                this.state.zParticles.splice(i, 1);\r\n                continue;\r\n            }\r\n            \r\n            // Draw Z with random Poppins weight\r\n            ctx.save();\r\n            ctx.translate(z.x, z.y);\r\n            ctx.rotate(z.rotation * Math.PI / 180);\r\n            ctx.globalAlpha = z.opacity * 0.7; // Slightly transparent\r\n            ctx.fillStyle = 'rgba(255, 255, 255, 0.9)';\r\n            ctx.font = `${z.weight} ${z.size}px 'Poppins', sans-serif`;\r\n            ctx.fillText('Z', 0, 0);\r\n            \r\n            // Add a subtle shadow for depth\r\n            ctx.shadowBlur = 3;\r\n            ctx.shadowColor = 'rgba(147, 112, 219, 0.5)'; // Purple shadow for dreamy effect\r\n            ctx.fillText('Z', 0, 0);\r\n            ctx.restore();\r\n        }\r\n        \r\n        ctx.restore();\r\n    },\r\n    \r\n    getEyeOpenness: function() {\r\n        return this.config.eyeClosedScale;\r\n    },\r\n    \r\n    getBreathingModifiers: function() {\r\n        return {\r\n            rate: this.config.breathingRate,\r\n            depth: this.config.breathingDepth\r\n        };\r\n    },\r\n    \r\n    getDimmingValues: function() {\r\n        return {\r\n            orbDimming: this.config.orbDimming,\r\n            glowDimming: this.config.glowDimming\r\n        };\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Suspicion Scan Effect\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n */\r\n\r\nexport default {\r\n    name: 'suspicion-scan',\r\n    emoji: '🔍',\r\n    description: 'Suspicious scanning and squinting',\r\n    \r\n    config: {\r\n        squintAmount: 0.4,      // 40% eye narrowing\r\n        scanInterval: 5000,     // Scan every 5 seconds\r\n        scanDuration: 800,      // Each scan takes 800ms\r\n        scanAngle: 45,          // Degrees to look left/right\r\n        squintSpeed: 0.02,      // Animation speed for squinting\r\n        pupilShift: 0.3         // How much the pupil shifts when scanning\r\n    },\r\n    \r\n    state: {\r\n        currentSquint: 0,\r\n        targetSquint: 0,\r\n        lastScanTime: 0,\r\n        scanPhase: 0,  // 0 = center, -1 = left, 1 = right\r\n        scanning: false\r\n    },\r\n    \r\n    shouldActivate: function(state) {\r\n        return state.emotion === 'suspicion' || state.suspicious === true;\r\n    },\r\n    \r\n    apply: function(ctx, params) {\r\n        const { x, y, radius, deltaTime = 16.67 } = params;\r\n        const now = Date.now();\r\n        \r\n        // Update squint amount\r\n        this.updateSquint(deltaTime);\r\n        \r\n        // Handle scanning motion\r\n        if (now - this.state.lastScanTime > this.config.scanInterval) {\r\n            this.startScan();\r\n            this.state.lastScanTime = now;\r\n        }\r\n        \r\n        if (this.state.scanning) {\r\n            this.updateScan(now, deltaTime);\r\n        }\r\n    },\r\n    \r\n    updateSquint: function(deltaTime) {\r\n        // Set target squint when suspicious\r\n        this.state.targetSquint = this.config.squintAmount;\r\n        \r\n        // Animate toward target\r\n        const diff = this.state.targetSquint - this.state.currentSquint;\r\n        if (Math.abs(diff) > 0.01) {\r\n            this.state.currentSquint += diff * this.config.squintSpeed * (deltaTime / 16.67);\r\n        } else {\r\n            this.state.currentSquint = this.state.targetSquint;\r\n        }\r\n    },\r\n    \r\n    startScan: function() {\r\n        this.state.scanning = true;\r\n        this.state.scanStartTime = Date.now();\r\n        this.state.scanPhase = -1; // Start by looking left\r\n    },\r\n    \r\n    updateScan: function(now, deltaTime) {\r\n        const elapsed = now - this.state.scanStartTime;\r\n        const progress = elapsed / this.config.scanDuration;\r\n        \r\n        if (progress < 0.33) {\r\n            // Look left\r\n            this.state.scanPhase = -1;\r\n        } else if (progress < 0.66) {\r\n            // Look right\r\n            this.state.scanPhase = 1;\r\n        } else if (progress < 1) {\r\n            // Return to center\r\n            this.state.scanPhase = 0;\r\n        } else {\r\n            // Scan complete\r\n            this.state.scanning = false;\r\n            this.state.scanPhase = 0;\r\n        }\r\n    },\r\n    \r\n    getEyeModifiers: function() {\r\n        return {\r\n            scaleY: 1 - this.state.currentSquint,  // Narrow vertically\r\n            scaleX: 1 + this.state.currentSquint * 0.3,  // Widen horizontally slightly\r\n            offsetX: this.state.scanPhase * this.config.pupilShift\r\n        };\r\n    },\r\n    \r\n    drawScanLines: function(ctx, x, y, radius) {\r\n        if (!this.state.scanning) return;\r\n        \r\n        ctx.save();\r\n        ctx.strokeStyle = 'rgba(255, 165, 0, 0.3)'; // Orange scan lines\r\n        ctx.lineWidth = 1;\r\n        ctx.setLineDash([5, 5]);\r\n        \r\n        // Draw scanning beam\r\n        const angle = this.state.scanPhase * (this.config.scanAngle * Math.PI / 180);\r\n        const endX = x + Math.cos(angle) * radius * 2;\r\n        const endY = y + Math.sin(angle) * radius * 0.5;\r\n        \r\n        ctx.beginPath();\r\n        ctx.moveTo(x, y);\r\n        ctx.lineTo(endX, endY);\r\n        ctx.stroke();\r\n        \r\n        ctx.restore();\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Gaze Narrowing Effect\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n */\r\n\r\nexport default {\r\n    name: 'gaze-narrowing',\r\n    emoji: '👁️',\r\n    description: 'Eye narrowing based on gaze proximity',\r\n    \r\n    config: {\r\n        maxHorizontalScale: 1.3,  // Max horizontal widening (30%)\r\n        maxVerticalScale: 0.5,    // Max vertical narrowing (50%)\r\n        smoothing: 0.1,           // Smoothing factor for transitions\r\n        focusThreshold: 0.3       // Intensity threshold to start narrowing\r\n    },\r\n    \r\n    state: {\r\n        currentScaleX: 1,\r\n        currentScaleY: 1,\r\n        targetScaleX: 1,\r\n        targetScaleY: 1\r\n    },\r\n    \r\n    shouldActivate: function(state) {\r\n        return state.gazeIntensity > 0 || state.gazeLocked;\r\n    },\r\n    \r\n    apply: function(ctx, params) {\r\n        const { gazeIntensity = 0, deltaTime = 16.67 } = params;\r\n        \r\n        // Calculate target scales based on gaze intensity\r\n        if (gazeIntensity > this.config.focusThreshold) {\r\n            const narrowFactor = (gazeIntensity - this.config.focusThreshold) / \r\n                                (1 - this.config.focusThreshold);\r\n            \r\n            this.state.targetScaleX = 1 + (this.config.maxHorizontalScale - 1) * narrowFactor;\r\n            this.state.targetScaleY = 1 - (1 - this.config.maxVerticalScale) * narrowFactor;\r\n        } else {\r\n            this.state.targetScaleX = 1;\r\n            this.state.targetScaleY = 1;\r\n        }\r\n        \r\n        // Smooth transitions\r\n        this.animateScales(deltaTime);\r\n    },\r\n    \r\n    animateScales: function(deltaTime) {\r\n        const speed = this.config.smoothing * (deltaTime / 16.67);\r\n        \r\n        // Animate X scale\r\n        const diffX = this.state.targetScaleX - this.state.currentScaleX;\r\n        if (Math.abs(diffX) > 0.001) {\r\n            this.state.currentScaleX += diffX * speed;\r\n        }\r\n        \r\n        // Animate Y scale\r\n        const diffY = this.state.targetScaleY - this.state.currentScaleY;\r\n        if (Math.abs(diffY) > 0.001) {\r\n            this.state.currentScaleY += diffY * speed;\r\n        }\r\n    },\r\n    \r\n    getEyeScales: function() {\r\n        return {\r\n            scaleX: this.state.currentScaleX,\r\n            scaleY: this.state.currentScaleY\r\n        };\r\n    },\r\n    \r\n    drawFocusIndicator: function(ctx, x, y, radius, intensity) {\r\n        if (intensity < this.config.focusThreshold) return;\r\n        \r\n        ctx.save();\r\n        \r\n        // Draw focus lines converging on target\r\n        const alpha = (intensity - this.config.focusThreshold) * 0.5;\r\n        ctx.strokeStyle = `rgba(100, 200, 255, ${alpha})`;\r\n        ctx.lineWidth = 1;\r\n        ctx.setLineDash([2, 4]);\r\n        \r\n        // Draw converging lines\r\n        const angles = [0, 60, 120, 180, 240, 300];\r\n        for (const angle of angles) {\r\n            const rad = angle * Math.PI / 180;\r\n            const startDist = radius * 2;\r\n            const endDist = radius * 1.2;\r\n            \r\n            ctx.beginPath();\r\n            ctx.moveTo(\r\n                x + Math.cos(rad) * startDist,\r\n                y + Math.sin(rad) * startDist\r\n            );\r\n            ctx.lineTo(\r\n                x + Math.cos(rad) * endDist,\r\n                y + Math.sin(rad) * endDist\r\n            );\r\n            ctx.stroke();\r\n        }\r\n        \r\n        ctx.restore();\r\n    }\r\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Fingerprint Effect\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Biometric fingerprint pattern effect\r\n * @author Emotive Engine Team\r\n * @module effects/fingerprint\r\n * \r\n * Created from a happy accident in the resting state that produced\r\n * concentric circles resembling a fingerprint pattern!\r\n */\r\n\r\nexport default {\r\n    name: 'fingerprint',\r\n    emoji: '👆',\r\n    description: 'Biometric fingerprint pattern for authentication UI',\r\n    \r\n    // Configuration\r\n    config: {\r\n        rings: 8,                  // Number of concentric rings\r\n        ringSpacing: 15,           // Pixels between rings\r\n        lineWidth: 1.5,           // Width of fingerprint lines\r\n        rotationSpeed: 0.001,     // Slow rotation for scanning effect\r\n        pulseSpeed: 0.02,         // Breathing/pulse speed\r\n        waveAmplitude: 3,         // Waviness of lines (realistic fingerprint)\r\n        waveFrequency: 8,         // How many waves per ring\r\n        breakPoints: 5,           // Random breaks in lines (like real fingerprints)\r\n        opacity: 0.4,             // Base opacity\r\n        scanLineSpeed: 0.01,      // Speed of scanning line\r\n        scanLineWidth: 3,         // Width of scanning beam\r\n        color: '#00CED1',         // Cyan for tech/biometric feel\r\n        glowColor: '#00FFFF',     // Bright cyan for scan\r\n        successColor: '#00FF00',  // Green for successful scan\r\n        failColor: '#FF0000'      // Red for failed scan\r\n    },\r\n    \r\n    // State for animation\r\n    state: {\r\n        rotation: 0,\r\n        pulsePhase: 0,\r\n        scanPosition: 0,\r\n        scanDirection: 1,\r\n        isScanning: false,\r\n        scanResult: null,  // 'success', 'fail', or null\r\n        breaks: [],        // Random break positions in rings\r\n        whorls: []         // Whorl patterns for realism\r\n    },\r\n    \r\n    /**\r\n     * Check if effect should be active\r\n     * @param {Object} state - Renderer state\r\n     * @returns {boolean}\r\n     */\r\n    shouldActivate: function(state) {\r\n        return state.biometric === true || state.fingerprint === true || state.authenticating === true;\r\n    },\r\n    \r\n    /**\r\n     * Initialize fingerprint pattern\r\n     */\r\n    initialize: function() {\r\n        // Generate random breaks for each ring\r\n        this.state.breaks = [];\r\n        for (let i = 0; i < this.config.rings; i++) {\r\n            const ringBreaks = [];\r\n            for (let j = 0; j < this.config.breakPoints; j++) {\r\n                ringBreaks.push(Math.random() * Math.PI * 2);\r\n            }\r\n            this.state.breaks.push(ringBreaks);\r\n        }\r\n        \r\n        // Generate whorl centers for realistic pattern\r\n        this.state.whorls = [\r\n            { x: 0.2, y: -0.1, strength: 0.3 },\r\n            { x: -0.15, y: 0.2, strength: 0.25 },\r\n            { x: 0, y: 0, strength: 0.5 }  // Central whorl\r\n        ];\r\n    },\r\n    \r\n    /**\r\n     * Apply the fingerprint effect\r\n     * @param {CanvasRenderingContext2D} ctx - Canvas context\r\n     * @param {Object} params - Effect parameters\r\n     */\r\n    apply: function(ctx, params) {\r\n        const { x, y, radius, deltaTime = 16.67, scanning = false, authResult = null } = params;\r\n        \r\n        // Initialize on first run\r\n        if (this.state.breaks.length === 0) {\r\n            this.initialize();\r\n        }\r\n        \r\n        // Update animation state\r\n        this.state.rotation += this.config.rotationSpeed * (deltaTime / 16.67);\r\n        this.state.pulsePhase += this.config.pulseSpeed * (deltaTime / 16.67);\r\n        \r\n        // Update scan position\r\n        if (scanning || this.state.isScanning) {\r\n            this.state.isScanning = true;\r\n            this.state.scanPosition += this.config.scanLineSpeed * this.state.scanDirection * (deltaTime / 16.67);\r\n            \r\n            // Reverse at bounds\r\n            if (this.state.scanPosition > 1) {\r\n                this.state.scanPosition = 1;\r\n                this.state.scanDirection = -1;\r\n            } else if (this.state.scanPosition < -1) {\r\n                this.state.scanPosition = -1;\r\n                this.state.scanDirection = 1;\r\n            }\r\n        }\r\n        \r\n        ctx.save();\r\n        \r\n        // Draw fingerprint rings\r\n        this.drawFingerprintPattern(ctx, x, y, radius);\r\n        \r\n        // Draw scanning line if active\r\n        if (this.state.isScanning) {\r\n            this.drawScanLine(ctx, x, y, radius);\r\n        }\r\n        \r\n        // Show auth result\r\n        if (authResult) {\r\n            this.showAuthResult(ctx, x, y, radius, authResult);\r\n        }\r\n        \r\n        ctx.restore();\r\n    },\r\n    \r\n    /**\r\n     * Draw the fingerprint pattern\r\n     */\r\n    drawFingerprintPattern: function(ctx, centerX, centerY, baseRadius) {\r\n        const pulse = Math.sin(this.state.pulsePhase) * 0.1 + 1;\r\n        \r\n        for (let ring = 0; ring < this.config.rings; ring++) {\r\n            const ringRadius = (ring + 1) * this.config.ringSpacing * pulse;\r\n            \r\n            // Skip if ring is outside visible area\r\n            if (ringRadius > baseRadius * 2) continue;\r\n            \r\n            ctx.beginPath();\r\n            ctx.strokeStyle = this.config.color;\r\n            ctx.lineWidth = this.config.lineWidth;\r\n            ctx.globalAlpha = this.config.opacity * (1 - ring / this.config.rings * 0.5);\r\n            \r\n            // Draw ring with breaks and distortions\r\n            for (let angle = 0; angle < Math.PI * 2; angle += 0.05) {\r\n                // Check for breaks\r\n                let shouldBreak = false;\r\n                for (const breakAngle of this.state.breaks[ring] || []) {\r\n                    if (Math.abs(angle - breakAngle) < 0.1) {\r\n                        shouldBreak = true;\r\n                        break;\r\n                    }\r\n                }\r\n                \r\n                if (shouldBreak) {\r\n                    ctx.stroke();\r\n                    ctx.beginPath();\r\n                    continue;\r\n                }\r\n                \r\n                // Apply whorl distortions\r\n                let distortedRadius = ringRadius;\r\n                let distortedAngle = angle + this.state.rotation;\r\n                \r\n                for (const whorl of this.state.whorls) {\r\n                    const whorldX = centerX + whorl.x * baseRadius;\r\n                    const whorldY = centerY + whorl.y * baseRadius;\r\n                    const pointX = centerX + Math.cos(distortedAngle) * distortedRadius;\r\n                    const pointY = centerY + Math.sin(distortedAngle) * distortedRadius;\r\n                    \r\n                    const distance = Math.sqrt(\r\n                        Math.pow(pointX - whorldX, 2) + \r\n                        Math.pow(pointY - whorldY, 2)\r\n                    );\r\n                    \r\n                    const influence = Math.exp(-distance / (baseRadius * 0.5)) * whorl.strength;\r\n                    distortedAngle += influence * 0.5;\r\n                }\r\n                \r\n                // Add wave pattern\r\n                const wave = Math.sin(angle * this.config.waveFrequency) * this.config.waveAmplitude;\r\n                distortedRadius += wave;\r\n                \r\n                // Draw point\r\n                const px = centerX + Math.cos(distortedAngle) * distortedRadius;\r\n                const py = centerY + Math.sin(distortedAngle) * distortedRadius;\r\n                \r\n                if (angle === 0) {\r\n                    ctx.moveTo(px, py);\r\n                } else {\r\n                    ctx.lineTo(px, py);\r\n                }\r\n            }\r\n            \r\n            ctx.stroke();\r\n        }\r\n    },\r\n    \r\n    /**\r\n     * Draw scanning line\r\n     */\r\n    drawScanLine: function(ctx, x, y, radius) {\r\n        const scanY = y + this.state.scanPosition * radius;\r\n        \r\n        // Create gradient for scan line\r\n        const gradient = ctx.createLinearGradient(x - radius, scanY, x + radius, scanY);\r\n        gradient.addColorStop(0, 'rgba(0, 255, 255, 0)');\r\n        gradient.addColorStop(0.5, this.config.glowColor);\r\n        gradient.addColorStop(1, 'rgba(0, 255, 255, 0)');\r\n        \r\n        ctx.strokeStyle = gradient;\r\n        ctx.lineWidth = this.config.scanLineWidth;\r\n        ctx.globalAlpha = 0.8;\r\n        ctx.shadowBlur = 10;\r\n        ctx.shadowColor = this.config.glowColor;\r\n        \r\n        ctx.beginPath();\r\n        ctx.moveTo(x - radius, scanY);\r\n        ctx.lineTo(x + radius, scanY);\r\n        ctx.stroke();\r\n        \r\n        ctx.shadowBlur = 0;\r\n    },\r\n    \r\n    /**\r\n     * Show authentication result\r\n     */\r\n    showAuthResult: function(ctx, x, y, radius, result) {\r\n        const color = result === 'success' ? this.config.successColor : this.config.failColor;\r\n        const text = result === 'success' ? '✓ AUTHENTICATED' : '✗ ACCESS DENIED';\r\n        \r\n        ctx.fillStyle = color;\r\n        ctx.font = `bold ${radius * 0.15}px monospace`;\r\n        ctx.textAlign = 'center';\r\n        ctx.textBaseline = 'middle';\r\n        ctx.globalAlpha = 0.9;\r\n        \r\n        ctx.fillText(text, x, y + radius * 1.3);\r\n        \r\n        // Draw result ring\r\n        ctx.strokeStyle = color;\r\n        ctx.lineWidth = 3;\r\n        ctx.globalAlpha = 0.5;\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, radius * 1.1, 0, Math.PI * 2);\r\n        ctx.stroke();\r\n    },\r\n    \r\n    /**\r\n     * Start authentication scan\r\n     */\r\n    startScan: function() {\r\n        this.state.isScanning = true;\r\n        this.state.scanPosition = -1;\r\n        this.state.scanDirection = 1;\r\n        this.state.scanResult = null;\r\n    },\r\n    \r\n    /**\r\n     * Complete authentication scan\r\n     */\r\n    completeScan: function(success = true) {\r\n        this.state.isScanning = false;\r\n        this.state.scanResult = success ? 'success' : 'fail';\r\n        \r\n        // Clear result after 2 seconds\r\n        setTimeout(() => {\r\n            this.state.scanResult = null;\r\n        }, 2000);\r\n    },\r\n    \r\n    /**\r\n     * Reset the effect state\r\n     */\r\n    reset: function() {\r\n        this.state.rotation = 0;\r\n        this.state.pulsePhase = 0;\r\n        this.state.scanPosition = 0;\r\n        this.state.scanDirection = 1;\r\n        this.state.isScanning = false;\r\n        this.state.scanResult = null;\r\n    }\r\n};","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE - Visual Effects Registry\n *  └─○═╝                                                                             \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Central registry for visual effects like zen vortex, recording glow, etc.\n * @author Emotive Engine Team\n * @module effects\n */\n\n// Import all effect modules\nimport zenVortex from './zen-vortex.js';\nimport recordingGlow from './recording-glow.js';\nimport speakingPulse from './speaking-pulse.js';\nimport sleepingEffect from './sleeping-effect.js';\nimport suspicionScan from './suspicion-scan.js';\nimport gazeNarrowing from './gaze-narrowing.js';\nimport fingerprint from './fingerprint.js';\n\n// Registry to store all visual effects\nconst effectRegistry = new Map();\n\n/**\n * Register a visual effect module\n * @param {Object} effectModule - The effect module to register\n */\nexport function registerEffect(effectModule) {\n    if (!effectModule.name) {\n        return;\n    }\n    effectRegistry.set(effectModule.name, effectModule);\n}\n\n/**\n * Get effect by name\n * @param {string} effectName - Name of the effect\n * @returns {Object|null} The effect module or null\n */\nexport function getEffect(effectName) {\n    return effectRegistry.get(effectName) || null;\n}\n\n/**\n * Apply a visual effect\n * @param {string} effectName - Name of the effect to apply\n * @param {CanvasRenderingContext2D} ctx - Canvas context\n * @param {Object} params - Effect parameters\n * @returns {boolean} True if effect was applied\n */\nexport function applyEffect(effectName, ctx, params) {\n    const effect = getEffect(effectName);\n    if (!effect) {\n        return false;\n    }\n    \n    if (effect.apply) {\n        effect.apply(ctx, params);\n        return true;\n    }\n    \n    return false;\n}\n\n/**\n * Check if effect should be active\n * @param {string} effectName - Name of the effect\n * @param {Object} state - Current state\n * @returns {boolean} True if effect should be active\n */\nexport function isEffectActive(effectName, state) {\n    const effect = getEffect(effectName);\n    if (!effect || !effect.shouldActivate) {\n        return false;\n    }\n    return effect.shouldActivate(state);\n}\n\n/**\n * Get all registered effect names\n * @returns {Array} Array of effect names\n */\nexport function getAllEffects() {\n    return Array.from(effectRegistry.keys());\n}\n\n// Register all built-in effects\nregisterEffect(zenVortex);\nregisterEffect(recordingGlow);\nregisterEffect(speakingPulse);\nregisterEffect(sleepingEffect);\nregisterEffect(suspicionScan);\nregisterEffect(gazeNarrowing);\nregisterEffect(fingerprint);\n\nexport default {\n    registerEffect,\n    getEffect,\n    applyEffect,\n    isEffectActive,\n    getAllEffects\n};","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Musical Duration System\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Musical time calculation for tempo-aware gesture durations\r\n * @author Emotive Engine Team\r\n * @module core/MusicalDuration\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ Converts between musical time (beats/bars) and clock time (milliseconds).        \r\n * ║ Ensures all gesture durations are perfect subdivisions of the beat, making        \r\n * ║ animations musically coherent at any tempo.                                      \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n */\r\n\r\nimport rhythmEngine from './rhythm.js';\r\n\r\nclass MusicalDuration {\r\n    constructor() {\r\n        // Standard note durations in beats (4/4 time)\r\n        this.noteDurations = {\r\n            'whole': 4,\r\n            'half': 2,\r\n            'quarter': 1,\r\n            'eighth': 0.5,\r\n            'sixteenth': 0.25,\r\n            'triplet': 0.333,\r\n            'dotted-quarter': 1.5,\r\n            'dotted-half': 3\r\n        };\r\n        \r\n        // Cache for performance\r\n        this.cache = new Map();\r\n        this.lastBPM = 0;\r\n        \r\n        // Pre-warm cache with common BPMs and durations\r\n        this.prewarmCache();\r\n    }\r\n    \r\n    /**\r\n     * Pre-calculate common durations to prevent first-run lag\r\n     */\r\n    prewarmCache() {\r\n        const commonBPMs = [60, 90, 120, 140, 160, 180];\r\n        const commonDurations = [\r\n            { musical: true, beats: 1 },      // 1 beat\r\n            { musical: true, bars: 1 },       // 1 bar\r\n            { musical: true, beats: 0.5 },    // Half beat\r\n            { musical: true, beats: 2 }       // 2 beats\r\n        ];\r\n        \r\n        commonBPMs.forEach(bpm => {\r\n            commonDurations.forEach(duration => {\r\n                const key = `${bpm}_${JSON.stringify(duration)}`;\r\n                const ms = this.toMilliseconds(duration, bpm);\r\n                this.cache.set(key, ms);\r\n            });\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Convert musical duration to milliseconds\r\n     * @param {Object} duration - Musical duration config\r\n     * @param {number} [bpm] - Optional BPM override\r\n     * @returns {number} Duration in milliseconds\r\n     */\r\n    toMilliseconds(duration, bpm = null) {\r\n        const currentBPM = bpm || rhythmEngine.bpm || 120;\r\n        \r\n        // Handle different duration formats\r\n        if (typeof duration === 'number') {\r\n            // Already in milliseconds\r\n            return duration;\r\n        }\r\n        \r\n        if (typeof duration === 'object' && duration.musical) {\r\n            const beatDuration = 60000 / currentBPM;\r\n            \r\n            if (duration.beats !== undefined) {\r\n                // Specified in beats\r\n                return duration.beats * beatDuration;\r\n            } else if (duration.bars !== undefined) {\r\n                // Specified in bars (assume 4/4)\r\n                const timeSignature = rhythmEngine.timeSignature || [4, 4];\r\n                return duration.bars * timeSignature[0] * beatDuration;\r\n            } else if (duration.subdivision !== undefined) {\r\n                // Specified as note value\r\n                const beats = this.noteDurations[duration.subdivision] || 1;\r\n                return beats * beatDuration;\r\n            }\r\n        }\r\n        \r\n        // Default fallback\r\n        return 1000;\r\n    }\r\n    \r\n    /**\r\n     * Convert milliseconds to musical duration\r\n     * @param {number} ms - Duration in milliseconds\r\n     * @param {number} [bpm] - Optional BPM override\r\n     * @returns {Object} Musical duration\r\n     */\r\n    toMusical(ms, bpm = null) {\r\n        const currentBPM = bpm || rhythmEngine.bpm || 120;\r\n        const beatDuration = 60000 / currentBPM;\r\n        const beats = ms / beatDuration;\r\n        \r\n        // Find closest standard duration\r\n        let closestNote = 'quarter';\r\n        let closestDiff = Math.abs(beats - 1);\r\n        \r\n        for (const [note, duration] of Object.entries(this.noteDurations)) {\r\n            const diff = Math.abs(beats - duration);\r\n            if (diff < closestDiff) {\r\n                closestDiff = diff;\r\n                closestNote = note;\r\n            }\r\n        }\r\n        \r\n        return {\r\n            musical: true,\r\n            beats: beats,\r\n            bars: beats / 4,\r\n            closestSubdivision: closestNote,\r\n            exact: closestDiff < 0.01\r\n        };\r\n    }\r\n    \r\n    /**\r\n     * Calculate gesture phases with musical timing\r\n     * @param {Array} phases - Array of phase configurations\r\n     * @param {number} totalBeats - Total duration in beats\r\n     * @returns {Array} Phases with calculated timings\r\n     */\r\n    calculatePhases(phases, totalBeats) {\r\n        if (!phases || phases.length === 0) {\r\n            return [{ name: 'main', beats: totalBeats, start: 0, end: 1 }];\r\n        }\r\n        \r\n        // Calculate total beats from phases\r\n        const phaseBeats = phases.reduce((sum, phase) => sum + (phase.beats || 1), 0);\r\n        const scaleFactor = totalBeats / phaseBeats;\r\n        \r\n        let cumulativeBeats = 0;\r\n        return phases.map(phase => {\r\n            const beats = (phase.beats || 1) * scaleFactor;\r\n            const start = cumulativeBeats / totalBeats;\r\n            cumulativeBeats += beats;\r\n            const end = cumulativeBeats / totalBeats;\r\n            \r\n            return {\r\n                name: phase.name,\r\n                beats: beats,\r\n                start: start,\r\n                end: end,\r\n                duration: this.toMilliseconds({ musical: true, beats })\r\n            };\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Get progress through current beat\r\n     * @returns {number} Progress 0-1 through current beat\r\n     */\r\n    getBeatProgress() {\r\n        const timeInfo = rhythmEngine.getTimeInfo();\r\n        return timeInfo ? timeInfo.beatProgress : 0;\r\n    }\r\n    \r\n    /**\r\n     * Get progress through current bar\r\n     * @returns {number} Progress 0-1 through current bar\r\n     */\r\n    getBarProgress() {\r\n        const timeInfo = rhythmEngine.getTimeInfo();\r\n        return timeInfo ? timeInfo.barProgress : 0;\r\n    }\r\n    \r\n    /**\r\n     * Calculate when next musical boundary occurs\r\n     * @param {string} boundary - 'beat', 'bar', 'phrase'\r\n     * @returns {number} Milliseconds until boundary\r\n     */\r\n    timeToNextBoundary(boundary = 'beat') {\r\n        const timeInfo = rhythmEngine.getTimeInfo();\r\n        if (!timeInfo) return 100;\r\n        \r\n        switch (boundary) {\r\n            case 'beat':\r\n                return timeInfo.nextBeatIn;\r\n            case 'bar':\r\n                const beatsInBar = timeInfo.timeSignature[0];\r\n                const beatsToBar = beatsInBar - timeInfo.beatInBar;\r\n                return beatsToBar * timeInfo.beatDuration;\r\n            case 'phrase':\r\n                // Assume 4-bar phrases\r\n                const barsInPhrase = 4;\r\n                const currentBar = timeInfo.bar || 0;\r\n                const barsToPhrase = barsInPhrase - (currentBar % barsInPhrase);\r\n                return barsToPhrase * beatsInBar * timeInfo.beatDuration;\r\n            default:\r\n                return timeInfo.nextBeatIn;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Quantize a duration to nearest musical subdivision\r\n     * @param {number} ms - Duration in milliseconds\r\n     * @param {string} subdivision - Target subdivision\r\n     * @returns {number} Quantized duration in ms\r\n     */\r\n    quantize(ms, subdivision = 'eighth') {\r\n        const bpm = rhythmEngine.bpm || 120;\r\n        const beatDuration = 60000 / bpm;\r\n        const targetBeats = this.noteDurations[subdivision] || 1;\r\n        const targetMs = targetBeats * beatDuration;\r\n        \r\n        // Round to nearest multiple of target\r\n        const multiple = Math.round(ms / targetMs);\r\n        return multiple * targetMs;\r\n    }\r\n    \r\n    /**\r\n     * Check if we're on a musical boundary\r\n     * @param {string} boundary - 'beat', 'bar', 'phrase'\r\n     * @param {number} tolerance - Tolerance in ms\r\n     * @returns {boolean}\r\n     */\r\n    isOnBoundary(boundary = 'beat', tolerance = 50) {\r\n        const timeToNext = this.timeToNextBoundary(boundary);\r\n        const timeInfo = rhythmEngine.getTimeInfo();\r\n        \r\n        if (!timeInfo) return false;\r\n        \r\n        // Check if we just passed or are about to hit boundary\r\n        return timeToNext < tolerance || \r\n               (timeInfo.beatDuration - timeToNext) < tolerance;\r\n    }\r\n    \r\n    /**\r\n     * Get tempo-adaptive animation parameters\r\n     * @param {number} baseTempo - Reference tempo\r\n     * @returns {Object} Animation adjustment factors\r\n     */\r\n    getTempoAdaptation(baseTempo = 120) {\r\n        const currentTempo = rhythmEngine.bpm || 120;\r\n        const tempoRatio = currentTempo / baseTempo;\r\n        \r\n        return {\r\n            speed: tempoRatio,\r\n            energy: Math.min(2, Math.max(0.5, tempoRatio)),\r\n            smoothness: tempoRatio < 0.8 ? 1.2 : tempoRatio > 1.5 ? 0.8 : 1,\r\n            intensity: tempoRatio > 1.3 ? 1.2 : tempoRatio < 0.7 ? 0.8 : 1\r\n        };\r\n    }\r\n}\r\n\r\n// Create singleton instance\r\nconst musicalDuration = new MusicalDuration();\r\n\r\nexport { musicalDuration, MusicalDuration };\r\nexport default musicalDuration;","/**\r\n * GestureAnimator - Handles all gesture animations for EmotiveRenderer\r\n * @module core/renderer/GestureAnimator\r\n */\r\n\r\nimport { getGesture } from '../gestures/index.js';\r\nimport musicalDuration from '../MusicalDuration.js';\r\n\r\nexport class GestureAnimator {\r\n    constructor(renderer) {\r\n        this.renderer = renderer;\r\n        this.activeGestures = new Map();\r\n        this.scaleFactor = renderer.scaleFactor || 1;\r\n        \r\n        // Gesture animations state\r\n        this.gestureAnimations = {\r\n            bounce: { active: false, progress: 0, params: {} },\r\n            pulse: { active: false, progress: 0, params: {} },\r\n            shake: { active: false, progress: 0, params: {} },\r\n            spin: { active: false, progress: 0, params: {} },\r\n            nod: { active: false, progress: 0, params: {} },\r\n            tilt: { active: false, progress: 0, params: {} },\r\n            expand: { active: false, progress: 0, params: {} },\r\n            contract: { active: false, progress: 0, params: {} },\r\n            flash: { active: false, progress: 0, params: {} },\r\n            drift: { active: false, progress: 0, params: {} },\r\n            stretch: { active: false, progress: 0, params: {} },\r\n            glow: { active: false, progress: 0, params: {} },\r\n            flicker: { active: false, progress: 0, params: {} },\r\n            vibrate: { active: false, progress: 0, params: {} },\r\n            orbital: { active: false, progress: 0, params: {} },  // ADDED\r\n            hula: { active: false, progress: 0, params: {} },     // ADDED\r\n            wave: { active: false, progress: 0, params: {} },\r\n            breathe: { active: false, progress: 0, params: {} },\r\n            morph: { active: false, progress: 0, params: {} },\r\n            slowBlink: { active: false, progress: 0, params: {} },\r\n            look: { active: false, progress: 0, params: {} },\r\n            settle: { active: false, progress: 0, params: {} },\r\n            breathIn: { active: false, progress: 0, params: {} },\r\n            breathOut: { active: false, progress: 0, params: {} },\r\n            breathHold: { active: false, progress: 0, params: {} },\r\n            breathHoldEmpty: { active: false, progress: 0, params: {} },\r\n            jump: { active: false, progress: 0, params: {} },\r\n            sway: { active: false, progress: 0, params: {} },\r\n            float: { active: false, progress: 0, params: {} },\r\n            sparkle: { active: false, progress: 0, params: {} },\r\n            shimmer: { active: false, progress: 0, params: {} },\r\n            wiggle: { active: false, progress: 0, params: {} },\r\n            groove: { active: false, progress: 0, params: {} },\r\n            point: { active: false, progress: 0, params: {} },\r\n            lean: { active: false, progress: 0, params: {} },\r\n            reach: { active: false, progress: 0, params: {} },\r\n            headBob: { active: false, progress: 0, params: {} },\r\n            orbit: { active: false, progress: 0, params: {} },\r\n            rain: { active: false, progress: 0, params: {} },\r\n            runningman: { active: false, progress: 0, params: {} },\r\n            charleston: { active: false, progress: 0, params: {} }\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Start a gesture animation\r\n     * @param {string} gestureName - Name of the gesture to start\r\n     */\r\n    startGesture(gestureName) {\r\n        \r\n        // Get the gesture configuration\r\n        const gesture = getGesture(gestureName);\r\n        \r\n        // Trigger chromatic aberration for impact gestures\r\n        const impactGestures = ['bounce', 'shake', 'pulse', 'flash', 'jump', 'slam', 'spin', 'flicker'];\r\n        if (impactGestures.includes(gestureName) && this.renderer.specialEffects) {\r\n            // Vary intensity based on gesture - all high for testing\r\n            const intensities = {\r\n                'flash': 1.0,\r\n                'jump': 1.0,\r\n                'shake': 0.9,\r\n                'bounce': 0.8,\r\n                'pulse': 0.7,\r\n                'slam': 1.0,\r\n                'spin': 0.8,\r\n                'flicker': 1.0\r\n            };\r\n            const intensity = intensities[gestureName] || 0.8;\r\n            this.renderer.specialEffects.triggerChromaticAberration(intensity);\r\n            console.log(`[Chromatic Aberration] Triggered for ${gestureName} with intensity ${intensity}`);\r\n        }\r\n        \r\n        // Get composed parameters based on current emotion and undertone\r\n        // Use the renderer's gestureCompositor if available\r\n        let params;\r\n        if (this.renderer.gestureCompositor) {\r\n            params = this.renderer.gestureCompositor.compose(\r\n                gestureName,\r\n                this.renderer.state.emotion,\r\n                this.renderer.currentUndertone\r\n            );\r\n        } else {\r\n            // Fallback to gesture's default config if no compositor\r\n            params = gesture?.config || {\r\n                amplitude: 20,\r\n                frequency: 2,\r\n                duration: 1000,\r\n                scaleAmount: 0.2,\r\n                glowAmount: 0.3,\r\n                rotations: 1,\r\n                distance: 50,\r\n                angle: 15,\r\n                scaleTarget: 1.5,\r\n                glowPeak: 2.0,\r\n                scalePeak: 1.1,\r\n                scaleX: 1.2,\r\n                scaleY: 0.8,\r\n                maxOpacity: 1,\r\n                minOpacity: 0.5,\r\n                lookDirection: 'random',\r\n                lookDistance: 1,\r\n                wobbleFreq: 4,\r\n                squashAmount: 0.8,\r\n                stretchAmount: 1.2,\r\n                jumpHeight: 100,\r\n                decay: true,\r\n                easing: 'sine',\r\n                effects: []\r\n            };\r\n        }\r\n        \r\n        // Calculate duration from gesture config\r\n        let duration = 1000; // Default fallback\r\n        if (gesture && gesture.config) {\r\n            if (gesture.config.musicalDuration) {\r\n                // Use musical duration system\r\n                duration = musicalDuration.toMilliseconds(gesture.config.musicalDuration);\r\n            } else if (gesture.config.duration) {\r\n                // Use fixed duration\r\n                duration = gesture.config.duration;\r\n            }\r\n        }\r\n        \r\n        // Set up the animation\r\n        const anim = this.gestureAnimations[gestureName];\r\n        if (anim) {\r\n            anim.active = true;\r\n            anim.startTime = performance.now();\r\n            anim.progress = 0;\r\n            anim.params = params;\r\n            anim.duration = duration; // Store calculated duration\r\n            \r\n            // Reset random values for gestures that use them\r\n            if (gestureName === 'shake') {\r\n                anim.randomAngle = undefined; // Will be regenerated\r\n            } else if (gestureName === 'drift') {\r\n                anim.startX = undefined;\r\n                anim.startY = undefined;\r\n                anim.currentDriftAngle = undefined; // Reset the angle for new random direction\r\n            } else if (gestureName === 'tilt') {\r\n                anim.tiltDirection = undefined; // Reset for new random direction\r\n            } else if (gestureName === 'vibrate') {\r\n                anim.vibrateAngles = undefined;\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    /**\r\n     * Apply all active gesture animations\r\n     * @returns {Object} Combined transformation values\r\n     */\r\n    applyGestureAnimations() {\r\n        const now = performance.now();\r\n        const transform = {\r\n            offsetX: 0,\r\n            offsetY: 0,\r\n            scale: 1,\r\n            rotation: 0,\r\n            glow: 1\r\n        };\r\n        \r\n        // Process each gesture animation\r\n        for (const [gestureName, anim] of Object.entries(this.gestureAnimations)) {\r\n            if (!anim.active) continue;\r\n            \r\n            const elapsed = now - anim.startTime;\r\n            // Use stored duration or fallback to params duration\r\n            const duration = anim.duration || (anim.params ? anim.params.duration : 1000);\r\n            anim.progress = Math.min(elapsed / duration, 1);\r\n            \r\n            // Apply easing\r\n            const easedProgress = this.applyEasing(anim.progress, anim.params.easing);\r\n            \r\n            // Apply gesture-specific transformations\r\n            let gestureTransform = {};\r\n            switch (gestureName) {\r\n                case 'bounce':\r\n                    gestureTransform = this.applyBounce(anim, easedProgress);\r\n                    break;\r\n                case 'pulse':\r\n                    gestureTransform = this.applyPulse(anim, easedProgress);\r\n                    break;\r\n                case 'shake':\r\n                    gestureTransform = this.applyShake(anim, easedProgress);\r\n                    break;\r\n                case 'spin':\r\n                    gestureTransform = this.applySpin(anim, easedProgress);\r\n                    break;\r\n                case 'nod':\r\n                    gestureTransform = this.applyNod(anim, easedProgress);\r\n                    break;\r\n                case 'tilt':\r\n                    gestureTransform = this.applyTilt(anim, easedProgress);\r\n                    break;\r\n                case 'expand':\r\n                    gestureTransform = this.applyExpand(anim, easedProgress);\r\n                    break;\r\n                case 'contract':\r\n                    gestureTransform = this.applyContract(anim, easedProgress);\r\n                    break;\r\n                case 'flash':\r\n                    gestureTransform = this.applyFlash(anim, easedProgress);\r\n                    break;\r\n                case 'drift':\r\n                    gestureTransform = this.applyDrift(anim, easedProgress);\r\n                    break;\r\n                case 'stretch':\r\n                    gestureTransform = this.applyStretch(anim, easedProgress);\r\n                    break;\r\n                case 'glow':\r\n                    gestureTransform = this.applyGlow(anim, easedProgress);\r\n                    break;\r\n                case 'flicker':\r\n                    gestureTransform = this.applyFlicker(anim, easedProgress);\r\n                    break;\r\n                case 'vibrate':\r\n                    gestureTransform = this.applyVibrate(anim, easedProgress);\r\n                    break;\r\n                case 'orbital':\r\n                    gestureTransform = this.applyOrbital(anim, easedProgress);\r\n                    break;\r\n                case 'hula':\r\n                    gestureTransform = this.applyHula(anim, easedProgress);\r\n                    break;\r\n                case 'wave':\r\n                    gestureTransform = this.applyWave(anim, easedProgress);\r\n                    break;\r\n                case 'breathe':\r\n                    gestureTransform = this.applyBreathe(anim, easedProgress);\r\n                    break;\r\n                case 'morph':\r\n                    gestureTransform = this.applyMorph(anim, easedProgress);\r\n                    break;\r\n                case 'slowBlink':\r\n                    gestureTransform = this.applySlowBlink(anim, easedProgress);\r\n                    break;\r\n                case 'look':\r\n                    gestureTransform = this.applyLook(anim, easedProgress);\r\n                    break;\r\n                case 'settle':\r\n                    gestureTransform = this.applySettle(anim, easedProgress);\r\n                    break;\r\n                case 'breathIn':\r\n                    gestureTransform = this.applyBreathIn(anim, easedProgress);\r\n                    break;\r\n                case 'breathOut':\r\n                    gestureTransform = this.applyBreathOut(anim, easedProgress);\r\n                    break;\r\n                case 'breathHold':\r\n                    gestureTransform = this.applyBreathHold(anim, easedProgress);\r\n                    break;\r\n                case 'breathHoldEmpty':\r\n                    gestureTransform = this.applyBreathHoldEmpty(anim, easedProgress);\r\n                    break;\r\n                case 'jump':\r\n                    gestureTransform = this.applyJump(anim, easedProgress);\r\n                    break;\r\n                case 'sway':\r\n                    gestureTransform = this.applySway(anim, easedProgress);\r\n                    break;\r\n                case 'float':\r\n                    gestureTransform = this.applyFloat(anim, easedProgress);\r\n                    break;\r\n                case 'rain':\r\n                    gestureTransform = this.applyRain(anim, easedProgress);\r\n                    break;\r\n                case 'runningman':\r\n                    gestureTransform = this.applyRunningMan(anim, easedProgress);\r\n                    break;\r\n                case 'charleston':\r\n                    gestureTransform = this.applyCharleston(anim, easedProgress);\r\n                    break;\r\n                case 'sparkle':\r\n                    gestureTransform = this.applySparkle(anim, easedProgress);\r\n                    break;\r\n                case 'shimmer':\r\n                    gestureTransform = this.applyShimmer(anim, easedProgress);\r\n                    break;\r\n                case 'wiggle':\r\n                    gestureTransform = this.applyWiggle(anim, easedProgress);\r\n                    break;\r\n                case 'groove':\r\n                    gestureTransform = this.applyGroove(anim, easedProgress);\r\n                    break;\r\n                case 'point':\r\n                    gestureTransform = this.applyPoint(anim, easedProgress);\r\n                    break;\r\n                case 'lean':\r\n                    gestureTransform = this.applyLean(anim, easedProgress);\r\n                    break;\r\n                case 'reach':\r\n                    gestureTransform = this.applyReach(anim, easedProgress);\r\n                    break;\r\n                case 'headBob':\r\n                    gestureTransform = this.applyHeadBob(anim, easedProgress);\r\n                    break;\r\n                case 'orbit':\r\n                    gestureTransform = this.applyOrbit(anim, easedProgress);\r\n                    break;\r\n            }\r\n            \r\n            // Combine transforms\r\n            transform.offsetX += gestureTransform.offsetX || 0;\r\n            transform.offsetY += gestureTransform.offsetY || 0;\r\n            transform.scale *= gestureTransform.scale || 1;\r\n            transform.rotation += gestureTransform.rotation || 0;\r\n            // Use MAX for glow instead of multiplying to prevent accumulation\r\n            transform.glow = Math.max(transform.glow, gestureTransform.glow || 1);\r\n            \r\n            // Pass flash wave data if present\r\n            if (gestureTransform.flashWave) {\r\n                transform.flashWave = gestureTransform.flashWave;\r\n            }\r\n            \r\n            // Pass firefly effect data if present (for sparkle gesture)\r\n            if (gestureTransform.fireflyEffect) {\r\n                transform.fireflyEffect = gestureTransform.fireflyEffect;\r\n                transform.particleGlow = gestureTransform.particleGlow;\r\n                transform.fireflyTime = gestureTransform.fireflyTime;\r\n            }\r\n            \r\n            // Pass flicker effect data if present (for flicker gesture - now does particle shimmer)\r\n            if (gestureTransform.flickerEffect) {\r\n                transform.flickerEffect = gestureTransform.flickerEffect;\r\n                transform.particleGlow = gestureTransform.particleGlow;\r\n                transform.flickerTime = gestureTransform.flickerTime;\r\n            }\r\n            \r\n            // Pass shimmer effect data if present (for shimmer gesture - subtle glow)\r\n            if (gestureTransform.shimmerEffect) {\r\n                transform.shimmerEffect = gestureTransform.shimmerEffect;\r\n                transform.particleGlow = gestureTransform.particleGlow;\r\n                transform.shimmerTime = gestureTransform.shimmerTime;\r\n                transform.shimmerWave = gestureTransform.shimmerWave;\r\n            }\r\n            \r\n            // Pass glow effect data if present (for glow gesture)\r\n            if (gestureTransform.glowEffect) {\r\n                transform.glowEffect = gestureTransform.glowEffect;\r\n                transform.particleGlow = gestureTransform.particleGlow;\r\n                transform.glowTime = gestureTransform.glowTime;\r\n                transform.glowProgress = gestureTransform.glowProgress;\r\n                transform.glowEnvelope = gestureTransform.glowEnvelope;\r\n            }\r\n            \r\n            // Check if animation is complete\r\n            if (anim.progress >= 1) {\r\n                anim.active = false;\r\n                anim.progress = 0;\r\n                anim.startTime = 0;\r\n                // Clean up flash wave data\r\n                if (gestureName === 'flash') {\r\n                    anim.flashWave = null;\r\n                    anim.flashWaveData = null;\r\n                }\r\n            }\r\n        }\r\n        \r\n        return transform;\r\n    }\r\n\r\n    /**\r\n     * Update active gestures\r\n     * @param {number} deltaTime - Time since last frame\r\n     */\r\n    update(deltaTime) {\r\n        // Update logic moved to applyGestureAnimations\r\n        return this.applyGestureAnimations();\r\n    }\r\n\r\n    /**\r\n     * Stop all active gestures\r\n     */\r\n    stopAllGestures() {\r\n        // Reset all gesture animations\r\n        Object.keys(this.gestureAnimations).forEach(key => {\r\n            this.gestureAnimations[key].active = false;\r\n            this.gestureAnimations[key].startTime = 0;\r\n            this.gestureAnimations[key].progress = 0;\r\n            this.gestureAnimations[key].params = null;\r\n        });\r\n        this.activeGestures.clear();\r\n    }\r\n    \r\n    /**\r\n     * Get current active gesture information for particle system\r\n     * @returns {Object|null} Current gesture with particleMotion and progress, or null\r\n     */\r\n    getCurrentGesture() {\r\n        // Priority: Find override gestures first (like orbital, hula), then other gestures\r\n        const overrideGestures = ['orbital', 'hula', 'wave', 'spin'];\r\n        \r\n        // Check override gestures first\r\n        for (const gestureName of overrideGestures) {\r\n            const anim = this.gestureAnimations[gestureName];\r\n            if (anim && anim.active) {\r\n                // Get the actual gesture configuration\r\n                const gesture = getGesture(gestureName);\r\n                \r\n                // Use the gesture's config for particleMotion, or create one from gesture type\r\n                const particleMotion = gesture?.config?.particleMotion || {\r\n                    type: gestureName,  // This ensures the modular gesture system will find it\r\n                    strength: anim.params?.strength || 1.0\r\n                };\r\n                \r\n                const gestureInfo = {\r\n                    name: gestureName,\r\n                    particleMotion: particleMotion,\r\n                    progress: anim.progress || 0,\r\n                    params: anim.params\r\n                };\r\n                \r\n                return gestureInfo;\r\n            }\r\n        }\r\n        \r\n        // Then check all other gestures\r\n        for (const [gestureName, anim] of Object.entries(this.gestureAnimations)) {\r\n            if (anim.active) {\r\n                // Get the actual gesture configuration\r\n                const gesture = getGesture(gestureName);\r\n                \r\n                // Use the gesture's config for particleMotion, or params if available\r\n                const particleMotion = gesture?.config?.particleMotion || \r\n                                      anim.params?.particleMotion || \r\n                                      { type: gestureName, strength: anim.params?.strength || 1.0 };\r\n                \r\n                const gestureInfo = {\r\n                    name: gestureName,\r\n                    particleMotion: particleMotion,\r\n                    progress: anim.progress || 0,\r\n                    params: anim.params\r\n                };\r\n                \r\n                // Include breathPhase for breathe gesture\r\n                if (gestureName === 'breathe' && anim.breathPhase !== undefined) {\r\n                    gestureInfo.breathPhase = anim.breathPhase;\r\n                }\r\n                \r\n                return gestureInfo;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    \r\n    /**\r\n     * Apply easing function to progress\r\n     */\r\n    applyEasing(progress, easing) {\r\n        switch (easing) {\r\n            case 'linear':\r\n                return progress;\r\n            case 'quad':\r\n                return progress * progress;\r\n            case 'cubic':\r\n                return progress * progress * progress;\r\n            case 'sine':\r\n                return Math.sin(progress * Math.PI / 2);\r\n            case 'back':\r\n                return progress * progress * (2.7 * progress - 1.7);\r\n            default:\r\n                return progress;\r\n        }\r\n    }\r\n    \r\n    // Individual gesture application methods\r\n    applyBounce(anim, progress) {\r\n        const bounce = Math.abs(Math.sin(progress * Math.PI * anim.params.frequency)) * anim.params.amplitude * this.scaleFactor;\r\n        // Apply effects\r\n        const multiplier = anim.params.effects && anim.params.effects.includes('gravity') ? 0.6 : 1;\r\n        return { offsetY: -bounce * multiplier };\r\n    }\r\n    \r\n    applyPulse(anim, progress) {\r\n        const pulse = Math.sin(progress * Math.PI * anim.params.frequency);\r\n        return {\r\n            scale: 1 + pulse * anim.params.scaleAmount,\r\n            glow: 1 + pulse * anim.params.glowAmount\r\n        };\r\n    }\r\n    \r\n    applyShake(anim, progress) {\r\n        // Initialize random direction for this shake if not set\r\n        if (!anim.randomAngle) {\r\n            anim.randomAngle = Math.random() * Math.PI * 2; // Random angle in radians\r\n        }\r\n        const decay = anim.params.decay ? (1 - progress) : 1;\r\n        const shake = Math.sin(progress * Math.PI * anim.params.frequency) * anim.params.amplitude * decay * this.scaleFactor;\r\n        return {\r\n            offsetX: shake * Math.cos(anim.randomAngle),\r\n            offsetY: shake * Math.sin(anim.randomAngle)\r\n        };\r\n    }\r\n    \r\n    applySpin(anim, progress) {\r\n        // Ensure full rotation even if progress doesn't quite reach 1.0\r\n        const actualProgress = Math.min(progress * 1.05, 1.0); // Slight overshoot to ensure completion\r\n        return {\r\n            rotation: actualProgress * anim.params.rotations * 360,\r\n            scale: 1 + Math.sin(progress * Math.PI) * anim.params.scaleAmount\r\n        };\r\n    }\r\n    \r\n    applyNod(anim, progress) {\r\n        const nod = Math.sin(progress * Math.PI * anim.params.frequency) * anim.params.amplitude * this.scaleFactor;\r\n        return { offsetY: nod };\r\n    }\r\n    \r\n    applyTilt(anim, progress) {\r\n        if (!anim.tiltDirection) {\r\n            // Randomly choose left (-1) or right (1) tilt\r\n            anim.tiltDirection = Math.random() < 0.5 ? -1 : 1;\r\n        }\r\n        const frequency = anim.params.frequency || 2;\r\n        const angle = (anim.params.angle || 15) * Math.PI / 180; // Convert to radians\r\n        const tiltProgress = Math.sin(progress * Math.PI * frequency) * anim.tiltDirection;\r\n        \r\n        // Apply both rotation and skew to make tilt visible on circular orb\r\n        return { \r\n            rotation: tiltProgress * angle,\r\n            // Skew the orb slightly to show tilt motion\r\n            scaleX: 1 + Math.abs(tiltProgress) * 0.1,  // Widen when tilted\r\n            scaleY: 1 - Math.abs(tiltProgress) * 0.05, // Compress slightly\r\n            // Move slightly with tilt\r\n            offsetX: tiltProgress * 10,\r\n            offsetY: Math.abs(tiltProgress) * -5  // Lift slightly when tilted\r\n        };\r\n    }\r\n    \r\n    applyExpand(anim, progress) {\r\n        // Use scaleAmount or scaleTarget (handle both config formats)\r\n        // Make sure we're expanding, not contracting\r\n        const targetScale = Math.max(anim.params.scaleAmount || anim.params.scaleTarget || 1.5, 1.0);\r\n        const easedProgress = Math.sin(progress * Math.PI / 2); // Smooth ease-out\r\n        const scale = 1 + (targetScale - 1) * easedProgress;\r\n        return {\r\n            scale: scale,\r\n            glow: 1 + Math.abs(anim.params.glowAmount || 0.2) * easedProgress\r\n        };\r\n    }\r\n    \r\n    applyContract(anim, progress) {\r\n        // Use scaleAmount or scaleTarget (handle both config formats)\r\n        const targetScale = anim.params.scaleAmount || anim.params.scaleTarget || 0.7;\r\n        const easedProgress = Math.sin(progress * Math.PI / 2); // Smooth ease-out\r\n        const scale = 1 + (targetScale - 1) * easedProgress;\r\n        return {\r\n            scale: scale,\r\n            glow: 1 + (anim.params.glowAmount || -0.2) * easedProgress\r\n        };\r\n    }\r\n    \r\n    applyFlash(anim, progress) {\r\n        const flash = Math.sin(progress * Math.PI); // Quick up and down\r\n        const glowPeak = anim.params.glowPeak || 2.0;  // Default if not defined\r\n        const scalePeak = anim.params.scalePeak || 1.1; // Default if not defined\r\n        return {\r\n            glow: 1 + (glowPeak - 1) * flash,\r\n            scale: 1 + (scalePeak - 1) * flash\r\n        };\r\n    }\r\n    \r\n    applyDrift(anim, progress) {\r\n        // Initialize drift angle when starting (progress near 0)\r\n        if (progress <= 0.01 && !anim.currentDriftAngle) {\r\n            // Always pick a random angle for drift\r\n            anim.currentDriftAngle = Math.random() * Math.PI * 2; // Random direction in radians\r\n        }\r\n        \r\n        const distance = anim.params.distance * Math.sin(progress * Math.PI) * this.scaleFactor;\r\n        const angle = anim.currentDriftAngle || 0;\r\n        \r\n        // Clear the angle when animation completes\r\n        if (progress >= 0.99) {\r\n            anim.currentDriftAngle = null;\r\n        }\r\n        \r\n        return {\r\n            offsetX: Math.cos(angle) * distance,\r\n            offsetY: Math.sin(angle) * distance\r\n        };\r\n    }\r\n    \r\n    applyStretch(anim, progress) {\r\n        const stretch = Math.sin(progress * Math.PI * anim.params.frequency);\r\n        // Note: We'd need to handle scaleX/scaleY separately for proper stretch\r\n        // For now, average them\r\n        const avgScale = (anim.params.scaleX + anim.params.scaleY) / 2;\r\n        return { scale: 1 + (avgScale - 1) * stretch };\r\n    }\r\n    \r\n    applyGlow(anim, progress) {\r\n        // Glow effect - pure luminosity like pulse but without movement\r\n        // Copy of pulse logic but focused only on glow\r\n\r\n        const glowPulse = Math.sin(progress * Math.PI * anim.params.frequency);\r\n\r\n        return {\r\n            scale: 1 + glowPulse * (anim.params.scaleAmount || 0.1), // Very subtle scale like new glow config\r\n            glow: 1 + glowPulse * (anim.params.glowAmount || 0.8)    // Strong glow like new glow config\r\n        };\r\n    }\r\n    \r\n    applyFlash(anim, progress) {\r\n        // Wave-like flash that emanates outward\r\n        // Store wave state in the animation object\r\n        if (!anim.flashWave) {\r\n            anim.flashWave = {\r\n                innerRadius: 0,\r\n                outerRadius: 0,\r\n                maxRadius: 3.0 // How far the wave travels (relative to core)\r\n            };\r\n        }\r\n        \r\n        // Update wave radius based on progress\r\n        anim.flashWave.outerRadius = progress * anim.flashWave.maxRadius;\r\n        anim.flashWave.innerRadius = Math.max(0, (progress - 0.1) * anim.flashWave.maxRadius);\r\n        \r\n        // Fade intensity as wave travels outward\r\n        const waveIntensity = Math.max(0, 1 - progress * 0.7);\r\n        \r\n        // Store wave data for renderer to use\r\n        anim.flashWaveData = {\r\n            innerRadius: anim.flashWave.innerRadius,\r\n            outerRadius: anim.flashWave.outerRadius,\r\n            intensity: waveIntensity\r\n        };\r\n        \r\n        // Return a very subtle glow increase at the core\r\n        return {\r\n            glow: 1 + waveIntensity * 0.3, // Very subtle core glow\r\n            flashWave: anim.flashWaveData // Pass wave data to renderer\r\n        };\r\n    }\r\n    \r\n    applyFlicker(anim, progress) {\r\n        // Flicker effect - particles shimmer with wave-like pulsing\r\n        const intensity = anim.params?.intensity || 2.0;\r\n        const shimmerSpeed = anim.params?.speed || 3;\r\n        \r\n        // Smooth sine wave for shimmer\r\n        const glow = 1 + Math.sin(progress * Math.PI * 2 * shimmerSpeed) * intensity * 0.3;\r\n        \r\n        // Slight horizontal wave motion\r\n        const waveX = Math.sin(progress * Math.PI * 4) * 5 * this.scaleFactor;\r\n        \r\n        // Create time-based shimmer for particles\r\n        const time = Date.now() * 0.001; // Convert to seconds\r\n        \r\n        // Main shimmer pulse\r\n        const mainPulse = Math.sin(progress * Math.PI * shimmerSpeed * 2) * 0.5 + 0.5;\r\n        \r\n        return {\r\n            offsetX: waveX,\r\n            glow: glow,\r\n            particleGlow: intensity * mainPulse, // Intensity for particles\r\n            flickerTime: time, // Pass time for particle calculations\r\n            flickerEffect: true // Flag to enable flicker effect on particles (shimmer-like)\r\n        };\r\n    }\r\n    \r\n    applyVibrate(anim, progress) {\r\n        // Initialize random vibration pattern if not set\r\n        if (!anim.vibrateAngles) {\r\n            anim.vibrateAngles = {\r\n                x: Math.random() * 2 - 1, // Random factor between -1 and 1\r\n                y: Math.random() * 2 - 1\r\n            };\r\n            // Normalize to unit vector\r\n            const mag = Math.sqrt(anim.vibrateAngles.x ** 2 + anim.vibrateAngles.y ** 2);\r\n            anim.vibrateAngles.x /= mag;\r\n            anim.vibrateAngles.y /= mag;\r\n        }\r\n        const vibration = Math.sin(progress * Math.PI * 2 * anim.params.frequency) * anim.params.amplitude * this.scaleFactor;\r\n        return {\r\n            offsetX: vibration * anim.vibrateAngles.x,\r\n            offsetY: vibration * anim.vibrateAngles.y\r\n        };\r\n    }\r\n    \r\n    applyWave(anim, progress) {\r\n        // Completely rewritten wave - a graceful, flowing infinity symbol motion\r\n        const amp = (anim.params.amplitude || 40) * this.scaleFactor;\r\n        \r\n        // Create a smooth infinity symbol (∞) pattern\r\n        // This feels more like a natural greeting wave\r\n        const t = progress * Math.PI * 2;\r\n        \r\n        // Infinity symbol parametric equations\r\n        // X: figure-8 horizontal motion\r\n        const infinityX = Math.sin(t) * amp;\r\n        \r\n        // Y: gentle vertical bob that rises during the wave\r\n        // Creates a \"lifting\" feeling like a real wave hello\r\n        const liftAmount = -Math.sin(progress * Math.PI) * amp * 0.3; // Lift up during wave\r\n        const infinityY = Math.sin(t * 2) * amp * 0.2 + liftAmount;\r\n        \r\n        // Add a subtle tilt that follows the wave direction\r\n        // Makes the orb \"lean into\" the wave\r\n        const tilt = Math.sin(t) * 5; // ±5 degrees of tilt\r\n        \r\n        // Gentle scale pulse for emphasis\r\n        const scalePulse = 1 + Math.sin(progress * Math.PI * 2) * 0.05; // 5% scale variation\r\n        \r\n        // Glow brightens slightly during wave\r\n        const glowPulse = 1 + Math.sin(progress * Math.PI) * 0.2; // 20% glow increase\r\n        \r\n        return {\r\n            offsetX: infinityX,\r\n            offsetY: infinityY,\r\n            rotation: tilt,\r\n            scale: scalePulse,\r\n            glow: glowPulse\r\n        };\r\n    }\r\n    \r\n    applyBreathe(anim, progress) {\r\n        // Deliberate, mindful breathing animation\r\n        const params = anim.params;\r\n        const holdPercent = params.particleMotion?.holdPercent || 0.1;\r\n        \r\n        // Create a breathing curve with holds at peaks\r\n        let breathPhase;\r\n        if (progress < 0.4) {\r\n            // Inhale phase (0-40%)\r\n            breathPhase = Math.sin((progress / 0.4) * Math.PI / 2);\r\n        } else if (progress < 0.4 + holdPercent) {\r\n            // Hold at full inhale\r\n            breathPhase = 1.0;\r\n        } else if (progress < 0.9) {\r\n            // Exhale phase  \r\n            const exhaleProgress = (progress - 0.4 - holdPercent) / (0.5 - holdPercent);\r\n            breathPhase = Math.cos(exhaleProgress * Math.PI / 2);\r\n        } else {\r\n            // Hold at full exhale\r\n            breathPhase = 0;\r\n        }\r\n        \r\n        // Apply scale changes - expand on inhale\r\n        const scaleAmount = params.scaleAmount || 0.25;\r\n        const scale = 1 + breathPhase * scaleAmount;\r\n        \r\n        // Apply glow changes - brighten on inhale\r\n        const glowAmount = params.glowAmount || 0.4;\r\n        const glow = 1 + breathPhase * glowAmount;\r\n        \r\n        // Store breath phase for particle system\r\n        anim.breathPhase = breathPhase;\r\n        \r\n        return {\r\n            scale: scale,\r\n            glow: glow,\r\n            breathPhase: breathPhase // Pass to particles for synchronized motion\r\n        };\r\n    }\r\n    \r\n    applyMorph(anim, progress) {\r\n        // Fluid morphing effect\r\n        const morph = Math.sin(progress * Math.PI * 2);\r\n        return {\r\n            scale: 1 + morph * 0.1,\r\n            rotation: morph * 10\r\n        };\r\n    }\r\n    \r\n    applySlowBlink(anim, progress) {\r\n        // Simulate blinking by scaling vertically\r\n        let scaleY = 1;\r\n        if (progress < 0.3) {\r\n            // Closing\r\n            scaleY = 1 - (progress / 0.3);\r\n        } else if (progress < 0.5) {\r\n            // Closed\r\n            scaleY = 0;\r\n        } else if (progress < 0.8) {\r\n            // Opening\r\n            scaleY = (progress - 0.5) / 0.3;\r\n        } else {\r\n            // Open\r\n            scaleY = 1;\r\n        }\r\n        \r\n        // Since we can't do scaleY separately, dim the orb instead\r\n        return {\r\n            glow: scaleY\r\n        };\r\n    }\r\n    \r\n    applyLook(anim, progress) {\r\n        // Initialize target position if not set\r\n        if (!anim.targetX) {\r\n            const direction = anim.params.lookDirection;\r\n            const distance = anim.params.lookDistance * 50 * this.scaleFactor; // Convert to pixels and scale\r\n            \r\n            switch(direction) {\r\n                case 'left':\r\n                    anim.targetX = -distance;\r\n                    anim.targetY = 0;\r\n                    break;\r\n                case 'right':\r\n                    anim.targetX = distance;\r\n                    anim.targetY = 0;\r\n                    break;\r\n                case 'up':\r\n                    anim.targetX = 0;\r\n                    anim.targetY = -distance;\r\n                    break;\r\n                case 'down':\r\n                    anim.targetX = 0;\r\n                    anim.targetY = distance;\r\n                    break;\r\n                default: // random\r\n                    const angle = Math.random() * Math.PI * 2;\r\n                    anim.targetX = Math.cos(angle) * distance;\r\n                    anim.targetY = Math.sin(angle) * distance;\r\n            }\r\n        }\r\n        \r\n        // Smooth look with hold\r\n        let lookProgress = progress;\r\n        if (progress < 0.3) {\r\n            // Move to target\r\n            lookProgress = progress / 0.3;\r\n        } else if (progress < 0.7) {\r\n            // Hold\r\n            lookProgress = 1;\r\n        } else {\r\n            // Return\r\n            lookProgress = 1 - (progress - 0.7) / 0.3;\r\n        }\r\n        \r\n        return {\r\n            offsetX: anim.targetX * lookProgress,\r\n            offsetY: anim.targetY * lookProgress\r\n        };\r\n    }\r\n    \r\n    applySettle(anim, progress) {\r\n        // Damped oscillation\r\n        const wobble = Math.sin(progress * Math.PI * anim.params.wobbleFreq) * \r\n                      Math.exp(-progress * 3) * 20 * this.scaleFactor;\r\n        return {\r\n            offsetY: wobble,\r\n            scale: 1 + wobble * 0.01\r\n        };\r\n    }\r\n    \r\n    applyBreathIn(anim, progress) {\r\n        const breathScale = 1 + (anim.params.scaleAmount - 1) * Math.sin(progress * Math.PI / 2);\r\n        return {\r\n            scale: breathScale\r\n        };\r\n    }\r\n    \r\n    applyBreathOut(anim, progress) {\r\n        const breathScale = 1 - (1 - anim.params.scaleAmount) * Math.sin(progress * Math.PI / 2);\r\n        return {\r\n            scale: breathScale\r\n        };\r\n    }\r\n    \r\n    applyBreathHold(anim, progress) {\r\n        // Hold at expanded state\r\n        return {\r\n            scale: anim.params.scaleAmount\r\n        };\r\n    }\r\n    \r\n    applyBreathHoldEmpty(anim, progress) {\r\n        // Hold at contracted state\r\n        return {\r\n            scale: anim.params.scaleAmount\r\n        };\r\n    }\r\n    \r\n    applyJump(anim, progress) {\r\n        let yOffset = 0;\r\n        let scale = 1;\r\n        \r\n        if (progress < 0.2) {\r\n            // Squash phase\r\n            const squashProgress = progress / 0.2;\r\n            scale = 1 - (1 - anim.params.squashAmount) * squashProgress;\r\n        } else if (progress < 0.7) {\r\n            // Jump phase\r\n            const jumpProgress = (progress - 0.2) / 0.5;\r\n            const jumpCurve = Math.sin(jumpProgress * Math.PI);\r\n            yOffset = -anim.params.jumpHeight * jumpCurve * this.scaleFactor;\r\n            scale = anim.params.squashAmount + \r\n                   (anim.params.stretchAmount - anim.params.squashAmount) * jumpCurve;\r\n        } else {\r\n            // Landing phase\r\n            const landProgress = (progress - 0.7) / 0.3;\r\n            scale = anim.params.stretchAmount - \r\n                   (anim.params.stretchAmount - 1) * landProgress;\r\n        }\r\n        \r\n        return {\r\n            offsetY: yOffset,\r\n            scale: scale\r\n        };\r\n    }\r\n    \r\n    applySway(anim, progress) {\r\n        // Gentle pendulum-like swaying motion for the core\r\n        const swayAmplitude = (anim.params?.amplitude || 30) * this.scaleFactor;\r\n        const swayFrequency = anim.params?.frequency || 1;\r\n        \r\n        // Sway side to side with a gentle ease\r\n        const swayX = Math.sin(progress * Math.PI * 2 * swayFrequency) * swayAmplitude;\r\n        \r\n        // Slight vertical bob for realism\r\n        const bobY = Math.sin(progress * Math.PI * 4 * swayFrequency) * swayAmplitude * 0.1;\r\n        \r\n        // Slight rotation to match the sway\r\n        const rotation = Math.sin(progress * Math.PI * 2 * swayFrequency) * 5; // 5 degrees max\r\n        \r\n        return {\r\n            offsetX: swayX,\r\n            offsetY: bobY,\r\n            rotation: rotation\r\n        };\r\n    }\r\n    \r\n    applyRain(anim, progress) {\r\n        // Rain effect - triggers falling particle behavior\r\n        // The actual particle motion is handled by the particle system\r\n        // This just adds a subtle downward drift to the core\r\n        \r\n        const rainIntensity = anim.params?.intensity || 1.0;\r\n        \r\n        // Gentle downward drift\r\n        const driftY = progress * 10 * this.scaleFactor * rainIntensity;\r\n        \r\n        // Slight sway as if affected by wind\r\n        const swayX = Math.sin(progress * Math.PI * 4) * 5 * this.scaleFactor;\r\n        \r\n        // Trigger particle falling effect through the renderer\r\n        if (this.renderer && this.renderer.particleSystem) {\r\n            // Enable falling behavior for particles during rain\r\n            this.renderer.particleSystem.setGestureBehavior('falling', progress > 0 && progress < 1);\r\n        }\r\n        \r\n        return {\r\n            offsetX: swayX,\r\n            offsetY: driftY,\r\n            particleEffect: 'falling'  // Signal to particle system\r\n        };\r\n    }\r\n    \r\n    applyFloat(anim, progress) {\r\n        // Ethereal floating motion with both vertical and horizontal drift\r\n        const floatAmplitude = (anim.params?.amplitude || 20) * this.scaleFactor;\r\n        const floatSpeed = anim.params?.speed || 1;\r\n        \r\n        // Primary vertical float with sine wave\r\n        const floatY = Math.sin(progress * Math.PI * 2 * floatSpeed) * floatAmplitude;\r\n        \r\n        // Secondary horizontal drift for natural movement\r\n        const driftX = Math.sin(progress * Math.PI * 3 * floatSpeed) * floatAmplitude * 0.3;\r\n        \r\n        // Slight scale pulsation for breathing effect\r\n        const scalePulse = 1 + Math.sin(progress * Math.PI * 4 * floatSpeed) * 0.02;\r\n        \r\n        return {\r\n            offsetX: driftX,\r\n            offsetY: floatY,\r\n            scale: scalePulse\r\n        };\r\n    }\r\n    \r\n    applyOrbital(anim, progress) {\r\n        // Orbital motion - particles orbit around core, core stays still\r\n        // This gesture is for particle motion only, not core movement\r\n        return {\r\n            // No core movement - orbital is a particle-only effect\r\n            offsetX: 0,\r\n            offsetY: 0\r\n        };\r\n    }\r\n    \r\n    applyHula(anim, progress) {\r\n        // Hula motion - horizontal figure-8 pattern\r\n        const amplitude = (anim.params?.amplitude || 40) * this.scaleFactor;\r\n        const t = progress * Math.PI * 2;\r\n        \r\n        // Figure-8 parametric equations\r\n        const x = Math.sin(t) * amplitude;\r\n        const y = Math.sin(t * 2) * amplitude * 0.5;\r\n        \r\n        return {\r\n            offsetX: x,\r\n            offsetY: y\r\n        };\r\n    }\r\n    \r\n    applySparkle(anim, progress) {\r\n        // Sparkle effect - make particles glow like fireflies\r\n        // Each particle gets its own random phase for async blinking\r\n        const intensity = anim.params?.intensity || 2.0;\r\n        const baseGlow = 0.8;\r\n        \r\n        // Create firefly-like glow pattern for particles\r\n        // Using time-based phase shifting for each particle\r\n        const time = Date.now() * 0.001; // Convert to seconds\r\n        \r\n        // Main glow pulse for the effect\r\n        const mainPulse = Math.sin(progress * Math.PI * 4) * 0.3 + 0.7;\r\n        \r\n        // This will be used by particles to create firefly effect\r\n        // Each particle will add its own random offset to this\r\n        return {\r\n            particleGlow: intensity, // Intensity for individual particles\r\n            glow: mainPulse, // Gentle overall glow\r\n            fireflyTime: time, // Pass time for particle calculations\r\n            fireflyEffect: true // Flag to enable firefly effect on particles\r\n        };\r\n    }\r\n    \r\n    applyShimmer(anim, progress) {\r\n        // Shimmer effect - subtle, ethereal glow that travels across surface\r\n        // Like moonlight on calm water\r\n        \r\n        const time = Date.now() * 0.001; // Current time in seconds\r\n        const intensity = anim.params?.intensity || 0.3; // Very subtle\r\n        \r\n        // Single slow wave for gentle shimmer\r\n        const wave = Math.sin(time * 2 + progress * Math.PI * 2);\r\n        \r\n        // Very subtle glow variation\r\n        const glowEffect = 1 + wave * intensity;\r\n        \r\n        // Tiny breathing effect\r\n        const scaleEffect = 1 + wave * 0.01; // Just 1% variation\r\n        \r\n        return {\r\n            offsetX: 0, // No movement\r\n            offsetY: 0, // No movement\r\n            glow: glowEffect,\r\n            scale: scaleEffect,\r\n            // Particle-specific data\r\n            particleGlow: 1 + wave * 0.2, // Very subtle particle effect\r\n            shimmerTime: time,\r\n            shimmerWave: wave,\r\n            shimmerEffect: true // Flag to enable shimmer effect on particles\r\n        };\r\n    }\r\n    \r\n    applyWiggle(anim, progress) {\r\n        // Hip-hop wiggle - 4 phase: center -> side -> opposite -> side -> center\r\n        const amplitude = (anim.params?.amplitude || 15) * this.scaleFactor;\r\n        \r\n        // Random starting direction (1 for right, -1 for left)\r\n        if (anim.wiggleDirection === undefined) {\r\n            anim.wiggleDirection = Math.random() < 0.5 ? 1 : -1;\r\n        }\r\n        const direction = anim.wiggleDirection;\r\n        \r\n        // 4-phase movement pattern\r\n        let wiggleX = 0;\r\n        let rotation = 0;\r\n        \r\n        if (progress < 0.25) {\r\n            // Phase 1: Center to first side (0-25%)\r\n            const phase = progress / 0.25;\r\n            wiggleX = amplitude * direction * phase;\r\n            rotation = 3 * direction * phase;\r\n        } else if (progress < 0.5) {\r\n            // Phase 2: First side to opposite side (25-50%)\r\n            const phase = (progress - 0.25) / 0.25;\r\n            wiggleX = amplitude * direction * (1 - 2 * phase);\r\n            rotation = 3 * direction * (1 - 2 * phase);\r\n        } else if (progress < 0.75) {\r\n            // Phase 3: Opposite side back to first side (50-75%)\r\n            const phase = (progress - 0.5) / 0.25;\r\n            wiggleX = amplitude * -direction * (1 - 2 * phase);\r\n            rotation = 3 * -direction * (1 - 2 * phase);\r\n        } else {\r\n            // Phase 4: First side back to center (75-100%)\r\n            const phase = (progress - 0.75) / 0.25;\r\n            wiggleX = amplitude * direction * (1 - phase);\r\n            rotation = 3 * direction * (1 - phase);\r\n        }\r\n        \r\n        // Subtle bounce synced with movement\r\n        const bounceY = Math.abs(Math.sin(progress * Math.PI * 4)) * amplitude * 0.15;\r\n        \r\n        return {\r\n            offsetX: wiggleX,\r\n            offsetY: -bounceY,\r\n            rotation: rotation\r\n        };\r\n    }\r\n    \r\n    applyGroove(anim, progress) {\r\n        // Groove motion - smooth, flowing dance movement\r\n        const amplitude = (anim.params?.amplitude || 25) * this.scaleFactor;\r\n        \r\n        // Smoother wave pattern with organic flow\r\n        const wave1 = Math.sin(progress * Math.PI * 2) * amplitude;\r\n        const wave2 = Math.sin(progress * Math.PI * 3 + 0.5) * amplitude * 0.4;\r\n        const grooveX = wave1 + wave2;\r\n        \r\n        // Gentle vertical bob with offset timing\r\n        const grooveY = Math.sin(progress * Math.PI * 4 + 0.3) * amplitude * 0.25;\r\n        \r\n        // Subtle pulse that breathes naturally\r\n        const scale = 1 + Math.sin(progress * Math.PI * 3 + 0.7) * 0.03;\r\n        \r\n        // Slight rotation for more natural movement\r\n        const rotation = Math.sin(progress * Math.PI * 2 + 0.2) * 8;\r\n        \r\n        return {\r\n            offsetX: grooveX,\r\n            offsetY: grooveY,\r\n            scale: scale,\r\n            rotation: rotation\r\n        };\r\n    }\r\n    \r\n    applyPoint(anim, progress) {\r\n        // Point gesture - directional lean/stretch with return to center\r\n        \r\n        // Random direction if not specified - only left or right\r\n        if (anim.pointDirection === undefined) {\r\n            // Randomly choose left (1) or right (-1)\r\n            anim.pointDirection = Math.random() < 0.5 ? -1 : 1;\r\n        }\r\n        \r\n        const direction = anim.params?.direction !== undefined ? anim.params.direction : anim.pointDirection;\r\n        const distance = (anim.params?.distance || 40) * this.scaleFactor;\r\n        \r\n        // Three-phase animation:\r\n        // 0.0-0.4: Move to point position\r\n        // 0.4-0.6: Hold at point\r\n        // 0.6-1.0: Return to center\r\n        let motionProgress;\r\n        let scaleProgress;\r\n        \r\n        if (progress < 0.4) {\r\n            // Phase 1: Move to point (ease out)\r\n            motionProgress = 1 - Math.pow(1 - (progress / 0.4), 3);\r\n            scaleProgress = motionProgress;\r\n        } else if (progress < 0.6) {\r\n            // Phase 2: Hold at point\r\n            motionProgress = 1.0;\r\n            scaleProgress = 1.0;\r\n        } else {\r\n            // Phase 3: Return to center (ease in)\r\n            motionProgress = Math.pow(1 - ((progress - 0.6) / 0.4), 3);\r\n            scaleProgress = motionProgress;\r\n        }\r\n        \r\n        // Move in direction (direction is -1 for left, 1 for right)\r\n        const offsetX = direction * distance * motionProgress;\r\n        const offsetY = -Math.abs(distance * 0.15 * motionProgress); // Slight upward movement when pointing\r\n        \r\n        // Stretch effect in pointing direction\r\n        const scale = 1 + 0.15 * scaleProgress; // 15% stretch\r\n        \r\n        // Add slight tilt when pointing\r\n        const rotation = direction * 5 * scaleProgress; // Tilt 5 degrees in pointing direction\r\n        \r\n        return {\r\n            offsetX: offsetX,\r\n            offsetY: offsetY,\r\n            scale: scale,\r\n            rotation: rotation\r\n        };\r\n    }\r\n    \r\n    applyLean(anim, progress) {\r\n        // Lean gesture - tilt to one side\r\n        const angle = anim.params?.angle || 15; // Degrees\r\n        const side = anim.params?.side || 1; // 1 for right, -1 for left\r\n        \r\n        // Smooth ease in-out\r\n        const easedProgress = Math.sin(progress * Math.PI);\r\n        \r\n        // Apply rotation and slight offset\r\n        const rotation = angle * side * easedProgress;\r\n        const offsetX = side * 10 * this.scaleFactor * easedProgress;\r\n        \r\n        return {\r\n            offsetX: offsetX,\r\n            rotation: rotation\r\n        };\r\n    }\r\n    \r\n    applyReach(anim, progress) {\r\n        // Reach gesture - stretch upward or outward\r\n        const direction = anim.params?.direction || -Math.PI/2; // Default upward\r\n        const distance = (anim.params?.distance || 40) * this.scaleFactor;\r\n        \r\n        // Two-phase motion: reach out, then return\r\n        let motionProgress;\r\n        if (progress < 0.4) {\r\n            // Reaching phase\r\n            motionProgress = progress / 0.4;\r\n        } else if (progress < 0.6) {\r\n            // Hold phase\r\n            motionProgress = 1;\r\n        } else {\r\n            // Return phase\r\n            motionProgress = 1 - (progress - 0.6) / 0.4;\r\n        }\r\n        \r\n        // Apply easing\r\n        motionProgress = motionProgress * motionProgress * (3 - 2 * motionProgress);\r\n        \r\n        const offsetX = Math.cos(direction) * distance * motionProgress;\r\n        const offsetY = Math.sin(direction) * distance * motionProgress;\r\n        \r\n        // Stretch slightly when reaching\r\n        const scale = 1 + motionProgress * 0.15;\r\n        \r\n        return {\r\n            offsetX: offsetX,\r\n            offsetY: offsetY,\r\n            scale: scale\r\n        };\r\n    }\r\n    \r\n    applyHeadBob(anim, progress) {\r\n        // Head bob motion - rhythmic vertical movement\r\n        const amplitude = (anim.params?.amplitude || 20) * this.scaleFactor;\r\n        const frequency = anim.params?.frequency || 2;\r\n        \r\n        // Vertical bob with sharp down, smooth up\r\n        const bobPhase = (progress * frequency) % 1;\r\n        let bobY;\r\n        if (bobPhase < 0.3) {\r\n            // Quick down\r\n            bobY = -amplitude * (bobPhase / 0.3);\r\n        } else {\r\n            // Smooth up\r\n            bobY = -amplitude * (1 - (bobPhase - 0.3) / 0.7);\r\n        }\r\n        \r\n        // Slight forward tilt on the down beat\r\n        const rotation = bobPhase < 0.3 ? -3 : 0;\r\n        \r\n        return {\r\n            offsetY: bobY,\r\n            rotation: rotation\r\n        };\r\n    }\r\n    \r\n    applyOrbit(anim, progress) {\r\n        // Orbit motion - circular path around center\r\n        const radius = (anim.params?.radius || 30) * this.scaleFactor;\r\n        const speed = anim.params?.speed || 1;\r\n        \r\n        // Circular motion\r\n        const angle = progress * Math.PI * 2 * speed;\r\n        const offsetX = Math.cos(angle) * radius;\r\n        const offsetY = Math.sin(angle) * radius;\r\n        \r\n        return {\r\n            offsetX: offsetX,\r\n            offsetY: offsetY\r\n        };\r\n    }\r\n\r\n    // Individual gesture methods - these will be moved from EmotiveRenderer\r\n    startBounce() { this.startGesture('bounce'); }\r\n    startPulse() { this.startGesture('pulse'); }\r\n    startShake() { this.startGesture('shake'); }\r\n    startSpin() { this.startGesture('spin'); }\r\n    startNod() { this.startGesture('nod'); }\r\n    startTilt() { this.startGesture('tilt'); }\r\n    startExpand() { this.startGesture('expand'); }\r\n    startContract() { this.startGesture('contract'); }\r\n    startFlash() { this.startGesture('flash'); }\r\n    startDrift() { this.startGesture('drift'); }\r\n    startStretch() { this.startGesture('stretch'); }\r\n    startGlow() { this.startGesture('glow'); }\r\n    startFlicker() { this.startGesture('flicker'); }\r\n    startVibrate() { this.startGesture('vibrate'); }\r\n    startOrbital() { this.startGesture('orbital'); }\r\n    startHula() { this.startGesture('hula'); }\r\n    startWave() { this.startGesture('wave'); }\r\n    startBreathe() { this.startGesture('breathe'); }\r\n    startMorph() { this.startGesture('morph'); }\r\n    startSlowBlink() { this.startGesture('slowBlink'); }\r\n    startLook() { this.startGesture('look'); }\r\n    startSettle() { this.startGesture('settle'); }\r\n    startBreathIn() { this.startGesture('breathIn'); }\r\n    startBreathOut() { this.startGesture('breathOut'); }\r\n    startBreathHold() { this.startGesture('breathHold'); }\r\n    startBreathHoldEmpty() { this.startGesture('breathHoldEmpty'); }\r\n    startJump() { this.startGesture('jump'); }\r\n    startSway() { this.startGesture('sway'); }\r\n    startFloat() { this.startGesture('float'); }\r\n    startRain() { this.startGesture('rain'); }\r\n    startRunningMan() { this.startGesture('runningman'); }\r\n    startCharleston() { this.startGesture('charleston'); }\r\n    startSparkle() { this.startGesture('sparkle'); }\r\n    startShimmer() { this.startGesture('shimmer'); }\r\n    startWiggle() { this.startGesture('wiggle'); }\r\n    startGroove() { this.startGesture('groove'); }\r\n    startPoint() { this.startGesture('point'); }\r\n    startLean() { this.startGesture('lean'); }\r\n    startReach() { this.startGesture('reach'); }\r\n    startHeadBob() { this.startGesture('headBob'); }\r\n    startOrbit() { this.startGesture('orbit'); }\r\n    \r\n    applyRunningMan(anim, progress) {\r\n        // Simple running shuffle - quick slide and step\r\n        const slide = Math.sin(progress * Math.PI * 4) * 20 * this.scaleFactor;\r\n        const step = -Math.abs(Math.sin(progress * Math.PI * 8)) * 10 * this.scaleFactor;\r\n        \r\n        return {\r\n            offsetX: slide,\r\n            offsetY: step,\r\n            rotation: slide * 0.3,\r\n            scaleY: 1 - Math.abs(Math.sin(progress * Math.PI * 8)) * 0.05\r\n        };\r\n    }\r\n    \r\n    applyCharleston(anim, progress) {\r\n        // Charleston - crisscross kicks\r\n        const kick = Math.sin(progress * Math.PI * 8) * 25 * this.scaleFactor;\r\n        const hop = -Math.abs(Math.sin(progress * Math.PI * 8)) * 10 * this.scaleFactor;\r\n        \r\n        return {\r\n            offsetX: kick,\r\n            offsetY: hop,\r\n            rotation: kick * 0.6,\r\n            scaleY: 1 - Math.abs(Math.sin(progress * Math.PI * 8)) * 0.06\r\n        };\r\n    }\r\n    \r\n    startRunningMan() { this.startGesture('runningman'); }\r\n    startCharleston() { this.startGesture('charleston'); }\r\n\r\n    /**\r\n     * Pause current animation (called on tab switch)\r\n     */\r\n    pauseCurrentAnimation() {\r\n        // Store pause time for all active animations\r\n        const now = performance.now();\r\n        for (const [type, anim] of Object.entries(this.gestureAnimations)) {\r\n            if (anim.active) {\r\n                anim.pausedAt = now;\r\n                anim.pausedProgress = anim.progress;\r\n            }\r\n        }\r\n        this.isPaused = true;\r\n    }\r\n\r\n    /**\r\n     * Resume animations after pause\r\n     */\r\n    resumeAnimation() {\r\n        if (!this.isPaused) return;\r\n\r\n        const now = performance.now();\r\n        for (const [type, anim] of Object.entries(this.gestureAnimations)) {\r\n            if (anim.active && anim.pausedAt) {\r\n                // Adjust start time to account for pause\r\n                const pauseDuration = now - anim.pausedAt;\r\n                if (anim.startTime) {\r\n                    anim.startTime += pauseDuration;\r\n                }\r\n                // Clear pause state\r\n                delete anim.pausedAt;\r\n                delete anim.pausedProgress;\r\n            }\r\n        }\r\n        this.isPaused = false;\r\n    }\r\n\r\n    /**\r\n     * Reset all gesture animations\r\n     */\r\n    reset() {\r\n        // Clear all active animations\r\n        for (const [type, anim] of Object.entries(this.gestureAnimations)) {\r\n            anim.active = false;\r\n            anim.progress = 0;\r\n            anim.params = {};\r\n            delete anim.startTime;\r\n            delete anim.pausedAt;\r\n            delete anim.pausedProgress;\r\n        }\r\n        this.activeGestures.clear();\r\n        this.isPaused = false;\r\n    }\r\n}\r\n\r\nexport default GestureAnimator;","/**\r\n * ColorUtilities - Color manipulation and transition utilities for EmotiveRenderer\r\n * @module core/renderer/ColorUtilities\r\n */\r\n\r\nexport class ColorUtilities {\r\n    constructor() {\r\n        this.colorTransition = null;\r\n    }\r\n\r\n    /**\r\n     * Apply undertone modifiers to current visual properties\r\n     * Will be moved from EmotiveRenderer\r\n     */\r\n    applyUndertoneModifiers(undertone, visualProperties) {\r\n        // Implementation will be moved here\r\n        return visualProperties;\r\n    }\r\n\r\n    /**\r\n     * Apply undertone to a color\r\n     * @param {string} baseColor - Base hex color\r\n     * @param {string|Object} undertone - Undertone modifier or weighted object\r\n     * @returns {string} Modified hex color\r\n     */\r\n    applyUndertoneToColor(baseColor, undertone) {\r\n        // Handle weighted modifier for smooth transitions\r\n        if (undertone && typeof undertone === 'object' && undertone.weight !== undefined) {\r\n            const weight = undertone.weight;\r\n            const undertoneType = undertone.type || 'clear';\r\n            \r\n            if (undertoneType === 'clear' || weight === 0) {\r\n                return baseColor;\r\n            }\r\n            \r\n            // Get full saturation adjustment for this undertone\r\n            const fullySaturated = this.applyUndertoneSaturation(baseColor, undertoneType);\r\n            \r\n            // Interpolate between base and fully saturated based on weight\r\n            const rgb1 = this.hexToRgb(baseColor);\r\n            const rgb2 = this.hexToRgb(fullySaturated);\r\n            \r\n            const r = Math.round(rgb1.r + (rgb2.r - rgb1.r) * weight);\r\n            const g = Math.round(rgb1.g + (rgb2.g - rgb1.g) * weight);\r\n            const b = Math.round(rgb1.b + (rgb2.b - rgb1.b) * weight);\r\n            \r\n            return this.rgbToHex(r, g, b);\r\n        }\r\n        \r\n        // Direct string-based undertone - use saturation system\r\n        if (!undertone || undertone === 'clear') return baseColor;\r\n        \r\n        return this.applyUndertoneSaturation(baseColor, undertone);\r\n    }\r\n\r\n    /**\r\n     * Convert hex color to RGB\r\n     * @param {string} hex - Hex color string\r\n     * @returns {Object} RGB values\r\n     */\r\n    hexToRgb(hex) {\r\n        const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        return result ? {\r\n            r: parseInt(result[1], 16),\r\n            g: parseInt(result[2], 16),\r\n            b: parseInt(result[3], 16)\r\n        } : null;\r\n    }\r\n\r\n    /**\r\n     * Convert RGB to HSL\r\n     */\r\n    rgbToHsl(r, g, b) {\r\n        r /= 255;\r\n        g /= 255;\r\n        b /= 255;\r\n\r\n        const max = Math.max(r, g, b);\r\n        const min = Math.min(r, g, b);\r\n        let h, s, l = (max + min) / 2;\r\n\r\n        if (max === min) {\r\n            h = s = 0; // achromatic\r\n        } else {\r\n            const d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            \r\n            switch (max) {\r\n                case r: h = ((g - b) / d + (g < b ? 6 : 0)) / 6; break;\r\n                case g: h = ((b - r) / d + 2) / 6; break;\r\n                case b: h = ((r - g) / d + 4) / 6; break;\r\n            }\r\n        }\r\n\r\n        return { h: h * 360, s: s * 100, l: l * 100 }; // Convert s and l to percentages\r\n    }\r\n\r\n    /**\r\n     * Convert HSL to hex color\r\n     */\r\n    hslToHex(h, s, l) {\r\n        h = h / 360;\r\n        s = s / 100;\r\n        l = l / 100;\r\n\r\n        let r, g, b;\r\n\r\n        if (s === 0) {\r\n            r = g = b = l; // achromatic\r\n        } else {\r\n            const hue2rgb = (p, q, t) => {\r\n                if (t < 0) t += 1;\r\n                if (t > 1) t -= 1;\r\n                if (t < 1/6) return p + (q - p) * 6 * t;\r\n                if (t < 1/2) return q;\r\n                if (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n                return p;\r\n            };\r\n\r\n            const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n            const p = 2 * l - q;\r\n            r = hue2rgb(p, q, h + 1/3);\r\n            g = hue2rgb(p, q, h);\r\n            b = hue2rgb(p, q, h - 1/3);\r\n        }\r\n\r\n        const toHex = x => {\r\n            const hex = Math.round(x * 255).toString(16);\r\n            return hex.length === 1 ? '0' + hex : hex;\r\n        };\r\n\r\n        return `#${toHex(r)}${toHex(g)}${toHex(b)}`;\r\n    }\r\n\r\n    /**\r\n     * Apply undertone saturation adjustment\r\n     */\r\n    applyUndertoneSaturation(baseColor, undertone) {\r\n        const rgb = this.hexToRgb(baseColor);\r\n        const hsl = this.rgbToHsl(rgb.r, rgb.g, rgb.b);\r\n        \r\n        // Saturation adjustments by undertone\r\n        const saturationModifiers = {\r\n            // Positive undertones (higher saturation)\r\n            'intense': 1.5,      // +50% saturation (very vivid)\r\n            'confident': 1.3,    // +30% saturation (bold)\r\n            'energetic': 1.2,    // +20% saturation (vibrant)\r\n            'upbeat': 1.2,       // +20% saturation\r\n            // Neutral/slightly nervous\r\n            'nervous': 1.15,     // +15% saturation (slightly heightened)\r\n            // Negative undertones (lower saturation)\r\n            'mellow': 0.8,       // -20% saturation  \r\n            'tired': 0.8,        // -20% saturation (washed out)\r\n            'subdued': 0.5       // -50% saturation (ghostly)\r\n        };\r\n        \r\n        const modifier = saturationModifiers[undertone] || 1.0;\r\n        hsl.s = Math.min(100, hsl.s * modifier);\r\n        \r\n        return this.hslToHex(hsl.h, hsl.s, hsl.l);\r\n    }\r\n    \r\n    /**\r\n     * Convert RGB values to hex\r\n     */\r\n    rgbToHex(r, g, b) {\r\n        const toHex = x => {\r\n            const hex = Math.round(x).toString(16);\r\n            return hex.length === 1 ? '0' + hex : hex;\r\n        };\r\n        return `#${toHex(r)}${toHex(g)}${toHex(b)}`;\r\n    }\r\n    \r\n    /**\r\n     * Start a color transition\r\n     */\r\n    startColorTransition(targetColor, targetIntensity, duration = 1500) {\r\n        // Don't start a new transition if we're already at the target\r\n        if (this.currentColor === targetColor && \r\n            this.currentIntensity === targetIntensity) {\r\n            return;\r\n        }\r\n        \r\n        this.colorTransition = {\r\n            active: true,\r\n            fromColor: this.currentColor || '#ffffff',\r\n            toColor: targetColor,\r\n            fromIntensity: this.currentIntensity || 1.0,\r\n            toIntensity: targetIntensity,\r\n            progress: 0,\r\n            startTime: performance.now(),\r\n            duration: duration\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Update color transition\r\n     */\r\n    updateColorTransition(deltaTime) {\r\n        if (!this.colorTransition || !this.colorTransition.active) return null;\r\n        \r\n        const elapsed = performance.now() - this.colorTransition.startTime;\r\n        const progress = Math.min(elapsed / this.colorTransition.duration, 1);\r\n        \r\n        // Use ease-out-quad for smooth deceleration\r\n        const eased = 1 - Math.pow(1 - progress, 2);\r\n        \r\n        // Interpolate color\r\n        const from = this.hexToRgb(this.colorTransition.fromColor);\r\n        const to = this.hexToRgb(this.colorTransition.toColor);\r\n        \r\n        const r = Math.round(from.r + (to.r - from.r) * eased);\r\n        const g = Math.round(from.g + (to.g - from.g) * eased);\r\n        const b = Math.round(from.b + (to.b - from.b) * eased);\r\n        \r\n        const currentColor = this.rgbToHex(r, g, b);\r\n        const currentIntensity = this.colorTransition.fromIntensity + \r\n            (this.colorTransition.toIntensity - this.colorTransition.fromIntensity) * eased;\r\n        \r\n        // Store current values\r\n        this.currentColor = currentColor;\r\n        this.currentIntensity = currentIntensity;\r\n        \r\n        // Complete transition if done\r\n        if (progress >= 1) {\r\n            this.colorTransition.active = false;\r\n        }\r\n        \r\n        return {\r\n            color: currentColor,\r\n            intensity: currentIntensity\r\n        };\r\n    }\r\n}\r\n\r\nexport default ColorUtilities;","/**\r\n * SpecialEffects - Special visual effects for EmotiveRenderer\r\n * @module core/renderer/SpecialEffects\r\n */\r\n\r\nexport class SpecialEffects {\r\n    constructor(renderer) {\r\n        this.renderer = renderer;\r\n        this.ctx = renderer.ctx;\r\n        this.canvas = renderer.canvasManager?.canvas || renderer.canvas;\r\n        \r\n        // Effect states\r\n        this.recordingActive = false;\r\n        this.sleepMode = false;\r\n        this.speakingActive = false;\r\n        this.zenModeActive = false;\r\n        \r\n        // Speaking rings\r\n        this.speakingRings = [];\r\n        this.ringSpawnTimer = 0;\r\n        this.ringSpawnInterval = 300;\r\n        this.maxRings = 3;\r\n        \r\n        // Sleep Z's\r\n        this.sleepZ = [];\r\n        \r\n        // Sparkle particles\r\n        this.sparkles = [];\r\n        \r\n        // Chromatic aberration effect\r\n        this.chromaticAberration = {\r\n            active: false,\r\n            intensity: 0,\r\n            targetIntensity: 0,\r\n            fadeSpeed: 0.01, // Very slow fade for testing\r\n            maxOffset: 30 // Much larger offset for testing\r\n        };\r\n        \r\n        // Helper method references\r\n        this.scaleValue = (value) => renderer.scaleValue(value);\r\n        this.hexToRgba = (hex, alpha) => renderer.hexToRgba(hex, alpha);\r\n    }\r\n\r\n    /**\r\n     * Render recording glow effect\r\n     */\r\n    renderRecordingGlow(x, y, radius, intensity) {\r\n        const ctx = this.ctx;\r\n        const glowSize = radius * 2.5;\r\n        const gradient = ctx.createRadialGradient(x, y, 0, x, y, glowSize);\r\n        \r\n        gradient.addColorStop(0, `rgba(255, 0, 0, ${0.3 * intensity})`);\r\n        gradient.addColorStop(0.5, `rgba(255, 0, 0, ${0.15 * intensity})`);\r\n        gradient.addColorStop(1, 'rgba(255, 0, 0, 0)');\r\n        \r\n        ctx.save();\r\n        ctx.globalCompositeOperation = 'screen';\r\n        ctx.fillStyle = gradient;\r\n        ctx.fillRect(x - glowSize, y - glowSize, glowSize * 2, glowSize * 2);\r\n        ctx.restore();\r\n    }\r\n\r\n    /**\r\n     * Render recording indicator\r\n     */\r\n    renderRecordingIndicator(x, y) {\r\n        const time = Date.now() / 1000;\r\n        const pulse = 0.8 + Math.sin(time * 2) * 0.2;\r\n        \r\n        this.ctx.save();\r\n        this.ctx.translate(x, y);\r\n        \r\n        // Outer glow for text\r\n        this.ctx.shadowBlur = this.scaleValue(15);\r\n        this.ctx.shadowColor = `rgba(255, 0, 0, ${pulse * 0.8})`;\r\n        \r\n        // Main REC text\r\n        const recSize = this.scaleValue(80);\r\n        this.ctx.font = `italic 900 ${recSize}px \"Poppins\", sans-serif`;\r\n        this.ctx.fillStyle = `rgba(255, 0, 0, ${pulse})`;\r\n        this.ctx.textAlign = 'center';\r\n        this.ctx.textBaseline = 'middle';\r\n        this.ctx.fillText('REC', 0, 0);\r\n        \r\n        // Inner highlight\r\n        this.ctx.shadowBlur = 0;\r\n        this.ctx.font = `italic 900 ${recSize - 1}px \"Poppins\", sans-serif`;\r\n        this.ctx.fillStyle = `rgba(255, 255, 255, ${pulse * 0.3})`;\r\n        this.ctx.fillText('REC', -0.5, -0.5);\r\n        \r\n        this.ctx.restore();\r\n    }\r\n\r\n    /**\r\n     * Render sleep indicator with Z's\r\n     */\r\n    renderSleepIndicator(x, y, deltaTime) {\r\n        // Spawn new Z periodically\r\n        this.ringSpawnTimer += deltaTime;\r\n        if (this.ringSpawnTimer >= 2000 && this.sleepZ.length < 3) {\r\n            const weights = ['300', '500', '700', '900'];\r\n            const randomWeight = weights[Math.floor(Math.random() * weights.length)];\r\n            const randomCase = Math.random() > 0.5 ? 'Z' : 'z';\r\n            \r\n            this.sleepZ.push({\r\n                x: x + Math.random() * this.scaleValue(30) - this.scaleValue(15),\r\n                y: y + this.scaleValue(80),\r\n                size: this.scaleValue((24 + Math.random() * 8) * 3),\r\n                opacity: 1.0,\r\n                speed: -0.025,\r\n                drift: Math.random() * this.scaleValue(20) - this.scaleValue(10),\r\n                lifetime: 0,\r\n                rotation: Math.random() * 30 - 15,\r\n                text: randomCase,\r\n                weight: randomWeight\r\n            });\r\n            this.ringSpawnTimer = 0;\r\n        }\r\n        \r\n        // Update and render Z's\r\n        this.sleepZ = this.sleepZ.filter(z => {\r\n            z.lifetime += deltaTime;\r\n            z.y += z.speed * deltaTime;\r\n            z.x += Math.sin(z.lifetime * 0.0008) * z.drift * 0.008;\r\n            z.rotation += deltaTime * 0.01;\r\n            \r\n            // Gradient fade out\r\n            const fadeStart = 2000;\r\n            const fadeEnd = 4000;\r\n            if (z.lifetime < fadeStart) {\r\n                z.opacity = 1.0;\r\n            } else if (z.lifetime < fadeEnd) {\r\n                z.opacity = 1.0 - ((z.lifetime - fadeStart) / (fadeEnd - fadeStart));\r\n            } else {\r\n                z.opacity = 0;\r\n            }\r\n            \r\n            if (z.opacity > 0.01) {\r\n                this.ctx.save();\r\n                this.ctx.translate(z.x, z.y);\r\n                this.ctx.rotate(z.rotation * Math.PI / 180);\r\n                \r\n                const baseColor = this.renderer.state.glowColor || '#4a90e2';\r\n                \r\n                // Outer glow\r\n                this.ctx.shadowBlur = this.scaleValue(15);\r\n                this.ctx.shadowColor = this.hexToRgba(baseColor, z.opacity * 0.5);\r\n                \r\n                // Main Z with gradient\r\n                const gradient = this.ctx.createLinearGradient(-z.size/2, -z.size/2, z.size/2, z.size/2);\r\n                gradient.addColorStop(0, this.hexToRgba(baseColor, z.opacity));\r\n                gradient.addColorStop(0.5, this.hexToRgba('#ffffff', z.opacity * 0.9));\r\n                gradient.addColorStop(1, this.hexToRgba(baseColor, z.opacity * 0.7));\r\n                \r\n                this.ctx.font = `italic ${z.weight || '900'} ${z.size}px 'Poppins', sans-serif`;\r\n                this.ctx.fillStyle = gradient;\r\n                this.ctx.textAlign = 'center';\r\n                this.ctx.textBaseline = 'middle';\r\n                this.ctx.fillText(z.text || 'Z', 0, 0);\r\n                \r\n                // Inner highlight\r\n                this.ctx.shadowBlur = 0;\r\n                this.ctx.font = `italic ${z.weight || '900'} ${z.size * 0.9}px 'Poppins', sans-serif`;\r\n                this.ctx.fillStyle = this.hexToRgba('#ffffff', z.opacity * 0.3);\r\n                this.ctx.fillText(z.text || 'Z', -1, -1);\r\n                \r\n                this.ctx.restore();\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Render speaking rings effect\r\n     */\r\n    renderSpeakingRings(centerX, centerY, coreRadius, deltaTime) {\r\n        // Spawn new rings periodically\r\n        this.ringSpawnTimer += deltaTime;\r\n        if (this.ringSpawnTimer >= this.ringSpawnInterval && this.speakingRings.length < this.maxRings) {\r\n            this.speakingRings.push({\r\n                radius: coreRadius,\r\n                opacity: 0.8,\r\n                speed: 0.15\r\n            });\r\n            this.ringSpawnTimer = 0;\r\n        }\r\n        \r\n        // Update and render existing rings\r\n        this.speakingRings = this.speakingRings.filter(ring => {\r\n            ring.radius += ring.speed * deltaTime;\r\n            ring.opacity = Math.max(0, 0.8 * (1 - (ring.radius - coreRadius) / (coreRadius * 2)));\r\n            \r\n            if (ring.opacity > 0.01) {\r\n                this.ctx.strokeStyle = this.hexToRgba(this.renderer.state.glowColor, ring.opacity);\r\n                this.ctx.lineWidth = this.scaleValue(2);\r\n                this.ctx.beginPath();\r\n                this.ctx.arc(centerX, centerY, ring.radius, 0, Math.PI * 2);\r\n                this.ctx.stroke();\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Render zen core effect\r\n     */\r\n    renderZenCore(x, y, radius, time) {\r\n        const ctx = this.ctx;\r\n        const breathPhase = Math.sin(time * 0.001) * 0.5 + 0.5;\r\n        const zenRadius = radius * (0.9 + breathPhase * 0.1);\r\n        \r\n        // Inner glow\r\n        const gradient = ctx.createRadialGradient(x, y, 0, x, y, zenRadius);\r\n        gradient.addColorStop(0, 'rgba(147, 112, 219, 0.8)');\r\n        gradient.addColorStop(0.7, 'rgba(147, 112, 219, 0.3)');\r\n        gradient.addColorStop(1, 'rgba(147, 112, 219, 0)');\r\n        \r\n        ctx.save();\r\n        ctx.globalCompositeOperation = 'screen';\r\n        ctx.fillStyle = gradient;\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, zenRadius * 1.5, 0, Math.PI * 2);\r\n        ctx.fill();\r\n        ctx.restore();\r\n    }\r\n\r\n    /**\r\n     * Start recording effect\r\n     */\r\n    startRecording() {\r\n        this.recordingActive = true;\r\n    }\r\n\r\n    /**\r\n     * Stop recording effect\r\n     */\r\n    stopRecording() {\r\n        this.recordingActive = false;\r\n    }\r\n\r\n    /**\r\n     * Enter sleep mode\r\n     */\r\n    enterSleepMode() {\r\n        this.sleepMode = true;\r\n    }\r\n\r\n    /**\r\n     * Wake up from sleep\r\n     */\r\n    wakeUp() {\r\n        this.sleepMode = false;\r\n    }\r\n\r\n    /**\r\n     * Start speaking effect\r\n     */\r\n    startSpeaking() {\r\n        this.speakingActive = true;\r\n    }\r\n\r\n    /**\r\n     * Stop speaking effect\r\n     */\r\n    stopSpeaking() {\r\n        this.speakingActive = false;\r\n    }\r\n\r\n    /**\r\n     * Create a sparkle particle\r\n     */\r\n    createSparkle(x, y, options = {}) {\r\n        this.sparkles.push({\r\n            x,\r\n            y,\r\n            vx: options.velocity?.x || 0,\r\n            vy: options.velocity?.y || 0,\r\n            size: options.size || 3,\r\n            color: options.color || 'hsl(50, 100%, 70%)',\r\n            lifetime: options.lifetime || 1000,\r\n            maxLifetime: options.lifetime || 1000,\r\n            rotation: Math.random() * Math.PI * 2,\r\n            rotationSpeed: (Math.random() - 0.5) * 0.2\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Render all sparkles\r\n     */\r\n    renderSparkles() {\r\n        const ctx = this.ctx;\r\n        \r\n        this.sparkles.forEach(sparkle => {\r\n            const progress = 1 - (sparkle.lifetime / sparkle.maxLifetime);\r\n            const opacity = 1 - progress; // Fade out over time\r\n            \r\n            ctx.save();\r\n            ctx.translate(sparkle.x, sparkle.y);\r\n            ctx.rotate(sparkle.rotation);\r\n            \r\n            // Draw sparkle as a star shape\r\n            const size = this.scaleValue(sparkle.size * (1 - progress * 0.5));\r\n            \r\n            // Draw a 5-pointed star with smoother interior angles\r\n            ctx.beginPath();\r\n            const points = 5;\r\n            const outerRadius = size;\r\n            const innerRadius = size * 0.38; // Golden ratio-ish for smoother interior angles\r\n            \r\n            for (let i = 0; i < points * 2; i++) {\r\n                const angle = (i * Math.PI / points) - Math.PI / 2; // Start from top\r\n                const radius = i % 2 === 0 ? outerRadius : innerRadius;\r\n                \r\n                if (i === 0) {\r\n                    ctx.moveTo(\r\n                        Math.cos(angle) * radius,\r\n                        Math.sin(angle) * radius\r\n                    );\r\n                } else {\r\n                    ctx.lineTo(\r\n                        Math.cos(angle) * radius,\r\n                        Math.sin(angle) * radius\r\n                    );\r\n                }\r\n            }\r\n            ctx.closePath();\r\n            \r\n            // Add glow effect\r\n            ctx.shadowBlur = this.scaleValue(10);\r\n            ctx.shadowColor = sparkle.color;\r\n            \r\n            ctx.fillStyle = sparkle.color.replace('70%', `${70 + progress * 30}%`).replace(')', `, ${opacity})`).replace('hsl', 'hsla');\r\n            ctx.fill();\r\n            \r\n            ctx.restore();\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Trigger chromatic aberration effect\r\n     * @param {number} intensity - Effect intensity (0-1)\r\n     */\r\n    triggerChromaticAberration(intensity = 0.8) {\r\n        this.chromaticAberration.active = true;\r\n        this.chromaticAberration.targetIntensity = Math.min(1, intensity);\r\n        this.chromaticAberration.intensity = this.chromaticAberration.targetIntensity;\r\n        \r\n        // Get the actual visible canvas from the document\r\n        const visibleCanvas = document.getElementById('emotive-canvas') || \r\n                            document.querySelector('canvas') || \r\n                            this.canvas;\r\n        \r\n        console.log('[Chromatic] Visible canvas element:', visibleCanvas);\r\n        console.log('[Chromatic] Canvas ID:', visibleCanvas?.id);\r\n        \r\n        if (visibleCanvas) {\r\n            // Remove any existing animation\r\n            visibleCanvas.style.animation = 'none';\r\n            \r\n            // Force reflow to reset animation\r\n            void visibleCanvas.offsetHeight;\r\n            \r\n            // Add CSS styles if not already present\r\n            if (!document.getElementById('chromatic-styles')) {\r\n                const style = document.createElement('style');\r\n                style.id = 'chromatic-styles';\r\n                style.textContent = `\r\n                    @keyframes chromaticGlitch {\r\n                        0% {\r\n                            filter: none;\r\n                            transform: translateX(0);\r\n                        }\r\n                        15% {\r\n                            filter: drop-shadow(-2px 0 0 rgba(255,0,0,0.7)) drop-shadow(2px 0 0 rgba(0,255,255,0.7));\r\n                            transform: translateX(-0.5px);\r\n                        }\r\n                        30% {\r\n                            filter: drop-shadow(-3px 0 0 rgba(255,0,0,0.8)) drop-shadow(3px 0 0 rgba(0,255,255,0.8));\r\n                            transform: translateX(0.5px);\r\n                        }\r\n                        45% {\r\n                            filter: drop-shadow(-2px 0 0 rgba(255,0,0,0.6)) drop-shadow(2px 0 0 rgba(0,255,255,0.6));\r\n                            transform: translateX(-0.3px);\r\n                        }\r\n                        60% {\r\n                            filter: drop-shadow(-1px 0 0 rgba(255,0,0,0.4)) drop-shadow(1px 0 0 rgba(0,255,255,0.4));\r\n                            transform: translateX(0.2px);\r\n                        }\r\n                        100% {\r\n                            filter: none;\r\n                            transform: translateX(0);\r\n                        }\r\n                    }\r\n                `;\r\n                document.head.appendChild(style);\r\n            }\r\n            \r\n            // Apply animation - shorter duration (300-500ms based on intensity)\r\n            visibleCanvas.style.animation = `chromaticGlitch ${300 + 200 * intensity}ms ease-out`;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Apply chromatic aberration effect to canvas\r\n     * @param {CanvasRenderingContext2D} ctx - Canvas context\r\n     * @param {HTMLCanvasElement} sourceCanvas - Source canvas to apply effect to\r\n     */\r\n    applyChromaticAberration(ctx, sourceCanvas) {\r\n        if (!this.chromaticAberration.active || this.chromaticAberration.intensity <= 0) {\r\n            return;\r\n        }\r\n        \r\n        const intensity = this.chromaticAberration.intensity;\r\n        const offset = this.scaleValue(this.chromaticAberration.maxOffset * intensity);\r\n        \r\n        // Store current composite operation\r\n        const prevComposite = ctx.globalCompositeOperation;\r\n        \r\n        // Clear the canvas first\r\n        ctx.save();\r\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n        \r\n        // Draw red channel (shifted left)\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        ctx.filter = 'url(#red-channel)'; // Will use CSS filter fallback\r\n        ctx.drawImage(sourceCanvas, -offset, 0);\r\n        \r\n        // Draw green channel (center)\r\n        ctx.globalCompositeOperation = 'screen';\r\n        ctx.filter = 'url(#green-channel)';\r\n        ctx.drawImage(sourceCanvas, 0, 0);\r\n        \r\n        // Draw blue channel (shifted right)\r\n        ctx.globalCompositeOperation = 'screen';\r\n        ctx.filter = 'url(#blue-channel)';\r\n        ctx.drawImage(sourceCanvas, offset, 0);\r\n        \r\n        // Reset\r\n        ctx.filter = 'none';\r\n        ctx.globalCompositeOperation = prevComposite;\r\n        ctx.restore();\r\n    }\r\n    \r\n    /**\r\n     * Simple chromatic aberration using multiple draws\r\n     * (Fallback method that doesn't require filters)\r\n     */\r\n    applyChromaticAberrationSimple(ctx, centerX, centerY, radius, drawFunction) {\r\n        if (!this.chromaticAberration.active || this.chromaticAberration.intensity <= 0) {\r\n            drawFunction();\r\n            return;\r\n        }\r\n        \r\n        const intensity = this.chromaticAberration.intensity;\r\n        const offset = this.scaleValue(this.chromaticAberration.maxOffset * intensity);\r\n        \r\n        ctx.save();\r\n        \r\n        // Draw red channel (shifted left)\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        ctx.translate(-offset, 0);\r\n        ctx.globalAlpha = 0.33;\r\n        ctx.fillStyle = '#ff0000';\r\n        ctx.filter = 'brightness(3)';\r\n        drawFunction();\r\n        ctx.translate(offset, 0);\r\n        \r\n        // Draw green channel (center)\r\n        ctx.globalCompositeOperation = 'screen';\r\n        ctx.globalAlpha = 0.33;\r\n        ctx.fillStyle = '#00ff00';\r\n        drawFunction();\r\n        \r\n        // Draw blue channel (shifted right)\r\n        ctx.translate(offset, 0);\r\n        ctx.globalAlpha = 0.33;\r\n        ctx.fillStyle = '#0000ff';\r\n        drawFunction();\r\n        \r\n        ctx.restore();\r\n    }\r\n    \r\n    /**\r\n     * Update all active effects\r\n     */\r\n    update(deltaTime) {\r\n        // Update sparkles\r\n        this.sparkles = this.sparkles.filter(sparkle => {\r\n            sparkle.x += sparkle.vx;\r\n            sparkle.y += sparkle.vy;\r\n            sparkle.rotation += sparkle.rotationSpeed;\r\n            sparkle.lifetime -= deltaTime;\r\n            sparkle.vy += 0.1; // Gravity\r\n            \r\n            return sparkle.lifetime > 0;\r\n        });\r\n        \r\n        // Update chromatic aberration fade\r\n        if (this.chromaticAberration.active) {\r\n            // Fade out the effect\r\n            this.chromaticAberration.intensity -= this.chromaticAberration.fadeSpeed;\r\n            \r\n            if (this.chromaticAberration.intensity <= 0) {\r\n                this.chromaticAberration.intensity = 0;\r\n                this.chromaticAberration.active = false;\r\n                this.chromaticAberration.targetIntensity = 0;\r\n                console.log('[CSS Chromatic] Effect completed');\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default SpecialEffects;","/**\r\n * EyeRenderer - Handles eye expressions and blinking for EmotiveRenderer\r\n * @module core/renderer/EyeRenderer\r\n */\r\n\r\nexport class EyeRenderer {\r\n    constructor(renderer) {\r\n        this.renderer = renderer;\r\n        this.ctx = renderer.ctx;\r\n        this.canvas = renderer.canvas;\r\n        \r\n        // Eye state\r\n        this.blinking = false;\r\n        this.blinkingEnabled = true;\r\n        this.blinkTimer = 0;\r\n        this.nextBlinkTime = this.getRandomBlinkTime();\r\n        \r\n        // Eye parameters\r\n        this.squintAmount = 0;\r\n        this.eyeClose = null;\r\n        this.eyeOpen = null;\r\n        \r\n        // Helper method references\r\n        this.scaleValue = (value) => renderer.scaleValue(value);\r\n        this.hexToRgba = (hex, alpha) => renderer.hexToRgba(hex, alpha);\r\n    }\r\n\r\n    /**\r\n     * Update blinking and eye animations\r\n     * @param {number} deltaTime - Time since last frame\r\n     */\r\n    update(deltaTime) {\r\n        // Update blink timer\r\n        if (this.blinking) {\r\n            this.blinkTimer += deltaTime;\r\n            if (this.blinkTimer >= 150) {\r\n                this.blinking = false;\r\n                this.blinkTimer = 0;\r\n                this.nextBlinkTime = Date.now() + this.getRandomBlinkTime();\r\n            }\r\n        }\r\n        \r\n        // Check for natural blink\r\n        if (this.blinkingEnabled && !this.blinking && Date.now() >= this.nextBlinkTime) {\r\n            this.startBlink();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Start a blink animation\r\n     */\r\n    startBlink() {\r\n        if (!this.blinkingEnabled) return;\r\n        this.blinking = true;\r\n        this.blinkTimer = 0;\r\n    }\r\n\r\n    /**\r\n     * Get random time until next blink (3-7 seconds)\r\n     * @returns {number} Time in milliseconds\r\n     */\r\n    getRandomBlinkTime() {\r\n        return 3000 + Math.random() * 4000;\r\n    }\r\n\r\n    /**\r\n     * Calculate blink scale for core\r\n     * @returns {number} Scale factor for blinking\r\n     */\r\n    getBlinkScale() {\r\n        if (!this.blinking) return 1;\r\n        \r\n        const blinkProgress = Math.min(this.blinkTimer / 150, 1);\r\n        const blinkCurve = Math.sin(blinkProgress * Math.PI);\r\n        return 1 - blinkCurve * 0.7; // Squish vertically by 70%\r\n    }\r\n\r\n    /**\r\n     * Draw eye expression\r\n     * @param {number} x - Center X\r\n     * @param {number} y - Center Y\r\n     * @param {number} radius - Core radius\r\n     * @param {string} emotion - Current emotion\r\n     * @param {Object} params - Eye parameters\r\n     */\r\n    drawEyes(x, y, radius, emotion, params = {}) {\r\n        const ctx = this.ctx;\r\n        \r\n        // Get eye parameters\r\n        const eyeOpenness = params.eyeOpenness || 1;\r\n        const eyeExpression = params.eyeExpression || 'neutral';\r\n        \r\n        // Don't draw eyes for certain states\r\n        if (emotion === 'zen' || emotion === 'neutral' || eyeOpenness <= 0) {\r\n            return;\r\n        }\r\n        \r\n        ctx.save();\r\n        \r\n        // Eye color (slightly darker than core)\r\n        ctx.strokeStyle = 'rgba(0, 0, 0, 0.3)';\r\n        ctx.lineWidth = this.scaleValue(2);\r\n        ctx.lineCap = 'round';\r\n        \r\n        // Calculate eye positions\r\n        const eyeSpacing = radius * 0.4;\r\n        const eyeY = y - radius * 0.1;\r\n        const eyeSize = radius * 0.25;\r\n        \r\n        // Draw based on expression\r\n        switch (eyeExpression) {\r\n            case 'happy':\r\n                this.drawHappyEyes(ctx, x, eyeY, eyeSpacing, eyeSize, eyeOpenness);\r\n                break;\r\n            case 'sad':\r\n                this.drawSadEyes(ctx, x, eyeY, eyeSpacing, eyeSize, eyeOpenness);\r\n                break;\r\n            case 'angry':\r\n                this.drawAngryEyes(ctx, x, eyeY, eyeSpacing, eyeSize, eyeOpenness);\r\n                break;\r\n            case 'surprised':\r\n                this.drawSurprisedEyes(ctx, x, eyeY, eyeSpacing, eyeSize, eyeOpenness);\r\n                break;\r\n            case 'focused':\r\n                this.drawFocusedEyes(ctx, x, eyeY, eyeSpacing, eyeSize, eyeOpenness);\r\n                break;\r\n            case 'sleepy':\r\n                this.drawSleepyEyes(ctx, x, eyeY, eyeSpacing, eyeSize, eyeOpenness);\r\n                break;\r\n            case 'suspicious':\r\n                this.drawSuspiciousEyes(ctx, x, eyeY, eyeSpacing, eyeSize, eyeOpenness);\r\n                break;\r\n            default:\r\n                // No eyes for neutral\r\n                break;\r\n        }\r\n        \r\n        ctx.restore();\r\n    }\r\n\r\n    /**\r\n     * Draw happy eyes (upward curves)\r\n     */\r\n    drawHappyEyes(ctx, x, y, spacing, size, openness) {\r\n        // Left eye\r\n        ctx.beginPath();\r\n        ctx.arc(x - spacing, y, size, Math.PI * 0.2, Math.PI * 0.8, false);\r\n        ctx.stroke();\r\n        \r\n        // Right eye\r\n        ctx.beginPath();\r\n        ctx.arc(x + spacing, y, size, Math.PI * 0.2, Math.PI * 0.8, false);\r\n        ctx.stroke();\r\n    }\r\n\r\n    /**\r\n     * Draw sad eyes (downward curves)\r\n     */\r\n    drawSadEyes(ctx, x, y, spacing, size, openness) {\r\n        // Left eye\r\n        ctx.beginPath();\r\n        ctx.arc(x - spacing, y + size * 0.5, size, Math.PI * 1.2, Math.PI * 1.8, false);\r\n        ctx.stroke();\r\n        \r\n        // Right eye\r\n        ctx.beginPath();\r\n        ctx.arc(x + spacing, y + size * 0.5, size, Math.PI * 1.2, Math.PI * 1.8, false);\r\n        ctx.stroke();\r\n    }\r\n\r\n    /**\r\n     * Draw angry eyes (angled lines)\r\n     */\r\n    drawAngryEyes(ctx, x, y, spacing, size, openness) {\r\n        // Left eye\r\n        ctx.beginPath();\r\n        ctx.moveTo(x - spacing - size, y - size * 0.3);\r\n        ctx.lineTo(x - spacing + size * 0.5, y + size * 0.3);\r\n        ctx.stroke();\r\n        \r\n        // Right eye\r\n        ctx.beginPath();\r\n        ctx.moveTo(x + spacing + size, y - size * 0.3);\r\n        ctx.lineTo(x + spacing - size * 0.5, y + size * 0.3);\r\n        ctx.stroke();\r\n    }\r\n\r\n    /**\r\n     * Draw surprised eyes (wide circles)\r\n     */\r\n    drawSurprisedEyes(ctx, x, y, spacing, size, openness) {\r\n        // Left eye\r\n        ctx.beginPath();\r\n        ctx.arc(x - spacing, y, size * 1.2, 0, Math.PI * 2);\r\n        ctx.stroke();\r\n        \r\n        // Right eye\r\n        ctx.beginPath();\r\n        ctx.arc(x + spacing, y, size * 1.2, 0, Math.PI * 2);\r\n        ctx.stroke();\r\n    }\r\n\r\n    /**\r\n     * Draw focused eyes (dots)\r\n     */\r\n    drawFocusedEyes(ctx, x, y, spacing, size, openness) {\r\n        ctx.fillStyle = 'rgba(0, 0, 0, 0.4)';\r\n        \r\n        // Left eye\r\n        ctx.beginPath();\r\n        ctx.arc(x - spacing, y, size * 0.3, 0, Math.PI * 2);\r\n        ctx.fill();\r\n        \r\n        // Right eye\r\n        ctx.beginPath();\r\n        ctx.arc(x + spacing, y, size * 0.3, 0, Math.PI * 2);\r\n        ctx.fill();\r\n    }\r\n\r\n    /**\r\n     * Draw sleepy eyes (half-closed)\r\n     */\r\n    drawSleepyEyes(ctx, x, y, spacing, size, openness) {\r\n        // Left eye\r\n        ctx.beginPath();\r\n        ctx.moveTo(x - spacing - size, y);\r\n        ctx.lineTo(x - spacing + size, y);\r\n        ctx.stroke();\r\n        \r\n        // Right eye\r\n        ctx.beginPath();\r\n        ctx.moveTo(x + spacing - size, y);\r\n        ctx.lineTo(x + spacing + size, y);\r\n        ctx.stroke();\r\n    }\r\n\r\n    /**\r\n     * Draw suspicious eyes (narrowed)\r\n     */\r\n    drawSuspiciousEyes(ctx, x, y, spacing, size, openness) {\r\n        // Left eye - narrowed\r\n        ctx.beginPath();\r\n        ctx.moveTo(x - spacing - size, y);\r\n        ctx.lineTo(x - spacing + size * 0.7, y);\r\n        ctx.stroke();\r\n        \r\n        // Right eye - more open\r\n        ctx.beginPath();\r\n        ctx.arc(x + spacing, y, size * 0.8, Math.PI * 0.1, Math.PI * 0.9, false);\r\n        ctx.stroke();\r\n    }\r\n\r\n    /**\r\n     * Enable or disable blinking\r\n     * @param {boolean} enabled - Whether blinking is enabled\r\n     */\r\n    setBlinkingEnabled(enabled) {\r\n        this.blinkingEnabled = enabled;\r\n        if (!enabled) {\r\n            this.blinking = false;\r\n            this.blinkTimer = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set squint amount for eye narrowing\r\n     * @param {number} amount - Squint amount (0-1)\r\n     */\r\n    setSquintAmount(amount) {\r\n        this.squintAmount = Math.max(0, Math.min(1, amount));\r\n    }\r\n\r\n    /**\r\n     * Force a blink\r\n     */\r\n    forceBlink() {\r\n        this.startBlink();\r\n    }\r\n}\r\n\r\nexport default EyeRenderer;","/**\n * BreathingAnimator - Handles breathing animations for EmotiveRenderer\n * @module core/renderer/BreathingAnimator\n */\n\nexport class BreathingAnimator {\n    constructor(renderer) {\n        this.renderer = renderer;\n        \n        // Breathing configuration\n        this.breathingSpeed = 0.42; // 16 breaths/min (0.42 rad/s = 4 sec/cycle = 15-16 bpm)\n        this.breathingDepth = 0.08; // 8% size variation for visible breathing\n        \n        // Breathing state\n        this.breathingPhase = 0;\n        this.breathRate = 1.0;\n        this.breathDepth = this.breathingDepth;\n        this.breathRateMult = 1.0;\n        this.breathDepthMult = 1.0;\n        this.breathIrregular = false;\n        \n        // Custom scale override\n        this.customScale = null;\n        \n        // Emotion-specific breathing patterns\n        this.emotionBreathPatterns = {\n            happy: { rate: 1.1, depth: 1.2 },\n            sad: { rate: 0.8, depth: 0.7 },\n            angry: { rate: 1.4, depth: 1.3 },\n            calm: { rate: 0.7, depth: 0.9 },\n            excited: { rate: 1.5, depth: 1.4 },\n            focused: { rate: 0.9, depth: 0.6 },\n            neutral: { rate: 1.0, depth: 1.0 },\n            love: { rate: 1.2, depth: 1.3 },\n            surprised: { rate: 1.3, depth: 1.1 },\n            confused: { rate: 1.1, depth: 0.9 },\n            amused: { rate: 1.2, depth: 1.1 },\n            bored: { rate: 0.6, depth: 0.8 },\n            tired: { rate: 0.5, depth: 1.2 },\n            anxious: { rate: 1.6, depth: 0.9 },\n            determined: { rate: 1.1, depth: 1.0 },\n            proud: { rate: 0.9, depth: 1.3 },\n            content: { rate: 0.8, depth: 1.0 },\n            hopeful: { rate: 1.0, depth: 1.1 },\n            zen: { rate: 0.4, depth: 1.5 },\n            intrigued: { rate: 1.1, depth: 0.8 },\n            embarrassed: { rate: 1.3, depth: 0.7 },\n            grateful: { rate: 0.9, depth: 1.1 },\n            inspired: { rate: 1.0, depth: 1.3 },\n            silly: { rate: 1.4, depth: 1.2 },\n            sleepy: { rate: 0.3, depth: 1.4 }\n        };\n    }\n\n    /**\n     * Update breathing animation\n     * @param {number} deltaTime - Time since last frame in ms\n     * @param {string} emotion - Current emotion\n     * @param {Object} undertone - Current undertone modifiers\n     */\n    update(deltaTime, emotion, undertone = {}) {\n        // Ensure undertone is not null\n        undertone = undertone || {};\n        \n        // Apply emotion-specific breathing pattern\n        const pattern = this.emotionBreathPatterns[emotion] || { rate: 1.0, depth: 1.0 };\n        \n        // Apply undertone modifiers (safe access with null check)\n        const undertoneRateMult = undertone?.breathRateMult || 1.0;\n        const undertoneDepthMult = undertone?.breathDepthMult || 1.0;\n        \n        // Calculate final breathing parameters\n        this.breathRate = pattern.rate * this.breathRateMult * undertoneRateMult;\n        this.breathDepth = this.breathingDepth * pattern.depth * this.breathDepthMult * undertoneDepthMult;\n        \n        // Add irregularity if needed\n        let phaseIncrement = this.breathingSpeed * this.breathRate * (deltaTime / 1000);\n        if (this.breathIrregular && undertone?.breathIrregular) {\n            phaseIncrement *= 0.8 + Math.sin(Date.now() * 0.0003) * 0.4;\n        }\n        \n        // Update breathing phase\n        this.breathingPhase += phaseIncrement;\n        if (this.breathingPhase > Math.PI * 2) {\n            this.breathingPhase -= Math.PI * 2;\n        }\n    }\n\n    /**\n     * Get current breathing scale\n     * @returns {number} Scale factor for breathing\n     */\n    getBreathingScale() {\n        // Return custom scale if set\n        if (this.customScale !== null) {\n            return this.customScale;\n        }\n        \n        // Calculate breathing scale\n        const breathAmount = Math.sin(this.breathingPhase);\n        return 1 + breathAmount * this.breathDepth;\n    }\n\n    /**\n     * Set custom breathing scale (overrides normal breathing)\n     * @param {number} scale - Custom scale value, or null to use normal breathing\n     */\n    setCustomScale(scale) {\n        this.customScale = scale;\n    }\n\n    /**\n     * Set breathing speed\n     * @param {number} speed - Breathing speed in radians per second\n     */\n    setBreathingSpeed(speed) {\n        this.breathingSpeed = speed;\n    }\n\n    /**\n     * Set breathing depth\n     * @param {number} depth - Breathing depth as percentage (0-1)\n     */\n    setBreathingDepth(depth) {\n        this.breathingDepth = Math.max(0, Math.min(1, depth));\n    }\n\n    /**\n     * Set breathing rate multiplier\n     * @param {number} mult - Rate multiplier\n     */\n    setBreathRateMultiplier(mult) {\n        this.breathRateMult = mult;\n    }\n\n    /**\n     * Set breathing depth multiplier\n     * @param {number} mult - Depth multiplier\n     */\n    setBreathDepthMultiplier(mult) {\n        this.breathDepthMult = mult;\n    }\n\n    /**\n     * Enable/disable irregular breathing\n     * @param {boolean} irregular - Whether breathing should be irregular\n     */\n    setIrregularBreathing(irregular) {\n        this.breathIrregular = irregular;\n    }\n\n    /**\n     * Reset breathing to default state\n     */\n    reset() {\n        this.breathingPhase = 0;\n        this.breathRate = 1.0;\n        this.breathDepth = this.breathingDepth;\n        this.breathRateMult = 1.0;\n        this.breathDepthMult = 1.0;\n        this.breathIrregular = false;\n        this.customScale = null;\n    }\n\n    /**\n     * Apply breath hold effect\n     * @param {boolean} empty - Whether lungs are empty (true) or full (false)\n     */\n    holdBreath(empty = false) {\n        // Set custom scale based on breath hold type\n        this.customScale = empty ? 0.92 : 1.08;\n    }\n\n    /**\n     * Release breath hold\n     */\n    releaseBreath() {\n        this.customScale = null;\n    }\n\n    /**\n     * Get breathing info for debugging\n     * @returns {Object} Breathing state info\n     */\n    getBreathingInfo() {\n        return {\n            phase: this.breathingPhase,\n            rate: this.breathRate,\n            depth: this.breathDepth,\n            scale: this.getBreathingScale(),\n            isCustom: this.customScale !== null,\n            isIrregular: this.breathIrregular\n        };\n    }\n}\n\nexport default BreathingAnimator;","/**\n * Gradient Cache System\n * Caches canvas gradients to avoid recreating them every frame\n *\n * @module core/renderer/GradientCache\n * @version 1.0.0\n */\n\n/**\n * Cache for canvas gradients to improve rendering performance\n */\nexport class GradientCache {\n    constructor() {\n        // Cache storage with Map for efficient lookups\n        this.cache = new Map();\n\n        // Stats for monitoring\n        this.stats = {\n            hits: 0,\n            misses: 0,\n            evictions: 0\n        };\n\n        // Cache configuration\n        this.maxSize = 100; // Maximum number of cached gradients\n        this.ttl = 60000; // Time to live in milliseconds (1 minute)\n\n        // LRU tracking\n        this.accessOrder = [];\n    }\n\n    /**\n     * Generate a unique key for gradient parameters\n     * @private\n     */\n    generateKey(type, params) {\n        if (type === 'radial') {\n            const { x0, y0, r0, x1, y1, r1, stops } = params;\n            const stopKey = stops.map(s => `${s.offset}:${s.color}`).join('|');\n            return `radial:${x0},${y0},${r0},${x1},${y1},${r1}:${stopKey}`;\n        } else if (type === 'linear') {\n            const { x0, y0, x1, y1, stops } = params;\n            const stopKey = stops.map(s => `${s.offset}:${s.color}`).join('|');\n            return `linear:${x0},${y0},${x1},${y1}:${stopKey}`;\n        }\n        return null;\n    }\n\n    /**\n     * Get or create a radial gradient\n     * @param {CanvasRenderingContext2D} ctx - Canvas context\n     * @param {number} x0 - Start circle center x\n     * @param {number} y0 - Start circle center y\n     * @param {number} r0 - Start circle radius\n     * @param {number} x1 - End circle center x\n     * @param {number} y1 - End circle center y\n     * @param {number} r1 - End circle radius\n     * @param {Array} stops - Color stops [{offset, color}]\n     * @returns {CanvasGradient} Cached or new gradient\n     */\n    getRadialGradient(ctx, x0, y0, r0, x1, y1, r1, stops) {\n        const key = this.generateKey('radial', { x0, y0, r0, x1, y1, r1, stops });\n\n        // Check cache\n        const cached = this.cache.get(key);\n        if (cached && Date.now() - cached.timestamp < this.ttl) {\n            this.stats.hits++;\n            this.updateAccessOrder(key);\n            return cached.gradient;\n        }\n\n        // Create new gradient\n        this.stats.misses++;\n        const gradient = ctx.createRadialGradient(x0, y0, r0, x1, y1, r1);\n\n        // Add color stops\n        stops.forEach(stop => {\n            gradient.addColorStop(stop.offset, stop.color);\n        });\n\n        // Cache it\n        this.set(key, gradient);\n\n        return gradient;\n    }\n\n    /**\n     * Get or create a linear gradient\n     * @param {CanvasRenderingContext2D} ctx - Canvas context\n     * @param {number} x0 - Start point x\n     * @param {number} y0 - Start point y\n     * @param {number} x1 - End point x\n     * @param {number} y1 - End point y\n     * @param {Array} stops - Color stops [{offset, color}]\n     * @returns {CanvasGradient} Cached or new gradient\n     */\n    getLinearGradient(ctx, x0, y0, x1, y1, stops) {\n        const key = this.generateKey('linear', { x0, y0, x1, y1, stops });\n\n        // Check cache\n        const cached = this.cache.get(key);\n        if (cached && Date.now() - cached.timestamp < this.ttl) {\n            this.stats.hits++;\n            this.updateAccessOrder(key);\n            return cached.gradient;\n        }\n\n        // Create new gradient\n        this.stats.misses++;\n        const gradient = ctx.createLinearGradient(x0, y0, x1, y1);\n\n        // Add color stops\n        stops.forEach(stop => {\n            gradient.addColorStop(stop.offset, stop.color);\n        });\n\n        // Cache it\n        this.set(key, gradient);\n\n        return gradient;\n    }\n\n    /**\n     * Store gradient in cache with LRU eviction\n     * @private\n     */\n    set(key, gradient) {\n        // Check if we need to evict\n        if (this.cache.size >= this.maxSize && !this.cache.has(key)) {\n            this.evictLRU();\n        }\n\n        // Store with timestamp\n        this.cache.set(key, {\n            gradient,\n            timestamp: Date.now()\n        });\n\n        this.updateAccessOrder(key);\n    }\n\n    /**\n     * Update access order for LRU tracking\n     * @private\n     */\n    updateAccessOrder(key) {\n        // Remove from current position\n        const index = this.accessOrder.indexOf(key);\n        if (index > -1) {\n            this.accessOrder.splice(index, 1);\n        }\n        // Add to end (most recently used)\n        this.accessOrder.push(key);\n    }\n\n    /**\n     * Evict least recently used item\n     * @private\n     */\n    evictLRU() {\n        if (this.accessOrder.length > 0) {\n            const keyToEvict = this.accessOrder.shift();\n            this.cache.delete(keyToEvict);\n            this.stats.evictions++;\n        }\n    }\n\n    /**\n     * Clear all cached gradients\n     */\n    clear() {\n        this.cache.clear();\n        this.accessOrder = [];\n    }\n\n    /**\n     * Clear expired entries\n     */\n    clearExpired() {\n        const now = Date.now();\n        const keysToDelete = [];\n\n        for (const [key, value] of this.cache.entries()) {\n            if (now - value.timestamp >= this.ttl) {\n                keysToDelete.push(key);\n            }\n        }\n\n        keysToDelete.forEach(key => {\n            this.cache.delete(key);\n            const index = this.accessOrder.indexOf(key);\n            if (index > -1) {\n                this.accessOrder.splice(index, 1);\n            }\n        });\n    }\n\n    /**\n     * Get cache statistics\n     * @returns {Object} Cache stats\n     */\n    getStats() {\n        const hitRate = this.stats.hits + this.stats.misses > 0\n            ? (this.stats.hits / (this.stats.hits + this.stats.misses) * 100).toFixed(2)\n            : 0;\n\n        return {\n            size: this.cache.size,\n            maxSize: this.maxSize,\n            hits: this.stats.hits,\n            misses: this.stats.misses,\n            evictions: this.stats.evictions,\n            hitRate: `${hitRate}%`\n        };\n    }\n\n    /**\n     * Create a gradient helper that automatically caches\n     * @param {CanvasRenderingContext2D} ctx - Canvas context\n     * @returns {Object} Helper object with gradient methods\n     */\n    createHelper(ctx) {\n        return {\n            radial: (x0, y0, r0, x1, y1, r1, stops) =>\n                this.getRadialGradient(ctx, x0, y0, r0, x1, y1, r1, stops),\n            linear: (x0, y0, x1, y1, stops) =>\n                this.getLinearGradient(ctx, x0, y0, x1, y1, stops)\n        };\n    }\n}\n\n// Create singleton instance\nexport const gradientCache = new GradientCache();\n\n// Export for convenience\nexport default gradientCache;","/**\r\n * GlowRenderer - Handles glow effects rendering for EmotiveRenderer\r\n * @module core/renderer/GlowRenderer\r\n */\r\n\r\nimport { gradientCache } from './GradientCache.js';\r\n\r\nexport class GlowRenderer {\r\n    constructor(renderer) {\r\n        this.renderer = renderer;\r\n        this.ctx = renderer.ctx;\r\n        this.canvas = renderer.canvas;\r\n        \r\n        // Glow state\r\n        this.glowIntensity = 1.0;\r\n        this.glowColor = '#4a90e2';\r\n        this.targetGlowColor = '#4a90e2';\r\n        this.glowColorTransition = 0;\r\n        this.glowColorTransitionSpeed = 0.05;\r\n        \r\n        // Offscreen canvas for caching glow gradients\r\n        this.offscreenCanvas = null;\r\n        this.offscreenCtx = null;\r\n        this.cachedGlowColor = null;\r\n        this.cachedGlowRadius = 0;\r\n        \r\n        // Helper method references\r\n        this.scaleValue = (value) => renderer.scaleValue(value);\r\n        this.hexToRgba = (hex, alpha) => renderer.hexToRgba(hex, alpha);\r\n        \r\n        this.initOffscreenCanvas();\r\n    }\r\n\r\n    /**\r\n     * Initialize offscreen canvas for gradient caching\r\n     */\r\n    initOffscreenCanvas() {\r\n        this.offscreenCanvas = document.createElement('canvas');\r\n        this.offscreenCtx = this.offscreenCanvas.getContext('2d');\r\n    }\r\n\r\n    /**\r\n     * Update offscreen canvas size\r\n     * @param {number} size - Size for the offscreen canvas\r\n     */\r\n    updateOffscreenSize(size) {\r\n        if (this.offscreenCanvas.width !== size || this.offscreenCanvas.height !== size) {\r\n            this.offscreenCanvas.width = size;\r\n            this.offscreenCanvas.height = size;\r\n            this.cachedGlowColor = null; // Invalidate cache\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Render main glow effect\r\n     * @param {number} x - Center X position\r\n     * @param {number} y - Center Y position\r\n     * @param {number} radius - Core radius\r\n     * @param {Object} params - Additional parameters\r\n     */\r\n    renderGlow(x, y, radius, params = {}) {\r\n        const ctx = this.ctx;\r\n        const color = params.color || this.glowColor;\r\n        const intensity = params.intensity !== undefined ? params.intensity : this.glowIntensity;\r\n        \r\n        // Skip if intensity is too low\r\n        if (intensity < 0.01) return;\r\n        \r\n        // Outer glow size\r\n        const glowSize = this.scaleValue(200);\r\n        \r\n        // Always use direct rendering for consistent brightness\r\n        this.renderGlowDirect(ctx, x, y, radius, color, intensity);\r\n        return;\r\n        \r\n        // Check if we need to update the cached gradient\r\n        if (this.cachedGlowColor !== color || this.cachedGlowRadius !== glowSize) {\r\n            this.cacheGlowGradient(color, glowSize);\r\n        }\r\n        \r\n        // Draw cached gradient for normal intensity\r\n        if (this.offscreenCanvas && this.cachedGlowColor === color) {\r\n            ctx.save();\r\n            ctx.globalAlpha = Math.min(1, intensity);\r\n            ctx.globalCompositeOperation = 'screen';\r\n            \r\n            // Draw from offscreen canvas\r\n            const drawX = x - glowSize;\r\n            const drawY = y - glowSize;\r\n            ctx.drawImage(this.offscreenCanvas, drawX, drawY);\r\n            \r\n            ctx.restore();\r\n        } else {\r\n            // Fallback to direct rendering if cache fails\r\n            this.renderGlowDirect(ctx, x, y, radius, color, intensity);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cache glow gradient to offscreen canvas\r\n     * @param {string} color - Glow color\r\n     * @param {number} size - Glow size\r\n     */\r\n    cacheGlowGradient(color, size) {\r\n        const offCtx = this.offscreenCtx;\r\n        const center = size;\r\n        \r\n        // Update offscreen canvas size\r\n        this.updateOffscreenSize(size * 2);\r\n        \r\n        // Clear offscreen canvas\r\n        offCtx.clearRect(0, 0, this.offscreenCanvas.width, this.offscreenCanvas.height);\r\n        \r\n        // Use cached gradient - higher opacity to match original brightness\r\n        const gradient = gradientCache.getRadialGradient(\r\n            offCtx, center, center, 0, center, center, size,\r\n            [\r\n                { offset: 0, color: this.hexToRgba(color, 0.4) },\r\n                { offset: 0.3, color: this.hexToRgba(color, 0.2) },\r\n                { offset: 0.6, color: this.hexToRgba(color, 0.1) },\r\n                { offset: 1, color: this.hexToRgba(color, 0) }\r\n            ]\r\n        );\r\n\r\n        // Draw gradient to offscreen canvas\r\n        offCtx.fillStyle = gradient;\r\n        offCtx.fillRect(0, 0, size * 2, size * 2);\r\n        \r\n        // Update cache info\r\n        this.cachedGlowColor = color;\r\n        this.cachedGlowRadius = size;\r\n    }\r\n\r\n    /**\r\n     * Direct glow rendering (fallback)\r\n     * @param {CanvasRenderingContext2D} ctx - Canvas context\r\n     * @param {number} x - Center X\r\n     * @param {number} y - Center Y\r\n     * @param {number} radius - Core radius\r\n     * @param {string} color - Glow color\r\n     * @param {number} intensity - Glow intensity\r\n     */\r\n    renderGlowDirect(ctx, x, y, radius, color, intensity) {\r\n        // Use the EXACT original formula for consistent brightness\r\n        ctx.save();\r\n        \r\n        // Build gradient stops array\r\n        const stops = 20;\r\n        const gradientStops = [];\r\n        for (let i = 0; i <= stops; i++) {\r\n            const position = i / stops;\r\n            const baseOpacity = 0.6 * Math.pow(1 - position, 2.2);\r\n            const opacity = baseOpacity * intensity;\r\n            gradientStops.push({ offset: position, color: this.hexToRgba(color, opacity) });\r\n        }\r\n\r\n        // Use cached gradient\r\n        const gradient = gradientCache.getRadialGradient(\r\n            ctx, x, y, 0, x, y, radius, gradientStops\r\n        );\r\n        \r\n        ctx.fillStyle = gradient;\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, radius, 0, Math.PI * 2);\r\n        ctx.fill();\r\n        \r\n        ctx.restore();\r\n    }\r\n\r\n    /**\r\n     * Render recording glow effect\r\n     * @param {number} x - Center X\r\n     * @param {number} y - Center Y\r\n     * @param {number} radius - Core radius\r\n     * @param {number} intensity - Glow intensity\r\n     */\r\n    renderRecordingGlow(x, y, radius, intensity) {\r\n        const ctx = this.ctx;\r\n        const glowSize = radius * 2.5;\r\n        const gradient = gradientCache.getRadialGradient(\r\n            ctx, x, y, 0, x, y, glowSize,\r\n            [\r\n                { offset: 0, color: `rgba(255, 0, 0, ${0.3 * intensity})` },\r\n                { offset: 0.5, color: `rgba(255, 0, 0, ${0.15 * intensity})` },\r\n                { offset: 1, color: 'rgba(255, 0, 0, 0)' }\r\n            ]\r\n        );\r\n        \r\n        ctx.save();\r\n        ctx.globalCompositeOperation = 'screen';\r\n        ctx.fillStyle = gradient;\r\n        ctx.fillRect(x - glowSize, y - glowSize, glowSize * 2, glowSize * 2);\r\n        ctx.restore();\r\n    }\r\n\r\n    /**\r\n     * Render zen glow effect\r\n     * @param {number} x - Center X\r\n     * @param {number} y - Center Y\r\n     * @param {number} radius - Core radius\r\n     * @param {number} time - Current time for animation\r\n     */\r\n    renderZenGlow(x, y, radius, time) {\r\n        const ctx = this.ctx;\r\n        const breathPhase = Math.sin(time * 0.001) * 0.5 + 0.5;\r\n        const zenRadius = radius * (0.9 + breathPhase * 0.1);\r\n        \r\n        // Inner glow\r\n        const gradient = gradientCache.getRadialGradient(\r\n            ctx, x, y, 0, x, y, zenRadius,\r\n            [\r\n                { offset: 0, color: 'rgba(147, 112, 219, 0.8)' },\r\n                { offset: 0.7, color: 'rgba(147, 112, 219, 0.3)' },\r\n                { offset: 1, color: 'rgba(147, 112, 219, 0)' }\r\n            ]\r\n        );\r\n        \r\n        ctx.save();\r\n        ctx.globalCompositeOperation = 'screen';\r\n        ctx.fillStyle = gradient;\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, zenRadius * 1.5, 0, Math.PI * 2);\r\n        ctx.fill();\r\n        ctx.restore();\r\n    }\r\n\r\n    /**\r\n     * Update glow color with transition\r\n     * @param {string} targetColor - Target glow color\r\n     * @param {number} deltaTime - Time since last frame\r\n     */\r\n    updateGlowColor(targetColor, deltaTime) {\r\n        if (this.targetGlowColor !== targetColor) {\r\n            this.targetGlowColor = targetColor;\r\n            this.glowColorTransition = 0;\r\n        }\r\n        \r\n        // Animate color transition\r\n        if (this.glowColorTransition < 1) {\r\n            this.glowColorTransition = Math.min(1, this.glowColorTransition + this.glowColorTransitionSpeed);\r\n            this.glowColor = this.lerpColor(this.glowColor, this.targetGlowColor, this.glowColorTransition);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Lerp between two colors\r\n     * @param {string} color1 - Start color\r\n     * @param {string} color2 - End color\r\n     * @param {number} t - Interpolation value (0-1)\r\n     * @returns {string} Interpolated color\r\n     */\r\n    lerpColor(color1, color2, t) {\r\n        // Convert hex to RGB\r\n        const rgb1 = this.hexToRgb(color1);\r\n        const rgb2 = this.hexToRgb(color2);\r\n        \r\n        // Interpolate\r\n        const r = Math.round(rgb1.r + (rgb2.r - rgb1.r) * t);\r\n        const g = Math.round(rgb1.g + (rgb2.g - rgb1.g) * t);\r\n        const b = Math.round(rgb1.b + (rgb2.b - rgb1.b) * t);\r\n        \r\n        // Convert back to hex\r\n        return `#${((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1)}`;\r\n    }\r\n\r\n    /**\r\n     * Convert hex color to RGB\r\n     * @param {string} hex - Hex color\r\n     * @returns {Object} RGB values\r\n     */\r\n    hexToRgb(hex) {\r\n        const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        return result ? {\r\n            r: parseInt(result[1], 16),\r\n            g: parseInt(result[2], 16),\r\n            b: parseInt(result[3], 16)\r\n        } : { r: 0, g: 0, b: 0 };\r\n    }\r\n\r\n    /**\r\n     * Set glow intensity\r\n     * @param {number} intensity - Glow intensity (0-1)\r\n     */\r\n    setGlowIntensity(intensity) {\r\n        this.glowIntensity = Math.max(0, Math.min(1, intensity));\r\n    }\r\n\r\n    /**\r\n     * Set glow color instantly\r\n     * @param {string} color - Glow color\r\n     */\r\n    setGlowColor(color) {\r\n        this.glowColor = color;\r\n        this.targetGlowColor = color;\r\n        this.glowColorTransition = 1;\r\n    }\r\n\r\n    /**\r\n     * Clean up resources\r\n     */\r\n    destroy() {\r\n        this.offscreenCanvas = null;\r\n        this.offscreenCtx = null;\r\n        this.cachedGlowColor = null;\r\n    }\r\n}\r\n\r\nexport default GlowRenderer;","/**\r\n * CoreRenderer - Handles core shape rendering for EmotiveRenderer\r\n * @module core/renderer/CoreRenderer\r\n */\r\n\r\nimport { gradientCache } from './GradientCache.js';\r\n\r\nexport class CoreRenderer {\r\n    constructor(renderer) {\r\n        this.renderer = renderer;\r\n        this.ctx = renderer.ctx;\r\n        this.canvas = renderer.canvas;\r\n        \r\n        // Core appearance\r\n        this.coreColor = '#FFFFFF';\r\n        this.coreOpacity = 1.0;\r\n        this.coreBorderWidth = 0;\r\n        this.coreBorderColor = null;\r\n        \r\n        // Shape state\r\n        this.shapePoints = null;\r\n        this.isMorphing = false;\r\n        \r\n        // Helper method references\r\n        this.scaleValue = (value) => renderer.scaleValue(value);\r\n        this.hexToRgba = (hex, alpha) => renderer.hexToRgba(hex, alpha);\r\n    }\r\n\r\n    /**\r\n     * Render the main core shape\r\n     * @param {number} x - Center X position\r\n     * @param {number} y - Center Y position\r\n     * @param {number} radius - Core radius\r\n     * @param {Object} params - Rendering parameters\r\n     */\r\n    renderCore(x, y, radius, params = {}) {\r\n        const ctx = this.ctx;\r\n        \r\n        // Extract parameters\r\n        const scaleX = params.scaleX || 1;\r\n        const scaleY = params.scaleY || 1;\r\n        const rotation = params.rotation || 0;\r\n        const opacity = params.opacity !== undefined ? params.opacity : this.coreOpacity;\r\n        const color = params.color || this.coreColor;\r\n        const shapePoints = params.shapePoints || this.shapePoints;\r\n        \r\n        ctx.save();\r\n        \r\n        // Apply transformations\r\n        ctx.translate(x, y);\r\n        if (rotation !== 0) {\r\n            ctx.rotate(rotation);\r\n        }\r\n        ctx.scale(scaleX, scaleY);\r\n        \r\n        // Set core style\r\n        ctx.fillStyle = this.hexToRgba(color, opacity);\r\n        \r\n        // Draw shape based on points or default circle\r\n        if (shapePoints && shapePoints.length > 0) {\r\n            this.drawMorphedShape(ctx, shapePoints, radius);\r\n        } else {\r\n            this.drawCircle(ctx, radius);\r\n        }\r\n        \r\n        // Draw border if needed\r\n        if (this.coreBorderWidth > 0 && this.coreBorderColor) {\r\n            ctx.strokeStyle = this.coreBorderColor;\r\n            ctx.lineWidth = this.scaleValue(this.coreBorderWidth);\r\n            ctx.stroke();\r\n        }\r\n        \r\n        ctx.restore();\r\n    }\r\n\r\n    /**\r\n     * Draw drop shadow for depth\r\n     * @param {CanvasRenderingContext2D} ctx - Canvas context\r\n     * @param {number} radius - Shape radius\r\n     * @param {Array} shapePoints - Shape points\r\n     */\r\n    drawDropShadow(ctx, radius, shapePoints) {\r\n        ctx.save();\r\n        \r\n        const shadowOffset = this.scaleValue(2);\r\n        ctx.translate(0, shadowOffset);\r\n        \r\n        // Use simpler shadow for complex deformed shapes\r\n        if (shapePoints && shapePoints.length > 32) {\r\n            // Simple dark circle shadow when shape is complex\r\n            ctx.fillStyle = 'rgba(0, 0, 0, 0.15)';\r\n            ctx.beginPath();\r\n            ctx.arc(0, 0, radius * 1.05, 0, Math.PI * 2);\r\n            ctx.fill();\r\n        } else {\r\n            // Shadow gradient - dark center fading to transparent\r\n            const shadowGradient = gradientCache.getRadialGradient(\r\n                ctx, 0, 0, radius * 0.7, 0, 0, radius * 1.2,\r\n                [\r\n                    { offset: 0, color: 'rgba(0, 0, 0, 0.2)' },\r\n                    { offset: 0.8, color: 'rgba(0, 0, 0, 0.1)' },\r\n                    { offset: 1, color: 'rgba(0, 0, 0, 0)' }\r\n                ]\r\n            );\r\n\r\n            ctx.fillStyle = shadowGradient;\r\n            ctx.beginPath();\r\n            if (shapePoints) {\r\n                // Scale points for shadow\r\n                const scale = 1.1;\r\n                const step = shapePoints.length > 20 ? 2 : 1;\r\n                ctx.moveTo(shapePoints[0].x * scale, shapePoints[0].y * scale);\r\n                for (let i = step; i < shapePoints.length; i += step) {\r\n                    ctx.lineTo(shapePoints[i].x * scale, shapePoints[i].y * scale);\r\n                }\r\n                ctx.closePath();\r\n            } else {\r\n                ctx.arc(0, 0, radius * 1.1, 0, Math.PI * 2);\r\n            }\r\n            ctx.fill();\r\n        }\r\n        \r\n        ctx.restore();\r\n    }\r\n    \r\n    /**\r\n     * Draw a simple circle\r\n     * @param {CanvasRenderingContext2D} ctx - Canvas context\r\n     * @param {number} radius - Circle radius\r\n     */\r\n    drawCircle(ctx, radius) {\r\n        ctx.beginPath();\r\n        ctx.arc(0, 0, radius, 0, Math.PI * 2);\r\n        ctx.fill();\r\n    }\r\n\r\n    /**\r\n     * Draw a morphed shape from points\r\n     * @param {CanvasRenderingContext2D} ctx - Canvas context\r\n     * @param {Array} points - Shape points\r\n     * @param {number} baseRadius - Base radius for scaling\r\n     */\r\n    drawMorphedShape(ctx, points, baseRadius) {\r\n        if (!points || points.length < 3) {\r\n            // Fallback to circle if not enough points\r\n            this.drawCircle(ctx, baseRadius);\r\n            return;\r\n        }\r\n        \r\n        ctx.beginPath();\r\n        \r\n        // Points from getCanvasPoints are already in canvas coordinates\r\n        // relative to the center (0,0) after translation\r\n        points.forEach((point, i) => {\r\n            if (i === 0) {\r\n                ctx.moveTo(point.x, point.y);\r\n            } else {\r\n                ctx.lineTo(point.x, point.y);\r\n            }\r\n        });\r\n        \r\n        ctx.closePath();\r\n        ctx.fill();\r\n    }\r\n\r\n    /**\r\n     * Render zen core effect\r\n     * @param {number} x - Center X\r\n     * @param {number} y - Center Y\r\n     * @param {number} radius - Core radius\r\n     * @param {number} time - Current time for animation\r\n     */\r\n    renderZenCore(x, y, radius, time) {\r\n        const ctx = this.ctx;\r\n        \r\n        // Zen breathing effect\r\n        const breathPhase = Math.sin(time * 0.001) * 0.5 + 0.5;\r\n        const zenRadius = radius * (0.95 + breathPhase * 0.05);\r\n        \r\n        // Draw zen core with subtle inner glow\r\n        ctx.save();\r\n        \r\n        // Inner shadow for depth\r\n        ctx.shadowBlur = this.scaleValue(10);\r\n        ctx.shadowColor = 'rgba(147, 112, 219, 0.3)';\r\n        ctx.shadowOffsetX = 0;\r\n        ctx.shadowOffsetY = 0;\r\n        \r\n        // Main core\r\n        ctx.fillStyle = '#FFFFFF';\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, zenRadius, 0, Math.PI * 2);\r\n        ctx.fill();\r\n        \r\n        // Inner ring\r\n        ctx.strokeStyle = 'rgba(147, 112, 219, 0.2)';\r\n        ctx.lineWidth = this.scaleValue(1);\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, zenRadius * 0.9, 0, Math.PI * 2);\r\n        ctx.stroke();\r\n        \r\n        ctx.restore();\r\n    }\r\n\r\n    /**\r\n     * Render sleepy core effect\r\n     * @param {number} x - Center X\r\n     * @param {number} y - Center Y\r\n     * @param {number} radius - Core radius\r\n     */\r\n    renderSleepyCore(x, y, radius) {\r\n        const ctx = this.ctx;\r\n        \r\n        // Slightly squished for sleepy look\r\n        ctx.save();\r\n        ctx.translate(x, y);\r\n        ctx.scale(1, 0.85);\r\n        \r\n        ctx.fillStyle = '#FFFFFF';\r\n        ctx.beginPath();\r\n        ctx.arc(0, 0, radius, 0, Math.PI * 2);\r\n        ctx.fill();\r\n        \r\n        ctx.restore();\r\n    }\r\n\r\n    /**\r\n     * Render glitched core effect\r\n     * @param {number} x - Center X\r\n     * @param {number} y - Center Y\r\n     * @param {number} radius - Core radius\r\n     * @param {number} glitchIntensity - Glitch intensity (0-1)\r\n     */\r\n    renderGlitchedCore(x, y, radius, glitchIntensity) {\r\n        const ctx = this.ctx;\r\n        \r\n        // Draw multiple offset cores for glitch effect\r\n        const offsets = [\r\n            { x: -2, y: 0, alpha: 0.3 },\r\n            { x: 2, y: 0, alpha: 0.3 },\r\n            { x: 0, y: -1, alpha: 0.2 }\r\n        ];\r\n        \r\n        ctx.save();\r\n        \r\n        offsets.forEach(offset => {\r\n            ctx.fillStyle = this.hexToRgba('#FFFFFF', offset.alpha * glitchIntensity);\r\n            ctx.beginPath();\r\n            ctx.arc(\r\n                x + offset.x * glitchIntensity * this.scaleValue(5),\r\n                y + offset.y * glitchIntensity * this.scaleValue(5),\r\n                radius,\r\n                0,\r\n                Math.PI * 2\r\n            );\r\n            ctx.fill();\r\n        });\r\n        \r\n        // Main core\r\n        ctx.fillStyle = '#FFFFFF';\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, radius, 0, Math.PI * 2);\r\n        ctx.fill();\r\n        \r\n        ctx.restore();\r\n    }\r\n\r\n    /**\r\n     * Set shape points for morphing\r\n     * @param {Array} points - Array of normalized points\r\n     */\r\n    setShapePoints(points) {\r\n        this.shapePoints = points;\r\n        this.isMorphing = points && points.length > 0;\r\n    }\r\n\r\n    /**\r\n     * Clear shape points (return to circle)\r\n     */\r\n    clearShapePoints() {\r\n        this.shapePoints = null;\r\n        this.isMorphing = false;\r\n    }\r\n\r\n    /**\r\n     * Set core color\r\n     * @param {string} color - Core color\r\n     */\r\n    setCoreColor(color) {\r\n        this.coreColor = color;\r\n    }\r\n\r\n    /**\r\n     * Set core opacity\r\n     * @param {number} opacity - Core opacity (0-1)\r\n     */\r\n    setCoreOpacity(opacity) {\r\n        this.coreOpacity = Math.max(0, Math.min(1, opacity));\r\n    }\r\n\r\n    /**\r\n     * Set core border\r\n     * @param {number} width - Border width\r\n     * @param {string} color - Border color\r\n     */\r\n    setCoreBorder(width, color) {\r\n        this.coreBorderWidth = width;\r\n        this.coreBorderColor = color;\r\n    }\r\n\r\n    /**\r\n     * Get core rendering info\r\n     * @returns {Object} Core state info\r\n     */\r\n    getCoreInfo() {\r\n        return {\r\n            color: this.coreColor,\r\n            opacity: this.coreOpacity,\r\n            hasBorder: this.coreBorderWidth > 0,\r\n            isMorphing: this.isMorphing,\r\n            shapePointCount: this.shapePoints ? this.shapePoints.length : 0\r\n        };\r\n    }\r\n}\r\n\r\nexport default CoreRenderer;","/**\r\n * RotationBrake - Simple braking system using DEGREES like the working demo\r\n * @module core/animation/RotationBrake\r\n */\r\n\r\nexport class RotationBrake {\r\n    constructor(renderer) {\r\n        this.renderer = renderer;\r\n\r\n        // Braking state - EXACTLY like the demo\r\n        this.brakeStartTime = null;\r\n        this.brakeDuration = 2500; // Will be calculated dynamically\r\n        this.brakeStartRotation = 0;\r\n        this.brakeTargetRotation = 0;\r\n        this.brakeStartVelocity = 0;\r\n\r\n        // Callbacks\r\n        this.onComplete = null;\r\n        this.onProgress = null;\r\n\r\n        // Constants\r\n        this.DURATION_FACTOR = 14; // Tuned for natural deceleration feel\r\n    }\r\n\r\n    /**\r\n     * Brake to upright position (0 degrees)\r\n     * @param {Object} options - Brake options\r\n     * @returns {Promise} Resolves when braking complete\r\n     */\r\n    brakeToUpright(options = {}) {\r\n        return this.brakeToTarget(0, options);\r\n    }\r\n\r\n    /**\r\n     * Brake to nearest multiple of given angle\r\n     * @param {number} angleStep - Angle step in DEGREES (e.g., 90 for 90°)\r\n     * @param {Object} options - Brake options\r\n     * @returns {Promise} Resolves when braking complete\r\n     */\r\n    brakeToNearest(angleStep, options = {}) {\r\n        const currentAngle = this.renderer.state.manualRotation || 0;\r\n        const steps = Math.round(currentAngle / angleStep);\r\n        const targetAngle = steps * angleStep;\r\n        return this.brakeToTarget(targetAngle, options);\r\n    }\r\n\r\n    /**\r\n     * Brake to specific target angle\r\n     * @param {number} targetAngle - Target angle in DEGREES (0 = upright)\r\n     * @param {Object} options - Brake options\r\n     * @returns {Promise} Resolves when braking complete\r\n     */\r\n    brakeToTarget(targetAngle, options = {}) {\r\n        return new Promise((resolve) => {\r\n            const {\r\n                onProgress = null,\r\n                onComplete = null\r\n            } = options;\r\n\r\n            this.onProgress = onProgress;\r\n            this.onComplete = onComplete;\r\n\r\n            // Get current state - ALL IN DEGREES\r\n            const currentVelocity = this.renderer.state.rotationSpeed || 0;\r\n            const rotation = this.renderer.state.manualRotation || 0;\r\n\r\n            // Do nothing if not moving or already braking\r\n            if (currentVelocity === 0 || this.brakeStartTime) {\r\n                resolve();\r\n                return;\r\n            }\r\n\r\n            // Initialize braking state\r\n            this.brakeStartTime = performance.now();\r\n            this.brakeStartRotation = rotation;\r\n            this.brakeStartVelocity = currentVelocity;\r\n\r\n            // Calculate the nearest upright target rotation\r\n            if (targetAngle === 0) {\r\n                // Special case for upright\r\n                if (currentVelocity > 0) { // Spinning clockwise\r\n                    this.brakeTargetRotation = (Math.floor(rotation / 360) + 1) * 360;\r\n                } else { // Spinning counter-clockwise\r\n                    this.brakeTargetRotation = Math.floor(rotation / 360) * 360;\r\n                }\r\n            } else {\r\n                // General case\r\n                const normalizedTarget = targetAngle % 360;\r\n                const baseCycles = Math.floor(rotation / 360);\r\n\r\n                if (currentVelocity > 0) {\r\n                    if (normalizedTarget > (rotation % 360)) {\r\n                        this.brakeTargetRotation = baseCycles * 360 + normalizedTarget;\r\n                    } else {\r\n                        this.brakeTargetRotation = (baseCycles + 1) * 360 + normalizedTarget;\r\n                    }\r\n                } else {\r\n                    if (normalizedTarget < (rotation % 360)) {\r\n                        this.brakeTargetRotation = baseCycles * 360 + normalizedTarget;\r\n                    } else {\r\n                        this.brakeTargetRotation = (baseCycles - 1) * 360 + normalizedTarget;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // DYNAMIC DURATION CALCULATION - EXACTLY like the demo\r\n            const angleToTravel = Math.abs(this.brakeTargetRotation - this.brakeStartRotation);\r\n            this.brakeDuration = Math.max(500, (angleToTravel / Math.abs(currentVelocity)) * this.DURATION_FACTOR * 5);\r\n\r\n            console.log('Brake started:', {\r\n                from: rotation.toFixed(1) + '°',\r\n                to: this.brakeTargetRotation.toFixed(1) + '°',\r\n                velocity: currentVelocity,\r\n                duration: this.brakeDuration.toFixed(0) + 'ms'\r\n            });\r\n\r\n            // Stop adding velocity immediately\r\n            this.renderer.setRotationSpeed(0);\r\n\r\n            this.resolvePromise = resolve;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Update brake state - called by renderer each frame\r\n     * @param {number} currentTime - Current timestamp from requestAnimationFrame\r\n     * @returns {Object|null} - Rotation update or null if not braking\r\n     */\r\n    updateBrake(currentTime) {\r\n        if (!this.brakeStartTime) {\r\n            return null; // Not braking\r\n        }\r\n\r\n        const elapsed = currentTime - this.brakeStartTime;\r\n        const progress = Math.min(elapsed / this.brakeDuration, 1);\r\n\r\n        // Ease-out quartic for smooth deceleration (starts fast, ends slow)\r\n        const easedProgress = 1 - Math.pow(1 - progress, 4);\r\n\r\n        // Calculate new rotation based on eased progress\r\n        const rotation = this.brakeStartRotation +\r\n            (this.brakeTargetRotation - this.brakeStartRotation) * easedProgress;\r\n\r\n        // Calculate virtual speed for UI (decreases with progress)\r\n        const virtualSpeed = this.brakeStartVelocity * Math.pow(1 - easedProgress, 2);\r\n\r\n        // Progress callback\r\n        if (this.onProgress) {\r\n            this.onProgress(easedProgress, virtualSpeed, rotation);\r\n        }\r\n\r\n        if (progress >= 1) {\r\n            // Stop the animation when braking is complete\r\n            this.brakeStartTime = null;\r\n\r\n            console.log('Brake complete:', {\r\n                target: this.brakeTargetRotation.toFixed(1) + '°',\r\n                duration: elapsed.toFixed(0) + 'ms'\r\n            });\r\n\r\n            this.complete();\r\n\r\n            // Return final position\r\n            return {\r\n                rotation: this.brakeTargetRotation,\r\n                speed: 0,\r\n                complete: true\r\n            };\r\n        }\r\n\r\n        // Continue braking\r\n        return {\r\n            rotation: rotation,\r\n            speed: virtualSpeed,\r\n            complete: false\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Stop any active braking\r\n     */\r\n    stop() {\r\n        this.brakeStartTime = null;\r\n    }\r\n\r\n    /**\r\n     * Complete the braking operation\r\n     * @private\r\n     */\r\n    complete() {\r\n        if (this.onComplete) {\r\n            this.onComplete();\r\n        }\r\n\r\n        if (this.resolvePromise) {\r\n            this.resolvePromise();\r\n            this.resolvePromise = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if currently braking\r\n     * @returns {boolean}\r\n     */\r\n    isBraking() {\r\n        return this.brakeStartTime !== null;\r\n    }\r\n\r\n    /**\r\n     * Emergency stop - immediately halt rotation\r\n     */\r\n    emergencyStop() {\r\n        this.stop();\r\n        this.renderer.setRotationSpeed(0);\r\n        this.complete();\r\n    }\r\n\r\n    /**\r\n     * Get current brake progress\r\n     * @returns {number} Progress from 0 to 1\r\n     */\r\n    getProgress() {\r\n        if (!this.brakeStartTime) return 0;\r\n        const elapsed = performance.now() - this.brakeStartTime;\r\n        return Math.min(elapsed / this.brakeDuration, 1);\r\n    }\r\n}\r\n\r\nexport default RotationBrake;","/**\r\n * AmbientDanceAnimator - Connects ambient dance gestures to the renderer\r\n * Bridges the GestureBlender output with the actual rendering system\r\n */\r\n\r\nclass AmbientDanceAnimator {\r\n    constructor(renderer) {\r\n        this.renderer = renderer;\r\n\r\n        // Animation states for ambient gestures\r\n        this.animations = {\r\n            grooveSway: null,\r\n            grooveBob: null,\r\n            grooveFlow: null,\r\n            groovePulse: null,\r\n            grooveStep: null\r\n        };\r\n\r\n        // Current active animation\r\n        this.activeAnimation = null;\r\n\r\n        // Blend state from GestureBlender\r\n        this.blendState = {\r\n            x: 0,\r\n            y: 0,\r\n            rotation: 0,\r\n            scale: 1,\r\n            opacity: 1\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Start an ambient dance animation\r\n     * @param {string} animationName - Name of the ambient gesture\r\n     * @param {Object} options - Animation options\r\n     */\r\n    startAmbientAnimation(animationName, options = {}) {\r\n        // Stop previous animation\r\n        if (this.activeAnimation && this.activeAnimation !== animationName) {\r\n            this.stopAmbientAnimation(this.activeAnimation);\r\n        }\r\n\r\n        this.activeAnimation = animationName;\r\n        this.animations[animationName] = {\r\n            startTime: Date.now(),\r\n            intensity: options.intensity || 1.0,\r\n            frequency: options.frequency || 1.0,\r\n            options: options\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Stop an ambient animation\r\n     */\r\n    stopAmbientAnimation(animationName) {\r\n        if (this.animations[animationName]) {\r\n            this.animations[animationName] = null;\r\n        }\r\n        if (this.activeAnimation === animationName) {\r\n            this.activeAnimation = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update blend state from GestureBlender\r\n     */\r\n    updateBlendState(blendState) {\r\n        if (!blendState) return;\r\n\r\n        // Smooth interpolation\r\n        const lerpFactor = 0.2;\r\n        this.blendState.x = this.lerp(this.blendState.x, blendState.x || 0, lerpFactor);\r\n        this.blendState.y = this.lerp(this.blendState.y, blendState.y || 0, lerpFactor);\r\n        this.blendState.rotation = this.lerp(this.blendState.rotation, blendState.rotation || 0, lerpFactor);\r\n        this.blendState.scale = this.lerp(this.blendState.scale, blendState.scale || 1, lerpFactor);\r\n        this.blendState.opacity = this.lerp(this.blendState.opacity, blendState.opacity || 1, lerpFactor);\r\n    }\r\n\r\n    /**\r\n     * Get current animation transform\r\n     */\r\n    getTransform(deltaTime) {\r\n        const transform = {\r\n            x: this.blendState.x,\r\n            y: this.blendState.y,\r\n            rotation: this.blendState.rotation,\r\n            scale: this.blendState.scale,\r\n            opacity: this.blendState.opacity\r\n        };\r\n\r\n        // Apply active animation on top\r\n        if (this.activeAnimation) {\r\n            const animation = this.animations[this.activeAnimation];\r\n            if (animation) {\r\n                const elapsed = Date.now() - animation.startTime;\r\n\r\n                switch (this.activeAnimation) {\r\n                    case 'grooveSway':\r\n                        transform.x += Math.sin(elapsed / 500 * animation.frequency) * 15 * animation.intensity;\r\n                        transform.rotation += Math.sin(elapsed / 500 * animation.frequency + Math.PI/4) * 5 * animation.intensity;\r\n                        break;\r\n\r\n                    case 'grooveBob':\r\n                        transform.y += Math.sin(elapsed / 400 * animation.frequency) * 10 * animation.intensity;\r\n                        transform.scale *= 1 + Math.sin(elapsed / 400 * animation.frequency) * 0.03 * animation.intensity;\r\n                        break;\r\n\r\n                    case 'grooveFlow':\r\n                        const t = elapsed / 1000 * animation.frequency;\r\n                        transform.x += Math.sin(t) * Math.cos(t * 2) * 20 * animation.intensity;\r\n                        transform.y += Math.cos(t) * Math.sin(t * 2) * 10 * animation.intensity;\r\n                        transform.rotation += Math.sin(t * 2) * 8 * animation.intensity;\r\n                        break;\r\n\r\n                    case 'groovePulse':\r\n                        transform.scale *= 1 + Math.sin(elapsed / 250 * animation.frequency) * 0.05 * animation.intensity;\r\n                        transform.opacity *= 0.9 + Math.sin(elapsed / 250 * animation.frequency) * 0.1 * animation.intensity;\r\n                        break;\r\n\r\n                    case 'grooveStep':\r\n                        const stepPhase = Math.floor(elapsed / 500 * animation.frequency) % 4;\r\n                        const stepProgress = (elapsed / 500 * animation.frequency) % 1;\r\n                        const smoothStep = this.smoothStep(stepProgress);\r\n\r\n                        if (stepPhase === 0) transform.x += smoothStep * 25 * animation.intensity;\r\n                        else if (stepPhase === 2) transform.x -= smoothStep * 25 * animation.intensity;\r\n\r\n                        transform.y += Math.abs(Math.sin(elapsed / 250 * animation.frequency)) * 5 * animation.intensity;\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return transform;\r\n    }\r\n\r\n    /**\r\n     * Linear interpolation\r\n     */\r\n    lerp(a, b, t) {\r\n        return a + (b - a) * t;\r\n    }\r\n\r\n    /**\r\n     * Smooth step function\r\n     */\r\n    smoothStep(t) {\r\n        return t * t * (3 - 2 * t);\r\n    }\r\n}\r\n\r\n// Export for ES6 modules\r\nexport { AmbientDanceAnimator };\r\n\r\n// Also export as default\r\nexport default AmbientDanceAnimator;","/**\r\n * Animation Loop Manager\r\n * Consolidates all requestAnimationFrame calls into a single, efficient loop\r\n *\r\n * @module core/AnimationLoopManager\r\n * @version 1.0.0\r\n */\r\n\r\n/**\r\n * Priority levels for animations\r\n * @enum {number}\r\n */\r\nexport const AnimationPriority = {\r\n    CRITICAL: 0,    // Must run every frame (e.g., main render)\r\n    HIGH: 1,        // Should run every frame if possible\r\n    MEDIUM: 2,      // Can skip frames if needed\r\n    LOW: 3,         // Background tasks, can be throttled\r\n    IDLE: 4         // Only run when idle\r\n};\r\n\r\n/**\r\n * Centralized animation loop manager\r\n * Replaces multiple requestAnimationFrame calls with a single, optimized loop\r\n */\r\nexport class AnimationLoopManager {\r\n    constructor() {\r\n        // Animation callbacks organized by priority\r\n        this.callbacks = new Map();\r\n        this.callbackIdCounter = 0;\r\n\r\n        // Frame timing\r\n        this.frameId = null;\r\n        this.isRunning = false;\r\n        this.lastFrameTime = 0;\r\n        this.deltaTime = 0;\r\n        this.fps = 60;\r\n        this.frameCount = 0;\r\n\r\n        // Performance\r\n        this.targetFPS = 60;\r\n        this.targetFrameTime = 1000 / this.targetFPS;\r\n        this.frameBudget = 16.67; // ms\r\n\r\n        // Frame skipping for low priority\r\n        this.prioritySkipCounters = {\r\n            [AnimationPriority.MEDIUM]: 0,\r\n            [AnimationPriority.LOW]: 0,\r\n            [AnimationPriority.IDLE]: 0\r\n        };\r\n\r\n        // Performance monitoring\r\n        this.performanceMonitor = null;\r\n        this.frameTimeHistory = [];\r\n        this.maxHistorySize = 60;\r\n\r\n        // Bind methods\r\n        this.loop = this.loop.bind(this);\r\n    }\r\n\r\n    /**\r\n     * Register an animation callback\r\n     * @param {Function} callback - Function to call each frame (receives deltaTime, timestamp)\r\n     * @param {number} priority - Priority level from AnimationPriority enum\r\n     * @param {Object} context - Optional context for callback\r\n     * @returns {number} Callback ID for later removal\r\n     */\r\n    register(callback, priority = AnimationPriority.MEDIUM, context = null) {\r\n        if (typeof callback !== 'function') {\r\n            throw new Error('Callback must be a function');\r\n        }\r\n\r\n        const id = ++this.callbackIdCounter;\r\n\r\n        // Store callback with metadata\r\n        this.callbacks.set(id, {\r\n            callback,\r\n            priority,\r\n            context,\r\n            lastRun: 0,\r\n            runCount: 0,\r\n            totalTime: 0,\r\n            enabled: true\r\n        });\r\n\r\n        // Auto-start if this is the first callback\r\n        if (this.callbacks.size === 1 && !this.isRunning) {\r\n            this.start();\r\n        }\r\n\r\n        return id;\r\n    }\r\n\r\n    /**\r\n     * Unregister an animation callback\r\n     * @param {number} id - Callback ID returned from register()\r\n     */\r\n    unregister(id) {\r\n        this.callbacks.delete(id);\r\n\r\n        // Auto-stop if no callbacks remain\r\n        if (this.callbacks.size === 0 && this.isRunning) {\r\n            this.stop();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Enable/disable a callback without removing it\r\n     * @param {number} id - Callback ID\r\n     * @param {boolean} enabled - Whether to enable or disable\r\n     */\r\n    setEnabled(id, enabled) {\r\n        const callback = this.callbacks.get(id);\r\n        if (callback) {\r\n            callback.enabled = enabled;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Start the animation loop\r\n     */\r\n    start() {\r\n        if (this.isRunning) return;\r\n\r\n        this.isRunning = true;\r\n        this.lastFrameTime = performance.now();\r\n        this.frameId = requestAnimationFrame(this.loop);\r\n    }\r\n\r\n    /**\r\n     * Stop the animation loop\r\n     */\r\n    stop() {\r\n        if (!this.isRunning) return;\r\n\r\n        this.isRunning = false;\r\n        if (this.frameId) {\r\n            cancelAnimationFrame(this.frameId);\r\n            this.frameId = null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Main animation loop\r\n     * @param {number} timestamp - Current timestamp from requestAnimationFrame\r\n     */\r\n    loop(timestamp) {\r\n        if (!this.isRunning) return;\r\n\r\n        // Calculate delta time\r\n        this.deltaTime = timestamp - this.lastFrameTime;\r\n        this.lastFrameTime = timestamp;\r\n\r\n        // Update FPS\r\n        this.frameCount++;\r\n        if (this.frameCount % 60 === 0) {\r\n            this.fps = Math.round(1000 / (this.deltaTime || 16.67));\r\n        }\r\n\r\n        // Track frame time\r\n        this.frameTimeHistory.push(this.deltaTime);\r\n        if (this.frameTimeHistory.length > this.maxHistorySize) {\r\n            this.frameTimeHistory.shift();\r\n        }\r\n\r\n        // Performance marker start\r\n        const frameStartTime = performance.now();\r\n\r\n        // Group callbacks by priority\r\n        const callbacksByPriority = this.groupCallbacksByPriority();\r\n\r\n        // Execute callbacks by priority\r\n        let timeSpent = 0;\r\n\r\n        for (const priority of [\r\n            AnimationPriority.CRITICAL,\r\n            AnimationPriority.HIGH,\r\n            AnimationPriority.MEDIUM,\r\n            AnimationPriority.LOW,\r\n            AnimationPriority.IDLE\r\n        ]) {\r\n            // Check frame budget (except for CRITICAL)\r\n            if (priority > AnimationPriority.CRITICAL && timeSpent > this.frameBudget * 0.8) {\r\n                break; // Skip lower priorities if running out of time\r\n            }\r\n\r\n            // Check if we should skip this priority level\r\n            if (this.shouldSkipPriority(priority)) {\r\n                continue;\r\n            }\r\n\r\n            // Execute callbacks at this priority\r\n            const callbacks = callbacksByPriority.get(priority) || [];\r\n\r\n            for (const callbackData of callbacks) {\r\n                if (!callbackData.enabled) continue;\r\n\r\n                const callbackStart = performance.now();\r\n\r\n                try {\r\n                    // Call with context if provided\r\n                    if (callbackData.context) {\r\n                        callbackData.callback.call(callbackData.context, this.deltaTime, timestamp);\r\n                    } else {\r\n                        callbackData.callback(this.deltaTime, timestamp);\r\n                    }\r\n\r\n                    // Track performance\r\n                    const callbackTime = performance.now() - callbackStart;\r\n                    callbackData.totalTime += callbackTime;\r\n                    callbackData.runCount++;\r\n                    callbackData.lastRun = timestamp;\r\n                    timeSpent += callbackTime;\r\n\r\n                } catch (error) {\r\n                    console.error('Animation callback error:', error);\r\n                    // Disable problematic callbacks\r\n                    if (callbackData.runCount > 0 && callbackData.totalTime / callbackData.runCount > 10) {\r\n                        console.warn('Disabling slow callback');\r\n                        callbackData.enabled = false;\r\n                    }\r\n                }\r\n\r\n                // Break if spending too much time\r\n                if (timeSpent > this.frameBudget) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Performance marker end\r\n        const frameTime = performance.now() - frameStartTime;\r\n\r\n        // Warn if frame took too long\r\n        if (frameTime > this.frameBudget * 1.5) {\r\n            console.warn(`Frame took ${frameTime.toFixed(2)}ms (target: ${this.frameBudget}ms)`);\r\n        }\r\n\r\n        // Schedule next frame\r\n        this.frameId = requestAnimationFrame(this.loop);\r\n    }\r\n\r\n    /**\r\n     * Group callbacks by priority for efficient execution\r\n     * @returns {Map} Map of priority to callback arrays\r\n     */\r\n    groupCallbacksByPriority() {\r\n        const groups = new Map();\r\n\r\n        for (const [id, callbackData] of this.callbacks) {\r\n            const priority = callbackData.priority;\r\n\r\n            if (!groups.has(priority)) {\r\n                groups.set(priority, []);\r\n            }\r\n\r\n            groups.get(priority).push(callbackData);\r\n        }\r\n\r\n        return groups;\r\n    }\r\n\r\n    /**\r\n     * Determine if we should skip a priority level this frame\r\n     * @param {number} priority - Priority level to check\r\n     * @returns {boolean} True if should skip\r\n     */\r\n    shouldSkipPriority(priority) {\r\n        // Never skip critical\r\n        if (priority === AnimationPriority.CRITICAL) return false;\r\n\r\n        // Skip based on frame rate\r\n        if (this.fps < 30 && priority >= AnimationPriority.LOW) return true;\r\n        if (this.fps < 45 && priority === AnimationPriority.IDLE) return true;\r\n\r\n        // Frame skipping for lower priorities\r\n        if (priority === AnimationPriority.MEDIUM) {\r\n            // Run every 2nd frame if FPS is low\r\n            if (this.fps < 50) {\r\n                this.prioritySkipCounters[priority]++;\r\n                if (this.prioritySkipCounters[priority] % 2 !== 0) return true;\r\n            }\r\n        } else if (priority === AnimationPriority.LOW) {\r\n            // Run every 3rd frame if FPS is low\r\n            if (this.fps < 50) {\r\n                this.prioritySkipCounters[priority]++;\r\n                if (this.prioritySkipCounters[priority] % 3 !== 0) return true;\r\n            }\r\n        } else if (priority === AnimationPriority.IDLE) {\r\n            // Run every 5th frame\r\n            this.prioritySkipCounters[priority]++;\r\n            if (this.prioritySkipCounters[priority] % 5 !== 0) return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Get performance statistics\r\n     * @returns {Object} Performance stats\r\n     */\r\n    getStats() {\r\n        const stats = {\r\n            fps: this.fps,\r\n            frameCount: this.frameCount,\r\n            callbackCount: this.callbacks.size,\r\n            averageFrameTime: 0,\r\n            maxFrameTime: 0,\r\n            minFrameTime: Infinity\r\n        };\r\n\r\n        // Calculate frame time stats\r\n        if (this.frameTimeHistory.length > 0) {\r\n            let total = 0;\r\n            for (const time of this.frameTimeHistory) {\r\n                total += time;\r\n                stats.maxFrameTime = Math.max(stats.maxFrameTime, time);\r\n                stats.minFrameTime = Math.min(stats.minFrameTime, time);\r\n            }\r\n            stats.averageFrameTime = total / this.frameTimeHistory.length;\r\n        }\r\n\r\n        // Get callback stats by priority\r\n        stats.callbacksByPriority = {};\r\n        for (const [id, callback] of this.callbacks) {\r\n            const priority = callback.priority;\r\n            if (!stats.callbacksByPriority[priority]) {\r\n                stats.callbacksByPriority[priority] = {\r\n                    count: 0,\r\n                    totalTime: 0,\r\n                    enabled: 0\r\n                };\r\n            }\r\n            stats.callbacksByPriority[priority].count++;\r\n            stats.callbacksByPriority[priority].totalTime += callback.totalTime;\r\n            if (callback.enabled) stats.callbacksByPriority[priority].enabled++;\r\n        }\r\n\r\n        return stats;\r\n    }\r\n\r\n    /**\r\n     * Set target FPS\r\n     * @param {number} fps - Target frames per second\r\n     */\r\n    setTargetFPS(fps) {\r\n        this.targetFPS = Math.max(15, Math.min(120, fps));\r\n        this.targetFrameTime = 1000 / this.targetFPS;\r\n        this.frameBudget = this.targetFrameTime;\r\n    }\r\n\r\n    /**\r\n     * Set performance monitor\r\n     * @param {PerformanceMonitor} monitor - Performance monitor instance\r\n     */\r\n    setPerformanceMonitor(monitor) {\r\n        this.performanceMonitor = monitor;\r\n    }\r\n\r\n    /**\r\n     * Destroy and cleanup\r\n     */\r\n    destroy() {\r\n        this.stop();\r\n        this.callbacks.clear();\r\n        this.frameTimeHistory = [];\r\n    }\r\n}\r\n\r\n// Create singleton instance\r\nexport const animationLoopManager = new AnimationLoopManager();\r\n\r\n// Export for convenience\r\nexport default animationLoopManager;","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE\r\n *  └─○═╝                                                                             \r\n *                      ◐ ◑ ◒ ◓  EMOTIVE RENDERER  ◓ ◒ ◑ ◐                      \r\n *                                                                                    \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Emotive Renderer - Visual Rendering Engine\r\n * @author Emotive Engine Team\r\n * @version 2.4.0\r\n * @module EmotiveRenderer\r\n * @changelog 2.4.0 - Added offscreen canvas caching for glow gradients\r\n * @changelog 2.3.0 - Optimized color transitions to use main render loop\r\n * @changelog 2.2.0 - Dynamic visual resampling on resize for consistent quality\r\n * @changelog 2.1.0 - Implemented undertone saturation system for glow colors\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ The VISUAL ARTIST of the Emotive Engine. Renders the iconic orb with its          \r\n * ║ glowing core, breathing animation, eye expressions, and gesture animations.       \r\n * ║ Creates the minimalist yet expressive visual that defines Emotive.                \r\n * ║                                                                                    \r\n * ║ NEW: Undertone saturation creates visual depth by adjusting glow color            \r\n * ║ saturation based on emotional intensity (intense→electric, subdued→ghostly)       \r\n * ║ NEW: Dynamic visual resampling ensures consistent quality at any canvas size      \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ 🎨 VISUAL COMPONENTS                                                              \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ • White Core      : The solid center orb (#FFFFFF)                                \r\n * │ • Colored Glow    : Emotional aura surrounding the core                           \r\n * │ • Eye Shape       : Arc-based expressions (happiness, sadness, focus)             \r\n * │ • Breathing       : Subtle size pulsation for life-like quality                   \r\n * │ • Gesture Motion  : Position, scale, and rotation animations                      \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ 🎭 RENDERING PIPELINE                                                             \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ 1. Clear canvas or apply motion blur                                              \r\n * │ 2. Calculate breathing scale factor                                               \r\n * │ 3. Apply gesture transformations (position, scale, rotation)                      \r\n * │ 4. Draw colored glow layers (3 gradient circles)                                  \r\n * │ 5. Draw white core circle                                                         \r\n * │ 6. Draw eye expression if not neutral                                             \r\n * │ 7. Apply special effects (jitter, zen morph, etc.)                                \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ ⚙️  CONFIGURABLE PROPERTIES                                                       \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ • coreSizeDivisor  : Orb size relative to canvas (default: 12)                    \r\n * │ • glowMultiplier   : Glow radius vs core (default: 2.5x)                          \r\n * │ • breathingSpeed   : Breaths per minute (default: 16)                             \r\n * │ • breathingDepth   : Scale variation % (default: 8%)                              \r\n * │ • renderingStyle   : 'classic' | 'soft' | 'sharp'                                 \r\n * │ • referenceSize    : Reference canvas size for scaling (default: 400)             \r\n * │ • baseScale        : Global scale multiplier (default: 1.0)                       \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ 👁️ EYE EXPRESSION SYSTEM                                                          \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ • Openness    : 0.0 (closed) to 1.0 (fully open)                                  \r\n * │ • Arc         : -1.0 (sad ∩) to 1.0 (happy ∪)                                    \r\n * │ • Asymmetry   : Different shapes for left/right eyes                              \r\n * │ • Blinking    : Smooth open/close animations                                      \r\n * │ • Zen Morph   : Special ∩∩ shape for meditation                                   \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ ❌ PERFORMANCE CRITICAL                                                           \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ ✗ Gradient caching     → Recreating gradients kills FPS                          \r\n * │ ✗ Canvas save/restore  → Excessive use causes slowdown                           \r\n * │ ✗ Clear rect timing    → Motion blur depends on this                             \r\n * │ ✗ Animation frame IDs  → Must track to prevent memory leaks                      \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ════════════════════════════════════════════════════════════════════════════════════\r\n */\r\n\r\nimport { interpolateHsl, applyUndertoneSaturation, rgbToHex, hexToRgb } from '../utils/colorUtils.js';\r\nimport GestureCompositor from './GestureCompositor.js';\r\nimport { getEmotion } from './emotions/index.js';\r\nimport { getEffect, applyEffect, isEffectActive } from './effects/index.js';\r\nimport { getGesture } from './gestures/index.js';\r\nimport musicalDuration from './MusicalDuration.js';\r\n\r\n// Import modular renderer components\r\nimport { GestureAnimator } from './renderer/GestureAnimator.js';\r\nimport { ColorUtilities } from './renderer/ColorUtilities.js';\r\nimport { SpecialEffects } from './renderer/SpecialEffects.js';\r\nimport { EyeRenderer } from './renderer/EyeRenderer.js';\r\nimport { BreathingAnimator } from './renderer/BreathingAnimator.js';\r\nimport { GlowRenderer } from './renderer/GlowRenderer.js';\r\nimport { CoreRenderer } from './renderer/CoreRenderer.js';\r\nimport { RotationBrake } from './animation/RotationBrake.js';\r\nimport { AmbientDanceAnimator } from './renderer/AmbientDanceAnimator.js';\r\nimport { animationLoopManager, AnimationPriority } from './AnimationLoopManager.js';\r\nimport { gradientCache } from './renderer/GradientCache.js';\r\n\r\nclass EmotiveRenderer {\r\n    constructor(canvasManager, options = {}) {\r\n        this.canvasManager = canvasManager;\r\n        this.ctx = canvasManager.getContext();\r\n        \r\n        if (!this.ctx) {\r\n        }\r\n        \r\n        // Gesture compositor for emotion/undertone modulation\r\n        this.gestureCompositor = new GestureCompositor();\r\n        \r\n        // Initialize current undertone\r\n        this.currentUndertone = null;\r\n        \r\n        // Initialize modular components\r\n        this.gestureAnimator = new GestureAnimator(this);\r\n        this.colorUtilities = new ColorUtilities();\r\n        this.specialEffects = new SpecialEffects(this);\r\n        this.eyeRenderer = new EyeRenderer(this);\r\n        this.breathingAnimator = new BreathingAnimator(this);\r\n        this.glowRenderer = new GlowRenderer(this);\r\n        this.coreRenderer = new CoreRenderer(this);\r\n        this.rotationBrake = new RotationBrake(this);\r\n        this.ambientDanceAnimator = new AmbientDanceAnimator(this);\r\n\r\n        // Configuration - matching original Emotive proportions\r\n        this.config = {\r\n            coreColor: options.coreColor || '#FFFFFF',\r\n            coreSizeDivisor: options.coreSizeDivisor || 12,  // Core radius = min(width,height) / 12\r\n            glowMultiplier: options.glowMultiplier || 2.5,   // Glow radius = core radius * 2.5\r\n            defaultGlowColor: options.defaultGlowColor || '#14B8A6',  // Teal\r\n            breathingSpeed: options.breathingSpeed || 0.42,  // 16 breaths/min (0.42 rad/s = 4 sec/cycle = 15-16 bpm)\r\n            breathingDepth: options.breathingDepth || 0.08,  // 8% size variation for visible breathing\r\n            renderingStyle: options.renderingStyle || 'classic',\r\n            baseScale: options.baseScale || 1.0,  // Global scale multiplier for entire system\r\n            referenceSize: 400,  // Reference canvas size for scale calculations\r\n            topOffset: options.topOffset || 0  // Vertical offset to align with layout\r\n        };\r\n        \r\n        // Initialize scaleFactor based on current canvas size\r\n        const canvasSize = Math.min(\r\n            this.canvasManager.width || 400, \r\n            this.canvasManager.height || 400\r\n        );\r\n        this.scaleFactor = (canvasSize / this.config.referenceSize) * this.config.baseScale;\r\n        \r\n        // State\r\n        this.state = {\r\n            emotion: 'neutral',\r\n            glowColor: this.config.defaultGlowColor,\r\n            glowIntensity: 1.0,\r\n            breathRate: 1.0,\r\n            breathDepth: this.config.breathingDepth,\r\n            coreJitter: false,\r\n            speaking: false,\r\n            recording: false,\r\n            sleeping: false,\r\n            blinking: false,\r\n            blinkingEnabled: true,  // Add flag to control blinking\r\n            gazeOffset: { x: 0, y: 0 },\r\n            gazeIntensity: 0,\r\n            gazeLocked: false,\r\n            gazeTrackingEnabled: false,  // Whether to track mouse/touch\r\n            gazeTarget: { x: 0, y: 0 },  // Target position for gaze (-1 to 1)\r\n            zenVortexIntensity: 1.0,  // Adjustable whirlpool intensity for zen\r\n            // Suspicion state\r\n            squintAmount: 0,         // 0-1, how much the eye is narrowed\r\n            targetSquintAmount: 0,   // Target squint amount to animate to\r\n            scanPhase: 0,            // Current phase of scanning animation\r\n            lastScanTime: 0,         // Last time we did a scan\r\n            isSuspicious: false,     // Track if we're in suspicion mode\r\n            // Custom scale for breathing\r\n            customScale: null,       // When set, overrides normal breathing scale\r\n            // Undertone modifiers - initialize with defaults\r\n            sizeMultiplier: 1.0,\r\n            jitterAmount: 0,\r\n            episodicFlutter: false,\r\n            glowRadiusMult: 1.0,\r\n            breathRateMult: 1.0,\r\n            breathDepthMult: 1.0,\r\n            breathIrregular: false,\r\n            particleRateMult: 1.0,\r\n            // Manual rotation control (not BPM-locked)\r\n            manualRotation: 0,        // Current rotation angle in DEGREES\r\n            rotationSpeed: 0,         // Rotation speed in DEGREES per frame (like velocity in demo)\r\n            lastRotationUpdate: performance.now()\r\n        };\r\n        \r\n        // Animation state (now delegated to modules)\r\n        // Breathing is handled by BreathingAnimator\r\n        // Blinking is handled by EyeRenderer\r\n        \r\n        // Track animation frame IDs to prevent memory leaks\r\n        this.animationFrameIds = {\r\n            colorTransition: null,\r\n            eyeClose: null,\r\n            eyeOpen: null,\r\n            zenEnter: null,\r\n            zenExit: null\r\n        };\r\n\r\n        // Track loop manager callback IDs\r\n        this.loopCallbackIds = {\r\n            eyeClose: null,\r\n            eyeOpen: null,\r\n            zenEnter: null,\r\n            zenExit: null\r\n        };\r\n        \r\n        // Offscreen canvas for double buffering\r\n        this.offscreenCanvas = null;\r\n        this.offscreenCtx = null;\r\n        this.initOffscreenCanvas();\r\n\r\n        // Store canvas reference for gaze tracking\r\n        this.canvas = canvasManager.canvas;\r\n        \r\n        // Cache for expensive gradients\r\n        this.glowCache = new Map();\r\n        this.maxCacheSize = 10;\r\n        \r\n        // Gesture animations\r\n        this.gestureAnimations = {\r\n            bounce: {\r\n                active: false,\r\n                startTime: 0,\r\n                progress: 0,\r\n                params: null\r\n            },\r\n            pulse: {\r\n                active: false,\r\n                startTime: 0,\r\n                progress: 0,\r\n                params: null\r\n            },\r\n            shake: {\r\n                active: false,\r\n                startTime: 0,\r\n                progress: 0,\r\n                params: null\r\n            },\r\n            spin: {\r\n                active: false,\r\n                startTime: 0,\r\n                progress: 0,\r\n                params: null\r\n            },\r\n            nod: {\r\n                active: false,\r\n                startTime: 0,\r\n                progress: 0,\r\n                params: null\r\n            },\r\n            tilt: {\r\n                active: false,\r\n                startTime: 0,\r\n                progress: 0,\r\n                params: null\r\n            },\r\n            expand: {\r\n                active: false,\r\n                startTime: 0,\r\n                progress: 0,\r\n                params: null\r\n            },\r\n            contract: {\r\n                active: false,\r\n                startTime: 0,\r\n                progress: 0,\r\n                params: null\r\n            },\r\n            flash: {\r\n                active: false,\r\n                startTime: 0,\r\n                progress: 0,\r\n                params: null\r\n            },\r\n            drift: {\r\n                active: false,\r\n                startTime: 0,\r\n                progress: 0,\r\n                params: null,\r\n                startX: 0,\r\n                startY: 0\r\n            },\r\n            stretch: {\r\n                active: false,\r\n                startTime: 0,\r\n                progress: 0,\r\n                params: null\r\n            },\r\n            glow: {\r\n                active: false,\r\n                startTime: 0,\r\n                progress: 0,\r\n                params: null\r\n            },\r\n            flicker: {\r\n                active: false,\r\n                startTime: 0,\r\n                progress: 0,\r\n                params: null\r\n            },\r\n            vibrate: {\r\n                active: false,\r\n                startTime: 0,\r\n                progress: 0,\r\n                params: null\r\n            },\r\n            wave: {\r\n                active: false,\r\n                startTime: 0,\r\n                progress: 0,\r\n                params: null\r\n            },\r\n            breathe: {\r\n                active: false,\r\n                startTime: 0,\r\n                progress: 0,\r\n                params: null\r\n            },\r\n            morph: {\r\n                active: false,\r\n                startTime: 0,\r\n                progress: 0,\r\n                params: null\r\n            },\r\n            slowBlink: {\r\n                active: false,\r\n                startTime: 0,\r\n                progress: 0,\r\n                params: null\r\n            },\r\n            look: {\r\n                active: false,\r\n                startTime: 0,\r\n                progress: 0,\r\n                params: null,\r\n                targetX: 0,\r\n                targetY: 0\r\n            },\r\n            settle: {\r\n                active: false,\r\n                startTime: 0,\r\n                progress: 0,\r\n                params: null\r\n            },\r\n            breathIn: {\r\n                active: false,\r\n                startTime: 0,\r\n                progress: 0,\r\n                params: null\r\n            },\r\n            breathOut: {\r\n                active: false,\r\n                startTime: 0,\r\n                progress: 0,\r\n                params: null\r\n            },\r\n            breathHold: {\r\n                active: false,\r\n                startTime: 0,\r\n                progress: 0,\r\n                params: null\r\n            },\r\n            breathHoldEmpty: {\r\n                active: false,\r\n                startTime: 0,\r\n                progress: 0,\r\n                params: null\r\n            },\r\n            jump: {\r\n                active: false,\r\n                startTime: 0,\r\n                progress: 0,\r\n                params: null\r\n            },\r\n            orbital: {\r\n                active: false,\r\n                startTime: 0,\r\n                progress: 0,\r\n                params: null\r\n            },\r\n            hula: {\r\n                active: false,\r\n                startTime: 0,\r\n                progress: 0,\r\n                params: null\r\n            }\r\n        };\r\n        \r\n        // Episodic effects for undertones\r\n        this.episodicEffects = {\r\n            nervous: {\r\n                active: false,\r\n                startTime: 0,\r\n                duration: 0,\r\n                intensity: 0,\r\n                nextTrigger: 3000 + Math.random() * 2000 // 3-5 seconds\r\n            },\r\n            confident: {\r\n                active: false,\r\n                startTime: 0,\r\n                duration: 0,\r\n                intensity: 0,\r\n                nextTrigger: 4000 + Math.random() * 2000 // 4-6 seconds\r\n            },\r\n            tired: {\r\n                active: false,\r\n                startTime: 0,\r\n                duration: 0,\r\n                intensity: 0,\r\n                nextTrigger: 5000 + Math.random() * 2000 // 5-7 seconds\r\n            },\r\n            intense: {\r\n                active: false,\r\n                startTime: 0,\r\n                duration: 0,\r\n                intensity: 0,\r\n                nextTrigger: 3000 + Math.random() * 3000 // 3-6 seconds\r\n            },\r\n            subdued: {\r\n                active: false,\r\n                startTime: 0,\r\n                duration: 0,\r\n                intensity: 0,\r\n                nextTrigger: 4000 + Math.random() * 3000 // 4-7 seconds\r\n            }\r\n        };\r\n        \r\n        // Speaking animation\r\n        this.speakingRings = [];\r\n        this.maxRings = 5;\r\n        this.ringSpawnTimer = 0;\r\n        this.ringSpawnInterval = 200; // ms between rings\r\n        \r\n        // Recording animation (rings move inward)\r\n        this.recordingRings = [];\r\n        this.recordingPulse = 0;\r\n        \r\n        // Sleep state - consolidated here for visualization\r\n        this.sleepZ = [];\r\n        \r\n        // Zen state animation\r\n        this.zenTransition = {\r\n            active: false,\r\n            phase: null, // 'entering', 'in', 'exiting'\r\n            startTime: 0,\r\n            previousEmotion: null,\r\n            targetEmotion: null,\r\n            scaleX: 1.0,\r\n            scaleY: 1.0,\r\n            arcHeight: 0,\r\n            lotusMorph: 0, // 0 = circle, 1 = full lotus\r\n            petalSpread: 0, // 0 = closed, 1 = fully open\r\n            smileCurve: 0  // 0 = straight, 1 = full smile\r\n        };\r\n        \r\n        // Standardized color transition system\r\n        this.colorTransition = {\r\n            active: false,\r\n            fromColor: this.state.glowColor,\r\n            toColor: this.state.glowColor,\r\n            fromIntensity: this.state.glowIntensity,\r\n            toIntensity: this.state.glowIntensity,\r\n            progress: 0,\r\n            startTime: 0,\r\n            duration: 1500  // Default 1.5s\r\n        };\r\n        \r\n        // Comprehensive undertone modifiers\r\n        this.undertoneModifiers = {\r\n            nervous: {\r\n                // Color - subtle shimmer, no major shift\r\n                hueShift: 0,          // No hue change\r\n                saturationMult: 1.05, // Tiny bit more vivid\r\n                brightnessMult: 1.0,  // Normal brightness\r\n                brightnessFlicker: 0.05, // 5% brightness variation\r\n                // Visual\r\n                sizeMultiplier: 1.0,  // Normal size\r\n                jitterAmount: 0,      // No constant jitter - handled by episodic flutter\r\n                episodicFlutter: true, // Occasional butterfly moments\r\n                glowRadiusMult: 1.0,  // Normal glow\r\n                glowPulse: 0.05,      // 5% subtle heartbeat pulse\r\n                // Breathing\r\n                breathRateMult: 1.1,  // Slightly faster\r\n                breathDepthMult: 0.9, // Slightly shallower\r\n                breathIrregular: true, // Occasional catch in rhythm\r\n            },\r\n            confident: {\r\n                // Color - warmer, vibrant\r\n                hueShift: 15,         // Warmer but not overwhelming\r\n                saturationMult: 1.2,  // More vibrant\r\n                brightnessMult: 1.1,  // Slightly brighter\r\n                // Visual\r\n                sizeMultiplier: 1.0,  // Normal size until episodes\r\n                jitterAmount: 0,      // Rock solid\r\n                episodicPowerPose: true, // Occasional chest puffs\r\n                glowRadiusMult: 1.15, // Slightly expanded glow\r\n                // Breathing\r\n                breathRateMult: 0.95, // Slightly slower, controlled\r\n                breathDepthMult: 1.1, // Fuller breaths\r\n                breathIrregular: false,\r\n            },\r\n            tired: {\r\n                // Color - slightly cooler, less saturated\r\n                hueShift: -5,         // Slightly cooler\r\n                saturationMult: 0.7,  // Less vibrant\r\n                brightnessMult: 0.85, // Slightly darker\r\n                // Visual\r\n                sizeMultiplier: 0.95, // Slightly smaller\r\n                jitterAmount: 0,\r\n                episodicMicroSleep: true, // Occasional drowsy sags\r\n                glowRadiusMult: 0.9,  // Slightly reduced glow\r\n                // Breathing\r\n                breathRateMult: 0.8,  // Slower\r\n                breathDepthMult: 1.2, // Deeper breaths\r\n                breathIrregular: false,\r\n            },\r\n            intense: {\r\n                // Color - high contrast, saturated\r\n                hueShift: 5,          // Very slightly warmer\r\n                saturationMult: 1.3,  // More saturated\r\n                brightnessMult: 1.15, // Brighter\r\n                // Visual\r\n                sizeMultiplier: 1.0,  // Normal until focus moments\r\n                jitterAmount: 0,      // Still, focused\r\n                episodicLaserFocus: true, // Brief concentration moments\r\n                glowRadiusMult: 1.2,  // Expanded glow\r\n                // Breathing\r\n                breathRateMult: 1.2,  // Faster but controlled\r\n                breathDepthMult: 0.9, // Shallower, focused breaths\r\n                breathIrregular: false,\r\n            },\r\n            subdued: {\r\n                // Color - slightly muted\r\n                hueShift: -10,        // Slightly cooler\r\n                saturationMult: 0.75, // Somewhat muted\r\n                brightnessMult: 0.9,  // Slightly dimmed\r\n                // Visual\r\n                sizeMultiplier: 0.95, // Slightly smaller\r\n                jitterAmount: 0,\r\n                episodicWithdrawal: true, // Brief inward pulls\r\n                glowRadiusMult: 0.85, // Slightly reduced glow\r\n                // Breathing\r\n                breathRateMult: 0.9,  // Slightly slower\r\n                breathDepthMult: 0.9, // Slightly shallow\r\n                breathIrregular: false,\r\n            }\r\n        };\r\n        \r\n        // Performance\r\n        this.lastFrameTime = 0;\r\n        \r\n    }\r\n    \r\n    /**\r\n     * Scale a value based on current canvas size vs reference size\r\n     * Used to scale hard-coded values like shadowBlur, lineWidth, etc.\r\n     * @param {number} value - The base value to scale\r\n     * @returns {number} The scaled value\r\n     */\r\n    scaleValue(value) {\r\n        return value * this.scaleFactor;\r\n    }\r\n    \r\n    /**\r\n     * Initialize offscreen canvas for double buffering\r\n     */\r\n    initOffscreenCanvas() {\r\n        // Create offscreen canvas\r\n        this.offscreenCanvas = document.createElement('canvas');\r\n        this.offscreenCtx = this.offscreenCanvas.getContext('2d', {\r\n            alpha: true,\r\n            desynchronized: true,  // Reduces latency\r\n            willReadFrequently: false\r\n        });\r\n        \r\n        if (!this.offscreenCtx) {\r\n        }\r\n        \r\n        // Match dimensions\r\n        this.updateOffscreenSize();\r\n    }\r\n    \r\n    /**\r\n     * Update offscreen canvas size to match main canvas\r\n     */\r\n    updateOffscreenSize() {\r\n        if (this.offscreenCanvas && this.canvasManager) {\r\n            const width = this.canvasManager.canvas.width;\r\n            const height = this.canvasManager.canvas.height;\r\n            \r\n            if (this.offscreenCanvas.width !== width || this.offscreenCanvas.height !== height) {\r\n                this.offscreenCanvas.width = width;\r\n                this.offscreenCanvas.height = height;\r\n            }\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Main render method\r\n     */\r\n    render(state, deltaTime, gestureTransform = null) {\r\n        // Performance marker: Frame start\r\n        if (this.performanceMonitor) {\r\n            this.performanceMonitor.markFrameStart();\r\n        }\r\n        const frameStartTime = performance.now();\r\n\r\n        // Handle forced clean render after tab switch\r\n        if (this.forceCleanRender) {\r\n            this.forceCleanRender = false;\r\n            // Clear any rendering artifacts\r\n            if (this.canvas && this.ctx) {\r\n                this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n            }\r\n        }\r\n\r\n        // Get ambient dance transform and merge with gesture transform\r\n        const ambientTransform = this.ambientDanceAnimator.getTransform(deltaTime);\r\n        if (gestureTransform) {\r\n            // Merge transforms\r\n            gestureTransform.x = (gestureTransform.x || 0) + (ambientTransform.x || 0);\r\n            gestureTransform.y = (gestureTransform.y || 0) + (ambientTransform.y || 0);\r\n            gestureTransform.rotation = (gestureTransform.rotation || 0) + (ambientTransform.rotation || 0);\r\n            gestureTransform.scale = (gestureTransform.scale || 1) * (ambientTransform.scale || 1);\r\n        } else {\r\n            gestureTransform = ambientTransform;\r\n        }\r\n\r\n        // Store gestureTransform for use in other methods\r\n        this.gestureTransform = gestureTransform;\r\n\r\n        // Update offscreen canvas size if needed\r\n        this.updateOffscreenSize();\r\n        \r\n        // Get logical dimensions from canvasManager (not scaled by DPR)\r\n        const logicalWidth = this.canvasManager.width || this.canvas.width || 400;\r\n        const logicalHeight = this.canvasManager.height || this.canvas.height || 400;\r\n        \r\n        // Store original context and switch to offscreen for double buffering\r\n        const originalCtx = this.ctx;\r\n        this.ctx = this.offscreenCtx;\r\n        \r\n        // Clear offscreen canvas for fresh render\r\n        this.ctx.clearRect(0, 0, logicalWidth, logicalHeight);\r\n        \r\n        // Update undertone modifiers every frame during transitions\r\n        if (this.stateMachine && this.stateMachine.getWeightedUndertoneModifiers) {\r\n            const weightedModifier = this.stateMachine.getWeightedUndertoneModifiers();\r\n            if (weightedModifier) {\r\n                this.applyUndertoneModifiers(weightedModifier);\r\n            } else {\r\n                // Reset to defaults when no undertone\r\n                this.applyUndertoneModifiers(null);\r\n            }\r\n        }\r\n        \r\n        // Update color transition (if active)\r\n        if (this.colorTransition && this.colorTransition.active) {\r\n            this.updateColorTransition(deltaTime);\r\n        }\r\n        \r\n        // Update animation timers\r\n        this.updateTimers(deltaTime);\r\n        \r\n        // Update gaze offset\r\n        if (this.state.gazeTrackingEnabled) {\r\n            // When gaze tracking is enabled, follow mouse/touch\r\n            const smoothing = 0.15;\r\n            const maxOffset = 50; // Maximum pixels the orb can move\r\n            this.state.gazeOffset.x += (this.state.gazeTarget.x * maxOffset - this.state.gazeOffset.x) * smoothing;\r\n            this.state.gazeOffset.y += (this.state.gazeTarget.y * maxOffset - this.state.gazeOffset.y) * smoothing;\r\n        } else {\r\n            // When gaze tracking is disabled, return to center\r\n            const smoothing = 0.1;\r\n            this.state.gazeOffset.x += (0 - this.state.gazeOffset.x) * smoothing;\r\n            this.state.gazeOffset.y += (0 - this.state.gazeOffset.y) * smoothing;\r\n        }\r\n        \r\n        // Calculate dimensions - using logical size for proper scaling\r\n        const canvasSize = Math.min(logicalWidth, logicalHeight);\r\n        let centerX = logicalWidth / 2;\r\n        let centerY = logicalHeight / 2 - this.config.topOffset;\r\n        \r\n        // Apply vertical offset for certain emotions (like excited for exclamation mark)\r\n        if (state.properties && state.properties.verticalOffset) {\r\n            centerY = (logicalHeight / 2 - this.config.topOffset) + (logicalHeight * state.properties.verticalOffset);\r\n        }\r\n        \r\n        // Calculate global scale factor based on canvas size and baseScale config\r\n        this.scaleFactor = (canvasSize / this.config.referenceSize) * this.config.baseScale;\r\n        \r\n        // Apply gesture transform if present\r\n        let scaleMultiplier = 1;\r\n        let rotationAngle = 0;\r\n        let glowMultiplier = 1;\r\n        \r\n        if (gestureTransform) {\r\n            centerX += gestureTransform.x || 0;\r\n            centerY += gestureTransform.y || 0;\r\n            scaleMultiplier = gestureTransform.scale || 1;\r\n            rotationAngle = (gestureTransform.rotation || 0) * Math.PI / 180;\r\n            glowMultiplier = gestureTransform.glowIntensity || 1;\r\n        }\r\n\r\n        // Apply gesture animations (delegate to GestureAnimator)\r\n        const gestureTransforms = this.gestureAnimator.applyGestureAnimations();\r\n        if (gestureTransforms) {\r\n            centerX += gestureTransforms.offsetX || 0;\r\n            centerY += gestureTransforms.offsetY || 0;\r\n            scaleMultiplier *= gestureTransforms.scale || 1;\r\n            rotationAngle += (gestureTransforms.rotation || 0) * Math.PI / 180;\r\n            // DON'T MULTIPLY - just use the glow value directly to prevent accumulation\r\n            glowMultiplier = gestureTransforms.glow || 1;\r\n        }\r\n        \r\n        // Apply zen levitation - lazy floating when in zen state\r\n        if (this.state.emotion === 'zen' && this.zenTransition.phase === 'in') {\r\n            const time = Date.now() / 1000;\r\n            // Lazy vertical float - slow sine wave\r\n            const floatY = Math.sin(time * 0.3) * 15 * this.scaleFactor; // Very slow, 15px amplitude\r\n            // Gentle horizontal sway - even slower\r\n            const swayX = Math.sin(time * 0.2) * 8 * this.scaleFactor; // Subtle 8px sway\r\n            // Small rotation for ethereal effect\r\n            const floatRotation = Math.sin(time * 0.25) * 0.05; // ±3 degrees\r\n            \r\n            centerY += floatY;\r\n            centerX += swayX;\r\n            rotationAngle += floatRotation;\r\n        }\r\n        \r\n        // Apply sleep state modifications (with animated dimming)\r\n        let sleepOpacityMod = 1;\r\n        let sleepScaleMod = 1;\r\n        let glowOpacityMod = 1;\r\n        if (this.state.sleeping || this.state.emotion === 'resting' || isEffectActive('sleeping', this.state)) {\r\n            const sleepEffect = getEffect('sleeping');\r\n            if (sleepEffect) {\r\n                const dimming = sleepEffect.getDimmingValues();\r\n                // Use effect's dimming values\r\n                sleepOpacityMod = this.state.sleepDimness !== undefined ? this.state.sleepDimness : dimming.orbDimming;\r\n                glowOpacityMod = dimming.glowDimming; // Dim glow even more\r\n                sleepScaleMod = this.state.sleepScale !== undefined ? this.state.sleepScale : 0.9;\r\n            } else {\r\n                // Fallback values\r\n                sleepOpacityMod = this.state.sleepDimness !== undefined ? this.state.sleepDimness : 0.3;\r\n                glowOpacityMod = 0.2;\r\n                sleepScaleMod = this.state.sleepScale !== undefined ? this.state.sleepScale : 0.9;\r\n            }\r\n            this.state.breathRate = 0.5;  // Slower breathing\r\n            this.state.breathDepth = 0.15; // Deeper breaths\r\n        }\r\n        \r\n        // Calculate breathing factors - INVERSE for core and glow\r\n        // Use custom scale if set (for breathing exercises), otherwise use normal breathing\r\n        let coreBreathFactor, glowBreathFactor;\r\n        \r\n        if (this.state.customScale !== null) {\r\n            // Use custom scale directly for breathing exercises\r\n            coreBreathFactor = this.state.customScale;\r\n            glowBreathFactor = 1 + (this.state.customScale - 1) * 0.5; // Glow follows at half intensity\r\n        } else {\r\n            // Normal breathing behavior\r\n            // Zen uses full breath depth regardless of breathRate\r\n            const effectiveBreathDepth = this.state.emotion === 'zen' ? this.state.breathDepth : \r\n                                         this.state.breathDepth * this.state.breathRate;\r\n            // Get breathing scale from BreathingAnimator\r\n            const breathingScale = this.breathingAnimator.getBreathingScale();\r\n            coreBreathFactor = breathingScale;\r\n            glowBreathFactor = 1 - (breathingScale - 1) * 0.5; // Glow breathes opposite, less pronounced\r\n        }\r\n        \r\n        // Add nervous glow pulse if needed\r\n        if (this.state.undertone === 'nervous' && this.undertoneModifiers.nervous.glowPulse) {\r\n            const nervousPulse = Math.sin(Date.now() / 200) * this.undertoneModifiers.nervous.glowPulse; // Fast subtle pulse\r\n            glowBreathFactor *= (1 + nervousPulse);\r\n        }\r\n        \r\n        // Calculate core dimensions - using unified scale factor\r\n        const baseRadius = (this.config.referenceSize / this.config.coreSizeDivisor) * this.scaleFactor;\r\n        \r\n        // Apply emotion core size from state properties\r\n        const emotionSizeMult = (state.properties && state.properties.coreSize) ? state.properties.coreSize : 1.0;\r\n        \r\n        // Apply undertone size multiplier\r\n        const undertoneSizeMult = this.state.sizeMultiplier || 1.0;\r\n        \r\n        let coreRadius = baseRadius * emotionSizeMult * coreBreathFactor * scaleMultiplier * sleepScaleMod * undertoneSizeMult;\r\n        let glowRadius = baseRadius * this.config.glowMultiplier * glowBreathFactor * this.state.glowIntensity * scaleMultiplier * sleepScaleMod * undertoneSizeMult * glowMultiplier;  // Apply gesture glow multiplier\r\n\r\n        // Use state glow intensity directly multiplied by gesture glow\r\n        const effectiveGlowIntensity = this.state.glowIntensity * glowMultiplier;\r\n        \r\n        \r\n        // Apply blinking (only when not sleeping or zen)\r\n        if (!this.state.sleeping && this.state.emotion !== 'zen') {\r\n            const blinkScale = this.eyeRenderer.getBlinkScale();\r\n            coreRadius *= blinkScale; // Apply blink squish\r\n        }\r\n        \r\n        // Apply jitter if needed (anger, fear, or undertone jitter)\r\n        let jitterX = 0, jitterY = 0;\r\n        const jitterAmount = this.state.jitterAmount || 0;\r\n        \r\n        // Handle episodic effects for undertones\r\n        if (this.currentUndertone && this.episodicEffects[this.currentUndertone]) {\r\n            const episode = this.episodicEffects[this.currentUndertone];\r\n            const modifier = this.undertoneModifiers[this.currentUndertone];\r\n            const now = performance.now();\r\n            \r\n            // Check if it's time to trigger a new episode\r\n            if (!episode.active && now >= episode.nextTrigger) {\r\n                episode.active = true;\r\n                episode.startTime = now;\r\n                \r\n                // Set episode parameters based on undertone type\r\n                switch(this.currentUndertone) {\r\n                    case 'nervous':\r\n                        episode.duration = 500 + Math.random() * 500; // 0.5-1 second\r\n                        episode.intensity = 2 + Math.random(); // 2-3px flutter\r\n                        episode.nextTrigger = now + 3000 + Math.random() * 2000; // 3-5 seconds\r\n                        break;\r\n                    case 'confident':\r\n                        episode.duration = 1000 + Math.random() * 1000; // 1-2 seconds\r\n                        episode.intensity = 0.15; // 15% size expansion\r\n                        episode.nextTrigger = now + 4000 + Math.random() * 2000; // 4-6 seconds\r\n                        break;\r\n                    case 'tired':\r\n                        episode.duration = 1000 + Math.random() * 2000; // 1-3 seconds\r\n                        episode.intensity = 0.2; // 20% size reduction\r\n                        episode.nextTrigger = now + 5000 + Math.random() * 2000; // 5-7 seconds\r\n                        break;\r\n                    case 'intense':\r\n                        episode.duration = 500 + Math.random() * 500; // 0.5-1 second\r\n                        episode.intensity = 0.5; // 50% glow boost, 5% size shrink\r\n                        episode.nextTrigger = now + 3000 + Math.random() * 3000; // 3-6 seconds\r\n                        break;\r\n                    case 'subdued':\r\n                        episode.duration = 2000 + Math.random() * 1000; // 2-3 seconds\r\n                        episode.intensity = 0.3; // 30% glow dim, 10% size shrink\r\n                        episode.nextTrigger = now + 4000 + Math.random() * 3000; // 4-7 seconds\r\n                        break;\r\n                }\r\n            }\r\n            \r\n            // Apply episode effects if active\r\n            if (episode.active) {\r\n                const elapsed = now - episode.startTime;\r\n                \r\n                if (elapsed < episode.duration) {\r\n                    const progress = elapsed / episode.duration;\r\n                    \r\n                    // Apply different effects based on undertone\r\n                    switch(this.currentUndertone) {\r\n                        case 'nervous':\r\n                            // Quick shiver that settles\r\n                            const damping = 1 - progress;\r\n                            const frequency = 15;\r\n                            const flutter = Math.sin(progress * Math.PI * frequency) * damping;\r\n                            jitterX = flutter * episode.intensity;\r\n                            jitterY = flutter * episode.intensity * 0.7;\r\n                            break;\r\n                            \r\n                        case 'confident':\r\n                            // Smooth chest puff that settles\r\n                            const puffCurve = Math.sin(progress * Math.PI); // Smooth rise and fall\r\n                            coreRadius *= (1 + episode.intensity * puffCurve);\r\n                            glowRadius *= (1 + episode.intensity * 0.5 * puffCurve);\r\n                            break;\r\n                            \r\n                        case 'tired':\r\n                            // Drowsy sag with slow recovery\r\n                            const sagCurve = Math.sin(progress * Math.PI * 0.5); // Slow droop\r\n                            coreRadius *= (1 - episode.intensity * sagCurve);\r\n                            // Also affect vertical position slightly\r\n                            jitterY += sagCurve * 5; // Slight downward sag\r\n                            break;\r\n                            \r\n                        case 'intense':\r\n                            // Sharp contraction with glow surge\r\n                            const focusCurve = 1 - Math.cos(progress * Math.PI); // Quick in-out\r\n                            coreRadius *= (1 - 0.05 * focusCurve); // 5% shrink\r\n                            glowRadius *= (1 + episode.intensity * focusCurve); // 50% glow boost\r\n                            break;\r\n                            \r\n                        case 'subdued':\r\n                            // Gentle inward pull\r\n                            const withdrawCurve = Math.sin(progress * Math.PI * 0.5); // Slow pull\r\n                            coreRadius *= (1 - 0.1 * withdrawCurve); // 10% shrink\r\n                            glowRadius *= (1 - episode.intensity * withdrawCurve); // 30% glow dim\r\n                            break;\r\n                    }\r\n                } else {\r\n                    // Episode finished\r\n                    episode.active = false;\r\n                }\r\n            }\r\n        } else if (this.state.coreJitter || jitterAmount > 0) {\r\n            // Regular jitter for other emotions\r\n            const jitterStrength = Math.max(jitterAmount, this.state.coreJitter ? this.scaleValue(2) : 0);\r\n            jitterX = (Math.random() - 0.5) * jitterStrength;\r\n            jitterY = (Math.random() - 0.5) * jitterStrength;\r\n        }\r\n        \r\n        // Calculate positions with gaze offset\r\n        const coreX = centerX + this.state.gazeOffset.x + jitterX;\r\n        const coreY = centerY + this.state.gazeOffset.y + jitterY;\r\n        \r\n        // Check if brake is active and update rotation accordingly\r\n        const now = performance.now();\r\n\r\n        if (this.rotationBrake && this.rotationBrake.isBraking()) {\r\n            // Brake is active - let it control rotation\r\n            const brakeUpdate = this.rotationBrake.updateBrake(now);\r\n            if (brakeUpdate) {\r\n                this.state.manualRotation = brakeUpdate.rotation;\r\n                this.state.rotationSpeed = brakeUpdate.complete ? 0 : brakeUpdate.speed;\r\n            }\r\n        } else if (this.state.rotationSpeed !== 0) {\r\n            // Normal rotation update - just add velocity each frame (DEGREES)\r\n            this.state.manualRotation += this.state.rotationSpeed;\r\n        }\r\n\r\n        // Calculate total rotation (gestures + manual rotation)\r\n        // Convert manual rotation from degrees to radians for rendering\r\n        const totalRotation = rotationAngle + (this.state.manualRotation * Math.PI / 180);\r\n\r\n        // Apply rotation if present\r\n        if (totalRotation !== 0) {\r\n            this.ctx.save();\r\n            this.ctx.translate(coreX, coreY);\r\n            this.ctx.rotate(totalRotation);\r\n            this.ctx.translate(-coreX, -coreY);\r\n        }\r\n        \r\n        // Render glow with visual effects\r\n        if (isEffectActive('recording-glow', this.state)) {\r\n            // Recording takes precedence over normal glow\r\n            applyEffect('recording-glow', this.ctx, {\r\n                x: coreX,\r\n                y: coreY,\r\n                radius: glowRadius,\r\n                deltaTime\r\n            });\r\n        } else if (isEffectActive('zen-vortex', this.state)) {\r\n            // Zen vortex handles its own visuals\r\n            // Skip normal glow to prevent flash\r\n        } else {\r\n            // Normal glow with sleep dimming\r\n            if (this.state.sleeping || this.state.emotion === 'resting' || isEffectActive('sleeping', this.state)) {\r\n                this.ctx.save();\r\n                this.ctx.globalAlpha = glowOpacityMod;\r\n                this.glowRenderer.renderGlow(coreX, coreY, glowRadius, { intensity: effectiveGlowIntensity });\r\n                this.ctx.restore();\r\n            } else {\r\n                this.glowRenderer.renderGlow(coreX, coreY, glowRadius, { intensity: effectiveGlowIntensity });\r\n            }\r\n        }\r\n        \r\n        // Render flash wave if present\r\n        if (gestureTransforms && gestureTransforms.flashWave) {\r\n            const wave = gestureTransforms.flashWave;\r\n            const ctx = this.ctx;\r\n            \r\n            ctx.save();\r\n            ctx.globalCompositeOperation = 'lighter';\r\n            \r\n            // Create a ring gradient for the wave\r\n            const innerR = coreRadius * wave.innerRadius;\r\n            const outerR = coreRadius * wave.outerRadius;\r\n            \r\n            if (outerR > innerR) {\r\n                // Use cached gradient for flash wave\r\n                const gradient = gradientCache.getRadialGradient(\r\n                    ctx, coreX, coreY, innerR, coreX, coreY, outerR,\r\n                    [\r\n                        { offset: 0, color: 'rgba(255, 255, 255, 0)' },\r\n                        { offset: 0.2, color: `rgba(255, 255, 255, ${wave.intensity * 0.15})` },\r\n                        { offset: 0.5, color: `rgba(255, 255, 255, ${wave.intensity * 0.25})` }, // Peak in center\r\n                        { offset: 0.8, color: `rgba(255, 255, 255, ${wave.intensity * 0.15})` },\r\n                        { offset: 1, color: 'rgba(255, 255, 255, 0)' }\r\n                    ]\r\n                );\r\n\r\n                ctx.fillStyle = gradient;\r\n                ctx.beginPath();\r\n                ctx.arc(coreX, coreY, outerR, 0, Math.PI * 2);\r\n                ctx.arc(coreX, coreY, Math.max(0, innerR), 0, Math.PI * 2, true);\r\n                ctx.fill();\r\n            }\r\n            \r\n            ctx.restore();\r\n        }\r\n        \r\n        // Apply speaking pulse effect\r\n        if (isEffectActive('speaking-pulse', this.state)) {\r\n            applyEffect('speaking-pulse', this.ctx, {\r\n                x: coreX,\r\n                y: coreY,\r\n                radius: coreRadius,\r\n                audioLevel: this.state.audioLevel || 0,\r\n                deltaTime\r\n            });\r\n        }\r\n        \r\n        // Recording indicator will be drawn after all transforms are restored\r\n        \r\n        // Apply sleep opacity to core\r\n        if (this.state.sleeping || this.state.emotion === 'resting') {\r\n            this.ctx.globalAlpha = sleepOpacityMod;\r\n        }\r\n        \r\n        // Render core (will cover REC if they overlap)\r\n        // Delegate core rendering to CoreRenderer\r\n        // First update the shape morpher if available\r\n        let shapePoints = null;\r\n        let currentShadow = null;\r\n        if (this.shapeMorpher) {\r\n            this.shapeMorpher.update();\r\n            // Get the canvas points relative to center (0,0) since CoreRenderer will translate\r\n            shapePoints = this.shapeMorpher.getCanvasPoints(0, 0, coreRadius);\r\n            currentShadow = this.shapeMorpher.getCurrentShadow();\r\n        }\r\n        \r\n        // Render sun effects BEFORE core (so they appear behind)\r\n        let renderingSunEffects = false;\r\n        if (currentShadow && (currentShadow.type === 'sun' || currentShadow.type === 'solar-hybrid')) {\r\n            this.renderSunEffects(coreX, coreY, coreRadius, currentShadow);\r\n            renderingSunEffects = true;\r\n        }\r\n        \r\n        // Drop shadow removed - was causing dimming\r\n        \r\n        // Update core rotation based on BPM (like a record player)\r\n        // Only rotate if BPM is greater than 0 (rhythm is active)\r\n        // Shapes that should NOT rotate: moon, heart\r\n        \r\n        // Render the core shape with rotation\r\n        // Note: We already applied rotation to the canvas, but CoreRenderer does its own transform\r\n        // So we need to pass the rotation value to it\r\n        this.coreRenderer.renderCore(coreX, coreY, coreRadius, {\r\n            scaleX: 1,\r\n            scaleY: 1,\r\n            rotation: totalRotation,\r\n            shapePoints: shapePoints\r\n        });\r\n        \r\n        // Update and render sparkles BEFORE moon shadow so they don't cover it\r\n        if (this.specialEffects) {\r\n            this.specialEffects.update(deltaTime);\r\n            this.specialEffects.renderSparkles();\r\n        }\r\n        \r\n        // Check if we're dealing with solar transitions\r\n        const currentShape = this.shapeMorpher ? this.shapeMorpher.currentShape : null;\r\n        const targetShape = this.shapeMorpher ? this.shapeMorpher.targetShape : null;\r\n        const isTransitioningToSolar = this.shapeMorpher && targetShape === 'solar' && this.shapeMorpher.isTransitioning;\r\n        const isTransitioningFromSolar = this.shapeMorpher && currentShape === 'solar' && this.shapeMorpher.isTransitioning;\r\n        const isAtSolar = currentShadow && currentShadow.type === 'solar-hybrid';\r\n        \r\n        // Check specific transition directions\r\n        const isSolarToMoon = this.shapeMorpher && this.shapeMorpher.isTransitioning &&\r\n            currentShape === 'solar' && targetShape === 'moon';\r\n        const isMoonToSolar = this.shapeMorpher && this.shapeMorpher.isTransitioning &&\r\n            currentShape === 'moon' && targetShape === 'solar';\r\n        \r\n        // Render moon/lunar shadows AFTER core AND sparkles (as top overlay)\r\n        // Always render moon shadow EXCEPT when transitioning FROM moon TO solar\r\n        if (currentShadow && (currentShadow.type === 'crescent' || currentShadow.type === 'lunar') && \r\n            !isMoonToSolar) {\r\n            // Shadow is rendered in the already-rotated coordinate space\r\n            this.renderMoonShadow(coreX, coreY, coreRadius, currentShadow, shapePoints, false, 0);\r\n        }\r\n        \r\n        // For solar-hybrid, render lunar overlay on top of sun\r\n        // Skip when transitioning FROM solar TO moon (let moon's shadow handle it)\r\n        if (((isAtSolar && currentShadow.lunarOverlay) || isTransitioningToSolar || isTransitioningFromSolar) && \r\n            !isSolarToMoon) {\r\n            // Use the lunar overlay from solar definition\r\n            const lunarShadow = (isAtSolar && currentShadow.lunarOverlay) ? currentShadow.lunarOverlay : {\r\n                type: 'lunar',\r\n                coverage: 1.0,\r\n                color: 'rgba(0, 0, 0, 1.0)',\r\n                progression: 'center'\r\n            };\r\n            \r\n            // Calculate shadow offset for Bailey's Beads\r\n            let shadowOffsetX = 0;\r\n            let shadowOffsetY = 0;\r\n            let morphProgress = 0;\r\n            \r\n            if (this.shapeMorpher) {\r\n                morphProgress = this.shapeMorpher.getProgress();\r\n                const currentShape = this.shapeMorpher.currentShape;\r\n                const targetShape = this.shapeMorpher.targetShape;\r\n                const fromLunar = currentShape === 'lunar' || currentShape === 'eclipse';\r\n                const toLunar = targetShape === 'lunar' || targetShape === 'eclipse';\r\n                \r\n                const slideDistance = coreRadius * 2.5;\r\n                \r\n                if (isTransitioningToSolar && morphProgress < 1) {\r\n                    // Shadow sliding in from bottom-left\r\n                    shadowOffsetX = -slideDistance * (1 - morphProgress);\r\n                    shadowOffsetY = slideDistance * (1 - morphProgress);\r\n                } else if (isTransitioningFromSolar && morphProgress < 1) {\r\n                    // Shadow sliding out to top-right\r\n                    shadowOffsetX = slideDistance * morphProgress;\r\n                    shadowOffsetY = -slideDistance * morphProgress;\r\n                }\r\n            }\r\n            \r\n            // Render the shadow\r\n            this.renderMoonShadow(coreX, coreY, coreRadius, lunarShadow, shapePoints, true);\r\n            \r\n            // Render Bailey's Beads during transitions\r\n            // Show beads when transitioning TO solar (which will have rays) or FROM solar (which had rays)\r\n            // But only if we're actually rendering or about to render sun effects\r\n            const willHaveSunEffects = isTransitioningToSolar || renderingSunEffects;\r\n            \r\n            if ((isTransitioningToSolar || isTransitioningFromSolar) && willHaveSunEffects) {\r\n                this.renderBaileysBeads(coreX, coreY, coreRadius, shadowOffsetX, shadowOffsetY, morphProgress, isTransitioningToSolar, true);\r\n                \r\n                // Trigger chromatic aberration when shadow is near center\r\n                const shadowNearCenter = Math.abs(shadowOffsetX) < 30 && Math.abs(shadowOffsetY) < 30;\r\n                if (shadowNearCenter && this.specialEffects) {\r\n                    // Stronger aberration as shadow gets closer to center\r\n                    const distance = Math.sqrt(shadowOffsetX * shadowOffsetX + shadowOffsetY * shadowOffsetY);\r\n                    const intensity = Math.max(0.1, 0.5 * (1 - distance / 30));\r\n                    this.specialEffects.triggerChromaticAberration(intensity);\r\n                }\r\n            }\r\n        }\r\n        \r\n        // Reset alpha\r\n        if (this.state.sleeping || this.state.emotion === 'resting') {\r\n            this.ctx.globalAlpha = 1;\r\n        }\r\n        \r\n        // Restore context if rotated\r\n        if (totalRotation !== 0) {\r\n            this.ctx.restore();\r\n        }\r\n        \r\n        // Recording indicator is now handled by the recording-glow effect module\r\n        // which draws a small indicator in the corner\r\n        \r\n        // Add sleep indicator if sleeping\r\n        if (this.state.sleeping) {\r\n            this.renderSleepIndicator(centerX, centerY - glowRadius - this.scaleValue(20), deltaTime);\r\n        }\r\n        \r\n        // Restore original context AFTER all rendering is done\r\n        this.ctx = originalCtx;\r\n        \r\n        // Simple blit - chromatic aberration is now handled via CSS filters\r\n        originalCtx.drawImage(this.offscreenCanvas, 0, 0);\r\n        \r\n        // Draw recording indicator on TOP of everything, with no transforms\r\n        if (isEffectActive('recording-glow', this.state)) {\r\n            const recordingEffect = getEffect('recording-glow');\r\n            if (recordingEffect && recordingEffect.drawRecordingIndicator) {\r\n                // Use original context to draw on top of the blitted image\r\n                recordingEffect.drawRecordingIndicator(originalCtx, this.canvas.width, this.canvas.height);\r\n            }\r\n        }\r\n\r\n        // Performance marker: Frame end\r\n        const frameEndTime = performance.now();\r\n        const frameTime = frameEndTime - frameStartTime;\r\n        if (this.performanceMonitor) {\r\n            this.performanceMonitor.markFrameEnd();\r\n            this.performanceMonitor.recordFrameTime(frameTime);\r\n        }\r\n    }\r\n    \r\n    // renderGlow method removed - now handled by GlowRenderer module\r\n    \r\n    // getCachedGlow method removed - now handled by GlowRenderer module\r\n    \r\n    /**\r\n     * Render recording glow (pulsating red)\r\n     */\r\n    renderRecordingGlow(x, y, radius, intensity) {\r\n        // Get canvas dimensions with fallbacks\r\n        const canvasWidth = this.canvas?.width || 600;\r\n        const canvasHeight = this.canvas?.height || 600;\r\n        \r\n        // Limit radius to prevent clipping at canvas boundaries\r\n        const maxRadius = Math.min(radius, \r\n            x - 10,  // Distance to left edge\r\n            y - 10,  // Distance to top edge\r\n            canvasWidth - x - 10,  // Distance to right edge\r\n            canvasHeight - y - 10  // Distance to bottom edge\r\n        );\r\n        const safeRadius = Math.max(50, maxRadius); // Ensure minimum radius\r\n        \r\n        // Use cached gradient for the recording glow\r\n        const gradient = gradientCache.getRadialGradient(\r\n            this.ctx, x, y, 0, x, y, safeRadius,\r\n            [\r\n                { offset: 0, color: this.hexToRgba('#FF0000', 0.7 * intensity) },\r\n                { offset: 0.3, color: this.hexToRgba('#FF0000', 0.5 * intensity) },\r\n                { offset: 0.6, color: this.hexToRgba('#FF0000', 0.3 * intensity) },\r\n                { offset: 0.85, color: this.hexToRgba('#FF0000', 0.1 * intensity) }, // Fade earlier\r\n                { offset: 1, color: this.hexToRgba('#FF0000', 0) }\r\n            ]\r\n        );\r\n        \r\n        // Draw the recording glow\r\n        this.ctx.fillStyle = gradient;\r\n        this.ctx.beginPath();\r\n        this.ctx.arc(x, y, safeRadius, 0, Math.PI * 2);\r\n        this.ctx.fill();\r\n    }\r\n    \r\n\r\n    /**\r\n     * Render drop shadow for depth\r\n     */\r\n    renderDropShadow(x, y, radius, shapePoints) {\r\n        const ctx = this.ctx;\r\n        \r\n        // Skip shadow during rapid animations for better performance\r\n        const isAnimating = this.shapeMorpher && this.shapeMorpher.isTransitioning;\r\n        const hasAudioDeformation = this.shapeMorpher && \r\n                                   (this.shapeMorpher.audioDeformation > 0.1 || \r\n                                    this.shapeMorpher.vocalEnergy > 0.1);\r\n        \r\n        if (!hasAudioDeformation && (!isAnimating || this.shapeMorpher.morphProgress > 0.8)) {\r\n            ctx.save();\r\n            ctx.translate(x, y);\r\n            \r\n            const shadowOffset = this.scaleValue(2);\r\n            ctx.translate(0, shadowOffset);\r\n            \r\n            // Use simpler shadow for complex deformed shapes\r\n            if (shapePoints && shapePoints.length > 32) {\r\n                // Simple dark circle shadow when shape is complex\r\n                ctx.fillStyle = 'rgba(0, 0, 0, 0.15)';\r\n                ctx.beginPath();\r\n                ctx.arc(0, 0, radius * 1.05, 0, Math.PI * 2);\r\n                ctx.fill();\r\n            } else {\r\n                // Shadow gradient - dark center fading to transparent\r\n                const shadowGradient = ctx.createRadialGradient(0, 0, radius * 0.7, 0, 0, radius * 1.2);\r\n                shadowGradient.addColorStop(0, 'rgba(0, 0, 0, 0.2)');\r\n                shadowGradient.addColorStop(0.8, 'rgba(0, 0, 0, 0.1)');\r\n                shadowGradient.addColorStop(1, 'rgba(0, 0, 0, 0)');\r\n                \r\n                ctx.fillStyle = shadowGradient;\r\n                ctx.beginPath();\r\n                if (shapePoints) {\r\n                    // Scale points for shadow\r\n                    const scale = 1.1;\r\n                    const step = shapePoints.length > 20 ? 2 : 1; // Skip points for performance\r\n                    ctx.moveTo(shapePoints[0].x * scale, shapePoints[0].y * scale);\r\n                    for (let i = step; i < shapePoints.length; i += step) {\r\n                        ctx.lineTo(shapePoints[i].x * scale, shapePoints[i].y * scale);\r\n                    }\r\n                    ctx.closePath();\r\n                } else {\r\n                    ctx.arc(0, 0, radius * 1.1, 0, Math.PI * 2);\r\n                }\r\n                ctx.fill();\r\n            }\r\n            ctx.restore();\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Render sun effects (corona, rays, etc)\r\n     */\r\n    renderSunEffects(x, y, radius, shadow) {\r\n        const ctx = this.ctx;\r\n        const time = Date.now() / 100;\r\n        \r\n        ctx.save();\r\n        ctx.translate(x, y);\r\n        \r\n        // 1. Surface texture - turbulent plasma\r\n        if (shadow.texture && (shadow.textureOpacity === undefined || shadow.textureOpacity > 0)) {\r\n            ctx.save();\r\n            ctx.globalCompositeOperation = 'screen';\r\n            ctx.globalAlpha = shadow.textureOpacity !== undefined ? shadow.textureOpacity : 1;\r\n            \r\n            const offset = time * 0.05 * (shadow.turbulence || 0.3) / 0.3;\r\n            const textureGradient = ctx.createRadialGradient(\r\n                Math.sin(offset) * radius * 0.15,\r\n                Math.cos(offset * 0.7) * radius * 0.15,\r\n                radius * 0.2,\r\n                0, 0, radius\r\n            );\r\n            textureGradient.addColorStop(0, 'rgba(255, 255, 200, 0)');\r\n            textureGradient.addColorStop(0.4, 'rgba(255, 200, 100, 0.1)');\r\n            textureGradient.addColorStop(0.7, 'rgba(255, 150, 50, 0.08)');\r\n            textureGradient.addColorStop(1, 'rgba(255, 100, 30, 0.05)');\r\n            \r\n            ctx.fillStyle = textureGradient;\r\n            ctx.beginPath();\r\n            ctx.arc(0, 0, radius, 0, Math.PI * 2);\r\n            ctx.fill();\r\n            \r\n            ctx.restore();\r\n        }\r\n        \r\n        // 2. Bright corona layers\r\n        const coronaOpacity = shadow.coronaOpacity !== undefined ? shadow.coronaOpacity : 1;\r\n        if (coronaOpacity > 0) {\r\n            ctx.save();\r\n            ctx.globalCompositeOperation = 'screen';\r\n            \r\n            // Inner bright glow\r\n            const innerGlow = ctx.createRadialGradient(0, 0, radius * 0.5, 0, 0, radius * 1.1);\r\n            innerGlow.addColorStop(0, `rgba(255, 255, 255, ${0.8 * coronaOpacity})`);\r\n            innerGlow.addColorStop(0.3, `rgba(255, 250, 200, ${0.6 * coronaOpacity})`);\r\n            innerGlow.addColorStop(0.5, `rgba(255, 200, 100, ${0.4 * coronaOpacity})`);\r\n            innerGlow.addColorStop(0.7, `rgba(255, 150, 50, ${0.2 * coronaOpacity})`);\r\n            innerGlow.addColorStop(1, 'rgba(255, 100, 20, 0)');\r\n            \r\n            ctx.fillStyle = innerGlow;\r\n            ctx.beginPath();\r\n            ctx.arc(0, 0, radius * 1.1, 0, Math.PI * 2);\r\n            ctx.fill();\r\n            \r\n            // Outer corona with animation\r\n            for (let i = 0; i < 2; i++) {\r\n                const scale = 1.3 + i * 0.4;\r\n                const opacity = (0.35 - i * 0.15) * coronaOpacity;\r\n                const wobble = Math.sin(time * 0.1 + i) * 0.05;\r\n                \r\n                const coronaGradient = ctx.createRadialGradient(\r\n                    0, 0, radius * (0.9 + wobble), \r\n                    0, 0, radius * (scale + wobble)\r\n                );\r\n                coronaGradient.addColorStop(0, 'rgba(255, 255, 200, 0)');\r\n                coronaGradient.addColorStop(0.4, `rgba(255, 200, 100, ${opacity * 0.5})`);\r\n                coronaGradient.addColorStop(0.7, `rgba(255, 150, 50, ${opacity})`);\r\n                coronaGradient.addColorStop(0.9, `rgba(255, 100, 30, ${opacity * 0.5})`);\r\n                coronaGradient.addColorStop(1, 'rgba(255, 50, 10, 0)');\r\n                \r\n                ctx.fillStyle = coronaGradient;\r\n                ctx.beginPath();\r\n                ctx.arc(0, 0, radius * (scale + wobble), 0, Math.PI * 2);\r\n                ctx.fill();\r\n            }\r\n            \r\n            ctx.restore();\r\n        }\r\n        \r\n        // 3. Optimized ethereal flame pennants - TONS of rays\r\n        if (shadow.flares) {\r\n            ctx.save();\r\n            \r\n            // Pre-calculate common values\r\n            const wave1 = Math.sin(time * 0.08);\r\n            const wave2 = Math.sin(time * 0.12);\r\n            const wave3 = Math.sin(time * 0.16);\r\n            \r\n            // Create single gradient for all flames\r\n            const grad = ctx.createLinearGradient(0, -radius, 0, -radius * 3);\r\n            grad.addColorStop(0, 'rgba(255, 255, 230, 0.4)');\r\n            grad.addColorStop(0.2, 'rgba(255, 220, 150, 0.25)');\r\n            grad.addColorStop(0.5, 'rgba(255, 180, 80, 0.15)');\r\n            grad.addColorStop(0.8, 'rgba(255, 120, 40, 0.08)');\r\n            grad.addColorStop(1, 'rgba(255, 60, 20, 0)');\r\n            \r\n            ctx.fillStyle = grad;\r\n            ctx.globalCompositeOperation = 'screen';\r\n            \r\n            // Single path for ALL flames\r\n            ctx.beginPath();\r\n            \r\n            // Helper function for flame shape\r\n            const addFlame = (angle, length, width, wave) => {\r\n                const cos = Math.cos(angle);\r\n                const sin = Math.sin(angle);\r\n                const baseX = cos * radius;\r\n                const baseY = sin * radius;\r\n                const tipX = cos * (radius + length);\r\n                const tipY = sin * (radius + length);\r\n                const perpX = -sin * width * 0.5;\r\n                const perpY = cos * width * 0.5;\r\n                const waveOffset = wave * width * 0.3;\r\n                \r\n                // Simple triangle with slight curve\r\n                ctx.moveTo(baseX - perpX, baseY - perpY);\r\n                ctx.quadraticCurveTo(\r\n                    (baseX + tipX) * 0.5 + perpX * waveOffset,\r\n                    (baseY + tipY) * 0.5 + perpY * waveOffset,\r\n                    tipX, tipY\r\n                );\r\n                ctx.quadraticCurveTo(\r\n                    (baseX + tipX) * 0.5 - perpX * waveOffset,\r\n                    (baseY + tipY) * 0.5 - perpY * waveOffset,\r\n                    baseX + perpX, baseY + perpY\r\n                );\r\n            };\r\n            \r\n            // Layer 1: Long primary rays (8)\r\n            for (let i = 0; i < 8; i++) {\r\n                const angle = (i / 8) * Math.PI * 2 + wave1 * 0.1;\r\n                const length = radius * (1.8 + Math.sin(time * 0.1 + i * 0.5) * 0.4);\r\n                const width = radius * 0.18;\r\n                const wave = Math.sin(time * 0.15 + i);\r\n                addFlame(angle, length, width, wave);\r\n            }\r\n            \r\n            // Layer 2: Medium rays between primaries (12)\r\n            for (let i = 0; i < 12; i++) {\r\n                const angle = ((i + 0.5) / 12) * Math.PI * 2 + wave2 * 0.08;\r\n                const length = radius * (1.2 + Math.sin(time * 0.13 + i * 0.7) * 0.3);\r\n                const width = radius * 0.12;\r\n                const wave = Math.sin(time * 0.18 + i * 1.2);\r\n                addFlame(angle, length, width, wave);\r\n            }\r\n            \r\n            // Layer 3: Short rays filling gaps (15)\r\n            for (let i = 0; i < 15; i++) {\r\n                const angle = (i / 15) * Math.PI * 2 + wave3 * 0.05;\r\n                const length = radius * (0.7 + Math.sin(time * 0.17 + i * 0.9) * 0.25);\r\n                const width = radius * 0.08;\r\n                const wave = Math.sin(time * 0.2 + i * 1.5);\r\n                addFlame(angle, length, width, wave);\r\n            }\r\n            \r\n            // Layer 4: Tiny rays for density (15)\r\n            for (let i = 0; i < 15; i++) {\r\n                const angle = ((i + 0.25) / 15) * Math.PI * 2;\r\n                const length = radius * (0.4 + Math.sin(time * 0.22 + i) * 0.2);\r\n                const width = radius * 0.06;\r\n                // Simple triangles for tiny rays\r\n                const cos = Math.cos(angle);\r\n                const sin = Math.sin(angle);\r\n                const baseX = cos * radius;\r\n                const baseY = sin * radius;\r\n                const tipX = cos * (radius + length);\r\n                const tipY = sin * (radius + length);\r\n                const perpX = -sin * width * 0.5;\r\n                const perpY = cos * width * 0.5;\r\n                \r\n                ctx.moveTo(baseX - perpX, baseY - perpY);\r\n                ctx.lineTo(tipX, tipY);\r\n                ctx.lineTo(baseX + perpX, baseY + perpY);\r\n            }\r\n            \r\n            // Single fill operation for all rays!\r\n            ctx.fill();\r\n            ctx.restore();\r\n        }\r\n        \r\n        // 4. Bright rim lighting\r\n        const rimGradient = ctx.createRadialGradient(0, 0, radius * 0.95, 0, 0, radius * 1.05);\r\n        rimGradient.addColorStop(0, 'rgba(255, 255, 255, 0)');\r\n        rimGradient.addColorStop(0.7, 'rgba(255, 255, 200, 0.2)');\r\n        rimGradient.addColorStop(0.9, 'rgba(255, 200, 100, 0.5)');\r\n        rimGradient.addColorStop(1, 'rgba(255, 150, 50, 0.3)');\r\n        \r\n        ctx.fillStyle = rimGradient;\r\n        ctx.beginPath();\r\n        ctx.arc(0, 0, radius * 1.05, 0, Math.PI * 2);\r\n        ctx.fill();\r\n        \r\n        ctx.restore();\r\n    }\r\n    \r\n    /**\r\n     * Render Bailey's Beads for solar eclipse\r\n     */\r\n    renderBaileysBeads(x, y, radius, shadowOffsetX, shadowOffsetY, morphProgress, isTransitioningToSolar, hasSunRays) {\r\n        const ctx = this.ctx;\r\n        \r\n        // NEVER show beads if there are no sun rays visible\r\n        if (!hasSunRays) {\r\n            this._beadStartTime = null;\r\n            return;\r\n        }\r\n        \r\n        // Check if this is a lunar-solar transition (shadow stays centered)\r\n        const isLunarSolarTransition = Math.abs(shadowOffsetX) < 1 && Math.abs(shadowOffsetY) < 1;\r\n        \r\n        // Show beads when shadow is approaching center OR for lunar-solar transitions\r\n        // Different thresholds for entering vs leaving\r\n        const threshold = isTransitioningToSolar ? 30 : 15; // Disappear faster when leaving\r\n        const shadowNearCenter = Math.abs(shadowOffsetX) < threshold && Math.abs(shadowOffsetY) < threshold;\r\n        \r\n        if (!shadowNearCenter && !isLunarSolarTransition) {\r\n            // Reset when not near center (unless it's lunar-solar)\r\n            this._beadStartTime = null;\r\n            return;\r\n        }\r\n        \r\n        // Generate different beads for entering vs leaving\r\n        const beadKey = isTransitioningToSolar ? 'entering' : 'leaving';\r\n        \r\n        // Check if we need to generate new beads (first time shadow centers for this transition)\r\n        if (!this._beadStartTime) {\r\n            const beadCount = Math.floor(Math.random() * 4) + 1; // 1-4 beads\r\n            \r\n            this._currentBeads = [];\r\n            \r\n            // Create beads with random order\r\n            const angles = [];\r\n            for (let i = 0; i < beadCount; i++) {\r\n                angles.push(Math.random() * Math.PI * 2);\r\n            }\r\n            \r\n            // Shuffle the order they'll appear\r\n            const order = Array.from({length: beadCount}, (_, i) => i);\r\n            for (let i = order.length - 1; i > 0; i--) {\r\n                const j = Math.floor(Math.random() * (i + 1));\r\n                [order[i], order[j]] = [order[j], order[i]];\r\n            }\r\n            \r\n            for (let i = 0; i < beadCount; i++) {\r\n                this._currentBeads.push({\r\n                    angle: angles[i],\r\n                    size: 3 + Math.random() * 5, // Random size 3-8\r\n                    order: order[i], // Order in sequence\r\n                    delay: order[i] * 200 // 200ms between each bead\r\n                });\r\n            }\r\n            \r\n            this._beadStartTime = Date.now();\r\n        }\r\n        \r\n        const elapsedTime = Date.now() - this._beadStartTime;\r\n        \r\n        // Render the beads as chromatic lens flares (one at a time)\r\n        const beads = this._currentBeads || [];\r\n        \r\n        beads.forEach(bead => {\r\n            // Check if this bead should be visible yet\r\n            if (elapsedTime < bead.delay) return;\r\n            \r\n            // Calculate fade in (300ms fade)\r\n            const beadAge = elapsedTime - bead.delay;\r\n            const fadeInDuration = 300;\r\n            const opacity = Math.min(1, beadAge / fadeInDuration);\r\n            \r\n            // Calculate bead position on the edge of the sun (not shadow)\r\n            const beadX = x + Math.cos(bead.angle) * radius;\r\n            const beadY = y + Math.sin(bead.angle) * radius;\r\n            \r\n            ctx.save();\r\n            ctx.translate(beadX, beadY);\r\n            ctx.globalAlpha = opacity;\r\n            \r\n            // Draw chromatic aberration lens flare\r\n            const size = this.scaleValue(bead.size);\r\n            \r\n            // Chromatic layers - RGB separated for aberration effect\r\n            const colors = [\r\n                { color: `rgba(255, 100, 100, ${0.6 * opacity})`, offset: -2 },  // Red\r\n                { color: `rgba(100, 255, 100, ${0.6 * opacity})`, offset: 0 },   // Green  \r\n                { color: `rgba(100, 100, 255, ${0.6 * opacity})`, offset: 2 }    // Blue\r\n            ];\r\n            \r\n            ctx.globalCompositeOperation = 'screen';\r\n            \r\n            colors.forEach(({ color, offset }) => {\r\n                // Create radial gradient for each color channel\r\n                const gradient = ctx.createRadialGradient(\r\n                    offset, offset, 0,\r\n                    offset, offset, size * 2\r\n                );\r\n                \r\n                gradient.addColorStop(0, color);\r\n                gradient.addColorStop(0.2, color.replace(`${0.6 * opacity}`, `${0.4 * opacity}`));\r\n                gradient.addColorStop(0.5, color.replace(`${0.6 * opacity}`, `${0.2 * opacity}`));\r\n                gradient.addColorStop(1, 'rgba(255, 255, 255, 0)');\r\n                \r\n                ctx.fillStyle = gradient;\r\n                ctx.beginPath();\r\n                ctx.arc(offset, offset, size * 2, 0, Math.PI * 2);\r\n                ctx.fill();\r\n            });\r\n            \r\n            // Add bright white core\r\n            ctx.globalCompositeOperation = 'lighter';\r\n            const coreGradient = ctx.createRadialGradient(0, 0, 0, 0, 0, size);\r\n            coreGradient.addColorStop(0, `rgba(255, 255, 255, ${opacity})`);\r\n            coreGradient.addColorStop(0.3, `rgba(255, 255, 255, ${0.5 * opacity})`);\r\n            coreGradient.addColorStop(1, 'rgba(255, 255, 255, 0)');\r\n            \r\n            ctx.fillStyle = coreGradient;\r\n            ctx.beginPath();\r\n            ctx.arc(0, 0, size, 0, Math.PI * 2);\r\n            ctx.fill();\r\n            \r\n            ctx.restore();\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Render moon/lunar shadow overlay\r\n     * @param {boolean} isSolarOverlay - True if this is being called for solar eclipse effect\r\n     * @param {number} rotation - Rotation angle to apply\r\n     */\r\n    renderMoonShadow(x, y, radius, shadow, shapePoints, isSolarOverlay = false, rotation = 0) {\r\n        const ctx = this.ctx;\r\n        \r\n        ctx.save();\r\n        ctx.translate(x, y);\r\n        \r\n        // Don't apply rotation - we're already in rotated coordinate space\r\n        \r\n        if (shadow.type === 'crescent') {\r\n            // Crescent moon - smooth shadow without pixelation\r\n            \r\n            // Get morph progress to animate the shadow sliding in\r\n            let shadowProgress = 1.0; // Default to fully visible\r\n            let animatedOffset = shadow.offset || 0.7; // Default to the shadow's offset\r\n            \r\n            if (this.shapeMorpher) {\r\n                const morphProgress = this.shapeMorpher.getProgress();\r\n                const currentShape = this.shapeMorpher.currentShape;\r\n                const targetShape = this.shapeMorpher.targetShape;\r\n                \r\n                // Animate shadow sliding in when morphing TO moon (and shadow.offset is not being controlled)\r\n                if (targetShape === 'moon' && morphProgress !== undefined && morphProgress < 1 && !shadow.shadowX) {\r\n                    // Shadow slides in from the left\r\n                    shadowProgress = morphProgress;\r\n                    const baseOffset = 0.7;\r\n                    // Animate the offset - starts far left (-2) and slides to final position\r\n                    animatedOffset = -2 + (baseOffset + 2) * shadowProgress;\r\n                }\r\n                // FROM MOON TO ANY SHAPE - ShapeMorpher is already controlling via shadow.offset\r\n                // so we just use whatever offset is provided in the shadow object\r\n            }\r\n            // Calculate shadow offset - shadow rotates with the moon\r\n            const angleRad = (shadow.angle || -30) * Math.PI / 180;\r\n            const offsetX = Math.cos(angleRad) * radius * animatedOffset;\r\n            const offsetY = Math.sin(angleRad) * radius * animatedOffset;\r\n            \r\n            // Enable high quality rendering\r\n            ctx.imageSmoothingEnabled = true;\r\n            ctx.imageSmoothingQuality = 'high';\r\n            \r\n            // Clip to the moon shape\r\n            ctx.beginPath();\r\n            if (shapePoints) {\r\n                ctx.moveTo(shapePoints[0].x, shapePoints[0].y);\r\n                for (let i = 1; i < shapePoints.length; i++) {\r\n                    ctx.lineTo(shapePoints[i].x, shapePoints[i].y);\r\n                }\r\n                ctx.closePath();\r\n            } else {\r\n                ctx.arc(0, 0, radius, 0, Math.PI * 2);\r\n            }\r\n            ctx.clip();\r\n            \r\n            // Use a single smooth gradient for the entire shadow\r\n            const shadowGradient = ctx.createRadialGradient(\r\n                offsetX, offsetY, radius * 0.9,\r\n                offsetX, offsetY, radius * 1.1\r\n            );\r\n            \r\n            // More gradient stops for smoother transition\r\n            // Also fade opacity based on shadowProgress for smoother appearance\r\n            const baseCoverage = shadow.coverage !== undefined ? shadow.coverage : 0.85;\r\n            const shadowOpacity = Math.min(1, shadowProgress * 1.2) * (baseCoverage / 0.85);\r\n            shadowGradient.addColorStop(0, `rgba(0, 0, 0, ${1 * shadowOpacity})`);\r\n            shadowGradient.addColorStop(0.80, `rgba(0, 0, 0, ${1 * shadowOpacity})`);\r\n            shadowGradient.addColorStop(0.88, `rgba(0, 0, 0, ${0.98 * shadowOpacity})`);\r\n            shadowGradient.addColorStop(0.91, `rgba(0, 0, 0, ${0.95 * shadowOpacity})`);\r\n            shadowGradient.addColorStop(0.93, `rgba(0, 0, 0, ${0.9 * shadowOpacity})`);\r\n            shadowGradient.addColorStop(0.95, `rgba(0, 0, 0, ${0.8 * shadowOpacity})`);\r\n            shadowGradient.addColorStop(0.96, `rgba(0, 0, 0, ${0.65 * shadowOpacity})`);\r\n            shadowGradient.addColorStop(0.97, `rgba(0, 0, 0, ${0.45 * shadowOpacity})`);\r\n            shadowGradient.addColorStop(0.98, `rgba(0, 0, 0, ${0.25 * shadowOpacity})`);\r\n            shadowGradient.addColorStop(0.99, `rgba(0, 0, 0, ${0.1 * shadowOpacity})`);\r\n            shadowGradient.addColorStop(1, 'rgba(0, 0, 0, 0)');\r\n            \r\n            ctx.fillStyle = shadowGradient;\r\n            ctx.beginPath();\r\n            // Always use a circular shadow - crescent effect only works with circles\r\n            ctx.arc(offsetX, offsetY, radius * 1.1, 0, Math.PI * 2);\r\n            ctx.fill();\r\n            \r\n        } else if (shadow.type === 'lunar') {\r\n            // Lunar eclipse - diffuse reddish shadow\r\n            const diffusion = shadow.diffusion !== undefined ? shadow.diffusion : 1;\r\n            const sharpness = 1 - diffusion;\r\n            \r\n            // Get morph progress to animate the shadow sliding in for solar\r\n            let shadowOffsetX = 0;\r\n            let shadowOffsetY = 0;\r\n            \r\n            if (this.shapeMorpher) {\r\n                const morphProgress = this.shapeMorpher.getProgress();\r\n                const currentShape = this.shapeMorpher.currentShape;\r\n                const targetShape = this.shapeMorpher.targetShape;\r\n                \r\n                // Don't skip animation for moon-solar transitions anymore\r\n                \r\n                // Animate shadow sliding in when morphing TO solar (for solar overlay)\r\n                if (isSolarOverlay && targetShape === 'solar' && morphProgress !== undefined && morphProgress < 1) {\r\n                    // Shadow slides in from bottom-left\r\n                    const slideDistance = radius * 2.5;\r\n                    // Start from bottom-left, move to center\r\n                    shadowOffsetX = -slideDistance * (1 - morphProgress);\r\n                    shadowOffsetY = slideDistance * (1 - morphProgress);\r\n                }\r\n                // Animate shadow sliding out when morphing FROM solar\r\n                else if (isSolarOverlay && currentShape === 'solar' && targetShape !== 'solar' && targetShape !== null && morphProgress !== undefined && morphProgress < 1) {\r\n                    // Shadow slides out to top-right\r\n                    const slideDistance = radius * 2.5;\r\n                    // Move from center to top-right\r\n                    shadowOffsetX = slideDistance * morphProgress;\r\n                    shadowOffsetY = -slideDistance * morphProgress;\r\n                }\r\n            }\r\n            \r\n            // Apply translation for shadow animation\r\n            ctx.translate(shadowOffsetX, shadowOffsetY);\r\n            \r\n            // For solar overlay, clip to the sun's core area only (not the corona)\r\n            if (isSolarOverlay) {\r\n                // Clip to a circle at the shadow's position that only covers the core\r\n                ctx.save();\r\n                ctx.beginPath();\r\n                // Create a clipping region that's the intersection of the sun and the shadow\r\n                ctx.arc(-shadowOffsetX, -shadowOffsetY, radius, 0, Math.PI * 2); // Sun position (inverse of shadow offset)\r\n                ctx.clip();\r\n            } else {\r\n                // Regular lunar clipping\r\n                ctx.beginPath();\r\n                ctx.arc(0, 0, radius, 0, Math.PI * 2);\r\n                ctx.clip();\r\n            }\r\n            \r\n            // Penumbra (diffuse outer shadow) - MUCH DARKER\r\n            const penumbraRadius = radius * (1.8 - sharpness * 0.5);\r\n            const penumbraGradient = ctx.createRadialGradient(\r\n                0, 0, radius * 0.2,\r\n                0, 0, penumbraRadius\r\n            );\r\n            \r\n            const baseOpacity = shadow.coverage || 0.9;\r\n            \r\n            // Use custom color if specified (for solar eclipse), otherwise use default lunar red\r\n            if (shadow.color && shadow.color.includes('0, 0, 0')) {\r\n                // Black shadow for solar eclipse\r\n                penumbraGradient.addColorStop(0, `rgba(0, 0, 0, ${baseOpacity})`);\r\n                penumbraGradient.addColorStop(0.3 + sharpness * 0.2, `rgba(0, 0, 0, ${baseOpacity * 0.95})`);\r\n                penumbraGradient.addColorStop(0.6 + sharpness * 0.2, `rgba(0, 0, 0, ${baseOpacity * 0.8})`);\r\n                penumbraGradient.addColorStop(0.85, `rgba(0, 0, 0, ${baseOpacity * 0.4})`);\r\n                penumbraGradient.addColorStop(1, `rgba(0, 0, 0, 0)`);\r\n            } else {\r\n                // Default reddish lunar eclipse colors\r\n                penumbraGradient.addColorStop(0, `rgba(10, 2, 0, ${baseOpacity})`);\r\n                penumbraGradient.addColorStop(0.3 + sharpness * 0.2, `rgba(20, 5, 0, ${baseOpacity * 0.95})`);\r\n                penumbraGradient.addColorStop(0.6 + sharpness * 0.2, `rgba(40, 10, 5, ${baseOpacity * 0.8})`);\r\n                penumbraGradient.addColorStop(0.85, `rgba(60, 15, 10, ${baseOpacity * 0.4})`);\r\n                penumbraGradient.addColorStop(1, `rgba(80, 20, 15, 0)`);\r\n            }\r\n            \r\n            ctx.fillStyle = penumbraGradient;\r\n            ctx.beginPath();\r\n            ctx.arc(0, 0, penumbraRadius, 0, Math.PI * 2);\r\n            ctx.fill();\r\n            \r\n            // Umbra (sharp inner shadow) - only when sharp\r\n            if (sharpness > 0.3) {\r\n                const umbraRadius = radius * (0.8 + sharpness * 0.3);\r\n                const umbraGradient = ctx.createRadialGradient(\r\n                    0, 0, 0,\r\n                    0, 0, umbraRadius\r\n                );\r\n                \r\n                // Use black for solar eclipse, reddish for lunar\r\n                if (shadow.color && shadow.color.includes('0, 0, 0')) {\r\n                    umbraGradient.addColorStop(0, `rgba(0, 0, 0, ${baseOpacity})`);\r\n                    umbraGradient.addColorStop(0.5, `rgba(0, 0, 0, ${baseOpacity * 0.9})`);\r\n                    umbraGradient.addColorStop(0.8, `rgba(0, 0, 0, ${baseOpacity * 0.5})`);\r\n                    umbraGradient.addColorStop(1, 'rgba(0, 0, 0, 0)');\r\n                } else {\r\n                    umbraGradient.addColorStop(0, `rgba(0, 0, 0, ${baseOpacity})`);\r\n                    umbraGradient.addColorStop(0.5, `rgba(10, 2, 0, ${baseOpacity * 0.9})`);\r\n                    umbraGradient.addColorStop(0.8, `rgba(20, 5, 0, ${baseOpacity * 0.5})`);\r\n                    umbraGradient.addColorStop(1, 'rgba(30, 8, 5, 0)');\r\n                }\r\n                \r\n                ctx.fillStyle = umbraGradient;\r\n                ctx.beginPath();\r\n                ctx.arc(0, 0, umbraRadius, 0, Math.PI * 2);\r\n                ctx.fill();\r\n            }\r\n        }\r\n        \r\n        // Restore extra save for solar overlay clipping\r\n        if (isSolarOverlay) {\r\n            ctx.restore();\r\n        }\r\n        \r\n        ctx.restore();\r\n    }\r\n    \r\n    /**\r\n     * Render zen meditation core with arc shape\r\n     */\r\n    renderZenCore(x, y, radius) {\r\n        this.ctx.save();\r\n        \r\n        // Apply shake offset if in awakening phase\r\n        if (this.state.shakeOffset) {\r\n            x += this.state.shakeOffset;\r\n        }\r\n        \r\n        // Apply drift Y if in awakening phase\r\n        if (this.state.driftY) {\r\n            y += this.state.driftY;\r\n        }\r\n        \r\n        this.ctx.translate(x, y);\r\n        \r\n        // Apply gesture rotation if present (for spin gesture)\r\n        if (this.gestureTransform && this.gestureTransform.rotation !== undefined) {\r\n            this.ctx.rotate(this.gestureTransform.rotation * Math.PI / 180);\r\n        }\r\n        \r\n        // Calculate zen energy pulsation (slow breathing effect)\r\n        const time = Date.now() / 1000; // Time in seconds\r\n        const basePulse = Math.sin(time * 0.5) * 0.5 + 1.5; // Base pulsation\r\n        \r\n        // Scale glow intensity based on transition phase\r\n        // Very dim during bloom/retract, bright when fully in zen\r\n        let glowIntensity = 0.1; // Start very dim\r\n        if (this.zenTransition.phase === 'in') {\r\n            // Full brightness when fully in zen\r\n            glowIntensity = 1.0;\r\n        } else if (this.zenTransition.phase === 'entering') {\r\n            // Gradually brighten only after lotus is mostly formed\r\n            glowIntensity = Math.max(0.1, (this.zenTransition.lotusMorph - 0.7) * 3.3); // Stay dim until 70% bloomed\r\n        } else if (this.zenTransition.phase === 'exiting') {\r\n            // Quickly dim when exiting\r\n            glowIntensity = Math.max(0.1, this.zenTransition.lotusMorph * 0.5);\r\n        }\r\n        const zenPulse = basePulse * glowIntensity; // Apply intensity scaling\r\n        \r\n        // Apply glow when lotus is morphing or fully formed\r\n        if (this.zenTransition.lotusMorph > 0) {\r\n            // Single smooth shadow glow \r\n            this.ctx.shadowBlur = this.scaleValue(100) * zenPulse;\r\n            this.ctx.shadowColor = `rgba(255, 223, 0, ${0.5 * zenPulse})`;\r\n            \r\n            // INNER RADIANCE GRADIENT - Much darker during transitions\r\n            const gradient = this.ctx.createRadialGradient(0, 0, 0, 0, 0, radius * 4);\r\n            \r\n            // During transitions, use much darker colors to see lotus\r\n            if (this.zenTransition.phase !== 'in') {\r\n                // Dark golden during transition - lotus will show as even darker cutout\r\n                gradient.addColorStop(0, `rgba(184, 134, 11, ${0.8})`); // Dark goldenrod core\r\n                gradient.addColorStop(0.3, `rgba(153, 101, 21, ${0.6})`); // Darker gold\r\n                gradient.addColorStop(0.6, `rgba(139, 69, 19, ${0.4})`); // Saddle brown\r\n                gradient.addColorStop(1, `rgba(101, 67, 33, 0)`); // Dark brown edge\r\n            } else {\r\n                // Full brightness only when fully in zen\r\n                gradient.addColorStop(0, `rgba(255, 255, 255, ${1.0 * zenPulse})`); // Pure white core\r\n                gradient.addColorStop(0.1, `rgba(255, 255, 240, ${1.0 * zenPulse})`); // Bright cream\r\n                gradient.addColorStop(0.2, `rgba(255, 250, 205, ${0.95 * zenPulse})`); // Warm light\r\n                gradient.addColorStop(0.35, `rgba(255, 240, 150, ${0.85 * zenPulse})`); // Bright gold\r\n                gradient.addColorStop(0.5, `rgba(255, 223, 0, ${0.7 * zenPulse})`); // Vibrant gold\r\n                gradient.addColorStop(0.65, `rgba(255, 215, 0, ${0.5 * zenPulse})`); // Fading gold\r\n                gradient.addColorStop(0.8, `rgba(255, 215, 0, ${0.3 * zenPulse})`); // Softer edge\r\n                gradient.addColorStop(0.9, `rgba(255, 215, 0, ${0.15 * zenPulse})`); // Very soft\r\n                gradient.addColorStop(0.95, `rgba(255, 215, 0, ${0.05 * zenPulse})`); // Almost gone\r\n                gradient.addColorStop(1, `rgba(255, 215, 0, 0)`); // Fully transparent edge\r\n            }\r\n            \r\n            this.ctx.fillStyle = gradient;\r\n            this.ctx.strokeStyle = `rgba(255, 255, 255, ${0.3})`; // Dimmer edge during transition\r\n            this.ctx.lineWidth = this.scaleValue(2);\r\n            \r\n            // STEP 1: Draw a circle with lotus cutout using evenodd fill rule\r\n            this.ctx.beginPath();\r\n            \r\n            // Draw outer circle (clockwise)\r\n            this.ctx.arc(0, 0, radius, 0, Math.PI * 2, false);\r\n            \r\n            // CLEAN LOTUS SILHOUETTE - matching reference image\r\n            const lotusSize = radius * 0.95; // Lotus fills nearly ALL of the orb\r\n            \r\n            // MORPHING LOTUS PETALS - animated based on lotusMorph value\r\n            const morph = this.zenTransition.lotusMorph;\r\n            const spread = this.zenTransition.petalSpread;\r\n            const smile = this.zenTransition.smileCurve;\r\n            \r\n            // Center/Top petal - morphs from small circle to full petal\r\n            // Only draw lotus if morph is significant (avoid tiny artifacts)\r\n            if (morph > 0.1) {\r\n                const centerPetalBase = radius * (0.05 + 0.15 * morph);\r\n                this.ctx.moveTo(0, centerPetalBase); // Start at base center\r\n                this.ctx.bezierCurveTo(\r\n                    -radius * (0.05 + 0.25 * morph * spread), radius * 0.1,    // Left control\r\n                    -radius * (0.05 + 0.3 * morph * spread), -radius * (0.1 + 0.4 * morph),  // Left control up\r\n                    0, -radius * (0.2 + 0.65 * morph)                // Top point\r\n                );\r\n                this.ctx.bezierCurveTo(\r\n                    radius * (0.05 + 0.3 * morph * spread), -radius * (0.1 + 0.4 * morph),   // Right control up\r\n                    radius * (0.05 + 0.25 * morph * spread), radius * 0.1,     // Right control\r\n                    0, centerPetalBase                 // Back to base\r\n                );\r\n                \r\n                if (morph > 0.3) { // Only show side petals after some morphing\r\n                const sidePetalAlpha = (morph - 0.3) / 0.7; // Fade in from 30% to 100%\r\n                \r\n                // Left petal - fades in and spreads\r\n                this.ctx.moveTo(-radius * 0.1 * sidePetalAlpha, radius * 0.2); \r\n                this.ctx.bezierCurveTo(\r\n                    -radius * (0.1 + 0.4 * sidePetalAlpha * spread), radius * 0.1,    \r\n                    -radius * (0.2 + 0.5 * sidePetalAlpha * spread), -radius * (0.1 + 0.2 * sidePetalAlpha),   \r\n                    -radius * (0.1 + 0.4 * sidePetalAlpha * spread), -radius * (0.2 + 0.45 * sidePetalAlpha)   \r\n                );\r\n                this.ctx.bezierCurveTo(\r\n                    -radius * (0.05 + 0.15 * sidePetalAlpha), -radius * (0.1 + 0.4 * sidePetalAlpha),   \r\n                    -radius * 0.05 * sidePetalAlpha, radius * 0.1,   \r\n                    -radius * 0.1 * sidePetalAlpha, radius * 0.2     \r\n                );\r\n                \r\n                // Right petal - fades in and spreads\r\n                this.ctx.moveTo(radius * 0.1 * sidePetalAlpha, radius * 0.2); \r\n                this.ctx.bezierCurveTo(\r\n                    radius * (0.1 + 0.4 * sidePetalAlpha * spread), radius * 0.1,     \r\n                    radius * (0.2 + 0.5 * sidePetalAlpha * spread), -radius * (0.1 + 0.2 * sidePetalAlpha),    \r\n                    radius * (0.1 + 0.4 * sidePetalAlpha * spread), -radius * (0.2 + 0.45 * sidePetalAlpha)    \r\n                );\r\n                this.ctx.bezierCurveTo(\r\n                    radius * (0.05 + 0.15 * sidePetalAlpha), -radius * (0.1 + 0.4 * sidePetalAlpha),    \r\n                    radius * 0.05 * sidePetalAlpha, radius * 0.1,    \r\n                    radius * 0.1 * sidePetalAlpha, radius * 0.2      \r\n                );\r\n            }\r\n            \r\n            // Bottom smile - morphs from straight to curved smile\r\n            if (smile > 0) {\r\n                const smileDepth = radius * 0.2 * smile; // How deep the smile curves\r\n                this.ctx.moveTo(-radius * 0.6, radius * (0.5 - 0.1 * smile));   // Corners rise with smile\r\n                this.ctx.quadraticCurveTo(\r\n                    0, radius * (0.5 + 0.1 * smile),     // Center dips for smile\r\n                    radius * 0.6, radius * (0.5 - 0.1 * smile)  // Right corner rises\r\n                );\r\n                }\r\n            }\r\n            \r\n            this.ctx.closePath();\r\n            \r\n            // Fill with gradient using evenodd rule to create the lotus cutout\r\n            this.ctx.fill('evenodd');\r\n            // Don't stroke the lotus cutout, only the outer circle\r\n            this.ctx.beginPath();\r\n            this.ctx.arc(0, 0, radius, 0, Math.PI * 2);\r\n            this.ctx.stroke();\r\n            \r\n            // Only add additional glow layers when fully in zen, not during transitions\r\n            if (this.zenTransition.phase === 'in') {\r\n                // Additional EXPANSIVE glow layers for inner radiance\r\n                // Layer 1: BRILLIANT lotus core intensifier - from lower quarter\r\n                const lotusRadius = radius * 2.0; // Larger radius for more expansion\r\n                const arcHeight = this.zenTransition.arcHeight * radius; // Get arc height from transition state\r\n                const glowOriginY = radius * 0.5; // Lower quarter origin\r\n                const lotusGlow = this.ctx.createRadialGradient(0, glowOriginY, 0, 0, glowOriginY, lotusRadius * 1.2);\r\n                lotusGlow.addColorStop(0, `rgba(255, 255, 255, ${1.0 * zenPulse})`);\r\n                lotusGlow.addColorStop(0.25, `rgba(255, 252, 240, ${0.8 * zenPulse})`);\r\n                lotusGlow.addColorStop(0.5, `rgba(255, 245, 200, ${0.6 * zenPulse})`);\r\n                lotusGlow.addColorStop(0.75, `rgba(255, 235, 150, ${0.4 * zenPulse})`);\r\n                lotusGlow.addColorStop(1, 'rgba(255, 223, 0, 0)');\r\n                this.ctx.fillStyle = lotusGlow;\r\n                this.ctx.fill();\r\n                \r\n                // Layer 2: GAUSSIAN outer halo for smooth falloff\r\n                const outerHalo = this.ctx.createRadialGradient(0, -arcHeight/2, radius * 0.5, 0, -arcHeight/2, radius * 5);\r\n                outerHalo.addColorStop(0, 'rgba(255, 223, 0, 0)');\r\n                outerHalo.addColorStop(0.1, `rgba(255, 223, 0, ${0.25 * zenPulse})`);\r\n                outerHalo.addColorStop(0.2, `rgba(255, 220, 0, ${0.2 * zenPulse})`);\r\n                outerHalo.addColorStop(0.35, `rgba(255, 215, 0, ${0.15 * zenPulse})`);\r\n                outerHalo.addColorStop(0.5, `rgba(255, 215, 0, ${0.1 * zenPulse})`);\r\n                outerHalo.addColorStop(0.65, `rgba(255, 215, 0, ${0.06 * zenPulse})`);\r\n                outerHalo.addColorStop(0.8, `rgba(255, 215, 0, ${0.03 * zenPulse})`);\r\n                outerHalo.addColorStop(0.9, `rgba(255, 215, 0, ${0.01 * zenPulse})`);\r\n                outerHalo.addColorStop(1, 'rgba(255, 215, 0, 0)');\r\n                this.ctx.fillStyle = outerHalo;\r\n                this.ctx.fill();\r\n            }\r\n        } else {\r\n            // Draw horizontal line or circle during transition\r\n            // Start with very dim golden color that brightens with lotus\r\n            \r\n            // No glow during transition to prevent flash\r\n            this.ctx.shadowBlur = 0;\r\n            this.ctx.shadowColor = 'transparent';\r\n            \r\n            // Use very dim golden color during transition\r\n            const dimIntensity = 0.3; // Keep consistently dim during transition\r\n            this.ctx.fillStyle = `rgba(255, 215, 0, ${dimIntensity})`;\r\n            this.ctx.beginPath();\r\n            this.ctx.arc(0, 0, radius, 0, Math.PI * 2);\r\n            this.ctx.fill();\r\n            \r\n            // Very subtle gradient during transition to see lotus clearly\r\n            const coreGradient = this.ctx.createRadialGradient(0, 0, 0, 0, 0, radius);\r\n            coreGradient.addColorStop(0, `rgba(255, 255, 255, 0.2)`);\r\n            coreGradient.addColorStop(0.5, `rgba(255, 250, 230, 0.1)`);\r\n            coreGradient.addColorStop(1, 'rgba(255, 215, 0, 0)');\r\n            this.ctx.fillStyle = coreGradient;\r\n            this.ctx.fill();\r\n        }\r\n        \r\n        this.ctx.restore();\r\n    }\r\n    \r\n    /**\r\n     * Render speaking animation rings\r\n     */\r\n    renderSpeakingRings(centerX, centerY, coreRadius, deltaTime) {\r\n        return this.specialEffects.renderSpeakingRings(centerX, centerY, coreRadius, deltaTime);\r\n    }\r\n    \r\n    \r\n    // Recording rings method removed - now using pulsating glow instead\r\n    \r\n    /**\r\n     * Render recording indicator - stylized REC text only\r\n     */\r\n    renderRecordingIndicator(x, y) {\r\n        return this.specialEffects.renderRecordingIndicator(x, y);\r\n    }\r\n    \r\n    \r\n    /**\r\n     * Render sleep indicator (Z's) with cell-shaded style and gradient fade\r\n     */\r\n    renderSleepIndicator(x, y, deltaTime) {\r\n        return this.specialEffects.renderSleepIndicator(x, y, deltaTime);\r\n    }\r\n    \r\n    \r\n    /**\r\n     * Update animation timers\r\n     */\r\n    updateTimers(deltaTime) {\r\n        // Update breathing animation via BreathingAnimator\r\n        this.breathingAnimator.update(deltaTime, this.state.emotion, this.currentUndertone);\r\n        \r\n        // Update special breathing modifiers\r\n        if (this.state.emotion === 'zen') {\r\n            this.breathingAnimator.setBreathRateMultiplier(0.15);\r\n            this.breathingAnimator.setBreathDepthMultiplier(2.5);\r\n        } else if (this.state.sleeping) {\r\n            this.breathingAnimator.setBreathRateMultiplier(0.5);\r\n            this.breathingAnimator.setBreathDepthMultiplier(1.2);\r\n        } else {\r\n            this.breathingAnimator.setBreathRateMultiplier(1.0);\r\n            this.breathingAnimator.setBreathDepthMultiplier(1.0);\r\n        }\r\n        \r\n        // Apply irregular breathing for nervous/tired\r\n        this.breathingAnimator.setIrregularBreathing(this.state.breathIrregular);\r\n        \r\n        // Update blinking via EyeRenderer\r\n        this.eyeRenderer.setBlinkingEnabled(this.state.blinkingEnabled && !this.state.sleeping && this.state.emotion !== 'zen');\r\n        this.eyeRenderer.update(deltaTime);\r\n        \r\n        // Sync blinking state back to our state for compatibility\r\n        this.state.blinking = this.eyeRenderer.blinking;\r\n        \r\n        // Note: Idle detection is handled by IdleBehavior.js, not here\r\n    }\r\n    \r\n    /**\r\n     * Apply all undertone modifiers to current state\r\n     * @param {string|null|Object} undertone - Undertone name or weighted modifier object\r\n     */\r\n    applyUndertoneModifiers(undertone) {\r\n        // Handle weighted modifier from state machine\r\n        if (undertone && typeof undertone === 'object' && undertone.weight !== undefined) {\r\n            const weight = undertone.weight;\r\n            \r\n            // Apply weighted modifiers for smooth transitions\r\n            // Use default value of 1.0 if property is undefined\r\n            this.state.sizeMultiplier = 1.0 + ((undertone.sizeMultiplier || 1.0) - 1.0) * weight;\r\n            this.state.jitterAmount = (undertone.jitterAmount || 0) * weight;\r\n            this.state.episodicFlutter = weight > 0.5 ? (undertone.episodicFlutter || false) : false;\r\n            this.state.glowRadiusMult = 1.0 + ((undertone.glowRadiusMult || 1.0) - 1.0) * weight;\r\n            this.state.breathRateMult = 1.0 + ((undertone.breathRateMult || 1.0) - 1.0) * weight;\r\n            this.state.breathDepthMult = 1.0 + ((undertone.breathDepthMult || 1.0) - 1.0) * weight;\r\n            this.state.breathIrregular = weight > 0.5 ? (undertone.breathIrregular || false) : false;\r\n            this.state.particleRateMult = 1.0;\r\n            return;\r\n        }\r\n        \r\n        // String-based undertone handling\r\n        if (!undertone || !this.undertoneModifiers[undertone]) {\r\n            // Reset to defaults if no undertone\r\n            this.state.sizeMultiplier = 1.0;\r\n            this.state.jitterAmount = 0;\r\n            this.state.episodicFlutter = false;\r\n            this.state.glowRadiusMult = 1.0;\r\n            this.state.breathRateMult = 1.0;\r\n            this.state.breathDepthMult = 1.0;\r\n            this.state.breathIrregular = false;\r\n            this.state.particleRateMult = 1.0;\r\n            return;\r\n        }\r\n        \r\n        const modifier = this.undertoneModifiers[undertone];\r\n        \r\n        // Apply all modifiers directly\r\n        this.state.sizeMultiplier = modifier.sizeMultiplier;\r\n        this.state.jitterAmount = modifier.jitterAmount || 0;\r\n        this.state.episodicFlutter = modifier.episodicFlutter || false;\r\n        this.state.glowRadiusMult = modifier.glowRadiusMult;\r\n        this.state.breathRateMult = modifier.breathRateMult;\r\n        this.state.breathDepthMult = modifier.breathDepthMult;\r\n        this.state.breathIrregular = modifier.breathIrregular || false;\r\n        this.state.particleRateMult = 1.0;\r\n    }\r\n    \r\n    /**\r\n     * Apply undertone shifts to a color using saturation-based depth\r\n     * @param {string} baseColor - Base hex color\r\n     * @param {string|null|Object} undertone - Undertone name or weighted modifier object\r\n     * @returns {string} Modified hex color\r\n     * \r\n     * Undertone saturation creates visual depth:\r\n     * - INTENSE   : +60% saturation (electric, overwhelming)\r\n     * - CONFIDENT : +30% saturation (bold, present) \r\n     * - NERVOUS   : +15% saturation (slightly heightened)\r\n     * - CLEAR     :   0% saturation (normal midtone)\r\n     * - TIRED     : -20% saturation (washed out, fading)\r\n     * - SUBDUED   : -50% saturation (ghostly, withdrawn)\r\n     */\r\n    applyUndertoneToColor(baseColor, undertone) {\r\n        return this.colorUtilities.applyUndertoneToColor(baseColor, undertone);\r\n    }\r\n    \r\n    hexToRgb(hex) {\r\n        return this.colorUtilities.hexToRgb(hex);\r\n    }\r\n    \r\n    rgbToHsl(r, g, b) {\r\n        return this.colorUtilities.rgbToHsl(r, g, b);\r\n    }\r\n    \r\n    hslToHex(h, s, l) {\r\n        return this.colorUtilities.hslToHex(h, s, l);\r\n    }\r\n    \r\n    hexToRgba(hex, alpha = 1) {\r\n        const rgb = this.hexToRgb(hex);\r\n        if (!rgb) return `rgba(255, 255, 255, ${alpha})`;\r\n        return `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${alpha})`;\r\n    }\r\n    \r\n    startColorTransition(targetColor, targetIntensity, duration = 1500) {\r\n        this.colorUtilities.currentColor = this.state.glowColor;\r\n        this.colorUtilities.currentIntensity = this.state.glowIntensity;\r\n        this.colorUtilities.startColorTransition(targetColor, targetIntensity, duration);\r\n        this.colorTransition = this.colorUtilities.colorTransition;\r\n    }\r\n    \r\n    updateColorTransition(deltaTime) {\r\n        const result = this.colorUtilities.updateColorTransition(deltaTime);\r\n        if (result) {\r\n            this.state.glowColor = result.color;\r\n            this.state.glowIntensity = result.intensity;\r\n            this.colorTransition = this.colorUtilities.colorTransition;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Update just the undertone without resetting emotion\r\n     */\r\n    updateUndertone(undertone) {\r\n        // Clear glow cache when undertone changes (colors will change)\r\n        if (this.state.undertone !== undertone) {\r\n            this.glowCache.clear();\r\n        }\r\n        \r\n        // Store undertone for color processing\r\n        this.state.undertone = undertone;\r\n        this.currentUndertone = undertone;\r\n        \r\n        // Get weighted undertone modifier from state machine if available\r\n        const weightedModifier = this.stateMachine && this.stateMachine.getWeightedUndertoneModifiers ? \r\n                                this.stateMachine.getWeightedUndertoneModifiers() : null;\r\n        \r\n        // Apply all undertone modifiers (visual, breathing only - no particles)\r\n        this.applyUndertoneModifiers(weightedModifier || undertone);\r\n        \r\n        // Update colors with the new undertone\r\n        if (this.state.emotion) {\r\n            const emotionConfig = getEmotion(this.state.emotion);\r\n            if (emotionConfig) {\r\n                const baseColor = emotionConfig.glowColor || this.config.defaultGlowColor;\r\n                const targetColor = this.applyUndertoneToColor(baseColor, weightedModifier || undertone);\r\n                \r\n                // Start color transition to new undertone color (faster for responsiveness)\r\n                this.startColorTransition(targetColor, 200); // 200ms transition\r\n            }\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Set emotional state\r\n     */\r\n    setEmotionalState(emotion, properties, undertone = null) {\r\n        \r\n        // Clear glow cache when emotion or undertone changes (colors will change)\r\n        if (this.state.emotion !== emotion || this.state.undertone !== undertone) {\r\n            this.glowCache.clear();\r\n        }\r\n        \r\n        // Store undertone for color processing\r\n        this.state.undertone = undertone;\r\n        this.currentUndertone = undertone;\r\n        \r\n        // Get weighted undertone modifier from state machine if available\r\n        const weightedModifier = this.stateMachine && this.stateMachine.getWeightedUndertoneModifiers ? \r\n                                this.stateMachine.getWeightedUndertoneModifiers() : null;\r\n        \r\n        // Apply all undertone modifiers (visual, breathing, particles)\r\n        this.applyUndertoneModifiers(weightedModifier || undertone);\r\n        \r\n        // Get base color and apply undertone shifts\r\n        const baseColor = properties.glowColor || this.config.defaultGlowColor;\r\n        \r\n        // Get target color - for suspicion, use the dynamic color directly\r\n        let targetColor;\r\n        if (emotion === 'suspicion') {\r\n            // Use the dynamic color from properties (includes threat level)\r\n            targetColor = properties.glowColor || baseColor;\r\n        } else {\r\n            targetColor = this.applyUndertoneToColor(baseColor, weightedModifier || undertone);\r\n        }\r\n        \r\n        // Apply intensity modifier from undertone\r\n        const modifier = weightedModifier || (undertone ? this.undertoneModifiers[undertone] : null);\r\n        const baseIntensity = properties.glowIntensity || 1.0;\r\n        \r\n        // Get the glow multiplier - check for glowRadiusMult or use default of 1.0\r\n        let glowMult = 1.0;\r\n        if (modifier) {\r\n            if (weightedModifier) {\r\n                // For weighted modifiers, check if glowRadiusMult exists\r\n                // Check for NaN in weight calculation\r\n                const weight = modifier.weight || 0;\r\n                if (modifier.glowRadiusMult !== undefined && isFinite(modifier.glowRadiusMult) && isFinite(weight)) {\r\n                    glowMult = 1.0 + (modifier.glowRadiusMult - 1.0) * weight;\r\n                } else {\r\n                    glowMult = 1.0;\r\n                }\r\n            } else {\r\n                // For non-weighted modifiers, use glowRadiusMult if it exists\r\n                glowMult = modifier.glowRadiusMult !== undefined ? modifier.glowRadiusMult : 1.0;\r\n            }\r\n        }\r\n        \r\n        const targetIntensity = baseIntensity * glowMult;\r\n        \r\n        // Determine transition duration based on emotion\r\n        let duration = 1500; // Default 1.5s\r\n        if (emotion === 'anger' || emotion === 'fear') {\r\n            duration = 800; // Quick transitions for urgent emotions\r\n        } else if (emotion === 'sadness' || emotion === 'resting') {\r\n            duration = 2000; // Slower for calming emotions\r\n        } else if (emotion === 'zen') {\r\n            duration = 2000; // Zen gets special timing during lotus bloom\r\n        }\r\n        \r\n        // Update emotion state BEFORE handling transitions to avoid timing issues\r\n        const previousEmotion = this.state.emotion;\r\n        this.state.emotion = emotion;\r\n        \r\n        // Handle suspicion state\r\n        if (emotion === 'suspicion') {\r\n            this.state.isSuspicious = true;\r\n            // Store target squint amount, we'll animate to it\r\n            this.state.targetSquintAmount = properties && properties.coreSquint ? properties.coreSquint : 0.4;\r\n            if (this.state.squintAmount === undefined) {\r\n                this.state.squintAmount = 0; // Start from no squint\r\n            }\r\n            this.state.lastScanTime = Date.now();\r\n            this.state.scanPhase = 0;\r\n        } else {\r\n            this.state.isSuspicious = false;\r\n            this.state.targetSquintAmount = 0;\r\n            if (this.state.squintAmount === undefined) {\r\n                this.state.squintAmount = 0;\r\n            }\r\n        }\r\n        \r\n        // Handle zen state transitions specially\r\n        if (emotion === 'zen' && previousEmotion !== 'zen') {\r\n            // Entering zen - will handle its own color transition during lotus bloom\r\n            this.enterZenMode(targetColor, targetIntensity);\r\n        } else if (previousEmotion === 'zen' && emotion !== 'zen') {\r\n            // Exiting zen - will handle its own color transition during lotus close\r\n            this.exitZenMode(emotion, targetColor, targetIntensity);\r\n        } else {\r\n            // Standard color transition for all other state changes\r\n            this.startColorTransition(targetColor, targetIntensity, duration);\r\n        }\r\n        \r\n        // Apply breathing with undertone modifiers\r\n        const baseBreathRate = properties.breathRate || 1.0;\r\n        const baseBreathDepth = properties.breathDepth || this.config.breathingDepth;\r\n        this.state.breathRate = modifier ? baseBreathRate * modifier.breathRateMult : baseBreathRate;\r\n        this.state.breathDepth = modifier ? baseBreathDepth * modifier.breathDepthMult : baseBreathDepth;\r\n        \r\n        // Jitter combines emotion jitter with undertone jitter\r\n        this.state.coreJitter = properties.coreJitter || (modifier && modifier.jitterAmount > 0);\r\n        this.state.emotionEyeOpenness = properties.eyeOpenness;\r\n        this.state.emotionEyeArc = properties.eyeArc;\r\n    }\r\n    \r\n    /**\r\n     * Set BPM for rhythm features\r\n     * @param {number} bpm - Beats per minute\r\n     */\r\n    setBPM(bpm) {\r\n        // BPM-locked rotation has been removed\r\n        // This method is kept for other rhythm-related features\r\n    }\r\n\r\n    /**\r\n     * Set manual rotation speed\r\n     * @param {number} speed - Rotation speed in degrees per frame (like velocity)\r\n     */\r\n    setRotationSpeed(speed) {\r\n        // Direct degrees per frame, no conversion needed\r\n        this.state.rotationSpeed = speed;\r\n    }\r\n\r\n    /**\r\n     * Set manual rotation angle directly (for scratching)\r\n     * @param {number} angle - Rotation angle in DEGREES\r\n     */\r\n    setRotationAngle(angle) {\r\n        this.state.manualRotation = angle;\r\n    }\r\n    \r\n    /**\r\n     * Set gaze data from GazeTracker\r\n     * @param {Object} gazeData - Contains offset, proximity, and lock status\r\n     */\r\n    setGazeOffset(gazeData) {\r\n        // Handle both old format (just offset) and new format (full data)\r\n        if (typeof gazeData === 'object' && gazeData !== null) {\r\n            if (gazeData.hasOwnProperty('x') && gazeData.hasOwnProperty('y')) {\r\n                // Old format - just offset\r\n                this.state.gazeOffset = gazeData;\r\n            } else {\r\n                // New format - full gaze data\r\n                this.state.gazeOffset = gazeData.offset || { x: 0, y: 0 };\r\n                this.state.gazeIntensity = gazeData.proximity || 0;\r\n                this.state.gazeLocked = gazeData.isLocked || false;\r\n            }\r\n        }\r\n        \r\n        // Reset idle timer on interaction\r\n        this.idleTimer = 0;\r\n        if (this.isAsleep) {\r\n            this.wakeUp();\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Get current orb position (center + gaze offset)\r\n     */\r\n    getCurrentOrbPosition() {\r\n        const logicalWidth = this.canvasManager.width;\r\n        const logicalHeight = this.canvasManager.height;\r\n        const centerX = logicalWidth / 2;\r\n        const centerY = logicalHeight / 2 - this.config.topOffset;\r\n        \r\n        return {\r\n            x: centerX + this.state.gazeOffset.x,\r\n            y: centerY + this.state.gazeOffset.y\r\n        };\r\n    }\r\n    \r\n    /**\r\n     * Sets a custom scale for the orb (used for breathing exercises)\r\n     * @param {number} scale - Scale factor (1.0 = normal)\r\n     */\r\n    setCustomScale(scale) {\r\n        this.state.customScale = scale;\r\n    }\r\n    \r\n    /**\r\n     * Start speaking animation\r\n     */\r\n    startSpeaking() {\r\n        this.state.speaking = true;\r\n        this.speakingRings = [];\r\n        this.ringSpawnTimer = 0;\r\n    }\r\n    \r\n    /**\r\n     * Stop speaking animation\r\n     */\r\n    stopSpeaking() {\r\n        this.state.speaking = false;\r\n        this.speakingRings = [];\r\n    }\r\n    \r\n    /**\r\n     * Enter sleep mode with animation\r\n     */\r\n    enterSleepMode() {\r\n        this.state.sleeping = true;\r\n        this.sleepZ = []; // Reset Z's\r\n        this.state.eyeOpenness = 1.0; // Start with eyes open\r\n        \r\n        // Initialize dimming values (start at full brightness)\r\n        this.state.sleepDimness = 1.0;\r\n        this.state.sleepScale = 1.0;\r\n        \r\n        // Force end any active blink\r\n        this.state.blinking = false;\r\n        \r\n        // Animate eye closing, then dimming\r\n        this.animateEyeClose();\r\n        \r\n    }\r\n    \r\n    /**\r\n     * Animate eye closing for sleep, then dim\r\n     */\r\n    animateEyeClose() {\r\n        // Cancel any existing eye animations\r\n        if (this.loopCallbackIds.eyeClose) {\r\n            animationLoopManager.unregister(this.loopCallbackIds.eyeClose);\r\n            this.loopCallbackIds.eyeClose = null;\r\n        }\r\n        if (this.loopCallbackIds.eyeOpen) {\r\n            animationLoopManager.unregister(this.loopCallbackIds.eyeOpen);\r\n            this.loopCallbackIds.eyeOpen = null;\r\n        }\r\n        \r\n        const startTime = performance.now();\r\n        const eyeCloseDuration = 2000; // 2 seconds to close eyes\r\n        const dimDuration = 1000; // 1 second to dim after eyes close\r\n        \r\n        const animate = () => {\r\n            if (!this.state.sleeping) {\r\n                // Clean up loop callback ID\r\n                this.loopCallbackIds.eyeClose = null;\r\n                return; // Stop if woken up\r\n            }\r\n            \r\n            const elapsed = performance.now() - startTime;\r\n            \r\n            if (elapsed < eyeCloseDuration) {\r\n                // Phase 1: Close eyes\r\n                const progress = elapsed / eyeCloseDuration;\r\n                const eased = 1 - Math.pow(progress, 2);\r\n                this.state.eyeOpenness = 0.1 + eased * 0.9; // Close to 0.1 (nearly closed)\r\n                \r\n                // Keep full brightness during eye closing\r\n                this.state.sleepDimness = 1.0;\r\n                this.state.sleepScale = 1.0;\r\n                \r\n                // Continue animation on next frame\r\n            } else if (elapsed < eyeCloseDuration + dimDuration) {\r\n                // Phase 2: Dim the orb\r\n                const dimProgress = (elapsed - eyeCloseDuration) / dimDuration;\r\n                const dimEased = 1 - Math.pow(1 - dimProgress, 3); // Ease out cubic\r\n                \r\n                // Keep eyes closed\r\n                this.state.eyeOpenness = 0.1;\r\n                \r\n                // Animate dimming and scaling\r\n                this.state.sleepDimness = 1.0 - (dimEased * 0.4); // Dim to 0.6\r\n                this.state.sleepScale = 1.0 - (dimEased * 0.1); // Scale to 0.9\r\n                \r\n                // Continue animation on next frame\r\n            } else {\r\n                // Final state\r\n                this.state.eyeOpenness = 0.1;\r\n                this.state.sleepDimness = 0.6;\r\n                this.state.sleepScale = 0.9;\r\n                // Clean up loop callback ID\r\n                this.loopCallbackIds.eyeClose = null;\r\n            }\r\n        };\r\n\r\n        // Register with AnimationLoopManager\r\n        this.loopCallbackIds.eyeClose = animationLoopManager.register(\r\n            animate,\r\n            AnimationPriority.HIGH, // Eye animations are high priority\r\n            this\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * Wake up from sleep with animation\r\n     */\r\n    wakeUp() {\r\n        if (!this.state.sleeping) return;\r\n        \r\n        this.state.sleeping = false;\r\n        this.state.breathRate = 1.0;\r\n        this.state.breathDepth = this.config.breathingDepth;\r\n        this.sleepZ = []; // Clear Z's\r\n        \r\n        // Reset blinking state\r\n        this.state.blinking = false;\r\n        // Blinking now handled by EyeRenderer\r\n        this.eyeRenderer.blinking = false;\r\n        this.eyeRenderer.blinkTimer = 0;\r\n        \r\n        // Animate eye opening\r\n        this.animateEyeOpen();\r\n        \r\n        // Quick shake animation\r\n        this.state.coreJitter = true;\r\n        setTimeout(() => {\r\n            this.state.coreJitter = false;\r\n        }, 200);\r\n        \r\n    }\r\n    \r\n    /**\r\n     * Animate eye opening after wake - brighten first, then open eyes\r\n     */\r\n    animateEyeOpen() {\r\n        // Cancel any existing eye animations\r\n        if (this.loopCallbackIds.eyeOpen) {\r\n            animationLoopManager.unregister(this.loopCallbackIds.eyeOpen);\r\n            this.loopCallbackIds.eyeOpen = null;\r\n        }\r\n        if (this.loopCallbackIds.eyeClose) {\r\n            animationLoopManager.unregister(this.loopCallbackIds.eyeClose);\r\n            this.loopCallbackIds.eyeClose = null;\r\n        }\r\n        \r\n        const startTime = performance.now();\r\n        const brightenDuration = 500; // 0.5 seconds to brighten\r\n        const eyeOpenDuration = 1000; // 1 second to open eyes\r\n        \r\n        const animate = () => {\r\n            const elapsed = performance.now() - startTime;\r\n            \r\n            if (elapsed < brightenDuration) {\r\n                // Phase 1: Brighten the orb\r\n                const progress = elapsed / brightenDuration;\r\n                const eased = Math.sin(progress * Math.PI / 2); // Smooth acceleration\r\n                \r\n                // Animate brightening and scaling back\r\n                this.state.sleepDimness = 0.6 + (eased * 0.4); // Brighten from 0.6 to 1.0\r\n                this.state.sleepScale = 0.9 + (eased * 0.1); // Scale from 0.9 to 1.0\r\n                \r\n                // Keep eyes closed during brightening\r\n                this.state.eyeOpenness = 0.1;\r\n                \r\n                // Continue animation on next frame\r\n            } else if (elapsed < brightenDuration + eyeOpenDuration) {\r\n                // Phase 2: Open eyes\r\n                const eyeProgress = (elapsed - brightenDuration) / eyeOpenDuration;\r\n                const eyeEased = Math.sin(eyeProgress * Math.PI / 2); // Smooth acceleration\r\n                \r\n                // Keep full brightness\r\n                this.state.sleepDimness = 1.0;\r\n                this.state.sleepScale = 1.0;\r\n                \r\n                // Animate eye opening\r\n                this.state.eyeOpenness = 0.1 + eyeEased * 0.9; // Open from 0.1 to 1.0\r\n                \r\n                // Continue animation on next frame\r\n            } else {\r\n                // Final state\r\n                this.state.eyeOpenness = 1.0;\r\n                this.state.sleepDimness = 1.0;\r\n                this.state.sleepScale = 1.0;\r\n                // Clean up loop callback ID\r\n                this.loopCallbackIds.eyeOpen = null;\r\n            }\r\n        };\r\n\r\n        // Register with AnimationLoopManager\r\n        this.loopCallbackIds.eyeOpen = animationLoopManager.register(\r\n            animate,\r\n            AnimationPriority.HIGH, // Eye animations are high priority\r\n            this\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * Enter zen meditation mode with animation\r\n     */\r\n    enterZenMode(targetColor, targetIntensity) {\r\n        // Cancel any existing zen animations\r\n        if (this.animationFrameIds.zenEnter) {\r\n            cancelAnimationFrame(this.animationFrameIds.zenEnter);\r\n            this.animationFrameIds.zenEnter = null;\r\n        }\r\n        if (this.animationFrameIds.zenExit) {\r\n            cancelAnimationFrame(this.animationFrameIds.zenExit);\r\n            this.animationFrameIds.zenExit = null;\r\n        }\r\n        \r\n        // Set to zen color with target intensity\r\n        this.state.glowColor = targetColor;\r\n        this.state.glowIntensity = targetIntensity; // Keep the glow\r\n        \r\n        // Cancel any active color transition\r\n        this.colorTransition.active = false;\r\n        \r\n        this.zenTransition = {\r\n            active: true,\r\n            phase: 'entering',\r\n            startTime: performance.now(),\r\n            previousEmotion: this.state.emotion,\r\n            targetEmotion: null,\r\n            scaleX: 1.0,\r\n            scaleY: 1.0,\r\n            arcHeight: 0,\r\n            lotusMorph: 0,     // 0 = no lotus, 1 = full lotus\r\n            petalSpread: 0,    // 0 = closed petals, 1 = full spread\r\n            smileCurve: 0      // 0 = no smile, 1 = full smile\r\n        };\r\n        \r\n        const animate = () => {\r\n            if (!this.zenTransition.active || this.zenTransition.phase !== 'entering') {\r\n                // Clean up loop callback ID\r\n                this.loopCallbackIds.zenEnter = null;\r\n                return;\r\n            }\r\n            \r\n            const elapsed = performance.now() - this.zenTransition.startTime;\r\n            const lotusMorphDuration = 400; // 0.4s for lotus to bloom - smooth transition\r\n            \r\n            if (elapsed < lotusMorphDuration) {\r\n                // Direct lotus blooming - no intro animation\r\n                const lotusProgress = elapsed / lotusMorphDuration;\r\n                const lotusEased = 1 - Math.pow(1 - lotusProgress, 2); // Ease out quad\r\n                \r\n                // Direct lotus bloom without arc or narrowing\r\n                this.zenTransition.scaleX = 1.0;\r\n                this.zenTransition.scaleY = 1.0;  // Full size\r\n                this.zenTransition.arcHeight = 0;  // No arc\r\n                \r\n                // Morph the lotus shape directly\r\n                this.zenTransition.lotusMorph = lotusEased; // 0 to 100%\r\n                this.zenTransition.petalSpread = lotusEased;\r\n                \r\n                // Smile appears gradually\r\n                this.zenTransition.smileCurve = Math.sin(lotusProgress * Math.PI / 2); // Smooth ease\r\n                \r\n                // Register with AnimationLoopManager\r\n        this.loopCallbackIds.zenEnter = animationLoopManager.register(\r\n            animate,\r\n            AnimationPriority.MEDIUM, // Zen animations are medium priority\r\n            this\r\n        );\r\n            } else {\r\n                // Final state - in meditation with full lotus, then start floating\r\n                this.zenTransition.phase = 'in';\r\n                this.zenTransition.scaleX = 1.0;\r\n                this.zenTransition.scaleY = 1.0;  // Full size\r\n                this.zenTransition.arcHeight = 0;  // No arc\r\n                this.zenTransition.lotusMorph = 1.0;\r\n                this.zenTransition.petalSpread = 1.0;\r\n                this.zenTransition.smileCurve = 1.0;\r\n                \r\n                // Set gentle vortex for zen state\r\n                this.state.zenVortexIntensity = 1.0;  // Can be adjusted: 0.5 = very gentle, 2.0 = strong\r\n                // Clean up loop callback ID\r\n                this.loopCallbackIds.zenEnter = null;\r\n            }\r\n        };\r\n        \r\n        // Register with AnimationLoopManager\r\n        this.loopCallbackIds.zenEnter = animationLoopManager.register(\r\n            animate,\r\n            AnimationPriority.MEDIUM, // Zen animations are medium priority\r\n            this\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * Exit zen meditation mode with awakening animation\r\n     */\r\n    exitZenMode(targetEmotion, targetColor, targetIntensity) {\r\n        if (!this.zenTransition.active || this.zenTransition.phase !== 'in') return;\r\n        \r\n        // Cancel any existing zen animations\r\n        if (this.animationFrameIds.zenEnter) {\r\n            cancelAnimationFrame(this.animationFrameIds.zenEnter);\r\n            this.animationFrameIds.zenEnter = null;\r\n        }\r\n        if (this.animationFrameIds.zenExit) {\r\n            cancelAnimationFrame(this.animationFrameIds.zenExit);\r\n            this.animationFrameIds.zenExit = null;\r\n        }\r\n        \r\n        this.zenTransition.phase = 'exiting';\r\n        this.zenTransition.startTime = performance.now();\r\n        this.zenTransition.targetEmotion = targetEmotion;\r\n        \r\n        const animate = () => {\r\n            if (!this.zenTransition.active || this.zenTransition.phase !== 'exiting') {\r\n                // Clean up loop callback ID\r\n                this.loopCallbackIds.zenExit = null;\r\n                return;\r\n            }\r\n            \r\n            const elapsed = performance.now() - this.zenTransition.startTime;\r\n            const straightenDuration = 150; // 0.15s to straighten arc - FAST\r\n            const awakeDuration = 200; // 0.2s for awakening gestures - FAST\r\n            const expandDuration = 200; // 0.2s to expand back - FAST\r\n            const settleDuration = 100; // 0.1s for final settle - FAST\r\n            \r\n            if (elapsed < straightenDuration) {\r\n                // Phase 1: Lotus closing and arc straightening - start color transition\r\n                const progress = elapsed / straightenDuration;\r\n                const eased = 1 - Math.pow(1 - progress, 2);\r\n                \r\n                // Start color transition at beginning of exit\r\n                if (progress === 0 || !this.colorTransition.active) {\r\n                    this.startColorTransition(targetColor, targetIntensity, straightenDuration);\r\n                }\r\n                \r\n                this.zenTransition.arcHeight = 1.5 * (1 - eased); // Flatten arc from full height\r\n                \r\n                // Close lotus petals quickly\r\n                this.zenTransition.smileCurve = 1.0 * (1 - eased); // Smile fades first\r\n                if (progress > 0.3) {\r\n                    const petalProgress = (progress - 0.3) / 0.7;\r\n                    this.zenTransition.petalSpread = 1.0 * (1 - petalProgress); // Petals close\r\n                }\r\n                if (progress > 0.5) {\r\n                    const morphProgress = (progress - 0.5) / 0.5;\r\n                    this.zenTransition.lotusMorph = 1.0 * (1 - morphProgress); // Lotus disappears\r\n                }\r\n                \r\n                // Register with AnimationLoopManager\r\n        this.loopCallbackIds.zenExit = animationLoopManager.register(\r\n            animate,\r\n            AnimationPriority.MEDIUM, // Zen animations are medium priority\r\n            this\r\n        );\r\n            } else if (elapsed < straightenDuration + awakeDuration) {\r\n                // Phase 2: Awakening gestures\r\n                const awakeProgress = (elapsed - straightenDuration) / awakeDuration;\r\n                \r\n                // Lotus is fully closed by now\r\n                this.zenTransition.lotusMorph = 0;\r\n                this.zenTransition.petalSpread = 0;\r\n                this.zenTransition.smileCurve = 0;\r\n                \r\n                // Slow blink (0-0.3)\r\n                if (awakeProgress < 0.2) {\r\n                    const blinkProg = awakeProgress / 0.2;\r\n                    this.zenTransition.scaleY = 1.0 - (Math.sin(blinkProg * Math.PI) * 0.8);\r\n                }\r\n                // Gentle shake (0.3-0.6)\r\n                else if (awakeProgress < 0.6) {\r\n                    const shakeProg = (awakeProgress - 0.2) / 0.4;\r\n                    this.zenTransition.scaleY = 1.0;\r\n                    // Add small X offset for shake (will be applied in render)\r\n                    this.state.shakeOffset = Math.sin(shakeProg * Math.PI * 4) * 3;\r\n                }\r\n                // Upward drift with brighten (0.6-1.0)\r\n                else {\r\n                    const driftProg = (awakeProgress - 0.6) / 0.4;\r\n                    this.state.driftY = -10 * driftProg;\r\n                    this.state.glowIntensity = 1.0 + (0.5 * driftProg); // Brighten\r\n                }\r\n                \r\n                // Register with AnimationLoopManager\r\n        this.loopCallbackIds.zenExit = animationLoopManager.register(\r\n            animate,\r\n            AnimationPriority.MEDIUM, // Zen animations are medium priority\r\n            this\r\n        );\r\n            } else if (elapsed < straightenDuration + awakeDuration + expandDuration) {\r\n                // Phase 3: Horizontal expansion (sunrise)\r\n                const expandProgress = (elapsed - straightenDuration - awakeDuration) / expandDuration;\r\n                const expandEased = Math.sin(expandProgress * Math.PI / 2);\r\n                \r\n                this.zenTransition.scaleX = 1.0;\r\n                this.zenTransition.scaleY = 0.2 + (expandEased * 0.8); // Expand vertically back to 1.0 (sunrise)\r\n                this.state.driftY = -10 * (1 - expandProgress); // Return to center\r\n                this.state.glowIntensity = 1.5 - (0.5 * expandProgress); // Normal glow\r\n                \r\n                // Register with AnimationLoopManager\r\n        this.loopCallbackIds.zenExit = animationLoopManager.register(\r\n            animate,\r\n            AnimationPriority.MEDIUM, // Zen animations are medium priority\r\n            this\r\n        );\r\n            } else if (elapsed < straightenDuration + awakeDuration + expandDuration + settleDuration) {\r\n                // Phase 4: Final settle pulse\r\n                const settleProgress = (elapsed - straightenDuration - awakeDuration - expandDuration) / settleDuration;\r\n                const pulse = Math.sin(settleProgress * Math.PI);\r\n                \r\n                this.zenTransition.scaleX = 1.0 + (pulse * 0.05);\r\n                this.zenTransition.scaleY = 1.0 + (pulse * 0.05);\r\n                \r\n                // Register with AnimationLoopManager\r\n        this.loopCallbackIds.zenExit = animationLoopManager.register(\r\n            animate,\r\n            AnimationPriority.MEDIUM, // Zen animations are medium priority\r\n            this\r\n        );\r\n            } else {\r\n                // Complete - reset to normal\r\n                this.zenTransition.active = false;\r\n                this.zenTransition.phase = null;\r\n                this.zenTransition.scaleX = 1.0;\r\n                this.zenTransition.scaleY = 1.0;\r\n                this.zenTransition.arcHeight = 0;\r\n                this.zenTransition.lotusMorph = 0;\r\n                this.zenTransition.petalSpread = 0;\r\n                this.zenTransition.smileCurve = 0;\r\n                this.state.shakeOffset = 0;\r\n                this.state.driftY = 0;\r\n                // Clean up loop callback ID\r\n                this.loopCallbackIds.zenExit = null;\r\n            }\r\n        };\r\n        \r\n        // Register with AnimationLoopManager\r\n        this.loopCallbackIds.zenExit = animationLoopManager.register(\r\n            animate,\r\n            AnimationPriority.MEDIUM, // Zen animations are medium priority\r\n            this\r\n        );\r\n    }\r\n    \r\n    /**\r\n     * Start recording mode\r\n     */\r\n    startRecording() {\r\n        this.state.recording = true;\r\n    }\r\n    \r\n    /**\r\n     * Stop recording mode\r\n     */\r\n    stopRecording() {\r\n        this.state.recording = false;\r\n    }\r\n    \r\n    /**\r\n     * Get random blink time (2-6 seconds)\r\n     */\r\n    \r\n    /**\r\n     * Set whether blinking is enabled\r\n     * @param {boolean} enabled - Whether blinking should be enabled\r\n     */\r\n    setBlinkingEnabled(enabled) {\r\n        this.state.blinkingEnabled = enabled;\r\n        if (!enabled) {\r\n            // If disabling blinking, immediately stop any current blink\r\n            this.state.blinking = false;\r\n            // Reset blinking via EyeRenderer\r\n            this.eyeRenderer.blinking = false;\r\n            this.eyeRenderer.blinkTimer = 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set gaze tracking enabled state\r\n     * @param {boolean} enabled - Whether gaze tracking should be enabled\r\n     */\r\n    setGazeTracking(enabled) {\r\n        this.state.gazeTrackingEnabled = enabled;\r\n        if (enabled) {\r\n            // Start tracking mouse/touch position\r\n            if (!this.gazeTrackingInitialized) {\r\n                this.initGazeTracking();\r\n            }\r\n        } else {\r\n            // Reset gaze to center when disabled\r\n            this.state.gazeTarget = { x: 0, y: 0 };\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Initialize gaze tracking event listeners\r\n     */\r\n    initGazeTracking() {\r\n        // Always set up listeners once\r\n        if (this.gazeTrackingInitialized) return;\r\n\r\n        this.handleMouseMove = (e) => {\r\n            if (!this.state.gazeTrackingEnabled) return;\r\n\r\n            const rect = this.canvas.getBoundingClientRect();\r\n            const centerX = rect.width / 2;\r\n            const centerY = rect.height / 2;\r\n            const x = e.clientX - rect.left - centerX;\r\n            const y = e.clientY - rect.top - centerY;\r\n\r\n            // Normalize to -1 to 1 range\r\n            this.state.gazeTarget = {\r\n                x: x / centerX,\r\n                y: y / centerY\r\n            };\r\n        };\r\n\r\n        this.handleTouchMove = (e) => {\r\n            if (!this.state.gazeTrackingEnabled) return;\r\n\r\n            if (e.touches.length > 0) {\r\n                const touch = e.touches[0];\r\n                const rect = this.canvas.getBoundingClientRect();\r\n                const centerX = rect.width / 2;\r\n                const centerY = rect.height / 2;\r\n                const x = touch.clientX - rect.left - centerX;\r\n                const y = touch.clientY - rect.top - centerY;\r\n\r\n                // Normalize to -1 to 1 range\r\n                this.state.gazeTarget = {\r\n                    x: x / centerX,\r\n                    y: y / centerY\r\n                };\r\n            }\r\n        };\r\n\r\n        document.addEventListener('mousemove', this.handleMouseMove);\r\n        document.addEventListener('touchmove', this.handleTouchMove);\r\n        this.gazeTrackingInitialized = true;\r\n    }\r\n\r\n    /**\r\n     * Clean up gaze tracking event listeners\r\n     */\r\n    cleanupGazeTracking() {\r\n        if (!this.gazeTrackingInitialized) return;\r\n\r\n        if (this.handleMouseMove) {\r\n            document.removeEventListener('mousemove', this.handleMouseMove);\r\n        }\r\n        if (this.handleTouchMove) {\r\n            document.removeEventListener('touchmove', this.handleTouchMove);\r\n        }\r\n        this.gazeTrackingInitialized = false;\r\n    }\r\n\r\n    /**\r\n     * Reset canvas context to fix rendering artifacts after tab switch\r\n     */\r\n    resetCanvasContext() {\r\n        if (!this.canvas || !this.ctx) return;\r\n\r\n        // Save current dimensions\r\n        const width = this.canvas.width;\r\n        const height = this.canvas.height;\r\n\r\n        // Reset all canvas state\r\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n        this.ctx.globalAlpha = 1;\r\n        this.ctx.globalCompositeOperation = 'source-over';\r\n        this.ctx.imageSmoothingEnabled = true;\r\n        this.ctx.imageSmoothingQuality = 'high';\r\n\r\n        // Clear the entire canvas\r\n        this.ctx.clearRect(0, 0, width, height);\r\n\r\n        // Also reset offscreen canvas if it exists\r\n        if (this.offscreenCanvas && this.offscreenCtx) {\r\n            this.offscreenCtx.setTransform(1, 0, 0, 1, 0, 0);\r\n            this.offscreenCtx.globalAlpha = 1;\r\n            this.offscreenCtx.globalCompositeOperation = 'source-over';\r\n            this.offscreenCtx.imageSmoothingEnabled = true;\r\n            this.offscreenCtx.imageSmoothingQuality = 'high';\r\n            this.offscreenCtx.clearRect(0, 0, this.offscreenCanvas.width, this.offscreenCanvas.height);\r\n        }\r\n\r\n        // Reset context state manager if it exists\r\n        if (this.contextStateManager) {\r\n            this.contextStateManager.reset();\r\n        }\r\n\r\n        // Force a clean render on next frame\r\n        this.forceCleanRender = true;\r\n    }\r\n\r\n    /**\r\n     * Convert hex to rgba\r\n     */\r\n    hexToRgba(hex, alpha = 1) {\r\n        const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n        if (result) {\r\n            return `rgba(${parseInt(result[1], 16)}, ${parseInt(result[2], 16)}, ${parseInt(result[3], 16)}, ${alpha})`;\r\n        }\r\n        return `rgba(0, 0, 0, ${alpha})`;\r\n    }\r\n    \r\n    /**\r\n     * Set quality level for degradation manager compatibility\r\n     * @param {number} quality - Quality level (0-1)\r\n     */\r\n    setQualityLevel(quality) {\r\n        this.qualityLevel = Math.max(0, Math.min(1, quality));\r\n        \r\n        // Adjust rendering parameters based on quality\r\n        if (this.qualityLevel < 0.5) {\r\n            // Low quality mode\r\n            this.ctx.imageSmoothingEnabled = false;\r\n            this.state.breathDepth *= 0.5; // Reduce animation complexity\r\n        } else if (this.qualityLevel < 0.8) {\r\n            // Medium quality\r\n            this.ctx.imageSmoothingEnabled = true;\r\n            this.ctx.imageSmoothingQuality = 'medium';\r\n        } else {\r\n            // High quality\r\n            this.ctx.imageSmoothingEnabled = true;\r\n            this.ctx.imageSmoothingQuality = 'high';\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Set quality reduction (for degradation manager)\r\n     * @param {boolean} enabled - Whether quality reduction is enabled\r\n     */\r\n    setQualityReduction(enabled) {\r\n        if (enabled) {\r\n            this.setQualityLevel(0.5);\r\n        } else {\r\n            this.setQualityLevel(1.0);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Handle canvas context recovery\r\n     * @param {CanvasRenderingContext2D} newContext - New context after recovery\r\n     */\r\n    handleContextRecovery(newContext) {\r\n        this.ctx = newContext;\r\n    }\r\n    \r\n    /**\r\n     * Get the current undertone modifier for particle system\r\n     * @returns {Object|null} Current undertone modifier or null\r\n     */\r\n    getUndertoneModifier() {\r\n        // Use the new weighted method from state machine if available\r\n        if (this.stateMachine && this.stateMachine.getWeightedUndertoneModifiers) {\r\n            return this.stateMachine.getWeightedUndertoneModifiers();\r\n        }\r\n        \r\n        // Fallback to old method\r\n        if (!this.currentUndertone || !this.undertoneModifiers[this.currentUndertone]) {\r\n            return null;\r\n        }\r\n        return this.undertoneModifiers[this.currentUndertone];\r\n    }\r\n    \r\n    /**\r\n     * Apply all active gesture animations\r\n     * Returns combined transform object\r\n     */\r\n    // Gesture animations moved to GestureAnimator module\r\n    applyGestureAnimations() {\r\n        return this.gestureAnimator.applyGestureAnimations();\r\n    }\r\n      \r\n    /**\r\n     * Start a gesture animation - delegates to GestureAnimator\r\n     */\r\n    startGesture(gestureName) {\r\n        // Simply delegate to GestureAnimator\r\n        return this.gestureAnimator.startGesture(gestureName);\r\n    }\r\n    \r\n    /**\r\n     * Get current active gesture information for particle system\r\n     * @returns {Object|null} Current gesture with particleMotion and progress, or null\r\n     */\r\n    getCurrentGesture() {\r\n        // Delegate to GestureAnimator to get current gesture\r\n        return this.gestureAnimator.getCurrentGesture();\r\n    }\r\n    \r\n    // Individual start methods for each gesture - delegate to GestureAnimator\r\n    startBounce() { this.gestureAnimator.startBounce(); }\r\n    startPulse() { this.gestureAnimator.startPulse(); }\r\n    startShake() { this.gestureAnimator.startShake(); }\r\n    startSpin() { this.gestureAnimator.startSpin(); }\r\n    startNod() { this.gestureAnimator.startNod(); }\r\n    startTilt() { this.gestureAnimator.startTilt(); }\r\n    startExpand() { this.gestureAnimator.startExpand(); }\r\n    startContract() { this.gestureAnimator.startContract(); }\r\n    startFlash() { this.gestureAnimator.startFlash(); }\r\n    startDrift() { this.gestureAnimator.startDrift(); }\r\n    startStretch() { this.gestureAnimator.startStretch(); }\r\n    startGlow() { this.gestureAnimator.startGlow(); }\r\n    startFlicker() { this.gestureAnimator.startFlicker(); }\r\n    startVibrate() { this.gestureAnimator.startVibrate(); }\r\n    startOrbital() { this.gestureAnimator.startOrbital(); }\r\n    startHula() { this.gestureAnimator.startHula(); }\r\n    startWave() { this.gestureAnimator.startWave(); }\r\n    startBreathe() { this.gestureAnimator.startBreathe(); }\r\n    startMorph() { this.gestureAnimator.startMorph(); }\r\n    startSlowBlink() { this.gestureAnimator.startSlowBlink(); }\r\n    startLook() { this.gestureAnimator.startLook(); }\r\n    startSettle() { this.gestureAnimator.startSettle(); }\r\n    startBreathIn() { this.gestureAnimator.startBreathIn(); }\r\n    startBreathOut() { this.gestureAnimator.startBreathOut(); }\r\n    startBreathHold() { this.gestureAnimator.startBreathHold(); }\r\n    startBreathHoldEmpty() { this.gestureAnimator.startBreathHoldEmpty(); }\r\n    startJump() { this.gestureAnimator.startJump(); }\r\n    startSway() { this.gestureAnimator.startSway(); }\r\n    startFloat() { this.gestureAnimator.startFloat(); }\r\n    startRain() { this.gestureAnimator.startRain(); }\r\n    startRunningMan() { this.gestureAnimator.startRunningMan(); }\r\n    startCharleston() { this.gestureAnimator.startCharleston(); }\r\n\r\n    // Ambient dance animations\r\n    startGrooveSway(options) { this.ambientDanceAnimator.startAmbientAnimation('grooveSway', options); }\r\n    startGrooveBob(options) { this.ambientDanceAnimator.startAmbientAnimation('grooveBob', options); }\r\n    startGrooveFlow(options) { this.ambientDanceAnimator.startAmbientAnimation('grooveFlow', options); }\r\n    startGroovePulse(options) { this.ambientDanceAnimator.startAmbientAnimation('groovePulse', options); }\r\n    startGrooveStep(options) { this.ambientDanceAnimator.startAmbientAnimation('grooveStep', options); }\r\n    startSparkle() { this.gestureAnimator.startSparkle(); }\r\n    startShimmer() { this.gestureAnimator.startShimmer(); }\r\n    startWiggle() { this.gestureAnimator.startWiggle(); }\r\n    startGroove() { this.gestureAnimator.startGroove(); }\r\n    startPoint() { this.gestureAnimator.startPoint(); }\r\n    startLean() { this.gestureAnimator.startLean(); }\r\n    startReach() { this.gestureAnimator.startReach(); }\r\n    startHeadBob() { this.gestureAnimator.startHeadBob(); }\r\n    startOrbit() { this.gestureAnimator.startOrbit(); }\r\n    \r\n    /**\r\n     * Stop all active gestures - delegates to GestureAnimator\r\n     */\r\n    stopAllGestures() {\r\n        this.gestureAnimator.stopAllGestures();\r\n        this.currentGesture = null;\r\n    }\r\n    \r\n    /**\r\n     * Check if any gesture is active - delegates to GestureAnimator\r\n     */\r\n    isGestureActive() {\r\n        return Object.values(this.gestureAnimator.gestureAnimations).some(anim => anim.active);\r\n    }\r\n    \r\n    /**\r\n     * Clean up resources\r\n     */\r\n    destroy() {\r\n        // Cancel all animation frames to prevent memory leaks\r\n        for (const key in this.animationFrameIds) {\r\n            if (this.animationFrameIds[key]) {\r\n                cancelAnimationFrame(this.animationFrameIds[key]);\r\n                this.animationFrameIds[key] = null;\r\n            }\r\n        }\r\n        \r\n        // Clear animation states\r\n        this.colorTransition.active = false;\r\n        if (this.zenTransition) {\r\n            this.zenTransition.active = false;\r\n        }\r\n        \r\n        // Clear other resources\r\n        this.speakingRings = [];\r\n        \r\n        // Clear gesture compositor cache\r\n        if (this.gestureCompositor) {\r\n            this.gestureCompositor.clearCache();\r\n        }\r\n    }\r\n}\r\n\r\nexport default EmotiveRenderer;","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE\n *  └─○═╝                                                                             \n *                       ◐ ◑ ◒ ◓  GAZE TRACKER  ◓ ◒ ◑ ◐                       \n *                                                                                    \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Gaze Tracker - Interactive Eye Following & Cursor Awareness\n * @author Emotive Engine Team\n * @version 2.1.0\n * @module GazeTracker\n * @changelog 2.1.0 - Cached canvas rect to eliminate reflows on mouse/touch moves\n * \n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                                   PURPOSE                                         \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ Brings the orb to LIFE by making it aware of your cursor. Creates natural         \n * ║ eye-following behavior with smooth interpolation. When you move close,            \n * ║ the orb \"looks\" at you. Move away, and it relaxes back to center.                 \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n *\n * ┌───────────────────────────────────────────────────────────────────────────────────\n * │ 👁️ GAZE BEHAVIORS                                                                \n * ├───────────────────────────────────────────────────────────────────────────────────\n * │ • Smooth following with linear interpolation (lerp)                               \n * │ • Proximity-based engagement (closer = more response)                             \n * │ • Center lock when cursor is very close                                           \n * │ • Boundary constraints to keep pupils inside orb                                  \n * │ • Touch and mouse support                                                         \n * └───────────────────────────────────────────────────────────────────────────────────\n *\n * ┌───────────────────────────────────────────────────────────────────────────────────\n * │ 🎮 CONFIGURATION                                                                   \n * ├───────────────────────────────────────────────────────────────────────────────────\n * │ • smoothing       : 0.1 (lerp factor, 0.05-0.15 recommended)                      \n * │ • maxOffset       : 0.3 (max gaze offset as % of core radius)                     \n * │ • lockDistance    : 30px (distance to trigger center lock)                        \n * │ • boundaryPadding : 0.8 (keep gaze within 80% of core)                            \n * └───────────────────────────────────────────────────────────────────────────────────\n *\n * ════════════════════════════════════════════════════════════════════════════════════\n */\n\nclass GazeTracker {\n    constructor(canvas, options = {}) {\n        this.canvas = canvas;\n        \n        // Configuration\n        this.config = {\n            smoothing: options.smoothing || 0.1,  // Lerp factor (0.05-0.15 recommended)\n            maxOffset: options.maxOffset || 0.3,  // Max gaze offset (30% of core radius)\n            lockDistance: options.lockDistance || 30,  // Pixels from center to trigger lock\n            enabled: options.enabled !== false,\n            boundaryPadding: options.boundaryPadding || 0.8  // Keep gaze within 80% of core\n        };\n        \n        // State\n        this.canvasCenter = { x: 0, y: 0 };\n        this.mousePos = { x: 0, y: 0 };  // Will be initialized to center after updateCanvasCenter\n        this.targetGaze = { x: 0, y: 0 };\n        this.currentGaze = { x: 0, y: 0 };\n        this.isLocked = false;\n        this.proximity = 0;  // 0-1 value for how close cursor is\n        \n        // Cache canvas rect to avoid reflows\n        this.cachedRect = null;\n        \n        // Touch state\n        this.touches = new Map();\n        this.primaryTouch = null;\n        \n        // Bind event handlers\n        this.handleMouseMove = this.handleMouseMove.bind(this);\n        this.handleMouseLeave = this.handleMouseLeave.bind(this);\n        this.handleTouchStart = this.handleTouchStart.bind(this);\n        this.handleTouchMove = this.handleTouchMove.bind(this);\n        this.handleTouchEnd = this.handleTouchEnd.bind(this);\n        \n        // Interaction callback\n        this.onInteraction = null;\n        \n        // Initialize\n        this.updateCanvasCenter();\n        this.attachEventListeners();\n        \n        // Handle canvas resize\n        this.resizeObserver = new ResizeObserver(() => {\n            this.updateCanvasCenter();\n        });\n        this.resizeObserver.observe(this.canvas);\n    }\n    \n    /**\n     * Update canvas center point\n     */\n    updateCanvasCenter() {\n        // Cache the rect to avoid repeated reflows\n        this.cachedRect = this.canvas.getBoundingClientRect();\n        this.canvasCenter = {\n            x: this.cachedRect.width / 2,\n            y: this.cachedRect.height / 2\n        };\n        // Initialize mouse position to center if not set\n        if (this.mousePos.x === 0 && this.mousePos.y === 0) {\n            this.mousePos = { x: this.canvasCenter.x, y: this.canvasCenter.y };\n        }\n    }\n    \n    /**\n     * Attach event listeners\n     */\n    attachEventListeners() {\n        if (!this.config.enabled) return;\n        \n        // Mouse events\n        this.canvas.addEventListener('mousemove', this.handleMouseMove);\n        this.canvas.addEventListener('mouseleave', this.handleMouseLeave);\n        \n        // Touch events\n        this.canvas.addEventListener('touchstart', this.handleTouchStart, { passive: true });\n        this.canvas.addEventListener('touchmove', this.handleTouchMove, { passive: true });\n        this.canvas.addEventListener('touchend', this.handleTouchEnd, { passive: true });\n        this.canvas.addEventListener('touchcancel', this.handleTouchEnd, { passive: true });\n    }\n    \n    /**\n     * Handle mouse movement\n     */\n    handleMouseMove(event) {\n        // Use cached rect to avoid reflow on every mouse move\n        const rect = this.cachedRect || this.canvas.getBoundingClientRect();\n        this.mousePos = {\n            x: event.clientX - rect.left,\n            y: event.clientY - rect.top\n        };\n        this.updateTargetGaze();\n        \n        // Notify of interaction\n        if (this.onInteraction) {\n            this.onInteraction('mouse');\n        }\n    }\n    \n    /**\n     * Handle mouse leave\n     */\n    handleMouseLeave() {\n        // Return gaze to center when mouse leaves\n        this.targetGaze = { x: 0, y: 0 };\n        this.isLocked = false;\n        this.proximity = 0;\n        // Reset mouse position to center when leaving\n        this.mousePos = { x: this.canvasCenter.x, y: this.canvasCenter.y };\n    }\n    \n    /**\n     * Handle touch start\n     */\n    handleTouchStart(event) {\n        for (const touch of event.changedTouches) {\n            this.touches.set(touch.identifier, {\n                x: touch.clientX,\n                y: touch.clientY\n            });\n            \n            // Set first touch as primary\n            if (!this.primaryTouch && this.touches.size === 1) {\n                this.primaryTouch = touch.identifier;\n            }\n        }\n        \n        if (this.primaryTouch !== null) {\n            this.updateTouchPosition(event.touches);\n        }\n    }\n    \n    /**\n     * Handle touch move\n     */\n    handleTouchMove(event) {\n        for (const touch of event.changedTouches) {\n            if (this.touches.has(touch.identifier)) {\n                this.touches.set(touch.identifier, {\n                    x: touch.clientX,\n                    y: touch.clientY\n                });\n            }\n        }\n        \n        if (this.primaryTouch !== null) {\n            this.updateTouchPosition(event.touches);\n            \n            // Notify of interaction\n            if (this.onInteraction) {\n                this.onInteraction('touch');\n            }\n        }\n    }\n    \n    /**\n     * Handle touch end\n     */\n    handleTouchEnd(event) {\n        for (const touch of event.changedTouches) {\n            this.touches.delete(touch.identifier);\n            \n            // Reset primary touch if it ended\n            if (touch.identifier === this.primaryTouch) {\n                this.primaryTouch = null;\n                \n                // Select new primary touch if available\n                if (this.touches.size > 0) {\n                    this.primaryTouch = this.touches.keys().next().value;\n                } else {\n                    // No touches left, return to center\n                    this.handleMouseLeave();\n                }\n            }\n        }\n    }\n    \n    /**\n     * Update position from touch\n     */\n    updateTouchPosition(touches) {\n        for (const touch of touches) {\n            if (touch.identifier === this.primaryTouch) {\n                // Use cached rect to avoid reflow on every touch move\n                const rect = this.cachedRect || this.canvas.getBoundingClientRect();\n                this.mousePos = {\n                    x: touch.clientX - rect.left,\n                    y: touch.clientY - rect.top\n                };\n                this.updateTargetGaze();\n                break;\n            }\n        }\n    }\n    \n    /**\n     * Calculate target gaze position based on mouse/touch position\n     */\n    updateTargetGaze() {\n        // Calculate vector from center to mouse\n        const dx = this.mousePos.x - this.canvasCenter.x;\n        const dy = this.mousePos.y - this.canvasCenter.y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        \n        // Calculate proximity (0-1, closer = higher)\n        const maxDistance = Math.min(this.canvasCenter.x, this.canvasCenter.y);\n        this.proximity = Math.max(0, 1 - (distance / maxDistance));\n        \n        // Check for gaze lock (very close to center)\n        this.isLocked = distance < this.config.lockDistance;\n        \n        if (this.isLocked) {\n            // When locked, gaze moves more dramatically\n            this.targetGaze = {\n                x: dx * this.config.maxOffset * 2,\n                y: dy * this.config.maxOffset * 2\n            };\n        } else {\n            // Normal gaze following with boundary constraints\n            const maxOffset = Math.min(this.canvasCenter.x, this.canvasCenter.y) * this.config.maxOffset;\n            \n            if (distance > 0) {\n                // Normalize and apply max offset\n                const factor = Math.min(1, distance / maxDistance);\n                this.targetGaze = {\n                    x: (dx / distance) * maxOffset * factor * this.config.boundaryPadding,\n                    y: (dy / distance) * maxOffset * factor * this.config.boundaryPadding\n                };\n            } else {\n                this.targetGaze = { x: 0, y: 0 };\n            }\n        }\n    }\n    \n    /**\n     * Update gaze position with smooth interpolation\n     * @param {number} deltaTime - Time since last update in ms\n     */\n    update(deltaTime) {\n        if (!this.config.enabled) return;\n        \n        // Smooth interpolation towards target\n        const smoothing = 1 - Math.pow(1 - this.config.smoothing, deltaTime / 16.67); // Normalize to 60fps\n        \n        this.currentGaze.x += (this.targetGaze.x - this.currentGaze.x) * smoothing;\n        this.currentGaze.y += (this.targetGaze.y - this.currentGaze.y) * smoothing;\n        \n        // Add micro jitter when locked for liveliness\n        if (this.isLocked) {\n            const jitter = 0.5;\n            this.currentGaze.x += (Math.random() - 0.5) * jitter;\n            this.currentGaze.y += (Math.random() - 0.5) * jitter;\n        }\n    }\n    \n    /**\n     * Get current gaze offset for rendering\n     * @param {number} coreRadius - The radius of the core\n     * @returns {Object} Gaze offset {x, y}\n     */\n    getGazeOffset(coreRadius) {\n        return {\n            x: this.currentGaze.x,\n            y: this.currentGaze.y\n        };\n    }\n    \n    /**\n     * Get current state\n     * @returns {Object} Current gaze state\n     */\n    getState() {\n        return {\n            gaze: { ...this.currentGaze },\n            target: { ...this.targetGaze },\n            proximity: this.proximity,\n            isLocked: this.isLocked,\n            isActive: this.config.enabled\n        };\n    }\n    \n    /**\n     * Enable gaze tracking\n     */\n    enable() {\n        if (!this.config.enabled) {\n            this.config.enabled = true;\n            this.attachEventListeners();\n        }\n    }\n    \n    /**\n     * Disable gaze tracking\n     */\n    disable() {\n        if (this.config.enabled) {\n            this.config.enabled = false;\n            this.detachEventListeners();\n            this.targetGaze = { x: 0, y: 0 };\n        }\n    }\n    \n    /**\n     * Detach event listeners\n     */\n    detachEventListeners() {\n        this.canvas.removeEventListener('mousemove', this.handleMouseMove);\n        this.canvas.removeEventListener('mouseleave', this.handleMouseLeave);\n        this.canvas.removeEventListener('touchstart', this.handleTouchStart);\n        this.canvas.removeEventListener('touchmove', this.handleTouchMove);\n        this.canvas.removeEventListener('touchend', this.handleTouchEnd);\n        this.canvas.removeEventListener('touchcancel', this.handleTouchEnd);\n    }\n    \n    /**\n     * Set interaction callback\n     * @param {Function} callback - Function to call on interaction\n     */\n    setInteractionCallback(callback) {\n        this.onInteraction = callback;\n    }\n    \n    /**\n     * Clean up resources\n     */\n    destroy() {\n        this.detachEventListeners();\n        if (this.resizeObserver) {\n            this.resizeObserver.disconnect();\n        }\n        this.touches.clear();\n    }\n}\n\nexport default GazeTracker;","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE\n *  └─○═╝                                                                             \n *                       ◐ ◑ ◒ ◓  IDLE BEHAVIOR  ◓ ◒ ◑ ◐                       \n *                                                                                    \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Idle Behavior - Organic Life Through Subtle Animations\n * @author Emotive Engine Team\n * @version 2.0.0\n * @module IdleBehavior\n * \n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                                   PURPOSE                                         \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ Makes the orb feel ALIVE even when you're not interacting. Random blinks,         \n * ║ subtle swaying, gentle breathing - all the little unconscious movements           \n * ║ that make something feel like it has a soul rather than just code.                \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n *\n * ┌───────────────────────────────────────────────────────────────────────────────────\n * │ 😴 IDLE ANIMATIONS                                                                \n * ├───────────────────────────────────────────────────────────────────────────────────\n * │ • Blinking     : Random intervals (3-7 seconds)                                   \n * │ • Swaying      : Subtle drift (20-40 second intervals)                            \n * │ • Breathing    : Continuous gentle pulsing                                        \n * │ • Sleep Mode   : After timeout (default: never)                                   \n * │ • Weight Shift : Occasional position adjustments                                  \n * └───────────────────────────────────────────────────────────────────────────────────\n *\n * ┌───────────────────────────────────────────────────────────────────────────────────\n * │ ⏱️ TIMING CONFIGURATION                                                             \n * ├───────────────────────────────────────────────────────────────────────────────────\n * │ BEHAVIOR       MIN TIME    MAX TIME    DURATION                                  \n * │ Blinking       3000ms      7000ms      150ms                                     \n * │ Swaying        20000ms     40000ms     4000ms                                    \n * │ Sleep          Infinity    -            -                                        \n * │ Breathing      continuous  -            0.25 rad/s                               \n * └───────────────────────────────────────────────────────────────────────────────────\n *\n * ════════════════════════════════════════════════════════════════════════════════════\n */\n\nclass IdleBehavior {\n    constructor(options = {}) {\n        // Configuration\n        this.config = {\n            blinkInterval: options.blinkInterval || { min: 3000, max: 7000 }, // ms - less frequent\n            blinkDuration: options.blinkDuration || 150, // ms\n            swayInterval: options.swayInterval || { min: 20000, max: 40000 }, // ms - very infrequent weight shifts\n            swayDuration: options.swayDuration || 4000, // ms - very slow, smooth transition\n            swayIntensity: options.swayIntensity || 1.5, // pixels - extremely subtle drift\n            sleepTimeout: options.sleepTimeout !== undefined ? options.sleepTimeout : Infinity, // Default: never auto-sleep\n            breathingSpeed: options.breathingSpeed || 0.25, // radians per second\n            breathingDepth: options.breathingDepth || 0.1, // 10% size variation\n            enabled: options.enabled !== false\n        };\n        \n        // State\n        this.state = {\n            isBlinking: false,\n            isSwaying: false,\n            isAsleep: false,\n            breathingPhase: 0,\n            breathRate: 1.0,\n            breathDepth: this.config.breathingDepth\n        };\n        \n        // Timers\n        this.timers = {\n            idle: 0,\n            blink: 0,\n            sway: 0,\n            swayProgress: 0,  // 0 to 1 progress through sway animation\n            nextBlink: this.getRandomInterval('blink'),\n            nextSway: this.getRandomInterval('sway')\n        };\n        \n        // Sway state - smooth weight shift\n        this.swayOffset = { x: 0, y: 0 };\n        this.swayTarget = { x: 0, y: 0 };\n        this.swayStart = { x: 0, y: 0 };\n        \n        // Callbacks\n        this.callbacks = {\n            onBlink: null,\n            onSway: null,\n            onSleep: null,\n            onWake: null\n        };\n        \n    }\n    \n    /**\n     * Update idle behaviors\n     * @param {number} deltaTime - Time since last update in ms\n     */\n    update(deltaTime) {\n        if (!this.config.enabled) return;\n        \n        // Update breathing\n        this.updateBreathing(deltaTime);\n        \n        // Update idle timer\n        this.timers.idle += deltaTime;\n        \n        // Check for sleep\n        if (!this.state.isAsleep && this.timers.idle >= this.config.sleepTimeout) {\n            this.enterSleep();\n        }\n        \n        // Update blinking (only when awake)\n        if (!this.state.isAsleep) {\n            this.updateBlinking(deltaTime);\n        }\n        \n        // Update swaying (only when awake)\n        if (!this.state.isAsleep) {\n            this.updateSwaying(deltaTime);\n        }\n    }\n    \n    /**\n     * Update breathing animation\n     */\n    updateBreathing(deltaTime) {\n        const speed = this.config.breathingSpeed * this.state.breathRate;\n        this.state.breathingPhase += (speed * deltaTime) / 1000;\n        \n        // Keep phase in reasonable range\n        if (this.state.breathingPhase > Math.PI * 2) {\n            this.state.breathingPhase -= Math.PI * 2;\n        }\n    }\n    \n    /**\n     * Update blinking behavior\n     */\n    updateBlinking(deltaTime) {\n        // Check if blinking is disabled\n        if (!this.isBlinkingEnabled()) {\n            return;\n        }\n        \n        if (!this.state.isBlinking) {\n            // Wait for next blink\n            this.timers.blink += deltaTime;\n            if (this.timers.blink >= this.timers.nextBlink) {\n                this.startBlink();\n            }\n        } else {\n            // Currently blinking\n            this.timers.blink += deltaTime;\n            if (this.timers.blink >= this.config.blinkDuration) {\n                this.endBlink();\n            }\n        }\n    }\n    \n    /**\n     * Update swaying behavior (smooth weight shift)\n     */\n    updateSwaying(deltaTime) {\n        if (!this.state.isSwaying) {\n            // Wait for next sway\n            this.timers.sway += deltaTime;\n            if (this.timers.sway >= this.timers.nextSway) {\n                this.startSway();\n            }\n        } else {\n            // Currently swaying - smooth interpolation\n            this.timers.sway += deltaTime;\n            const progress = Math.min(this.timers.sway / this.config.swayDuration, 1);\n            \n            // Use sine wave for smooth in-out easing\n            const easedProgress = (Math.sin((progress - 0.5) * Math.PI) + 1) / 2;\n            \n            // Interpolate between start and target positions\n            this.swayOffset.x = this.swayStart.x + (this.swayTarget.x - this.swayStart.x) * easedProgress;\n            this.swayOffset.y = this.swayStart.y + (this.swayTarget.y - this.swayStart.y) * easedProgress;\n            \n            if (progress >= 1) {\n                this.endSway();\n            }\n        }\n    }\n    \n    /**\n     * Start a blink\n     */\n    startBlink() {\n        this.state.isBlinking = true;\n        this.timers.blink = 0;\n        \n        if (this.callbacks.onBlink) {\n            this.callbacks.onBlink({ phase: 'start' });\n        }\n    }\n    \n    /**\n     * End a blink\n     */\n    endBlink() {\n        this.state.isBlinking = false;\n        this.timers.blink = 0;\n        this.timers.nextBlink = this.getRandomInterval('blink');\n        \n        if (this.callbacks.onBlink) {\n            this.callbacks.onBlink({ phase: 'end' });\n        }\n    }\n    \n    /**\n     * Start a sway (smooth weight shift)\n     */\n    startSway() {\n        this.state.isSwaying = true;\n        this.timers.sway = 0;\n        \n        // Save current position as start\n        this.swayStart = { ...this.swayOffset };\n        \n        // Generate subtle target offset - like shifting weight\n        // Favor horizontal movement (side to side weight shift)\n        const angle = Math.random() * Math.PI * 2;\n        const distance = this.config.swayIntensity * (0.5 + Math.random() * 0.5);\n        this.swayTarget = {\n            x: Math.cos(angle) * distance * 1.5,  // Slightly more horizontal\n            y: Math.sin(angle) * distance * 0.5   // Less vertical\n        };\n        \n        if (this.callbacks.onSway) {\n            this.callbacks.onSway({ \n                phase: 'start',\n                offset: this.swayOffset\n            });\n        }\n    }\n    \n    /**\n     * End a sway\n     */\n    endSway() {\n        this.state.isSwaying = false;\n        this.timers.sway = 0;\n        this.timers.nextSway = this.getRandomInterval('sway');\n        \n        // Start position for next sway is current position\n        this.swayStart = { ...this.swayOffset };\n        \n        if (this.callbacks.onSway) {\n            this.callbacks.onSway({ \n                phase: 'end',\n                offset: this.swayOffset\n            });\n        }\n    }\n    \n    /**\n     * Enter sleep mode\n     */\n    enterSleep() {\n        this.state.isAsleep = true;\n        this.state.breathRate = 0.5; // Slower breathing\n        this.state.breathDepth = 0.15; // Deeper breaths\n        \n        // Force end any active blink\n        if (this.state.isBlinking) {\n            this.state.isBlinking = false;\n            this.timers.blink = 0;\n            if (this.callbacks.onBlink) {\n                this.callbacks.onBlink({ phase: 'end' });\n            }\n        }\n        \n        \n        if (this.callbacks.onSleep) {\n            this.callbacks.onSleep();\n        }\n    }\n    \n    /**\n     * Wake up from sleep\n     */\n    wakeUp() {\n        if (!this.state.isAsleep) return;\n        \n        this.state.isAsleep = false;\n        this.state.breathRate = 1.0;\n        this.state.breathDepth = this.config.breathingDepth;\n        this.timers.idle = 0; // Reset idle timer\n        \n        \n        // Trigger a shake animation\n        if (this.callbacks.onWake) {\n            this.callbacks.onWake();\n        }\n        \n        // Quick twitch series for wake animation\n        this.performWakeAnimation();\n    }\n    \n    /**\n     * Perform wake-up animation\n     */\n    performWakeAnimation() {\n        // Gentle stretch animation when waking\n        const stretchOffset = {\n            x: this.config.swayIntensity * 0.5,\n            y: -this.config.swayIntensity  // Slight upward stretch\n        };\n        \n        // Animate from current position to stretch and back\n        this.swayStart = { ...this.swayOffset };\n        this.swayTarget = stretchOffset;\n        this.state.isSwaying = true;\n        this.timers.sway = 0;\n        \n        if (this.callbacks.onSway) {\n            this.callbacks.onSway({ \n                phase: 'wake',\n                offset: this.swayOffset\n            });\n        }\n        \n        // Return to neutral after stretch\n        setTimeout(() => {\n            this.swayStart = { ...this.swayOffset };\n            this.swayTarget = { x: 0, y: 0 };\n            this.timers.sway = 0;\n        }, 1000);\n    }\n    \n    /**\n     * Reset idle timer (called on user interaction)\n     */\n    resetIdleTimer() {\n        this.timers.idle = 0;\n        if (this.state.isAsleep) {\n            this.wakeUp();\n        }\n    }\n    \n    /**\n     * Enable or disable blinking\n     * @param {boolean} enabled - Whether blinking should be enabled\n     */\n    setBlinkingEnabled(enabled) {\n        this.config.blinkingEnabled = enabled;\n        if (!enabled && this.state.isBlinking) {\n            // If currently blinking, finish the blink\n            this.endBlink();\n        }\n    }\n    \n    /**\n     * Check if blinking is enabled\n     * @returns {boolean} Whether blinking is enabled\n     */\n    isBlinkingEnabled() {\n        return this.config.blinkingEnabled !== false;\n    }\n    \n    /**\n     * Get breathing factor for current phase\n     * @returns {number} Breathing factor (0.9 - 1.1 typically)\n     */\n    getBreathingFactor() {\n        return 1 + Math.sin(this.state.breathingPhase) * this.state.breathDepth * this.state.breathRate;\n    }\n    \n    /**\n     * Get blink progress (0-1)\n     * @returns {number} Blink progress\n     */\n    getBlinkProgress() {\n        if (!this.state.isBlinking) return 0;\n        return Math.min(this.timers.blink / this.config.blinkDuration, 1);\n    }\n    \n    /**\n     * Get current sway offset\n     * @returns {Object} Sway offset {x, y}\n     */\n    getSwayOffset() {\n        return this.swayOffset || { x: 0, y: 0 };\n    }\n    \n    /**\n     * Get random interval for behavior\n     */\n    getRandomInterval(type) {\n        const interval = this.config[`${type}Interval`];\n        return interval.min + Math.random() * (interval.max - interval.min);\n    }\n    \n    /**\n     * Set callback for behavior events\n     */\n    setCallback(event, callback) {\n        if (this.callbacks.hasOwnProperty(event)) {\n            this.callbacks[event] = callback;\n        }\n    }\n    \n    /**\n     * Get current state\n     */\n    getState() {\n        return {\n            ...this.state,\n            breathingFactor: this.getBreathingFactor(),\n            blinkProgress: this.getBlinkProgress(),\n            swayOffset: this.getSwayOffset()\n        };\n    }\n    \n    /**\n     * Enable idle behaviors\n     */\n    enable() {\n        this.config.enabled = true;\n    }\n    \n    /**\n     * Disable idle behaviors\n     */\n    disable() {\n        this.config.enabled = false;\n        this.state.isBlinking = false;\n        this.state.isSwaying = false;\n        this.swayOffset = { x: 0, y: 0 };\n    }\n    \n    /**\n     * Clean up\n     */\n    destroy() {\n        this.callbacks = {\n            onBlink: null,\n            onSway: null,\n            onSleep: null,\n            onWake: null\n        };\n    }\n}\n\nexport default IdleBehavior;","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE\n *  └─○═╝                                                                             \n *                      ♪ ♫ ♬ ♭  MUSIC THEORY SYSTEM  ♭ ♬ ♫ ♪                      \n *                                                                                    \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Music Theory System - Musical Intelligence & Harmonic Generation\n * @author Emotive Engine Team\n * @version 1.0.0\n * @module MusicTheory\n * \n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                                   PURPOSE                                         \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ The MUSICAL BRAIN of the system. Provides comprehensive music theory utilities    \n * ║ for generating scales, chords, progressions, and harmonic relationships that      \n * ║ respond to emotional states and user interactions.                                \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n *\n * ┌───────────────────────────────────────────────────────────────────────────────────\n * │ 🎼 MUSIC THEORY FEATURES                                                          \n * ├───────────────────────────────────────────────────────────────────────────────────\n * │ • Note frequency calculation (Equal Temperament)                                  \n * │ • Scale generation (Major, Minor, Modal, Exotic)                                  \n * │ • Chord construction (Triads, 7ths, Extensions)                                   \n * │ • Circle of Fifths navigation                                                     \n * │ • Interval relationships                                                          \n * │ • Chord progression generation                                                    \n * │ • Key signature management                                                        \n * │ • Emotion-to-mode mapping                                                         \n * └───────────────────────────────────────────────────────────────────────────────────\n *\n * ════════════════════════════════════════════════════════════════════════════════════\n */\n\nclass MusicTheory {\n    constructor() {\n        // A4 = 440Hz standard tuning\n        this.A4_FREQUENCY = 440;\n        \n        // Note names in chromatic scale\n        this.NOTES = ['C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#', 'A', 'A#', 'B'];\n        \n        // Interval definitions (in semitones)\n        this.INTERVALS = {\n            unison: 0,\n            minorSecond: 1,\n            majorSecond: 2,\n            minorThird: 3,\n            majorThird: 4,\n            perfectFourth: 5,\n            tritone: 6,\n            perfectFifth: 7,\n            minorSixth: 8,\n            majorSixth: 9,\n            minorSeventh: 10,\n            majorSeventh: 11,\n            octave: 12\n        };\n        \n        // Scale patterns (in semitones from root)\n        this.SCALES = {\n            // Traditional scales\n            major: [0, 2, 4, 5, 7, 9, 11],\n            naturalMinor: [0, 2, 3, 5, 7, 8, 10],\n            harmonicMinor: [0, 2, 3, 5, 7, 8, 11],\n            melodicMinor: [0, 2, 3, 5, 7, 9, 11],\n            \n            // Modes\n            ionian: [0, 2, 4, 5, 7, 9, 11],      // Major\n            dorian: [0, 2, 3, 5, 7, 9, 10],      // Minor with raised 6th\n            phrygian: [0, 1, 3, 5, 7, 8, 10],    // Spanish/Flamenco feel\n            lydian: [0, 2, 4, 6, 7, 9, 11],      // Dreamy, ethereal\n            mixolydian: [0, 2, 4, 5, 7, 9, 10],  // Bluesy major\n            aeolian: [0, 2, 3, 5, 7, 8, 10],     // Natural minor\n            locrian: [0, 1, 3, 5, 6, 8, 10],     // Diminished, unstable\n            \n            // Pentatonic scales\n            majorPentatonic: [0, 2, 4, 7, 9],\n            minorPentatonic: [0, 3, 5, 7, 10],\n            \n            // Exotic scales\n            blues: [0, 3, 5, 6, 7, 10],\n            chromatic: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11],\n            wholeHalfDiminished: [0, 2, 3, 5, 6, 8, 9, 11],\n            arabic: [0, 1, 4, 5, 7, 8, 11],       // Hijaz scale\n            japanese: [0, 1, 5, 7, 8],            // Hirajoshi scale\n            hungarian: [0, 2, 3, 6, 7, 8, 11],    // Hungarian minor\n            bebopMajor: [0, 2, 4, 5, 7, 8, 9, 11] // Jazz bebop\n        };\n        \n        // Chord patterns (intervals from root)\n        this.CHORDS = {\n            // Triads\n            major: [0, 4, 7],\n            minor: [0, 3, 7],\n            diminished: [0, 3, 6],\n            augmented: [0, 4, 8],\n            sus2: [0, 2, 7],\n            sus4: [0, 5, 7],\n            \n            // Seventh chords\n            maj7: [0, 4, 7, 11],\n            min7: [0, 3, 7, 10],\n            dom7: [0, 4, 7, 10],\n            min7b5: [0, 3, 6, 10],\n            dim7: [0, 3, 6, 9],\n            \n            // Extended chords\n            maj9: [0, 4, 7, 11, 14],\n            min9: [0, 3, 7, 10, 14],\n            dom9: [0, 4, 7, 10, 14],\n            add9: [0, 4, 7, 14],\n            maj11: [0, 4, 7, 11, 14, 17],\n            min11: [0, 3, 7, 10, 14, 17],\n            maj13: [0, 4, 7, 11, 14, 17, 21],\n            min13: [0, 3, 7, 10, 14, 17, 21]\n        };\n        \n        // Emotion to musical mode mapping\n        this.EMOTION_MODES = {\n            excited: {\n                scale: 'lydian',\n                tempo: 140,\n                dynamics: 'forte',\n                articulation: 'staccato'\n            },\n            calm: {\n                scale: 'major',\n                tempo: 60,\n                dynamics: 'piano',\n                articulation: 'legato'\n            },\n            curious: {\n                scale: 'mixolydian',\n                tempo: 100,\n                dynamics: 'mezzoForte',\n                articulation: 'tenuto'\n            },\n            sleepy: {\n                scale: 'aeolian',\n                tempo: 50,\n                dynamics: 'pianissimo',\n                articulation: 'legato'\n            },\n            alert: {\n                scale: 'dorian',\n                tempo: 120,\n                dynamics: 'forte',\n                articulation: 'marcato'\n            },\n            pleased: {\n                scale: 'majorPentatonic',\n                tempo: 90,\n                dynamics: 'mezzoForte',\n                articulation: 'legato'\n            },\n            confused: {\n                scale: 'wholeHalfDiminished',\n                tempo: 80,\n                dynamics: 'mezzoPiano',\n                articulation: 'rubato'\n            },\n            energetic: {\n                scale: 'bebopMajor',\n                tempo: 160,\n                dynamics: 'fortissimo',\n                articulation: 'staccato'\n            },\n            melancholy: {\n                scale: 'harmonicMinor',\n                tempo: 70,\n                dynamics: 'mezzoPiano',\n                articulation: 'legato'\n            },\n            playful: {\n                scale: 'blues',\n                tempo: 110,\n                dynamics: 'mezzoForte',\n                articulation: 'swing'\n            }\n        };\n        \n        // Common chord progressions\n        this.PROGRESSIONS = {\n            // Pop/Rock progressions\n            I_V_vi_IV: [1, 5, 6, 4],           // Most common pop progression\n            I_IV_V: [1, 4, 5],                 // Classic rock/blues\n            ii_V_I: [2, 5, 1],                 // Jazz standard\n            I_vi_IV_V: [1, 6, 4, 5],           // 50s doo-wop\n            vi_IV_I_V: [6, 4, 1, 5],           // Alternative pop\n            \n            // Jazz progressions\n            I_VI_ii_V: [1, 6, 2, 5],           // Rhythm changes A\n            iii_vi_ii_V: [3, 6, 2, 5],         // Turnaround\n            I_ii_iii_IV: [1, 2, 3, 4],         // Modal jazz\n            \n            // Blues progressions\n            I_I_I_I_IV_IV_I_I_V_IV_I_V: [1, 1, 1, 1, 4, 4, 1, 1, 5, 4, 1, 5], // 12-bar blues\n            \n            // Modal progressions\n            i_VII_VI_VII: [1, 7, 6, 7],        // Aeolian vamp\n            I_II_IV_I: [1, 2, 4, 1],           // Lydian progression\n        };\n    }\n    \n    /**\n     * Convert note name to MIDI note number\n     * @param {string} note - Note name (e.g., 'C4', 'A#3')\n     * @returns {number} MIDI note number\n     */\n    noteToMidi(note) {\n        const noteName = note.slice(0, -1);\n        const octave = parseInt(note.slice(-1));\n        const noteIndex = this.NOTES.indexOf(noteName);\n        \n        if (noteIndex === -1) {\n            throw new Error(`Invalid note: ${note}`);\n        }\n        \n        // C4 = MIDI 60\n        return (octave + 1) * 12 + noteIndex;\n    }\n    \n    /**\n     * Convert MIDI note number to frequency\n     * @param {number} midiNote - MIDI note number\n     * @returns {number} Frequency in Hz\n     */\n    midiToFrequency(midiNote) {\n        // f = 440 * 2^((n - 69) / 12)\n        return this.A4_FREQUENCY * Math.pow(2, (midiNote - 69) / 12);\n    }\n    \n    /**\n     * Convert note name to frequency\n     * @param {string} note - Note name (e.g., 'C4', 'A#3')\n     * @returns {number} Frequency in Hz\n     */\n    noteToFrequency(note) {\n        return this.midiToFrequency(this.noteToMidi(note));\n    }\n    \n    /**\n     * Generate a scale from a root note\n     * @param {string} root - Root note (e.g., 'C4')\n     * @param {string} scaleType - Scale type from SCALES\n     * @returns {Array} Array of frequencies\n     */\n    generateScale(root, scaleType = 'major') {\n        const scale = this.SCALES[scaleType];\n        if (!scale) {\n            throw new Error(`Unknown scale type: ${scaleType}`);\n        }\n        \n        const rootMidi = this.noteToMidi(root);\n        return scale.map(interval => this.midiToFrequency(rootMidi + interval));\n    }\n    \n    /**\n     * Generate a chord from a root note\n     * @param {string} root - Root note (e.g., 'C4')\n     * @param {string} chordType - Chord type from CHORDS\n     * @returns {Array} Array of frequencies\n     */\n    generateChord(root, chordType = 'major') {\n        const chord = this.CHORDS[chordType];\n        if (!chord) {\n            throw new Error(`Unknown chord type: ${chordType}`);\n        }\n        \n        const rootMidi = this.noteToMidi(root);\n        return chord.map(interval => this.midiToFrequency(rootMidi + interval));\n    }\n    \n    /**\n     * Generate a chord progression\n     * @param {string} key - Key center (e.g., 'C4')\n     * @param {string} scaleType - Scale type for the key\n     * @param {Array} progression - Array of scale degrees\n     * @returns {Array} Array of chord arrays\n     */\n    generateProgression(key, scaleType = 'major', progression = this.PROGRESSIONS.I_V_vi_IV) {\n        const scale = this.generateScale(key, scaleType);\n        const chords = [];\n        \n        for (const degree of progression) {\n            const chordRoot = scale[(degree - 1) % scale.length];\n            \n            // Determine chord quality based on scale degree\n            let chordType = 'major';\n            if (scaleType === 'major') {\n                if (degree === 2 || degree === 3 || degree === 6) {\n                    chordType = 'minor';\n                } else if (degree === 7) {\n                    chordType = 'diminished';\n                }\n            } else if (scaleType === 'naturalMinor') {\n                if (degree === 1 || degree === 4 || degree === 5) {\n                    chordType = 'minor';\n                } else if (degree === 2) {\n                    chordType = 'diminished';\n                } else {\n                    chordType = 'major';\n                }\n            }\n            \n            // Convert frequency back to note for chord generation\n            const midiNote = Math.round(12 * Math.log2(chordRoot / this.A4_FREQUENCY) + 69);\n            const octave = Math.floor(midiNote / 12) - 1;\n            const noteIndex = midiNote % 12;\n            const noteName = this.NOTES[noteIndex] + octave;\n            \n            chords.push({\n                degree,\n                root: chordRoot,\n                frequencies: this.generateChord(noteName, chordType),\n                type: chordType\n            });\n        }\n        \n        return chords;\n    }\n    \n    /**\n     * Get musical parameters for an emotion\n     * @param {string} emotion - Emotion name\n     * @returns {Object} Musical parameters\n     */\n    getEmotionMusic(emotion) {\n        return this.EMOTION_MODES[emotion] || this.EMOTION_MODES.calm;\n    }\n    \n    /**\n     * Generate Circle of Fifths progression\n     * @param {string} startNote - Starting note\n     * @param {number} steps - Number of steps around the circle\n     * @param {boolean} clockwise - Direction (true = sharps, false = flats)\n     * @returns {Array} Array of note names\n     */\n    circleOfFifths(startNote = 'C', steps = 12, clockwise = true) {\n        const noteBase = startNote.replace(/\\d/, '');\n        let currentIndex = this.NOTES.indexOf(noteBase);\n        const notes = [startNote];\n        \n        for (let i = 1; i < steps; i++) {\n            // Perfect fifth = 7 semitones (clockwise) or 5 semitones (counter-clockwise)\n            currentIndex = clockwise ? \n                (currentIndex + 7) % 12 : \n                (currentIndex + 5) % 12;\n            \n            notes.push(this.NOTES[currentIndex]);\n        }\n        \n        return notes;\n    }\n    \n    /**\n     * Analyze interval between two notes\n     * @param {string} note1 - First note\n     * @param {string} note2 - Second note\n     * @returns {Object} Interval information\n     */\n    analyzeInterval(note1, note2) {\n        const midi1 = this.noteToMidi(note1);\n        const midi2 = this.noteToMidi(note2);\n        const semitones = Math.abs(midi2 - midi1);\n        \n        // Find interval name\n        let intervalName = 'unknown';\n        for (const [name, value] of Object.entries(this.INTERVALS)) {\n            if (value === semitones % 12) {\n                intervalName = name;\n                break;\n            }\n        }\n        \n        return {\n            semitones,\n            intervalName,\n            octaves: Math.floor(semitones / 12),\n            consonant: [0, 3, 4, 5, 7, 8, 9, 12].includes(semitones % 12),\n            ratio: this.getIntervalRatio(semitones % 12)\n        };\n    }\n    \n    /**\n     * Get frequency ratio for an interval\n     * @param {number} semitones - Number of semitones\n     * @returns {string} Simplified ratio\n     */\n    getIntervalRatio(semitones) {\n        const ratios = {\n            0: '1:1',    // Unison\n            1: '16:15',  // Minor second\n            2: '9:8',    // Major second\n            3: '6:5',    // Minor third\n            4: '5:4',    // Major third\n            5: '4:3',    // Perfect fourth\n            6: '45:32',  // Tritone\n            7: '3:2',    // Perfect fifth\n            8: '8:5',    // Minor sixth\n            9: '5:3',    // Major sixth\n            10: '16:9',  // Minor seventh\n            11: '15:8',  // Major seventh\n            12: '2:1'    // Octave\n        };\n        \n        return ratios[semitones] || 'complex';\n    }\n    \n    /**\n     * Generate a melody based on parameters\n     * @param {Object} params - Melody parameters\n     * @returns {Array} Array of note objects with timing\n     */\n    generateMelody(params = {}) {\n        const {\n            key = 'C4',\n            scale = 'major',\n            length = 8,\n            stepProbability = 0.7,  // Probability of stepwise motion\n            restProbability = 0.1    // Probability of rest\n        } = params;\n        \n        const scaleNotes = this.generateScale(key, scale);\n        const melody = [];\n        let currentIndex = 0;\n        \n        for (let i = 0; i < length; i++) {\n            // Decide if this is a rest\n            if (Math.random() < restProbability) {\n                melody.push({ frequency: 0, duration: 0.25, isRest: true });\n                continue;\n            }\n            \n            // Decide step size\n            let nextIndex;\n            if (Math.random() < stepProbability) {\n                // Stepwise motion\n                const direction = Math.random() < 0.5 ? -1 : 1;\n                nextIndex = Math.max(0, Math.min(scaleNotes.length - 1, currentIndex + direction));\n            } else {\n                // Leap\n                const leap = Math.floor(Math.random() * 3) + 2; // 2-4 scale degrees\n                const direction = Math.random() < 0.5 ? -1 : 1;\n                nextIndex = Math.max(0, Math.min(scaleNotes.length - 1, currentIndex + (leap * direction)));\n            }\n            \n            currentIndex = nextIndex;\n            \n            // Random duration\n            const durations = [0.25, 0.5, 0.75, 1];\n            const duration = durations[Math.floor(Math.random() * durations.length)];\n            \n            melody.push({\n                frequency: scaleNotes[currentIndex],\n                duration,\n                isRest: false\n            });\n        }\n        \n        return melody;\n    }\n}\n\nexport default MusicTheory;","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE\n *  └─○═╝                                                                             \n *                      ♬ ♭ ♮ ♯  HARMONIC SYSTEM  ♯ ♮ ♭ ♬                      \n *                                                                                    \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Harmonic System - Real-time Musical Intelligence\n * @author Emotive Engine Team\n * @version 1.0.0\n * @module HarmonicSystem\n * \n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                                   PURPOSE                                         \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ The CONDUCTOR of musical experiences. Orchestrates the music theory system with   \n * ║ the sound engine to create emotionally-responsive, harmonically-rich audio that   \n * ║ adapts in real-time to mascot states and user interactions.                       \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n *\n * ┌───────────────────────────────────────────────────────────────────────────────────\n * │ 🎭 HARMONIC FEATURES                                                              \n * ├───────────────────────────────────────────────────────────────────────────────────\n * │ • Real-time harmonic generation                                                   \n * │ • Emotion-driven key modulation                                                   \n * │ • Adaptive tempo and dynamics                                                     \n * │ • Gesture-to-chord mapping                                                        \n * │ • Harmonic tension and release                                                    \n * │ • Polyrhythmic patterns                                                           \n * │ • Voice leading and smooth transitions                                            \n * │ • Ambient pad generation                                                          \n * └───────────────────────────────────────────────────────────────────────────────────\n *\n * ════════════════════════════════════════════════════════════════════════════════════\n */\n\nimport MusicTheory from './MusicTheory.js';\n\nclass HarmonicSystem {\n    constructor(audioContext) {\n        this.audioContext = audioContext;\n        this.musicTheory = new MusicTheory();\n        \n        // Current musical state\n        this.currentKey = 'C4';\n        this.currentScale = 'major';\n        this.currentTempo = 120; // BPM\n        this.currentEmotion = 'calm';\n        \n        // Active voices (oscillators and gains)\n        this.voices = new Map();\n        \n        // Harmonic layers\n        this.layers = {\n            bass: { active: false, gain: 0.3 },\n            chord: { active: false, gain: 0.2 },\n            melody: { active: false, gain: 0.4 },\n            pad: { active: false, gain: 0.15 }\n        };\n        \n        // Master output\n        this.masterGain = this.audioContext.createGain();\n        this.masterGain.gain.value = 0.5;\n        this.masterGain.connect(this.audioContext.destination);\n        \n        // Effects chain\n        this.reverb = this.createReverb();\n        this.delay = this.createDelay();\n        this.filter = this.createFilter();\n        \n        // Connect effects\n        this.filter.connect(this.delay);\n        this.delay.connect(this.reverb);\n        this.reverb.connect(this.masterGain);\n        \n        // Dry signal path\n        this.dryGain = this.audioContext.createGain();\n        this.dryGain.gain.value = 0.7;\n        this.dryGain.connect(this.masterGain);\n        \n        // Wet signal path\n        this.wetGain = this.audioContext.createGain();\n        this.wetGain.gain.value = 0.3;\n        this.wetGain.connect(this.filter);\n        \n        // Rhythm tracking\n        this.nextNoteTime = 0;\n        this.noteResolution = 0; // 0 = 16th, 1 = 8th, 2 = quarter\n        this.noteLength = 0.05; // Length of \"beep\" (staccato)\n        \n        // Sequence tracking\n        this.currentChordIndex = 0;\n        this.currentMelodyNote = 0;\n        this.progression = null;\n        \n        // Performance optimization\n        this.isPlaying = false;\n        this.lookahead = 25.0; // How frequently to call scheduling function (ms)\n        this.scheduleAheadTime = 0.1; // How far ahead to schedule audio (sec)\n    }\n    \n    /**\n     * Create reverb effect using convolver\n     */\n    createReverb() {\n        const convolver = this.audioContext.createConvolver();\n        const length = this.audioContext.sampleRate * 2; // 2 second reverb\n        const impulse = this.audioContext.createBuffer(2, length, this.audioContext.sampleRate);\n        \n        for (let channel = 0; channel < 2; channel++) {\n            const channelData = impulse.getChannelData(channel);\n            for (let i = 0; i < length; i++) {\n                // Exponential decay\n                channelData[i] = (Math.random() * 2 - 1) * Math.pow(1 - i / length, 2);\n            }\n        }\n        \n        convolver.buffer = impulse;\n        return convolver;\n    }\n    \n    /**\n     * Create delay effect\n     */\n    createDelay() {\n        const delay = this.audioContext.createDelay(1.0);\n        delay.delayTime.value = 0.15; // 150ms delay\n        \n        const feedback = this.audioContext.createGain();\n        feedback.gain.value = 0.3;\n        \n        delay.connect(feedback);\n        feedback.connect(delay);\n        \n        return delay;\n    }\n    \n    /**\n     * Create filter for tone shaping\n     */\n    createFilter() {\n        const filter = this.audioContext.createBiquadFilter();\n        filter.type = 'lowpass';\n        filter.frequency.value = 2000;\n        filter.Q.value = 1;\n        return filter;\n    }\n    \n    /**\n     * Update emotion and adapt musical parameters\n     */\n    setEmotion(emotion) {\n        this.currentEmotion = emotion;\n        const musicParams = this.musicTheory.getEmotionMusic(emotion);\n        \n        // Update scale and tempo\n        this.currentScale = musicParams.scale;\n        this.currentTempo = musicParams.tempo;\n        \n        // Adapt filter based on emotion\n        const filterSettings = {\n            excited: { freq: 4000, Q: 2 },\n            calm: { freq: 1500, Q: 0.7 },\n            curious: { freq: 2500, Q: 1.5 },\n            sleepy: { freq: 800, Q: 0.5 },\n            alert: { freq: 3000, Q: 1.8 },\n            energetic: { freq: 5000, Q: 2.5 }\n        };\n        \n        const settings = filterSettings[emotion] || { freq: 2000, Q: 1 };\n        this.filter.frequency.exponentialRampToValueAtTime(\n            settings.freq,\n            this.audioContext.currentTime + 0.5\n        );\n        this.filter.Q.linearRampToValueAtTime(\n            settings.Q,\n            this.audioContext.currentTime + 0.5\n        );\n        \n        // Generate new progression for this emotion\n        this.generateEmotionProgression();\n    }\n    \n    /**\n     * Generate chord progression based on current emotion\n     */\n    generateEmotionProgression() {\n        const progressionMap = {\n            excited: 'I_V_vi_IV',\n            calm: 'I_vi_IV_V',\n            curious: 'ii_V_I',\n            sleepy: 'vi_IV_I_V',\n            alert: 'I_IV_V',\n            energetic: 'I_V_vi_IV'\n        };\n        \n        const progressionType = progressionMap[this.currentEmotion] || 'I_V_vi_IV';\n        this.progression = this.musicTheory.generateProgression(\n            this.currentKey,\n            this.currentScale,\n            this.musicTheory.PROGRESSIONS[progressionType]\n        );\n    }\n    \n    /**\n     * Play a chord with voice leading\n     */\n    playChord(frequencies, duration = 1.0, attack = 0.01) {\n        const startTime = this.audioContext.currentTime;\n        const chordGain = this.audioContext.createGain();\n        \n        // ADSR envelope\n        chordGain.gain.setValueAtTime(0, startTime);\n        chordGain.gain.linearRampToValueAtTime(this.layers.chord.gain, startTime + attack);\n        chordGain.gain.exponentialRampToValueAtTime(0.01, startTime + duration);\n        \n        // Connect to wet/dry mix\n        chordGain.connect(this.dryGain);\n        chordGain.connect(this.wetGain);\n        \n        // Create oscillators for each note\n        const oscillators = frequencies.map((freq, index) => {\n            const osc = this.audioContext.createOscillator();\n            osc.frequency.value = freq;\n            \n            // Different waveforms for different voices\n            if (index === 0) osc.type = 'sine';        // Root\n            else if (index === 1) osc.type = 'triangle'; // Third\n            else osc.type = 'sawtooth';                // Fifth and extensions\n            \n            // Slight detuning for richness\n            osc.detune.value = (Math.random() - 0.5) * 10;\n            \n            osc.connect(chordGain);\n            osc.start(startTime);\n            osc.stop(startTime + duration);\n            \n            return osc;\n        });\n        \n        // Store for potential manipulation\n        const chordId = `chord_${Date.now()}`;\n        this.voices.set(chordId, { oscillators, gain: chordGain });\n        \n        // Cleanup\n        setTimeout(() => {\n            this.voices.delete(chordId);\n        }, (duration + 0.1) * 1000);\n    }\n    \n    /**\n     * Play a melodic sequence\n     */\n    playMelody(notes, baseTime = 0) {\n        const startTime = baseTime || this.audioContext.currentTime;\n        let currentTime = startTime;\n        \n        notes.forEach((note, index) => {\n            if (note.isRest) {\n                currentTime += note.duration;\n                return;\n            }\n            \n            const osc = this.audioContext.createOscillator();\n            const noteGain = this.audioContext.createGain();\n            \n            osc.frequency.value = note.frequency;\n            osc.type = 'sine';\n            \n            // Vibrato for expressiveness\n            const vibrato = this.audioContext.createOscillator();\n            const vibratoGain = this.audioContext.createGain();\n            vibrato.frequency.value = 5; // 5 Hz vibrato\n            vibratoGain.gain.value = 5; // 5 cents depth\n            \n            vibrato.connect(vibratoGain);\n            vibratoGain.connect(osc.frequency);\n            \n            // Note envelope\n            noteGain.gain.setValueAtTime(0, currentTime);\n            noteGain.gain.linearRampToValueAtTime(this.layers.melody.gain, currentTime + 0.01);\n            noteGain.gain.exponentialRampToValueAtTime(0.01, currentTime + note.duration * 0.9);\n            \n            osc.connect(noteGain);\n            noteGain.connect(this.dryGain);\n            noteGain.connect(this.wetGain);\n            \n            osc.start(currentTime);\n            osc.stop(currentTime + note.duration);\n            vibrato.start(currentTime);\n            vibrato.stop(currentTime + note.duration);\n            \n            currentTime += note.duration;\n        });\n    }\n    \n    /**\n     * Create ambient pad layer\n     */\n    createPad(frequency, duration = 4.0) {\n        const startTime = this.audioContext.currentTime;\n        const voices = 4; // Number of detuned voices\n        const padGain = this.audioContext.createGain();\n        \n        // Slow attack and release for pad\n        padGain.gain.setValueAtTime(0, startTime);\n        padGain.gain.linearRampToValueAtTime(this.layers.pad.gain, startTime + 1.0);\n        padGain.gain.linearRampToValueAtTime(this.layers.pad.gain, startTime + duration - 1.0);\n        padGain.gain.linearRampToValueAtTime(0, startTime + duration);\n        \n        padGain.connect(this.wetGain); // Pads sound better with effects\n        \n        for (let i = 0; i < voices; i++) {\n            const osc = this.audioContext.createOscillator();\n            osc.frequency.value = frequency;\n            osc.type = 'sawtooth';\n            \n            // Detune each voice\n            osc.detune.value = (i - voices / 2) * 15;\n            \n            // Individual voice gain for stereo spread\n            const voiceGain = this.audioContext.createGain();\n            voiceGain.gain.value = 1 / voices;\n            \n            // Add slow LFO for movement\n            const lfo = this.audioContext.createOscillator();\n            const lfoGain = this.audioContext.createGain();\n            lfo.frequency.value = 0.2 + (i * 0.1); // Slightly different LFO rates\n            lfoGain.gain.value = 10; // Subtle pitch modulation\n            \n            lfo.connect(lfoGain);\n            lfoGain.connect(osc.frequency);\n            \n            osc.connect(voiceGain);\n            voiceGain.connect(padGain);\n            \n            osc.start(startTime);\n            osc.stop(startTime + duration);\n            lfo.start(startTime);\n            lfo.stop(startTime + duration);\n        }\n    }\n    \n    /**\n     * Map gesture to musical response\n     */\n    playGestureSound(gesture) {\n        const gestureMap = {\n            breathe: () => {\n                // Breathing creates slow, expanding chords\n                const chord = this.musicTheory.generateChord(this.currentKey, 'maj7');\n                this.playChord(chord, 2.0, 0.5);\n                this.createPad(chord[0] / 2, 3.0); // Sub bass pad\n            },\n            \n            excited: () => {\n                // Excited creates ascending arpeggios\n                const scale = this.musicTheory.generateScale(this.currentKey, 'lydian');\n                const arpeggio = scale.map((freq, i) => ({\n                    frequency: freq,\n                    duration: 0.1,\n                    isRest: false\n                }));\n                this.playMelody(arpeggio);\n            },\n            \n            wave: () => {\n                // Wave creates a glissando effect\n                const startFreq = this.musicTheory.noteToFrequency(this.currentKey);\n                const endFreq = startFreq * 2; // Octave up\n                \n                const osc = this.audioContext.createOscillator();\n                const gain = this.audioContext.createGain();\n                \n                osc.frequency.setValueAtTime(startFreq, this.audioContext.currentTime);\n                osc.frequency.exponentialRampToValueAtTime(endFreq, this.audioContext.currentTime + 0.5);\n                osc.frequency.exponentialRampToValueAtTime(startFreq, this.audioContext.currentTime + 1.0);\n                \n                gain.gain.setValueAtTime(0, this.audioContext.currentTime);\n                gain.gain.linearRampToValueAtTime(0.3, this.audioContext.currentTime + 0.1);\n                gain.gain.linearRampToValueAtTime(0.3, this.audioContext.currentTime + 0.9);\n                gain.gain.linearRampToValueAtTime(0, this.audioContext.currentTime + 1.0);\n                \n                osc.connect(gain);\n                gain.connect(this.wetGain);\n                \n                osc.start();\n                osc.stop(this.audioContext.currentTime + 1.0);\n            },\n            \n            morph: () => {\n                // Morph creates harmonic morphing between chords\n                const chord1 = this.musicTheory.generateChord(this.currentKey, 'minor');\n                const chord2 = this.musicTheory.generateChord(this.currentKey, 'major');\n                \n                // Play first chord\n                this.playChord(chord1, 0.5);\n                \n                // Morph to second chord\n                setTimeout(() => {\n                    this.playChord(chord2, 1.0);\n                }, 400);\n            },\n            \n            jump: () => {\n                // Jump creates staccato chord stabs\n                const chord = this.musicTheory.generateChord(this.currentKey, 'dom7');\n                for (let i = 0; i < 3; i++) {\n                    setTimeout(() => {\n                        this.playChord(chord.map(f => f * Math.pow(2, i/12)), 0.1, 0.001);\n                    }, i * 100);\n                }\n            },\n            \n            curious: () => {\n                // Curious creates questioning melodic phrases\n                const melody = this.musicTheory.generateMelody({\n                    key: this.currentKey,\n                    scale: 'mixolydian',\n                    length: 5,\n                    stepProbability: 0.3\n                });\n                this.playMelody(melody);\n            }\n        };\n        \n        const soundFunction = gestureMap[gesture];\n        if (soundFunction) {\n            soundFunction();\n        }\n    }\n    \n    /**\n     * Start background harmony generation\n     */\n    startHarmony() {\n        if (this.isPlaying) return;\n        \n        this.isPlaying = true;\n        this.currentChordIndex = 0;\n        this.nextNoteTime = this.audioContext.currentTime;\n        \n        // Generate initial progression\n        this.generateEmotionProgression();\n        \n        // Start the scheduling loop\n        this.scheduleHarmony();\n    }\n    \n    /**\n     * Schedule harmony playback\n     */\n    scheduleHarmony() {\n        if (!this.isPlaying) return;\n        \n        // Schedule notes that need to play in the next interval\n        while (this.nextNoteTime < this.audioContext.currentTime + this.scheduleAheadTime) {\n            // Play current chord in progression\n            if (this.progression && this.layers.chord.active) {\n                const chord = this.progression[this.currentChordIndex];\n                this.playChord(chord.frequencies, 0.5);\n                \n                // Advance to next chord\n                this.currentChordIndex = (this.currentChordIndex + 1) % this.progression.length;\n            }\n            \n            // Generate and play bass line\n            if (this.layers.bass.active && this.progression) {\n                const bassNote = this.progression[this.currentChordIndex].frequencies[0] / 2;\n                this.playBassNote(bassNote, 0.25);\n            }\n            \n            // Advance time based on tempo\n            const secondsPerBeat = 60.0 / this.currentTempo;\n            this.nextNoteTime += 0.25 * secondsPerBeat; // 16th notes\n        }\n        \n        // Continue scheduling\n        setTimeout(() => this.scheduleHarmony(), this.lookahead);\n    }\n    \n    /**\n     * Play a bass note\n     */\n    playBassNote(frequency, duration) {\n        const osc = this.audioContext.createOscillator();\n        const gain = this.audioContext.createGain();\n        \n        osc.frequency.value = frequency;\n        osc.type = 'sine';\n        \n        gain.gain.setValueAtTime(0, this.audioContext.currentTime);\n        gain.gain.linearRampToValueAtTime(this.layers.bass.gain, this.audioContext.currentTime + 0.01);\n        gain.gain.exponentialRampToValueAtTime(0.01, this.audioContext.currentTime + duration);\n        \n        osc.connect(gain);\n        gain.connect(this.dryGain);\n        \n        osc.start();\n        osc.stop(this.audioContext.currentTime + duration);\n    }\n    \n    /**\n     * Stop harmony generation\n     */\n    stopHarmony() {\n        this.isPlaying = false;\n    }\n    \n    /**\n     * Set layer active state\n     */\n    setLayerActive(layer, active) {\n        if (this.layers[layer]) {\n            this.layers[layer].active = active;\n        }\n    }\n    \n    /**\n     * Set master volume\n     */\n    setMasterVolume(volume) {\n        this.masterGain.gain.exponentialRampToValueAtTime(\n            Math.max(0.01, volume),\n            this.audioContext.currentTime + 0.1\n        );\n    }\n    \n    /**\n     * Set wet/dry mix for effects\n     */\n    setEffectsMix(wetness) {\n        const dry = 1 - wetness;\n        this.dryGain.gain.linearRampToValueAtTime(dry, this.audioContext.currentTime + 0.1);\n        this.wetGain.gain.linearRampToValueAtTime(wetness, this.audioContext.currentTime + 0.1);\n    }\n}\n\nexport default HarmonicSystem;","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE\r\n *  └─○═╝                                                                             \r\n *                       ◐ ◑ ◒ ◓  SOUND SYSTEM  ◓ ◒ ◑ ◐                       \r\n *                                                                                    \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Sound System - Web Audio API Integration for Emotional Audio\r\n * @author Emotive Engine Team\r\n * @version 2.0.0\r\n * @module SoundSystem\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ Adds the VOICE of emotion through sound. Generates ambient tones that match       \r\n * ║ emotional states and plays gesture sound effects. Uses Web Audio API for          \r\n * ║ programmatic sound generation - no external audio files needed!                   \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ 🎵 AUDIO FEATURES                                                                  \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ • Emotional ambient tones (frequency based on emotion)                            \r\n * │ • Gesture sound effects (pops, sweeps, chimes)                                    \r\n * │ • Volume control with fade in/out                                                 \r\n * │ • Warning throttling to reduce console spam                                       \r\n * │ • Graceful degradation if Web Audio unavailable                                   \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ 🎼 EMOTIONAL TONE MAPPING                                                          \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ EMOTION        FREQUENCY    WAVEFORM    VOLUME                                   \r\n * │ neutral        220Hz        sine        0.1                                      \r\n * │ joy            440Hz        sine        0.15                                     \r\n * │ sadness        110Hz        sine        0.08                                     \r\n * │ anger          330Hz        sawtooth    0.2                                      \r\n * │ fear           550Hz        square      0.12                                     \r\n * │ love           262Hz        sine        0.12                                     \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ════════════════════════════════════════════════════════════════════════════════════\r\n */\r\nimport HarmonicSystem from './HarmonicSystem.js';\r\n\r\nexport class SoundSystem {\r\n  constructor() {\r\n    this.context = null;\r\n    this.isEnabled = false;\r\n    this.isInitialized = false;\r\n    \r\n    // Audio nodes\r\n    this.nodes = {\r\n      master: null,      // Master gain node\r\n      ambient: null,     // Ambient oscillator for emotional tones\r\n      effects: null      // Effects gain node for gesture sounds\r\n    };\r\n    \r\n    // Harmonic system for musical intelligence\r\n    this.harmonicSystem = null;\r\n    this.useHarmonicSystem = false; // Toggle between old and new system\r\n    \r\n    // Track warning frequency to reduce spam\r\n    this.warningTimestamps = {};\r\n    this.warningThrottle = 5000; // Only show same warning every 5 seconds\r\n    \r\n    // Current ambient oscillator\r\n    this.currentOscillator = null;\r\n    this.currentGain = null;\r\n    \r\n    // Default settings\r\n    this.masterVolume = 0.5;\r\n    this.ambientVolume = 0.1;\r\n    \r\n    // Emotional tone mappings\r\n    this.emotionalTones = new Map([\r\n      ['neutral', { frequency: 220, waveform: 'sine', volume: 0.1 }],\r\n      ['joy', { frequency: 440, waveform: 'triangle', volume: 0.15 }],\r\n      ['sadness', { frequency: 165, waveform: 'sine', volume: 0.08 }],\r\n      ['anger', { frequency: 330, waveform: 'sawtooth', volume: 0.12 }],\r\n      ['fear', { frequency: 880, waveform: 'square', volume: 0.09 }],\r\n      ['surprise', { frequency: 660, waveform: 'triangle', volume: 0.13 }],\r\n      ['disgust', { frequency: 110, waveform: 'sawtooth', volume: 0.07 }],\r\n      ['love', { frequency: 528, waveform: 'sine', volume: 0.11 }]\r\n    ]);\r\n  }\r\n\r\n  /**\r\n   * Initialize Web Audio API and create node architecture\r\n   * @returns {boolean} Success status\r\n   */\r\n  async initialize() {\r\n    try {\r\n      // Check for Web Audio API support\r\n      const AudioContextClass = window.AudioContext || window.webkitAudioContext;\r\n      if (!AudioContextClass) {\r\n        // SoundSystem: Web Audio API not supported, continuing without audio\r\n        return false;\r\n      }\r\n\r\n      // Create audio context\r\n      this.context = new AudioContextClass();\r\n      \r\n      // Initialize harmonic system\r\n      this.harmonicSystem = new HarmonicSystem(this.context);\r\n      \r\n      // Handle suspended context (required by browser autoplay policies)\r\n      if (this.context.state === 'suspended') {\r\n        // Will be resumed on first user interaction\r\n        // SoundSystem: AudioContext suspended, will resume on user interaction\r\n      }\r\n\r\n      // Create master gain node with default volume\r\n      this.nodes.master = this.context.createGain();\r\n      this.nodes.master.gain.setValueAtTime(this.masterVolume, this.context.currentTime);\r\n      this.nodes.master.connect(this.context.destination);\r\n\r\n      // Create effects gain node for gesture sounds\r\n      this.nodes.effects = this.context.createGain();\r\n      this.nodes.effects.gain.setValueAtTime(1.0, this.context.currentTime);\r\n      this.nodes.effects.connect(this.nodes.master);\r\n\r\n      this.isEnabled = true;\r\n      this.isInitialized = true;\r\n      \r\n      // SoundSystem: Successfully initialized Web Audio API\r\n      return true;\r\n\r\n    } catch (error) {\r\n      // SoundSystem: Failed to initialize Web Audio API\r\n      this.isEnabled = false;\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resume audio context if suspended (call on user interaction)\r\n   */\r\n  async resumeContext() {\r\n    if (this.context && this.context.state === 'suspended') {\r\n      try {\r\n        await this.context.resume();\r\n        // Silently resume without logging\r\n      } catch (error) {\r\n        // Silently fail - this is expected before user interaction\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set master volume for all audio output\r\n   * @param {number} volume - Volume level (0.0 to 1.0)\r\n   * @param {string} currentEmotion - Current emotion for ambient tone volume update\r\n   */\r\n  setMasterVolume(volume, currentEmotion = null) {\r\n    this.masterVolume = Math.max(0, Math.min(1, volume));\r\n    \r\n    if (this.isEnabled && this.nodes.master) {\r\n      this.nodes.master.gain.setValueAtTime(\r\n        this.masterVolume, \r\n        this.context.currentTime\r\n      );\r\n\r\n      // Update ambient tone volume if active\r\n      if (currentEmotion) {\r\n        this.updateAmbientVolume(currentEmotion);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get current master volume\r\n   * @returns {number} Current master volume\r\n   */\r\n  getMasterVolume() {\r\n    return this.masterVolume;\r\n  }\r\n\r\n  /**\r\n   * Check if sound system is available and enabled\r\n   * @returns {boolean} Availability status\r\n   */\r\n  isAvailable() {\r\n    return this.isEnabled && this.isInitialized;\r\n  }\r\n  \r\n  /**\r\n   * Enable or disable the harmonic music system\r\n   * @param {boolean} enabled - Whether to enable harmonic system\r\n   */\r\n  setHarmonicMode(enabled) {\r\n    this.useHarmonicSystem = enabled;\r\n    \r\n    if (enabled && this.harmonicSystem) {\r\n      // Stop simple ambient tone when switching to harmonic mode\r\n      this.stopAmbientTone();\r\n      // SoundSystem: Switched to harmonic music mode\r\n    } else if (!enabled && this.harmonicSystem) {\r\n      // Stop harmonic system when switching back\r\n      this.harmonicSystem.stopHarmony();\r\n      // SoundSystem: Switched to simple sound mode\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Start harmonic background music\r\n   */\r\n  startHarmony() {\r\n    if (this.harmonicSystem && this.useHarmonicSystem && this.isAvailable()) {\r\n      this.harmonicSystem.startHarmony();\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Stop harmonic background music\r\n   */\r\n  stopHarmony() {\r\n    if (this.harmonicSystem) {\r\n      this.harmonicSystem.stopHarmony();\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Set harmonic layer active state\r\n   * @param {string} layer - Layer name (bass, chord, melody, pad)\r\n   * @param {boolean} active - Whether layer should be active\r\n   */\r\n  setHarmonicLayer(layer, active) {\r\n    if (this.harmonicSystem) {\r\n      this.harmonicSystem.setLayerActive(layer, active);\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Set harmonic effects mix\r\n   * @param {number} wetness - Wet/dry mix (0-1)\r\n   */\r\n  setHarmonicEffects(wetness) {\r\n    if (this.harmonicSystem) {\r\n      this.harmonicSystem.setEffectsMix(wetness);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clean up audio resources\r\n   */\r\n  cleanup() {\r\n    try {\r\n      // Stop current ambient oscillator\r\n      if (this.currentOscillator) {\r\n        this.currentOscillator.stop();\r\n        this.currentOscillator = null;\r\n      }\r\n      \r\n      if (this.currentGain) {\r\n        this.currentGain = null;\r\n      }\r\n\r\n      // Close audio context\r\n      if (this.context && this.context.state !== 'closed') {\r\n        this.context.close();\r\n      }\r\n\r\n      // SoundSystem: Cleaned up audio resources\r\n    } catch (error) {\r\n      // SoundSystem: Error during cleanup\r\n    } finally {\r\n      // Always reset state regardless of errors\r\n      this.context = null;\r\n      this.nodes = { master: null, ambient: null, effects: null };\r\n      this.currentOscillator = null;\r\n      this.currentGain = null;\r\n      this.isEnabled = false;\r\n      this.isInitialized = false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get emotional tone configuration for given emotion\r\n   * @param {string} emotion - Emotion name\r\n   * @returns {Object|null} Tone configuration or null if not found\r\n   */\r\n  getEmotionalTone(emotion) {\r\n    return this.emotionalTones.get(emotion) || null;\r\n  }\r\n\r\n  /**\r\n   * Start ambient emotional tone for given emotion\r\n   * @param {string} emotion - Emotion name\r\n   * @param {number} transitionDuration - Transition duration in milliseconds (default: 500)\r\n   */\r\n  setAmbientTone(emotion, transitionDuration = 500) {\r\n    if (!this.isAvailable()) {\r\n      return;\r\n    }\r\n\r\n    // Use harmonic system if enabled\r\n    if (this.useHarmonicSystem && this.harmonicSystem) {\r\n      this.harmonicSystem.setEmotion(emotion);\r\n      return;\r\n    }\r\n\r\n    const toneConfig = this.getEmotionalTone(emotion);\r\n    if (!toneConfig) {\r\n      // SoundSystem: Unknown emotion, cannot set ambient tone\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Resume context if suspended\r\n      this.resumeContext();\r\n\r\n      const currentTime = this.context.currentTime;\r\n      const transitionTime = transitionDuration / 1000; // Convert to seconds\r\n\r\n      // Stop current oscillator with fade out\r\n      if (this.currentOscillator && this.currentGain) {\r\n        this.currentGain.gain.exponentialRampToValueAtTime(0.001, currentTime + transitionTime * 0.5);\r\n        this.currentOscillator.stop(currentTime + transitionTime * 0.5);\r\n      }\r\n\r\n      // Create new oscillator and gain for the new tone\r\n      const oscillator = this.context.createOscillator();\r\n      const gainNode = this.context.createGain();\r\n\r\n      // Configure oscillator\r\n      oscillator.type = toneConfig.waveform;\r\n      oscillator.frequency.setValueAtTime(toneConfig.frequency, currentTime);\r\n\r\n      // Configure gain with smooth transition\r\n      const targetVolume = toneConfig.volume * this.masterVolume;\r\n      gainNode.gain.setValueAtTime(0.001, currentTime); // Start silent\r\n      gainNode.gain.exponentialRampToValueAtTime(targetVolume, currentTime + transitionTime);\r\n\r\n      // Connect nodes\r\n      oscillator.connect(gainNode);\r\n      gainNode.connect(this.nodes.master);\r\n\r\n      // Start oscillator\r\n      oscillator.start(currentTime);\r\n\r\n      // Store references\r\n      this.currentOscillator = oscillator;\r\n      this.currentGain = gainNode;\r\n\r\n      // SoundSystem: Started ambient tone\r\n\r\n    } catch (error) {\r\n      // SoundSystem: Failed to set ambient tone\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop current ambient tone\r\n   * @param {number} fadeOutDuration - Fade out duration in milliseconds (default: 500)\r\n   */\r\n  stopAmbientTone(fadeOutDuration = 500) {\r\n    if (!this.isAvailable() || !this.currentOscillator) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const currentTime = this.context.currentTime;\r\n      const fadeTime = fadeOutDuration / 1000; // Convert to seconds\r\n\r\n      // Fade out current tone\r\n      if (this.currentGain) {\r\n        this.currentGain.gain.exponentialRampToValueAtTime(0.001, currentTime + fadeTime);\r\n      }\r\n\r\n      // Stop oscillator after fade\r\n      this.currentOscillator.stop(currentTime + fadeTime);\r\n\r\n      // Clear references\r\n      this.currentOscillator = null;\r\n      this.currentGain = null;\r\n\r\n      // SoundSystem: Stopped ambient tone\r\n\r\n    } catch (error) {\r\n      // SoundSystem: Failed to stop ambient tone\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update ambient tone volume based on master volume changes\r\n   * @param {string} currentEmotion - Current emotion for volume calculation\r\n   */\r\n  updateAmbientVolume(currentEmotion) {\r\n    if (!this.isAvailable() || !this.currentGain || !currentEmotion) {\r\n      return;\r\n    }\r\n\r\n    const toneConfig = this.getEmotionalTone(currentEmotion);\r\n    if (!toneConfig) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const targetVolume = toneConfig.volume * this.masterVolume;\r\n      const currentTime = this.context.currentTime;\r\n      \r\n      this.currentGain.gain.exponentialRampToValueAtTime(targetVolume, currentTime + 0.1);\r\n    } catch (error) {\r\n      // SoundSystem: Failed to update ambient volume\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Play gesture sound effect with frequency envelope\r\n   * @param {string} gestureId - Gesture identifier\r\n   * @param {string} emotionalContext - Current emotion for intensity modifiers\r\n   */\r\n  playGestureSound(gestureId, emotionalContext = 'neutral') {\r\n    if (!this.isAvailable()) {\r\n      return;\r\n    }\r\n\r\n    // Use harmonic system if enabled\r\n    if (this.useHarmonicSystem && this.harmonicSystem) {\r\n      this.harmonicSystem.playGestureSound(gestureId);\r\n      return;\r\n    }\r\n\r\n    const soundConfig = this.getGestureSoundConfig(gestureId);\r\n    if (!soundConfig) {\r\n      // Throttled warning for unknown gestures\r\n      this.throttledWarn(`Unknown gesture \"${gestureId}\", cannot play sound`, `gesture_${gestureId}`);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Resume context if suspended\r\n      this.resumeContext();\r\n\r\n      const currentTime = this.context.currentTime;\r\n      const duration = soundConfig.duration / 1000; // Convert to seconds\r\n\r\n      // Apply emotional modifiers\r\n      const modifiers = this.getEmotionalModifiers(emotionalContext);\r\n      const baseVolume = soundConfig.volume * this.masterVolume * modifiers.intensity;\r\n\r\n      // Create oscillator and gain for the effect\r\n      const oscillator = this.context.createOscillator();\r\n      const gainNode = this.context.createGain();\r\n\r\n      // Configure oscillator\r\n      oscillator.type = soundConfig.waveform;\r\n\r\n      // Apply frequency envelope\r\n      this.applyFrequencyEnvelope(oscillator, soundConfig.frequencyEnvelope, currentTime, duration);\r\n\r\n      // Apply volume envelope\r\n      this.applyVolumeEnvelope(gainNode, soundConfig.volumeEnvelope, currentTime, duration, baseVolume);\r\n\r\n      // Connect nodes\r\n      oscillator.connect(gainNode);\r\n      gainNode.connect(this.nodes.effects);\r\n\r\n      // Start and stop oscillator\r\n      oscillator.start(currentTime);\r\n      oscillator.stop(currentTime + duration);\r\n\r\n      // SoundSystem: Playing gesture sound\r\n\r\n    } catch (error) {\r\n      // SoundSystem: Failed to play gesture sound\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get gesture sound configuration\r\n   * @param {string} gestureId - Gesture identifier\r\n   * @returns {Object|null} Sound configuration or null if not found\r\n   */\r\n  getGestureSoundConfig(gestureId) {\r\n    const gestureSounds = new Map([\r\n      ['bounce', {\r\n        duration: 100,\r\n        waveform: 'triangle',\r\n        volume: 0.3,\r\n        frequencyEnvelope: [\r\n          { time: 0, frequency: 200 },\r\n          { time: 0.5, frequency: 400 },\r\n          { time: 1, frequency: 300 }\r\n        ],\r\n        volumeEnvelope: [\r\n          { time: 0, volume: 1.0 },\r\n          { time: 0.1, volume: 0.8 },\r\n          { time: 1, volume: 0.0 }\r\n        ]\r\n      }],\r\n      ['pulse', {\r\n        duration: 300,\r\n        waveform: 'sine',\r\n        volume: 0.25,\r\n        frequencyEnvelope: [\r\n          { time: 0, frequency: 300 },\r\n          { time: 0.5, frequency: 450 },\r\n          { time: 1, frequency: 300 }\r\n        ],\r\n        volumeEnvelope: [\r\n          { time: 0, volume: 0.0 },\r\n          { time: 0.3, volume: 1.0 },\r\n          { time: 0.7, volume: 1.0 },\r\n          { time: 1, volume: 0.0 }\r\n        ]\r\n      }],\r\n      ['shake', {\r\n        duration: 200,\r\n        waveform: 'sawtooth',\r\n        volume: 0.2,\r\n        frequencyEnvelope: [\r\n          { time: 0, frequency: 150 },\r\n          { time: 0.25, frequency: 200 },\r\n          { time: 0.5, frequency: 150 },\r\n          { time: 0.75, frequency: 200 },\r\n          { time: 1, frequency: 150 }\r\n        ],\r\n        volumeEnvelope: [\r\n          { time: 0, volume: 0.8 },\r\n          { time: 0.5, volume: 1.0 },\r\n          { time: 1, volume: 0.0 }\r\n        ]\r\n      }],\r\n      ['spin', {\r\n        duration: 600,\r\n        waveform: 'triangle',\r\n        volume: 0.35,\r\n        frequencyEnvelope: [\r\n          { time: 0, frequency: 220 },\r\n          { time: 0.3, frequency: 440 },\r\n          { time: 0.7, frequency: 660 },\r\n          { time: 1, frequency: 330 }\r\n        ],\r\n        volumeEnvelope: [\r\n          { time: 0, volume: 0.0 },\r\n          { time: 0.2, volume: 1.0 },\r\n          { time: 0.8, volume: 0.8 },\r\n          { time: 1, volume: 0.0 }\r\n        ]\r\n      }],\r\n      ['nod', {\r\n        duration: 150,\r\n        waveform: 'sine',\r\n        volume: 0.15,\r\n        frequencyEnvelope: [\r\n          { time: 0, frequency: 180 },\r\n          { time: 0.5, frequency: 220 },\r\n          { time: 1, frequency: 180 }\r\n        ],\r\n        volumeEnvelope: [\r\n          { time: 0, volume: 0.5 },\r\n          { time: 0.3, volume: 1.0 },\r\n          { time: 1, volume: 0.0 }\r\n        ]\r\n      }],\r\n      ['tilt', {\r\n        duration: 200,\r\n        waveform: 'triangle',\r\n        volume: 0.18,\r\n        frequencyEnvelope: [\r\n          { time: 0, frequency: 250 },\r\n          { time: 0.6, frequency: 350 },\r\n          { time: 1, frequency: 280 }\r\n        ],\r\n        volumeEnvelope: [\r\n          { time: 0, volume: 0.0 },\r\n          { time: 0.4, volume: 1.0 },\r\n          { time: 1, volume: 0.0 }\r\n        ]\r\n      }],\r\n      ['expand', {\r\n        duration: 500,\r\n        waveform: 'sine',\r\n        volume: 0.4,\r\n        frequencyEnvelope: [\r\n          { time: 0, frequency: 200 },\r\n          { time: 0.7, frequency: 500 },\r\n          { time: 1, frequency: 400 }\r\n        ],\r\n        volumeEnvelope: [\r\n          { time: 0, volume: 0.0 },\r\n          { time: 0.3, volume: 1.0 },\r\n          { time: 0.9, volume: 0.8 },\r\n          { time: 1, volume: 0.0 }\r\n        ]\r\n      }],\r\n      ['contract', {\r\n        duration: 400,\r\n        waveform: 'triangle',\r\n        volume: 0.22,\r\n        frequencyEnvelope: [\r\n          { time: 0, frequency: 400 },\r\n          { time: 0.8, frequency: 200 },\r\n          { time: 1, frequency: 180 }\r\n        ],\r\n        volumeEnvelope: [\r\n          { time: 0, volume: 1.0 },\r\n          { time: 0.6, volume: 0.8 },\r\n          { time: 1, volume: 0.0 }\r\n        ]\r\n      }],\r\n      ['flash', {\r\n        duration: 200,\r\n        waveform: 'square',\r\n        volume: 0.3,\r\n        frequencyEnvelope: [\r\n          { time: 0, frequency: 800 },\r\n          { time: 0.1, frequency: 1200 },\r\n          { time: 0.2, frequency: 800 },\r\n          { time: 1, frequency: 600 }\r\n        ],\r\n        volumeEnvelope: [\r\n          { time: 0, volume: 0.0 },\r\n          { time: 0.05, volume: 1.0 },\r\n          { time: 0.15, volume: 0.3 },\r\n          { time: 1, volume: 0.0 }\r\n        ]\r\n      }],\r\n      ['wave', {\r\n        duration: 400,\r\n        waveform: 'sine',\r\n        volume: 0.25,\r\n        frequencyEnvelope: [\r\n          { time: 0, frequency: 300 },\r\n          { time: 0.3, frequency: 500 },\r\n          { time: 0.6, frequency: 400 },\r\n          { time: 1, frequency: 350 }\r\n        ],\r\n        volumeEnvelope: [\r\n          { time: 0, volume: 0.0 },\r\n          { time: 0.2, volume: 0.8 },\r\n          { time: 0.7, volume: 0.6 },\r\n          { time: 1, volume: 0.0 }\r\n        ]\r\n      }],\r\n      ['breathe', {\r\n        duration: 800,  // Slightly shorter for more impact\r\n        waveform: 'triangle',  // Changed from sine for more harmonics\r\n        volume: 0.6,  // Much louder\r\n        frequencyEnvelope: [\r\n          { time: 0, frequency: 300 },\r\n          { time: 0.3, frequency: 500 },\r\n          { time: 0.5, frequency: 600 },\r\n          { time: 0.7, frequency: 400 },\r\n          { time: 1, frequency: 250 }\r\n        ],\r\n        volumeEnvelope: [\r\n          { time: 0, volume: 0.2 },  // Start with some volume\r\n          { time: 0.2, volume: 1.0 }, // Quick attack\r\n          { time: 0.5, volume: 0.9 }, // Strong sustain\r\n          { time: 0.8, volume: 0.7 },\r\n          { time: 1, volume: 0.0 }\r\n        ]\r\n      }],\r\n      ['morph', {\r\n        duration: 600,\r\n        waveform: 'triangle',\r\n        volume: 0.3,\r\n        frequencyEnvelope: [\r\n          { time: 0, frequency: 100 },\r\n          { time: 0.2, frequency: 300 },\r\n          { time: 0.5, frequency: 600 },\r\n          { time: 0.8, frequency: 400 },\r\n          { time: 1, frequency: 200 }\r\n        ],\r\n        volumeEnvelope: [\r\n          { time: 0, volume: 0.5 },\r\n          { time: 0.3, volume: 1.0 },\r\n          { time: 0.7, volume: 0.8 },\r\n          { time: 1, volume: 0.0 }\r\n        ]\r\n      }],\r\n      ['jump', {\r\n        duration: 250,\r\n        waveform: 'square',\r\n        volume: 0.35,\r\n        frequencyEnvelope: [\r\n          { time: 0, frequency: 200 },\r\n          { time: 0.2, frequency: 600 },\r\n          { time: 0.4, frequency: 800 },\r\n          { time: 0.8, frequency: 400 },\r\n          { time: 1, frequency: 100 }\r\n        ],\r\n        volumeEnvelope: [\r\n          { time: 0, volume: 0.8 },\r\n          { time: 0.1, volume: 1.0 },\r\n          { time: 0.3, volume: 0.6 },\r\n          { time: 1, volume: 0.0 }\r\n        ]\r\n      }],\r\n      ['drift', {\r\n        duration: 800,\r\n        waveform: 'sine',\r\n        volume: 0.12,\r\n        frequencyEnvelope: [\r\n          { time: 0, frequency: 160 },\r\n          { time: 0.4, frequency: 240 },\r\n          { time: 0.8, frequency: 200 },\r\n          { time: 1, frequency: 180 }\r\n        ],\r\n        volumeEnvelope: [\r\n          { time: 0, volume: 0.0 },\r\n          { time: 0.2, volume: 1.0 },\r\n          { time: 0.8, volume: 0.8 },\r\n          { time: 1, volume: 0.0 }\r\n        ]\r\n      }],\r\n      ['wave', {\r\n        duration: 400,\r\n        waveform: 'sine',\r\n        volume: 0.25,\r\n        frequencyEnvelope: [\r\n          { time: 0, frequency: 200 },\r\n          { time: 0.25, frequency: 300 },\r\n          { time: 0.5, frequency: 250 },\r\n          { time: 0.75, frequency: 280 },\r\n          { time: 1, frequency: 200 }\r\n        ],\r\n        volumeEnvelope: [\r\n          { time: 0, volume: 0.0 },\r\n          { time: 0.2, volume: 0.8 },\r\n          { time: 0.8, volume: 0.8 },\r\n          { time: 1, volume: 0.0 }\r\n        ]\r\n      }],\r\n      ['breathe', {\r\n        duration: 3500,  // Match gesture duration\r\n        waveform: 'sine',\r\n        volume: 0.2,\r\n        // Deep, calming breath sound - low frequencies\r\n        frequencyEnvelope: [\r\n          { time: 0, frequency: 80 },    // Start low (exhale)\r\n          { time: 0.4, frequency: 150 },  // Rise during inhale\r\n          { time: 0.5, frequency: 160 },  // Peak at full inhale\r\n          { time: 0.9, frequency: 100 },  // Fall during exhale\r\n          { time: 1, frequency: 80 }      // Back to low\r\n        ],\r\n        volumeEnvelope: [\r\n          { time: 0, volume: 0.3 },     // Quiet start\r\n          { time: 0.4, volume: 0.8 },   // Louder inhale\r\n          { time: 0.5, volume: 0.7 },   // Hold\r\n          { time: 0.9, volume: 0.6 },   // Quieter exhale\r\n          { time: 1, volume: 0.2 }      // Fade out\r\n        ]\r\n      }],\r\n      ['flicker', {\r\n        duration: 300,\r\n        waveform: 'square',\r\n        volume: 0.2,\r\n        frequencyEnvelope: [\r\n          { time: 0, frequency: 600 },\r\n          { time: 0.1, frequency: 400 },\r\n          { time: 0.2, frequency: 800 },\r\n          { time: 0.3, frequency: 300 },\r\n          { time: 0.5, frequency: 700 },\r\n          { time: 1, frequency: 500 }\r\n        ],\r\n        volumeEnvelope: [\r\n          { time: 0, volume: 1.0 },\r\n          { time: 0.1, volume: 0.2 },\r\n          { time: 0.2, volume: 0.9 },\r\n          { time: 0.3, volume: 0.3 },\r\n          { time: 0.5, volume: 0.8 },\r\n          { time: 1, volume: 0.0 }\r\n        ]\r\n      }],\r\n      ['vibrate', {\r\n        duration: 250,\r\n        waveform: 'sawtooth',\r\n        volume: 0.3,\r\n        frequencyEnvelope: [\r\n          { time: 0, frequency: 100 },\r\n          { time: 0.1, frequency: 150 },\r\n          { time: 0.2, frequency: 100 },\r\n          { time: 0.3, frequency: 150 },\r\n          { time: 0.4, frequency: 100 },\r\n          { time: 0.5, frequency: 150 },\r\n          { time: 0.6, frequency: 100 },\r\n          { time: 0.7, frequency: 150 },\r\n          { time: 1, frequency: 80 }\r\n        ],\r\n        volumeEnvelope: [\r\n          { time: 0, volume: 1.0 },\r\n          { time: 0.8, volume: 1.0 },\r\n          { time: 1, volume: 0.0 }\r\n        ]\r\n      }],\r\n      ['glow', {\r\n        duration: 600,\r\n        waveform: 'sine',\r\n        volume: 0.15,\r\n        frequencyEnvelope: [\r\n          { time: 0, frequency: 300 },\r\n          { time: 0.5, frequency: 500 },\r\n          { time: 1, frequency: 400 }\r\n        ],\r\n        volumeEnvelope: [\r\n          { time: 0, volume: 0.0 },\r\n          { time: 0.3, volume: 1.0 },\r\n          { time: 0.7, volume: 1.0 },\r\n          { time: 1, volume: 0.0 }\r\n        ]\r\n      }],\r\n      ['stretch', {\r\n        duration: 450,\r\n        waveform: 'triangle',\r\n        volume: 0.2,\r\n        frequencyEnvelope: [\r\n          { time: 0, frequency: 250 },\r\n          { time: 0.3, frequency: 180 },\r\n          { time: 0.7, frequency: 320 },\r\n          { time: 1, frequency: 250 }\r\n        ],\r\n        volumeEnvelope: [\r\n          { time: 0, volume: 0.6 },\r\n          { time: 0.2, volume: 1.0 },\r\n          { time: 0.8, volume: 0.9 },\r\n          { time: 1, volume: 0.0 }\r\n        ]\r\n      }]\r\n    ]);\r\n\r\n    return gestureSounds.get(gestureId) || null;\r\n  }\r\n\r\n  /**\r\n   * Apply frequency envelope to oscillator\r\n   * @param {OscillatorNode} oscillator - Web Audio oscillator\r\n   * @param {Array} envelope - Frequency envelope points\r\n   * @param {number} startTime - Start time in audio context\r\n   * @param {number} duration - Total duration in seconds\r\n   */\r\n  applyFrequencyEnvelope(oscillator, envelope, startTime, duration) {\r\n    envelope.forEach(point => {\r\n      const time = startTime + (point.time * duration);\r\n      oscillator.frequency.linearRampToValueAtTime(point.frequency, time);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Apply volume envelope to gain node\r\n   * @param {GainNode} gainNode - Web Audio gain node\r\n   * @param {Array} envelope - Volume envelope points\r\n   * @param {number} startTime - Start time in audio context\r\n   * @param {number} duration - Total duration in seconds\r\n   * @param {number} baseVolume - Base volume level\r\n   */\r\n  applyVolumeEnvelope(gainNode, envelope, startTime, duration, baseVolume) {\r\n    envelope.forEach((point, index) => {\r\n      const time = startTime + (point.time * duration);\r\n      const volume = point.volume * baseVolume;\r\n      \r\n      if (index === 0) {\r\n        gainNode.gain.setValueAtTime(volume, time);\r\n      } else {\r\n        gainNode.gain.linearRampToValueAtTime(volume, time);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get emotional modifiers for gesture sounds\r\n   * @param {string} emotion - Current emotion\r\n   * @returns {Object} Modifier values\r\n   */\r\n  getEmotionalModifiers(emotion) {\r\n    const modifiers = new Map([\r\n      ['neutral', { intensity: 1.0, speed: 1.0 }],\r\n      ['joy', { intensity: 1.3, speed: 1.2 }],\r\n      ['sadness', { intensity: 0.6, speed: 0.8 }],\r\n      ['anger', { intensity: 1.5, speed: 1.4 }],\r\n      ['fear', { intensity: 0.8, speed: 1.3 }],\r\n      ['surprise', { intensity: 1.4, speed: 1.5 }],\r\n      ['disgust', { intensity: 0.7, speed: 0.9 }],\r\n      ['love', { intensity: 1.1, speed: 0.9 }]\r\n    ]);\r\n\r\n    return modifiers.get(emotion) || modifiers.get('neutral');\r\n  }\r\n\r\n  /**\r\n   * Enable/disable quality reduction for performance\r\n   * @param {boolean} enabled - Whether to reduce quality\r\n   */\r\n  setQualityReduction(enabled) {\r\n    this.qualityReduction = enabled;\r\n    \r\n    if (enabled && this.audioContext) {\r\n      // Reduce audio quality for performance\r\n      // Lower sample rate if possible\r\n      if (this.audioContext.sampleRate > 22050) {\r\n        // Audio quality reduced for performance\r\n      }\r\n      // Reduce active oscillators\r\n      this.maxOscillators = 2;\r\n    } else {\r\n      // Restore full quality\r\n      this.maxOscillators = 4;\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Check if Web Audio API is supported in current browser\r\n   * @returns {boolean} Support status\r\n   */\r\n  static isSupported() {\r\n    return !!(window.AudioContext || window.webkitAudioContext);\r\n  }\r\n  \r\n  /**\r\n   * Throttled warning to reduce console spam\r\n   * @param {string} message - Warning message\r\n   * @param {string} key - Unique key for this warning type\r\n   */\r\n  throttledWarn(message, key) {\r\n    const now = Date.now();\r\n    const lastWarning = this.warningTimestamps[key] || 0;\r\n    \r\n    if (now - lastWarning > this.warningThrottle) {\r\n      // SoundSystem warning\r\n      this.warningTimestamps[key] = now;\r\n    }\r\n  }\r\n}","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE\r\n *  └─○═╝                                                                             \r\n *                     ◐ ◑ ◒ ◓  SIMPLE FPS COUNTER  ◓ ◒ ◑ ◐                     \r\n *                                                                                    \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Simple FPS Counter - Accurate Frame Rate Measurement\r\n * @author Emotive Engine Team\r\n * @version 2.0.0\r\n * @module SimpleFPSCounter\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ The SPEEDOMETER of the engine. Accurately measures frames per second using        \r\n * ║ a rolling timestamp array. Shows exactly how smooth the animation is running.     \r\n * ║ Critical for performance monitoring and automatic quality degradation.            \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ 📊 FPS CALCULATION METHOD                                                         \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ • Stores timestamps from the last second                                          \r\n * │ • Counts frames within 1000ms window                                              \r\n * │ • More accurate than delta time averaging                                         \r\n * │ • Updates every frame for real-time monitoring                                    \r\n * │ • Based on 2025 best practices for JavaScript FPS                                 \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ ⚡ PERFORMANCE TARGETS                                                             \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ • 60 FPS   : Smooth animation (16.67ms per frame)                                 \r\n * │ • 30 FPS   : Acceptable minimum (33.33ms per frame)                               \r\n * │ • < 30 FPS : Triggers quality degradation                                         \r\n * │ • < 15 FPS : Critical performance issues                                          \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ═══════════════════════════════════════════════════════════════════════════════════\r\n */\r\nclass SimpleFPSCounter {\r\n    constructor() {\r\n        // Array to store timestamps from the last second\r\n        this.timestamps = [];\r\n        \r\n        // Current FPS value\r\n        this.fps = 0;\r\n        \r\n        // Smoothed FPS for display (to reduce jitter)\r\n        this.smoothedFPS = 0;\r\n        this.smoothingFactor = 0.9; // Higher = more smoothing\r\n        \r\n        // Frame time tracking\r\n        this.lastFrameTime = 0;\r\n        this.frameTime = 0;\r\n        \r\n        // Average frame time over last N frames\r\n        this.frameTimes = [];\r\n        this.maxFrameTimeSamples = 10;\r\n        this.averageFrameTime = 0;\r\n    }\r\n    \r\n    /**\r\n     * Update FPS calculation with new frame\r\n     * Call this in your animation loop with the timestamp from requestAnimationFrame\r\n     * @param {number} timestamp - High resolution timestamp from requestAnimationFrame\r\n     */\r\n    update(timestamp) {\r\n        // Remove timestamps older than 1 second\r\n        while (this.timestamps.length > 0 && this.timestamps[0] <= timestamp - 1000) {\r\n            this.timestamps.shift();\r\n        }\r\n        \r\n        // Add current timestamp\r\n        this.timestamps.push(timestamp);\r\n        \r\n        // FPS is the number of frames in the last second\r\n        this.fps = this.timestamps.length;\r\n        \r\n        // Apply smoothing to reduce display jitter\r\n        if (this.smoothedFPS === 0) {\r\n            this.smoothedFPS = this.fps;\r\n        } else {\r\n            this.smoothedFPS = this.smoothedFPS * this.smoothingFactor + \r\n                               this.fps * (1 - this.smoothingFactor);\r\n        }\r\n        \r\n        // Calculate frame time\r\n        if (this.lastFrameTime > 0) {\r\n            this.frameTime = timestamp - this.lastFrameTime;\r\n            \r\n            // Track frame times for averaging\r\n            this.frameTimes.push(this.frameTime);\r\n            if (this.frameTimes.length > this.maxFrameTimeSamples) {\r\n                this.frameTimes.shift();\r\n            }\r\n            \r\n            // Calculate average frame time\r\n            if (this.frameTimes.length > 0) {\r\n                const sum = this.frameTimes.reduce((a, b) => a + b, 0);\r\n                this.averageFrameTime = sum / this.frameTimes.length;\r\n            }\r\n        }\r\n        this.lastFrameTime = timestamp;\r\n    }\r\n    \r\n    /**\r\n     * Get current FPS\r\n     * @returns {number} Current FPS (integer)\r\n     */\r\n    getFPS() {\r\n        return Math.round(this.fps);\r\n    }\r\n    \r\n    /**\r\n     * Get smoothed FPS for display\r\n     * @returns {number} Smoothed FPS (integer)\r\n     */\r\n    getSmoothedFPS() {\r\n        return Math.round(this.smoothedFPS);\r\n    }\r\n    \r\n    /**\r\n     * Get last frame time in milliseconds\r\n     * @returns {number} Frame time in ms\r\n     */\r\n    getFrameTime() {\r\n        return this.frameTime;\r\n    }\r\n    \r\n    /**\r\n     * Get average frame time over recent frames\r\n     * @returns {number} Average frame time in ms\r\n     */\r\n    getAverageFrameTime() {\r\n        return this.averageFrameTime;\r\n    }\r\n    \r\n    /**\r\n     * Reset the FPS counter\r\n     */\r\n    reset() {\r\n        this.timestamps = [];\r\n        this.fps = 0;\r\n        this.smoothedFPS = 0;\r\n        this.lastFrameTime = 0;\r\n        this.frameTime = 0;\r\n        this.frameTimes = [];\r\n        this.averageFrameTime = 0;\r\n    }\r\n    \r\n    /**\r\n     * Get all metrics\r\n     * @returns {Object} Object containing all FPS metrics\r\n     */\r\n    getMetrics() {\r\n        return {\r\n            fps: this.getFPS(),\r\n            smoothedFPS: this.getSmoothedFPS(),\r\n            frameTime: this.getFrameTime(),\r\n            averageFrameTime: this.getAverageFrameTime(),\r\n            // Performance status based on FPS\r\n            status: this.fps >= 55 ? 'good' : this.fps >= 30 ? 'okay' : 'poor'\r\n        };\r\n    }\r\n}\r\n\r\nexport default SimpleFPSCounter;","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE\r\n *  └─○═╝\r\n *                    ◐ ◑ ◒ ◓  ANIMATION CONTROLLER  ◓ ◒ ◑ ◐\r\n *\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Animation Controller - Main Loop & Performance Management\r\n * @author Emotive Engine Team\r\n * @version 2.0.0\r\n * @module AnimationController\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ The HEARTBEAT of the Emotive Engine. Manages the main animation loop,             \r\n * ║ coordinates all subsystems, monitors performance, and ensures smooth              \r\n * ║ frame rates through adaptive quality control.                                     \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ 🎬 CORE RESPONSIBILITIES                                                          \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ • Main requestAnimationFrame loop management                                      \r\n * │ • Frame timing and deltaTime calculation                                          \r\n * │ • Performance monitoring and FPS tracking                                         \r\n * │ • Adaptive quality degradation when performance drops                             \r\n * │ • Subsystem update coordination (render, particles, state)                        \r\n * │ • Visibility and pause state handling                                             \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ ⚡ PERFORMANCE FEATURES                                                           \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ • Dynamic FPS targeting (15, 30, 45, 60 FPS)                                      \r\n * │ • Frame skipping for consistent timing                                            \r\n * │ • Automatic quality reduction when FPS drops                                      \r\n * │ • Recovery system when performance improves                                       \r\n * │ • Memory leak detection and prevention                                            \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ 🔧 CONFIGURATION OPTIONS                                                          \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ • targetFPS         : Desired frame rate (default: 60)                            \r\n * │ • enableDegradation : Allow quality reduction (default: true)                     \r\n * │ • performanceMode   : 'adaptive' | 'fixed' | 'maximum'                           \r\n * │ • monitoringInterval: Performance check frequency (default: 1000ms)               \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ ❌ CRITICAL - DO NOT MODIFY                                                       \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ ✗ Frame timing logic       → Breaks animation smoothness                         \r\n * │ ✗ Update order            → Causes render/state desync                           \r\n * │ ✗ Performance thresholds   → May cause excessive degradation                     \r\n * │ ✗ Memory cleanup          → Creates memory leaks                                 \r\n * │ ✗ RAF loop management     → Breaks entire animation system                       \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                          SUBSYSTEM UPDATE ORDER                                   \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ 1. Performance monitoring (FPS calculation)                                       \r\n * ║ 2. State machine update (emotions, transitions)                                   \r\n * ║ 3. Gesture processing (animation progress)                                        \r\n * ║ 4. Particle system update (movement, spawning)                                    \r\n * ║ 5. Renderer update (draw orb and particles)                                       \r\n * ║ 6. Cleanup and memory management                                                  \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * ════════════════════════════════════════════════════════════════════════════════════\r\n */\r\n\r\nimport PerformanceMonitor from './PerformanceMonitor.js';\r\nimport SimpleFPSCounter from './SimpleFPSCounter.js';\r\nimport { animationLoopManager, AnimationPriority } from './AnimationLoopManager.js';\r\n\r\nclass AnimationController {\r\n    constructor(errorBoundary, config = {}) {\r\n        this.errorBoundary = errorBoundary;\r\n        this.config = config;\r\n        this.config.targetFPS = config.targetFPS || 60;\r\n        \r\n        // Animation state\r\n        this.isRunning = false;\r\n        this.animationFrameId = null;\r\n        this.loopCallbackId = null; // For AnimationLoopManager\r\n        this.lastFrameTime = 0;\r\n        this.deltaTime = 0;\r\n        this.isPaused = false;\r\n        \r\n        // Set up visibility change and window focus handling\r\n        this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\r\n        this.handleWindowBlur = this.handleWindowBlur.bind(this);\r\n        this.handleWindowFocus = this.handleWindowFocus.bind(this);\r\n\r\n        if (typeof document !== 'undefined') {\r\n            document.addEventListener('visibilitychange', this.handleVisibilityChange);\r\n            window.addEventListener('blur', this.handleWindowBlur);\r\n            window.addEventListener('focus', this.handleWindowFocus);\r\n        }\r\n        \r\n        // PerformanceMonitor DISABLED - no FPS interference\r\n        this.performanceMonitor = null;\r\n        /* \r\n        this.performanceMonitor = new PerformanceMonitor(config);\r\n        this.performanceMonitor.setEventCallback((event, data) => {\r\n            this.emit(event, data);\r\n        });\r\n        */\r\n        \r\n        // Simple FPS counter for accurate display\r\n        this.fpsCounter = new SimpleFPSCounter();\r\n        \r\n        // Subsystem references (injected via setSubsystems)\r\n        this.subsystems = {};\r\n        \r\n        // Event callback for external integration\r\n        this.eventCallback = null;\r\n        \r\n        // Reference to parent EmotiveMascot for audio level updates\r\n        this.parentMascot = null;\r\n        \r\n    }\r\n\r\n    /**\r\n     * Injects subsystem dependencies\r\n     * @param {Object} subsystems - Object containing all required subsystems\r\n     */\r\n    setSubsystems(subsystems) {\r\n        this.subsystems = {\r\n            stateMachine: subsystems.stateMachine,\r\n            particleSystem: subsystems.particleSystem,\r\n            renderer: subsystems.renderer,\r\n            soundSystem: subsystems.soundSystem,\r\n            canvasManager: subsystems.canvasManager\r\n        };\r\n        \r\n        // Validate required subsystems\r\n        const required = ['stateMachine', 'particleSystem', 'renderer'];\r\n        for (const system of required) {\r\n            if (!this.subsystems[system]) {\r\n                throw new Error(`Required subsystem '${system}' not provided`);\r\n            }\r\n        }\r\n        \r\n        // PerformanceMonitor disabled\r\n        if (this.performanceMonitor) {\r\n            this.performanceMonitor.setSubsystems(this.subsystems);\r\n        }\r\n        \r\n    }\r\n\r\n    /**\r\n     * Sets the event callback for external integration\r\n     * @param {Function} callback - Function to call for event emission\r\n     */\r\n    setEventCallback(callback) {\r\n        if (typeof callback !== 'function') {\r\n            throw new Error('Event callback must be a function');\r\n        }\r\n        this.eventCallback = callback;\r\n    }\r\n\r\n    /**\r\n     * Sets the parent EmotiveMascot reference for audio level updates\r\n     * @param {EmotiveMascot} mascot - Parent mascot instance\r\n     */\r\n    setParentMascot(mascot) {\r\n        this.parentMascot = mascot;\r\n    }\r\n\r\n    /**\r\n     * Emits an event through the callback if available\r\n     * @param {string} event - Event name\r\n     * @param {*} data - Event data\r\n     */\r\n    emit(event, data = null) {\r\n        if (this.eventCallback) {\r\n            this.eventCallback(event, data);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Starts the animation loop\r\n     * @returns {boolean} Success status\r\n     */\r\n    start() {\r\n        return this.errorBoundary.wrap(() => {\r\n            if (this.isRunning) {\r\n                return false;\r\n            }\r\n\r\n            if (!this.subsystems.stateMachine) {\r\n                throw new Error('Cannot start animation without subsystems configured');\r\n            }\r\n            \r\n            // Initialize animation state\r\n            this.isRunning = true;\r\n            this.lastFrameTime = performance.now();\r\n            \r\n            // Resume audio context if available\r\n            if (this.subsystems.soundSystem && this.subsystems.soundSystem.isAvailable()) {\r\n                this.subsystems.soundSystem.resumeContext();\r\n            }\r\n\r\n            // Register with AnimationLoopManager instead of direct RAF\r\n            this.loopCallbackId = animationLoopManager.register(\r\n                (deltaTime, timestamp) => this.animate(deltaTime, timestamp),\r\n                AnimationPriority.CRITICAL, // Main render loop is critical priority\r\n                this\r\n            );\r\n\r\n            // Emit start event\r\n            this.emit('animationStarted', { targetFPS: this.targetFPS });\r\n            \r\n            return true;\r\n        }, 'animation-start')();\r\n    }\r\n\r\n    /**\r\n     * Stops the animation loop\r\n     * @returns {boolean} Success status\r\n     */\r\n    stop() {\r\n        return this.errorBoundary.wrap(() => {\r\n            if (!this.isRunning) {\r\n                return false;\r\n            }\r\n            \r\n            // Stop animation loop\r\n            this.isRunning = false;\r\n\r\n            // Unregister from AnimationLoopManager\r\n            if (this.loopCallbackId) {\r\n                animationLoopManager.unregister(this.loopCallbackId);\r\n                this.loopCallbackId = null;\r\n            }\r\n\r\n            // Clean up old RAF if it exists (for backwards compatibility)\r\n            if (this.animationFrameId) {\r\n                cancelAnimationFrame(this.animationFrameId);\r\n                this.animationFrameId = null;\r\n            }\r\n\r\n\r\n            \r\n            // Stop all active gestures\r\n            if (this.subsystems.renderer && this.subsystems.renderer.stopAllGestures) {\r\n                this.subsystems.renderer.stopAllGestures();\r\n            }\r\n            \r\n            // Stop ambient audio\r\n            if (this.subsystems.soundSystem && this.subsystems.soundSystem.isAvailable()) {\r\n                this.subsystems.soundSystem.stopAmbientTone();\r\n            }\r\n            \r\n            // Clear particles\r\n            if (this.subsystems.particleSystem) {\r\n                this.subsystems.particleSystem.clear();\r\n            }\r\n            \r\n            // Emit stop event\r\n            this.emit('animationStopped');\r\n            \r\n            return true;\r\n        }, 'animation-stop')();\r\n    }\r\n\r\n    /**\r\n     * Handles window blur event\r\n     */\r\n    handleWindowBlur() {\r\n        // Use same logic as visibility change\r\n        if (!document.hidden) {\r\n            // Only pause if document isn't already hidden (avoid double-pause)\r\n            this.handleVisibilityChange();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles window focus event\r\n     */\r\n    handleWindowFocus() {\r\n        // Force a resume check\r\n        if (!document.hidden && this.isPaused) {\r\n            // Simulate visibility change to visible\r\n            this.handleVisibilityChange();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handles document visibility changes to pause/resume animation\r\n     */\r\n    handleVisibilityChange() {\r\n        if (document.hidden) {\r\n            // Tab became hidden - pause animation\r\n            this.wasRunning = this.isRunning;\r\n            this.isPaused = true;\r\n\r\n            // Store current time to calculate gap when resuming\r\n            this.pauseTime = performance.now();\r\n\r\n            // Stop all active systems\r\n            if (this.subsystems?.particleSystem) {\r\n                // Clear spawn accumulator to prevent burst on resume\r\n                this.subsystems.particleSystem.resetAccumulator();\r\n                // Store particle count for debugging\r\n                this.pausedParticleCount = this.subsystems.particleSystem.particles?.length || 0;\r\n            }\r\n\r\n            // Pause gesture animations if any are active\r\n            if (this.subsystems?.renderer?.gestureAnimator) {\r\n                this.subsystems.renderer.gestureAnimator.pauseCurrentAnimation?.();\r\n            }\r\n\r\n            // Notify parent mascot to pause\r\n            if (this.parentMascot?.pause) {\r\n                this.parentMascot.pause();\r\n            }\r\n        } else {\r\n            // Tab became visible - resume animation smoothly\r\n            if (this.isPaused && this.wasRunning) {\r\n                // Calculate time gap\r\n                const resumeTime = performance.now();\r\n                const gap = resumeTime - this.pauseTime;\r\n\r\n                // Reset timing to prevent huge deltaTime spike\r\n                this.lastFrameTime = resumeTime;\r\n                this.frameTimeAccumulator = 0;\r\n\r\n                // Clear and reset all systems\r\n                if (this.subsystems?.particleSystem) {\r\n                    // Clear accumulator again to be safe\r\n                    this.subsystems.particleSystem.resetAccumulator();\r\n                    // Clear any stuck particles if gap was too long\r\n                    if (gap > 5000) { // More than 5 seconds\r\n                        this.subsystems.particleSystem.particles = [];\r\n                    }\r\n                }\r\n\r\n                // Reset canvas context to fix any rendering artifacts\r\n                if (this.renderer) {\r\n                    this.renderer.resetCanvasContext();\r\n\r\n                    // Reset any active animations\r\n                    if (this.renderer.gestureAnimator) {\r\n                        this.renderer.gestureAnimator.resumeAnimation?.();\r\n                    }\r\n\r\n                    // Force a clean frame\r\n                    this.renderer.forceCleanRender = true;\r\n                }\r\n\r\n                // Reset state machine timing\r\n                if (this.subsystems?.stateMachine) {\r\n                    // Update state machine's last update time\r\n                    this.subsystems.stateMachine.lastUpdateTime = resumeTime;\r\n                }\r\n\r\n                // Notify parent mascot to resume\r\n                if (this.parentMascot?.resume) {\r\n                    this.parentMascot.resume();\r\n                }\r\n\r\n                // Finally unpause\r\n                this.isPaused = false;\r\n\r\n                // Log for debugging\r\n                if (this.performanceMonitor) {\r\n                    console.log(`Resumed after ${(gap/1000).toFixed(1)}s pause. Cleared particles: ${this.pausedParticleCount || 0}`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Main animation loop with deltaTime calculation and performance monitoring\r\n     * Now called by AnimationLoopManager with centralized frame timing\r\n     * @param {number} deltaTime - Time since last frame from loop manager\r\n     * @param {number} timestamp - Current timestamp from loop manager\r\n     */\r\n    animate(deltaTime, timestamp) {\r\n        if (!this.isRunning || this.isPaused) return;\r\n\r\n        this.errorBoundary.wrap(() => {\r\n            // Use deltaTime from AnimationLoopManager if provided, else calculate\r\n            const currentTime = timestamp || performance.now();\r\n            this.deltaTime = deltaTime || (currentTime - this.lastFrameTime);\r\n            \r\n            // Cap deltaTime to prevent physics instability\r\n            // Use a consistent cap of 50ms (20 FPS minimum)\r\n            const skipParticleSpawn = this.deltaTime > 33; // Skip spawning if under 30fps\r\n            \r\n            if (this.deltaTime > 50) {\r\n                // Large gap detected - cap and reset accumulator\r\n                this.deltaTime = 50;\r\n                // Reset the accumulator to prevent burst spawning\r\n                if (this.subsystems?.particleSystem) {\r\n                    this.subsystems.particleSystem.resetAccumulator();\r\n                }\r\n            }\r\n            \r\n            // Store skip flag for particle system\r\n            if (this.subsystems?.particleSystem) {\r\n                this.subsystems.particleSystem.skipSpawnThisFrame = skipParticleSpawn;\r\n            }\r\n            \r\n            this.lastFrameTime = currentTime;\r\n            \r\n            // PerformanceMonitor disabled\r\n            if (this.performanceMonitor) {\r\n                this.performanceMonitor.startFrame(currentTime);\r\n            }\r\n            \r\n            // Update simple FPS counter\r\n            this.fpsCounter.update(currentTime);\r\n            \r\n            // Update all subsystems with integrated deltaTime\r\n            this.update(this.deltaTime);\r\n            \r\n            // Render the current frame\r\n            this.render();\r\n            \r\n            // PerformanceMonitor disabled\r\n            if (this.performanceMonitor) {\r\n                this.performanceMonitor.endFrame(performance.now());\r\n            }\r\n\r\n            // AnimationLoopManager now handles the loop scheduling\r\n            // No need to call requestAnimationFrame here\r\n\r\n        }, 'animation-loop')();\r\n    }\r\n\r\n    /**\r\n     * Updates all subsystems\r\n     * @param {number} deltaTime - Time since last frame in milliseconds\r\n     */\r\n    update(deltaTime) {\r\n        this.errorBoundary.wrap(() => {\r\n            const currentTime = performance.now();\r\n            \r\n            // Update state machine\r\n            if (this.subsystems.stateMachine) {\r\n                this.subsystems.stateMachine.update(deltaTime);\r\n            }\r\n            \r\n            // Gesture updates now handled by renderer\r\n            \r\n            // Update parent mascot for audio level monitoring\r\n            if (this.parentMascot && typeof this.parentMascot.update === 'function') {\r\n                this.parentMascot.update(deltaTime);\r\n            }\r\n            \r\n            // Only handle particles here if NOT in classic rendering mode\r\n            // Classic mode handles its own particles in EmotiveMascot.render()\r\n            const isClassicMode = this.parentMascot?.config?.renderingStyle === 'classic';\r\n            \r\n            if (!isClassicMode) {\r\n                // Get current emotional properties and center for particle system (advanced mode only)\r\n                if (this.subsystems.particleSystem && this.subsystems.stateMachine && this.subsystems.canvasManager) {\r\n                    const emotionalProps = this.subsystems.stateMachine.getCurrentEmotionalProperties();\r\n                    const center = this.subsystems.canvasManager.getCenter();\r\n                    \r\n                    // Get current gesture info from renderer if available\r\n                    let gestureMotion = null;\r\n                    let gestureProgress = 0;\r\n                    \r\n                    if (this.subsystems.renderer && this.subsystems.renderer.getCurrentGesture) {\r\n                        const currentGesture = this.subsystems.renderer.getCurrentGesture();\r\n                        if (currentGesture && currentGesture.particleMotion) {\r\n                            gestureMotion = currentGesture.particleMotion;\r\n                            gestureProgress = currentGesture.progress || 0;\r\n                        }\r\n                    }\r\n                    \r\n                    // Update particle system with current emotional context\r\n                    this.subsystems.particleSystem.spawn(\r\n                        emotionalProps.particleBehavior,\r\n                        this.subsystems.stateMachine.getCurrentState().emotion,\r\n                        emotionalProps.particleRate,\r\n                        center.x,\r\n                        center.y,\r\n                        deltaTime\r\n                    );\r\n                    \r\n                    // Update particles with gesture motion if available\r\n                    this.subsystems.particleSystem.update(deltaTime, center.x, center.y, gestureMotion, gestureProgress);\r\n                }\r\n            }\r\n            \r\n            // PerformanceMonitor disabled\r\n            if (this.performanceMonitor) {\r\n                this.performanceMonitor.updateMetrics({\r\n                    particleCount: this.subsystems.particleSystem?.getActiveParticleCount?.() || 0,\r\n                    audioLatency: this.subsystems.soundSystem?.getLatency?.() || 0\r\n                });\r\n            }\r\n            \r\n        }, 'subsystem-update')();\r\n    }\r\n\r\n    /**\r\n     * Renders the current frame\r\n     */\r\n    render() {\r\n        this.errorBoundary.wrap(() => {\r\n            // Call parent mascot's render method if available\r\n            if (this.parentMascot && typeof this.parentMascot.render === 'function') {\r\n                this.parentMascot.render();\r\n            } else if (this.subsystems.renderer) {\r\n                // Fallback to direct renderer call\r\n                this.subsystems.renderer.render();\r\n            }\r\n        }, 'frame-render')();\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Gets current performance metrics (delegated to PerformanceMonitor)\r\n     * @returns {Object} Performance data\r\n     */\r\n    getPerformanceMetrics() {\r\n        // PerformanceMonitor disabled - use simple FPS counter only\r\n        const fpsMetrics = this.fpsCounter ? this.fpsCounter.getMetrics() : {};\r\n        return {\r\n            fps: fpsMetrics.fps || 60,\r\n            instantFps: fpsMetrics.smoothedFPS || 60,\r\n            frameTime: fpsMetrics.frameTime || 16.67,\r\n            averageFrameTime: fpsMetrics.averageFrameTime || 16.67,\r\n            isRunning: this.isRunning,\r\n            deltaTime: this.deltaTime\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Sets the target FPS (delegated to PerformanceMonitor)\r\n     * @param {number} fps - Target FPS value\r\n     */\r\n    setTargetFPS(fps) {\r\n        // DISABLED - no FPS changes allowed\r\n        return;\r\n    }\r\n\r\n    /**\r\n     * Gets the target FPS\r\n     * @returns {number} Target FPS value\r\n     */\r\n    get targetFPS() {\r\n        return this.config.targetFPS || 60;\r\n    }\r\n\r\n    /**\r\n     * Checks if the animation is currently running\r\n     * @returns {boolean} Running status\r\n     */\r\n    isAnimating() {\r\n        return this.isRunning;\r\n    }\r\n\r\n    /**\r\n     * Destroys the animation controller and cleans up resources\r\n     */\r\n    destroy() {\r\n        this.stop();\r\n        \r\n        // Remove visibility change and focus listeners\r\n        if (typeof document !== 'undefined') {\r\n            document.removeEventListener('visibilitychange', this.handleVisibilityChange);\r\n            window.removeEventListener('blur', this.handleWindowBlur);\r\n            window.removeEventListener('focus', this.handleWindowFocus);\r\n        }\r\n        \r\n        // Destroy performance monitor\r\n        if (this.performanceMonitor) {\r\n            this.performanceMonitor.destroy();\r\n            this.performanceMonitor = null;\r\n        }\r\n        \r\n        // Clear subsystem references\r\n        this.subsystems = {};\r\n        this.eventCallback = null;\r\n        \r\n    }\r\n}\r\n\r\nexport default AnimationController;","/**\n * ═══════════════════════════════════════════════════════════════════════════════════════\n *  ╔═○─┐ emotive\n *    ●●  ENGINE\n *  └─○═╝                                                                             \n *                   ◐ ◑ ◒ ◓  AUDIO LEVEL PROCESSOR  ◓ ◒ ◑ ◐                   \n *                                                                                    \n * ═══════════════════════════════════════════════════════════════════════════════════════\n *\n * @fileoverview Audio Level Processor - Real-time Audio Analysis & Reactivity\n * @author Emotive Engine Team\n * @version 2.0.0\n * @module AudioLevelProcessor\n * \n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                                   PURPOSE                                         \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ Analyzes real-time audio input to make the mascot react to speech and sound.      \n * ║ Detects volume spikes, tracks audio history, and triggers emotional responses      \n * ║ based on audio levels. Makes the orb \"listen\" and respond to your voice!          \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n *\n * ┌───────────────────────────────────────────────────────────────────────────────────\n * │ 🎤 AUDIO ANALYSIS FEATURES                                                        \n * ├───────────────────────────────────────────────────────────────────────────────────\n * │ • Real-time RMS level calculation                                                 \n * │ • Volume spike detection with cooldown                                            \n * │ • Audio level history tracking                                                    \n * │ • Frequency analysis via FFT                                                      \n * │ • Smooth level transitions                                                        \n * │ • Microphone permission handling                                                  \n * └───────────────────────────────────────────────────────────────────────────────────\n *\n * ┌───────────────────────────────────────────────────────────────────────────────────\n * │ 📊 PROCESSING PIPELINE                                                            \n * ├───────────────────────────────────────────────────────────────────────────────────\n * │ 1. Microphone → getUserMedia()                                                    \n * │ 2. MediaStream → AudioContext                                                     \n * │ 3. AudioContext → AnalyserNode                                                    \n * │ 4. AnalyserNode → Frequency Data (FFT)                                            \n * │ 5. Frequency Data → RMS Calculation                                               \n * │ 6. RMS → Spike Detection & Level Events                                           \n * └───────────────────────────────────────────────────────────────────────────────────\n *\n * ┌───────────────────────────────────────────────────────────────────────────────────\n * │ ⚡ SPIKE DETECTION                                                                \n * ├───────────────────────────────────────────────────────────────────────────────────\n * │ • Threshold: Current level > average * spikeThreshold                            \n * │ • Cooldown: Minimum interval between spikes (default: 1000ms)                    \n * │ • Triggers: \"nod\" gesture for speech acknowledgment                              \n * │ • Sensitivity: Configurable via spikeThreshold (1.5 = 50% above average)         \n * └───────────────────────────────────────────────────────────────────────────────────\n *\n * ┌───────────────────────────────────────────────────────────────────────────────────\n * │ 🔧 CONFIGURATION                                                                   \n * ├───────────────────────────────────────────────────────────────────────────────────\n * │ PARAMETER              DEFAULT    DESCRIPTION                                     \n * │ spikeThreshold         1.5        Multiplier for spike detection                  \n * │ minimumSpikeLevel      0.1        Minimum level to trigger spike                  \n * │ spikeMinInterval       1000       Cooldown between spikes (ms)                   \n * │ historySize            10         Audio level history buffer size                 \n * │ smoothingTimeConstant  0.8        FFT smoothing (0=none, 1=max)                  \n * │ fftSize                256        FFT bin size for frequency analysis             \n * │ levelUpdateThrottle    100        Throttle for level update events (ms)          \n * └───────────────────────────────────────────────────────────────────────────────────\n *\n * ┌───────────────────────────────────────────────────────────────────────────────────\n * │ 📡 EVENTS                                                                          \n * ├───────────────────────────────────────────────────────────────────────────────────\n * │ • levelUpdate  : Emitted when audio level changes (throttled)                     \n * │ • volumeSpike  : Emitted when spike detected (with cooldown)                      \n * │ • error        : Emitted on processing errors                                     \n * └───────────────────────────────────────────────────────────────────────────────────\n *\n * ╔═══════════════════════════════════════════════════════════════════════════════════\n * ║                                USAGE EXAMPLE                                      \n * ╠═══════════════════════════════════════════════════════════════════════════════════\n * ║ const processor = new AudioLevelProcessor({                                       \n * ║     spikeThreshold: 1.5,                                                          \n * ║     spikeMinInterval: 500                                                         \n * ║ });                                                                                \n * ║                                                                                    \n * ║ processor.on('volumeSpike', (level) => {                                          \n * ║     mascot.triggerGesture('nod');  // React to speech                            \n * ║ });                                                                                \n * ║                                                                                    \n * ║ processor.on('levelUpdate', (level) => {                                          \n * ║     mascot.setAudioLevel(level);   // Smooth breathing with speech               \n * ║ });                                                                                \n * ╚═══════════════════════════════════════════════════════════════════════════════════\n *\n * ════════════════════════════════════════════════════════════════════════════════════\n */\nexport class AudioLevelProcessor {\n    constructor(config = {}) {\n        // Configuration with defaults\n        this.config = {\n            spikeThreshold: config.spikeThreshold || 1.5,\n            minimumSpikeLevel: config.minimumSpikeLevel || 0.1,\n            spikeMinInterval: config.spikeMinInterval || 1000, // ms between spikes\n            historySize: config.historySize || 10,\n            smoothingTimeConstant: config.smoothingTimeConstant || 0.8,\n            fftSize: config.fftSize || 256,\n            levelUpdateThrottle: config.levelUpdateThrottle || 100, // ms\n            ...config\n        };\n        \n        // Audio context and analysis\n        this.audioContext = null;\n        this.analyser = null;\n        this.dataArray = null;\n        \n        // Audio level state\n        this.currentLevel = 0;\n        this.levelHistory = [];\n        this.isActive = false;\n        \n        // Spike detection state\n        this.lastVolumeSpike = 0;\n        \n        // Event throttling\n        this.lastLevelEmit = 0;\n        \n        // Event callbacks\n        this.callbacks = {\n            levelUpdate: null,\n            volumeSpike: null,\n            error: null\n        };\n    }\n\n    /**\n     * Initialize audio level processing with provided audio context\n     * @param {AudioContext} audioContext - Web Audio API context\n     * @returns {boolean} Success status\n     */\n    initialize(audioContext) {\n        try {\n            if (!audioContext) {\n                throw new Error('AudioContext is required for audio level processing');\n            }\n            \n            // Validate AudioContext\n            if (typeof audioContext.createAnalyser !== 'function') {\n                throw new Error('Invalid AudioContext provided');\n            }\n            \n            // Store audio context\n            this.audioContext = audioContext;\n            \n            // Create audio analyser for level monitoring\n            this.analyser = audioContext.createAnalyser();\n            this.analyser.fftSize = this.config.fftSize;\n            this.analyser.smoothingTimeConstant = this.config.smoothingTimeConstant;\n            \n            // Create data array for frequency analysis\n            this.dataArray = new Uint8Array(this.analyser.frequencyBinCount);\n            \n            // Initialize state\n            this.currentLevel = 0;\n            this.levelHistory = [];\n            this.lastVolumeSpike = 0;\n            this.isActive = true;\n            \n            // Resume audio context if suspended\n            if (audioContext.state === 'suspended') {\n                audioContext.resume().catch(error => {\n                    this.emitError('Failed to resume AudioContext', error);\n                });\n            }\n            \n            return true;\n            \n        } catch (error) {\n            this.emitError('Failed to initialize AudioLevelProcessor', error);\n            return false;\n        }\n    }\n\n    /**\n     * Clean up audio level processing resources\n     */\n    cleanup() {\n        try {\n            // Reset state\n            this.isActive = false;\n            this.currentLevel = 0;\n            this.levelHistory = [];\n            this.lastVolumeSpike = 0;\n            this.lastLevelEmit = 0;\n            \n            // Clear references\n            this.audioContext = null;\n            this.analyser = null;\n            this.dataArray = null;\n            \n            \n        } catch (error) {\n            this.emitError('Error during AudioLevelProcessor cleanup', error);\n        }\n    }\n\n    /**\n     * Update audio level from analyser (called each frame)\n     * @param {number} deltaTime - Time since last frame in milliseconds\n     */\n    updateAudioLevel(deltaTime = 16) {\n        if (!this.isActive || !this.analyser || !this.dataArray) {\n            return;\n        }\n        \n        try {\n            // Get frequency data from analyser\n            this.analyser.getByteFrequencyData(this.dataArray);\n            \n            // Calculate RMS (Root Mean Square) for accurate level detection\n            const rms = this.calculateRMS();\n            \n            // Update current level with normalization and amplification\n            this.currentLevel = Math.min(1, rms * 2); // Amplify for better sensitivity\n            \n            // Update audio level history for spike detection\n            this.updateLevelHistory();\n            \n            // Check for volume spikes and trigger events\n            this.detectVolumeSpikes();\n            \n            // Emit throttled level update events\n            this.emitLevelUpdate();\n            \n        } catch (error) {\n            this.emitError('Error updating audio level', error);\n            this.currentLevel = 0;\n        }\n    }\n\n    /**\n     * Calculate RMS (Root Mean Square) from frequency data\n     * @returns {number} RMS value normalized to 0-1 range\n     */\n    calculateRMS() {\n        if (!this.dataArray || this.dataArray.length === 0) {\n            return 0;\n        }\n        \n        let sumSquares = 0;\n        \n        // Calculate sum of squares for all frequency bins\n        for (let i = 0; i < this.dataArray.length; i++) {\n            const normalized = this.dataArray[i] / 255; // Normalize to 0-1\n            sumSquares += normalized * normalized;\n        }\n        \n        // Return RMS value\n        return Math.sqrt(sumSquares / this.dataArray.length);\n    }\n\n    /**\n     * Update audio level history for spike detection analysis\n     */\n    updateLevelHistory() {\n        // Add current level to history\n        this.levelHistory.push(this.currentLevel);\n        \n        // Maintain history size limit\n        if (this.levelHistory.length > this.config.historySize) {\n            this.levelHistory.shift();\n        }\n    }\n\n    /**\n     * Detect volume spikes and emit events for gesture triggering\n     */\n    detectVolumeSpikes() {\n        // Need sufficient history for spike detection\n        if (this.levelHistory.length < 5) {\n            return;\n        }\n        \n        const currentTime = performance.now();\n        \n        // Prevent too frequent spike detection\n        if (currentTime - this.lastVolumeSpike < this.config.spikeMinInterval) {\n            return;\n        }\n        \n        // Calculate average of previous levels (excluding current)\n        const previousLevels = this.levelHistory.slice(0, -1);\n        const averagePrevious = previousLevels.reduce((sum, level) => sum + level, 0) / previousLevels.length;\n        \n        // Check for volume spike conditions\n        const isSpike = this.currentLevel >= averagePrevious * this.config.spikeThreshold &&\n                       averagePrevious >= this.config.minimumSpikeLevel &&\n                       this.currentLevel >= this.config.minimumSpikeLevel * 2;\n        \n        if (isSpike) {\n            this.lastVolumeSpike = currentTime;\n            \n            // Emit volume spike event with detailed information\n            this.emitVolumeSpike({\n                level: this.currentLevel,\n                previousAverage: averagePrevious,\n                spikeRatio: this.currentLevel / averagePrevious,\n                timestamp: currentTime,\n                threshold: this.config.spikeThreshold,\n                minimumLevel: this.config.minimumSpikeLevel\n            });\n            \n        }\n    }\n\n    /**\n     * Clear audio level history\n     */\n    clearHistory() {\n        this.levelHistory = [];\n    }\n\n    /**\n     * Get current audio level\n     * @returns {number} Current audio level (0-1)\n     */\n    getCurrentLevel() {\n        return this.currentLevel;\n    }\n\n    /**\n     * Get audio level history\n     * @returns {Array<number>} Array of recent audio levels\n     */\n    getLevelHistory() {\n        return [...this.levelHistory]; // Return copy to prevent external modification\n    }\n\n    /**\n     * Get analyser node for external audio source connection\n     * @returns {AnalyserNode|null} Web Audio analyser node\n     */\n    getAnalyser() {\n        return this.analyser;\n    }\n\n    /**\n     * Get current frequency data as array\n     * @returns {Uint8Array|null} Frequency data array\n     */\n    getFrequencyData() {\n        if (!this.dataArray) {\n            return null;\n        }\n        \n        // Return copy of current frequency data\n        return new Uint8Array(this.dataArray);\n    }\n\n    /**\n     * Check if audio level processing is active\n     * @returns {boolean} Active status\n     */\n    isProcessingActive() {\n        return this.isActive;\n    }\n\n    /**\n     * Set callback for audio level updates\n     * @param {Function} callback - Callback function receiving level data\n     */\n    onLevelUpdate(callback) {\n        if (typeof callback === 'function') {\n            this.callbacks.levelUpdate = callback;\n        } else {\n            throw new Error('Level update callback must be a function');\n        }\n    }\n\n    /**\n     * Set callback for volume spike events\n     * @param {Function} callback - Callback function receiving spike data\n     */\n    onVolumeSpike(callback) {\n        if (typeof callback === 'function') {\n            this.callbacks.volumeSpike = callback;\n        } else {\n            throw new Error('Volume spike callback must be a function');\n        }\n    }\n\n    /**\n     * Set callback for error events\n     * @param {Function} callback - Callback function receiving error data\n     */\n    onError(callback) {\n        if (typeof callback === 'function') {\n            this.callbacks.error = callback;\n        } else {\n            throw new Error('Error callback must be a function');\n        }\n    }\n\n    /**\n     * Remove all event callbacks\n     */\n    removeAllCallbacks() {\n        this.callbacks = {\n            levelUpdate: null,\n            volumeSpike: null,\n            error: null\n        };\n    }\n\n    /**\n     * Update configuration settings\n     * @param {Object} newConfig - New configuration options\n     */\n    updateConfig(newConfig) {\n        this.config = { ...this.config, ...newConfig };\n        \n        // Update analyser settings if active\n        if (this.analyser) {\n            if (newConfig.fftSize) {\n                this.analyser.fftSize = this.config.fftSize;\n                this.dataArray = new Uint8Array(this.analyser.frequencyBinCount);\n            }\n            \n            if (newConfig.smoothingTimeConstant !== undefined) {\n                this.analyser.smoothingTimeConstant = this.config.smoothingTimeConstant;\n            }\n        }\n        \n    }\n\n    /**\n     * Get current configuration\n     * @returns {Object} Current configuration object\n     */\n    getConfig() {\n        return { ...this.config }; // Return copy to prevent external modification\n    }\n\n    /**\n     * Get processing statistics\n     * @returns {Object} Statistics object\n     */\n    getStats() {\n        return {\n            isActive: this.isActive,\n            currentLevel: this.currentLevel,\n            historySize: this.levelHistory.length,\n            maxHistorySize: this.config.historySize,\n            lastSpikeTime: this.lastVolumeSpike,\n            timeSinceLastSpike: this.lastVolumeSpike > 0 ? performance.now() - this.lastVolumeSpike : 0,\n            averageLevel: this.levelHistory.length > 0 ? \n                this.levelHistory.reduce((sum, level) => sum + level, 0) / this.levelHistory.length : 0\n        };\n    }\n\n    /**\n     * Emit throttled audio level update event\n     */\n    emitLevelUpdate() {\n        const currentTime = performance.now();\n        \n        // Throttle level update events\n        if (currentTime - this.lastLevelEmit < this.config.levelUpdateThrottle) {\n            return;\n        }\n        \n        this.lastLevelEmit = currentTime;\n        \n        if (this.callbacks.levelUpdate) {\n            try {\n                this.callbacks.levelUpdate({\n                    level: this.currentLevel,\n                    rawData: this.getFrequencyData(),\n                    timestamp: currentTime,\n                    history: this.getLevelHistory()\n                });\n            } catch (error) {\n            }\n        }\n    }\n\n    /**\n     * Emit volume spike event\n     * @param {Object} spikeData - Spike detection data\n     */\n    emitVolumeSpike(spikeData) {\n        if (this.callbacks.volumeSpike) {\n            try {\n                this.callbacks.volumeSpike(spikeData);\n            } catch (error) {\n            }\n        }\n    }\n\n    /**\n     * Emit error event\n     * @param {string} message - Error message\n     * @param {Error} error - Original error object\n     */\n    emitError(message, error) {\n        \n        if (this.callbacks.error) {\n            try {\n                this.callbacks.error({\n                    message,\n                    error,\n                    timestamp: performance.now()\n                });\n            } catch (callbackError) {\n            }\n        }\n    }\n\n    /**\n     * Check if Web Audio API is supported\n     * @returns {boolean} Support status\n     */\n    static isSupported() {\n        return !!(window.AudioContext || window.webkitAudioContext);\n    }\n}\n\nexport default AudioLevelProcessor;","/**\r\n * Event Manager\r\n * Centralized event listener management to prevent memory leaks\r\n *\r\n * @module core/EventManager\r\n * @version 1.0.0\r\n */\r\n\r\n/**\r\n * Manages all event listeners to ensure proper cleanup\r\n */\r\nexport class EventManager {\r\n    constructor() {\r\n        // Track all registered listeners\r\n        this.listeners = new Map();\r\n\r\n        // Track listener groups for batch operations\r\n        this.groups = new Map();\r\n\r\n        // Auto-cleanup on page unload\r\n        // Removed unload handler - not needed and causes violations\r\n\r\n        // Stats\r\n        this.stats = {\r\n            registered: 0,\r\n            removed: 0,\r\n            active: 0\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Register an event listener\r\n     * @param {EventTarget} target - Event target (element, window, document, etc.)\r\n     * @param {string} eventType - Event type (click, resize, etc.)\r\n     * @param {Function} handler - Event handler function\r\n     * @param {Object} options - addEventListener options\r\n     * @param {string} group - Optional group name for batch operations\r\n     * @returns {string} Listener ID for later removal\r\n     */\r\n    addEventListener(target, eventType, handler, options = {}, group = 'default') {\r\n        // Generate unique ID\r\n        const id = this.generateId();\r\n\r\n        // Create listener info\r\n        const listenerInfo = {\r\n            id,\r\n            target,\r\n            eventType,\r\n            handler,\r\n            options,\r\n            group,\r\n            active: true\r\n        };\r\n\r\n        // Store listener\r\n        this.listeners.set(id, listenerInfo);\r\n\r\n        // Add to group\r\n        if (!this.groups.has(group)) {\r\n            this.groups.set(group, new Set());\r\n        }\r\n        this.groups.get(group).add(id);\r\n\r\n        // Actually add the listener\r\n        target.addEventListener(eventType, handler, options);\r\n\r\n        // Update stats\r\n        this.stats.registered++;\r\n        this.stats.active++;\r\n\r\n        return id;\r\n    }\r\n\r\n    /**\r\n     * Remove an event listener by ID\r\n     * @param {string} id - Listener ID\r\n     * @returns {boolean} Success status\r\n     */\r\n    removeEventListener(id) {\r\n        const listenerInfo = this.listeners.get(id);\r\n\r\n        if (!listenerInfo || !listenerInfo.active) {\r\n            return false;\r\n        }\r\n\r\n        // Remove the actual listener\r\n        listenerInfo.target.removeEventListener(\r\n            listenerInfo.eventType,\r\n            listenerInfo.handler,\r\n            listenerInfo.options\r\n        );\r\n\r\n        // Mark as inactive\r\n        listenerInfo.active = false;\r\n\r\n        // Remove from group\r\n        const group = this.groups.get(listenerInfo.group);\r\n        if (group) {\r\n            group.delete(id);\r\n            if (group.size === 0) {\r\n                this.groups.delete(listenerInfo.group);\r\n            }\r\n        }\r\n\r\n        // Remove from listeners map\r\n        this.listeners.delete(id);\r\n\r\n        // Update stats\r\n        this.stats.removed++;\r\n        this.stats.active--;\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Remove all listeners in a group\r\n     * @param {string} group - Group name\r\n     * @returns {number} Number of listeners removed\r\n     */\r\n    removeGroup(group) {\r\n        const groupSet = this.groups.get(group);\r\n\r\n        if (!groupSet) {\r\n            return 0;\r\n        }\r\n\r\n        let removed = 0;\r\n\r\n        for (const id of groupSet) {\r\n            if (this.removeEventListener(id)) {\r\n                removed++;\r\n            }\r\n        }\r\n\r\n        return removed;\r\n    }\r\n\r\n    /**\r\n     * Remove all listeners for a specific target\r\n     * @param {EventTarget} target - Event target\r\n     * @returns {number} Number of listeners removed\r\n     */\r\n    removeAllForTarget(target) {\r\n        let removed = 0;\r\n\r\n        for (const [id, info] of this.listeners.entries()) {\r\n            if (info.target === target && info.active) {\r\n                if (this.removeEventListener(id)) {\r\n                    removed++;\r\n                }\r\n            }\r\n        }\r\n\r\n        return removed;\r\n    }\r\n\r\n    /**\r\n     * Remove all listeners of a specific type\r\n     * @param {string} eventType - Event type\r\n     * @returns {number} Number of listeners removed\r\n     */\r\n    removeAllOfType(eventType) {\r\n        let removed = 0;\r\n\r\n        for (const [id, info] of this.listeners.entries()) {\r\n            if (info.eventType === eventType && info.active) {\r\n                if (this.removeEventListener(id)) {\r\n                    removed++;\r\n                }\r\n            }\r\n        }\r\n\r\n        return removed;\r\n    }\r\n\r\n    /**\r\n     * Remove all listeners\r\n     * @returns {number} Number of listeners removed\r\n     */\r\n    removeAll() {\r\n        let removed = 0;\r\n\r\n        for (const [id, info] of this.listeners.entries()) {\r\n            if (info.active) {\r\n                if (this.removeEventListener(id)) {\r\n                    removed++;\r\n                }\r\n            }\r\n        }\r\n\r\n        return removed;\r\n    }\r\n\r\n    /**\r\n     * Create a bound listener that auto-removes\r\n     * @param {EventTarget} target - Event target\r\n     * @param {string} eventType - Event type\r\n     * @param {Function} handler - Event handler\r\n     * @param {Object} options - Options\r\n     * @returns {Object} Controller with remove method\r\n     */\r\n    createAutoRemove(target, eventType, handler, options = {}) {\r\n        const id = this.addEventListener(target, eventType, handler, options);\r\n\r\n        return {\r\n            id,\r\n            remove: () => this.removeEventListener(id)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Add listener that fires only once\r\n     * @param {EventTarget} target - Event target\r\n     * @param {string} eventType - Event type\r\n     * @param {Function} handler - Event handler\r\n     * @param {Object} options - Options\r\n     * @returns {string} Listener ID\r\n     */\r\n    once(target, eventType, handler, options = {}) {\r\n        const wrappedHandler = (event) => {\r\n            handler(event);\r\n            this.removeEventListener(id);\r\n        };\r\n\r\n        const id = this.addEventListener(target, eventType, wrappedHandler, options);\r\n\r\n        return id;\r\n    }\r\n\r\n    /**\r\n     * Debounced event listener\r\n     * @param {EventTarget} target - Event target\r\n     * @param {string} eventType - Event type\r\n     * @param {Function} handler - Event handler\r\n     * @param {number} delay - Debounce delay in ms\r\n     * @param {Object} options - Options\r\n     * @returns {string} Listener ID\r\n     */\r\n    debounced(target, eventType, handler, delay = 250, options = {}) {\r\n        let timeoutId;\r\n\r\n        const debouncedHandler = (event) => {\r\n            clearTimeout(timeoutId);\r\n            timeoutId = setTimeout(() => handler(event), delay);\r\n        };\r\n\r\n        return this.addEventListener(target, eventType, debouncedHandler, options);\r\n    }\r\n\r\n    /**\r\n     * Throttled event listener\r\n     * @param {EventTarget} target - Event target\r\n     * @param {string} eventType - Event type\r\n     * @param {Function} handler - Event handler\r\n     * @param {number} limit - Throttle limit in ms\r\n     * @param {Object} options - Options\r\n     * @returns {string} Listener ID\r\n     */\r\n    throttled(target, eventType, handler, limit = 100, options = {}) {\r\n        let inThrottle = false;\r\n\r\n        const throttledHandler = (event) => {\r\n            if (!inThrottle) {\r\n                handler(event);\r\n                inThrottle = true;\r\n                setTimeout(() => {\r\n                    inThrottle = false;\r\n                }, limit);\r\n            }\r\n        };\r\n\r\n        return this.addEventListener(target, eventType, throttledHandler, options);\r\n    }\r\n\r\n    // Removed setupUnloadHandler - causes permission violations\r\n    // Browser automatically cleans up event listeners on unload\r\n\r\n    /**\r\n     * Generate unique ID\r\n     * @private\r\n     * @returns {string} Unique ID\r\n     */\r\n    generateId() {\r\n        return `listener_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n    }\r\n\r\n    /**\r\n     * Get statistics\r\n     * @returns {Object} Statistics\r\n     */\r\n    getStats() {\r\n        return {\r\n            ...this.stats,\r\n            groups: this.groups.size,\r\n            listeners: this.listeners.size\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Get active listeners for debugging\r\n     * @returns {Array} Active listener info\r\n     */\r\n    getActiveListeners() {\r\n        const active = [];\r\n\r\n        for (const [id, info] of this.listeners.entries()) {\r\n            if (info.active) {\r\n                active.push({\r\n                    id,\r\n                    eventType: info.eventType,\r\n                    group: info.group,\r\n                    target: info.target.constructor.name\r\n                });\r\n            }\r\n        }\r\n\r\n        return active;\r\n    }\r\n\r\n    /**\r\n     * Check for potential memory leaks\r\n     * @returns {Object} Leak analysis\r\n     */\r\n    analyzeLeaks() {\r\n        const analysis = {\r\n            totalListeners: this.listeners.size,\r\n            activeListeners: this.stats.active,\r\n            inactiveButNotRemoved: 0,\r\n            byTarget: new Map(),\r\n            byType: new Map(),\r\n            potentialLeaks: []\r\n        };\r\n\r\n        for (const [id, info] of this.listeners.entries()) {\r\n            // Count by target\r\n            const targetName = info.target.constructor.name;\r\n            analysis.byTarget.set(\r\n                targetName,\r\n                (analysis.byTarget.get(targetName) || 0) + 1\r\n            );\r\n\r\n            // Count by type\r\n            analysis.byType.set(\r\n                info.eventType,\r\n                (analysis.byType.get(info.eventType) || 0) + 1\r\n            );\r\n\r\n            // Check for inactive but not removed\r\n            if (!info.active) {\r\n                analysis.inactiveButNotRemoved++;\r\n                analysis.potentialLeaks.push({\r\n                    id,\r\n                    eventType: info.eventType,\r\n                    target: targetName\r\n                });\r\n            }\r\n        }\r\n\r\n        // Convert maps to objects for easier reading\r\n        analysis.byTarget = Object.fromEntries(analysis.byTarget);\r\n        analysis.byType = Object.fromEntries(analysis.byType);\r\n\r\n        return analysis;\r\n    }\r\n\r\n    /**\r\n     * Clean up inactive listeners\r\n     * @returns {number} Number cleaned\r\n     */\r\n    cleanup() {\r\n        let cleaned = 0;\r\n\r\n        for (const [id, info] of this.listeners.entries()) {\r\n            if (!info.active) {\r\n                this.listeners.delete(id);\r\n                cleaned++;\r\n            }\r\n        }\r\n\r\n        return cleaned;\r\n    }\r\n}\r\n\r\n// Create singleton instance\r\nexport const eventManager = new EventManager();\r\n\r\n// Export for convenience\r\nexport default eventManager;","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE\r\n *  └─○═╝                                                                             \r\n *                   ◐ ◑ ◒ ◓  ACCESSIBILITY MANAGER  ◓ ◒ ◑ ◐                   \r\n *                                                                                    \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Accessibility Manager - Inclusive Design & A11y Support\r\n * @author Emotive Engine Team\r\n * @version 2.0.0\r\n * @module AccessibilityManager\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ Makes the Emotive Engine accessible to EVERYONE. Handles reduced motion,          \r\n * ║ screen readers, keyboard navigation, color blindness, and more.                   \r\n * ║ Because emotional expression should be universal.                                 \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ ♿ ACCESSIBILITY FEATURES                                                         \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ • Reduced Motion     : Respects prefers-reduced-motion                            \r\n * │ • High Contrast      : Enhanced visibility mode                                   \r\n * │ • Screen Readers     : ARIA labels and live announcements                         \r\n * │ • Keyboard Nav       : Full keyboard control support                              \r\n * │ • Focus Indicators   : Clear visual focus states                                  \r\n * │ • Color Blind Modes  : Protanopia, Deuteranopia, Tritanopia                       \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ 🎨 COLOR BLIND MODES                                                              \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ • none         : Standard colors                                                  \r\n * │ • protanopia   : Red-blind friendly palette                                       \r\n * │ • deuteranopia : Green-blind friendly palette                                     \r\n * │ • tritanopia   : Blue-blind friendly palette                                      \r\n * │ • highContrast : Maximum contrast (black/white/yellow)                            \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ ⌨️ KEYBOARD CONTROLS                                                              \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ • Tab/Shift+Tab : Navigate between elements                                      \r\n * │ • Enter/Space   : Activate focused element                                        \r\n * │ • Arrow Keys    : Directional navigation                                          \r\n * │ • Escape        : Cancel/close operations                                         \r\n * │ • Numbers 1-9   : Quick emotion selection                                         \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ 📢 SCREEN READER SUPPORT                                                          \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ • ARIA Labels      : Descriptive labels for all elements                          \r\n * │ • Live Regions     : Real-time state announcements                                \r\n * │ • Role Attributes  : Semantic HTML roles                                          \r\n * │ • State Changes    : Announced through live region                                \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ 🔧 CONFIGURATION OPTIONS                                                          \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ • enableReducedMotion      : Honor system preference (default: true)              \r\n * │ • enableHighContrast       : Allow high contrast mode (default: true)             \r\n * │ • enableScreenReaderSupport: ARIA and announcements (default: true)               \r\n * │ • enableKeyboardNavigation : Keyboard controls (default: true)                    \r\n * │ • announceStateChanges     : Announce emotion changes (default: true)             \r\n * │ • colorBlindMode          : Color adjustment mode (default: 'none')              \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ ⚠️  IMPORTANT CONSIDERATIONS                                                      \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ • Always test with screen readers (NVDA, JAWS, VoiceOver)                         \r\n * │ • Validate color contrasts meet WCAG 2.1 AA standards                             \r\n * │ • Ensure all interactive elements are keyboard accessible                         \r\n * │ • Provide alternative text for visual-only information                            \r\n * │ • Test with browser zoom at 200% and 400%                                        \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                         IMPLEMENTING ACCESSIBILITY                                \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ const a11y = new AccessibilityManager({                                           \r\n * ║     colorBlindMode: 'protanopia',                                                 \r\n * ║     announceStateChanges: true                                                    \r\n * ║ });                                                                                \r\n * ║                                                                                    \r\n * ║ // Announce emotion change                                                        \r\n * ║ a11y.announceStateChange('Emotion changed to joy');                               \r\n * ║                                                                                    \r\n * ║ // Apply reduced motion                                                           \r\n * ║ if (a11y.shouldReduceMotion()) {                                                  \r\n * ║     // Use simpler animations                                                     \r\n * ║ }                                                                                  \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * ════════════════════════════════════════════════════════════════════════════════════\r\n */\r\n\r\nexport class AccessibilityManager {\r\n    constructor(config = {}) {\r\n        this.config = {\r\n            enableReducedMotion: config.enableReducedMotion !== false,\r\n            enableHighContrast: config.enableHighContrast !== false,\r\n            enableScreenReaderSupport: config.enableScreenReaderSupport !== false,\r\n            enableKeyboardNavigation: config.enableKeyboardNavigation !== false,\r\n            enableFocusIndicators: config.enableFocusIndicators !== false,\r\n            announceStateChanges: config.announceStateChanges !== false,\r\n            colorBlindMode: config.colorBlindMode || 'none', // none, protanopia, deuteranopia, tritanopia\r\n            ...config\r\n        };\r\n        \r\n        // Accessibility state\r\n        this.reducedMotionPreferred = false;\r\n        this.highContrastEnabled = false;\r\n        this.screenReaderActive = false;\r\n        this.keyboardNavigationActive = false;\r\n        this.currentColorBlindMode = this.config.colorBlindMode;\r\n        \r\n        // Focus management\r\n        this.focusableElements = new Map();\r\n        this.currentFocusIndex = -1;\r\n        this.focusHistory = [];\r\n        \r\n        // ARIA live region for announcements\r\n        this.liveRegion = null;\r\n        this.announcementQueue = [];\r\n        \r\n        // Color schemes for different accessibility needs\r\n        this.colorSchemes = {\r\n            normal: null, // Will be set from current colors\r\n            highContrast: {\r\n                primary: '#FFFFFF',\r\n                secondary: '#000000',\r\n                accent: '#FFFF00',\r\n                background: '#000000',\r\n                particles: '#FFFFFF'\r\n            },\r\n            protanopia: { // Red-blind\r\n                primary: '#0066CC',\r\n                secondary: '#FFCC00',\r\n                accent: '#00CCFF',\r\n                background: '#1A1A1A',\r\n                particles: '#66CCFF'\r\n            },\r\n            deuteranopia: { // Green-blind\r\n                primary: '#0099FF',\r\n                secondary: '#FF9900',\r\n                accent: '#FF00FF',\r\n                background: '#1A1A1A',\r\n                particles: '#9966FF'\r\n            },\r\n            tritanopia: { // Blue-blind\r\n                primary: '#FF0066',\r\n                secondary: '#00FF66',\r\n                accent: '#FF6600',\r\n                background: '#1A1A1A',\r\n                particles: '#FFCC00'\r\n            }\r\n        };\r\n        \r\n        // Pattern overlays for color-blind modes\r\n        this.patterns = {\r\n            dots: 'dots',\r\n            stripes: 'stripes',\r\n            crosshatch: 'crosshatch',\r\n            solid: 'solid'\r\n        };\r\n        \r\n        // Emotional state patterns for color-blind users\r\n        this.statePatterns = {\r\n            idle: this.patterns.solid,\r\n            happy: this.patterns.dots,\r\n            excited: this.patterns.stripes,\r\n            calm: this.patterns.solid,\r\n            curious: this.patterns.crosshatch,\r\n            frustrated: this.patterns.stripes,\r\n            sad: this.patterns.dots,\r\n            neutral: this.patterns.solid\r\n        };\r\n        \r\n        // Initialize accessibility features\r\n        this.initialize();\r\n    }\r\n    \r\n    /**\r\n     * Initialize accessibility features\r\n     */\r\n    initialize() {\r\n        // Detect user preferences\r\n        this.detectUserPreferences();\r\n        \r\n        // Set up ARIA live region\r\n        this.setupLiveRegion();\r\n        \r\n        // Set up keyboard navigation if enabled\r\n        if (this.config.enableKeyboardNavigation) {\r\n            this.setupKeyboardNavigation();\r\n        }\r\n        \r\n        // Listen for preference changes\r\n        this.setupPreferenceListeners();\r\n        \r\n    }\r\n    \r\n    /**\r\n     * Detect user accessibility preferences\r\n     */\r\n    detectUserPreferences() {\r\n        // Detect reduced motion preference\r\n        if (this.config.enableReducedMotion && window.matchMedia) {\r\n            const motionQuery = window.matchMedia('(prefers-reduced-motion: reduce)');\r\n            this.reducedMotionPreferred = motionQuery.matches;\r\n        }\r\n        \r\n        // Detect high contrast preference\r\n        if (this.config.enableHighContrast && window.matchMedia) {\r\n            const contrastQuery = window.matchMedia('(prefers-contrast: high)');\r\n            this.highContrastEnabled = contrastQuery.matches;\r\n            \r\n            // Also check for Windows high contrast mode\r\n            if (!this.highContrastEnabled) {\r\n                const windowsHCQuery = window.matchMedia('(-ms-high-contrast: active)');\r\n                this.highContrastEnabled = windowsHCQuery.matches;\r\n            }\r\n        }\r\n        \r\n        // Detect screen reader (heuristic approach)\r\n        this.detectScreenReader();\r\n    }\r\n    \r\n    /**\r\n     * Detect if a screen reader is likely active\r\n     */\r\n    detectScreenReader() {\r\n        // Check for ARIA attributes being actively used\r\n        const hasAriaLive = document.querySelector('[aria-live]');\r\n        const hasAriaAtomic = document.querySelector('[aria-atomic]');\r\n        \r\n        // Check for screen reader specific attributes\r\n        const hasRole = document.querySelector('[role=\"application\"]');\r\n        \r\n        // Check user agent for assistive technology hints\r\n        const userAgent = navigator.userAgent.toLowerCase();\r\n        const hasATHints = userAgent.includes('nvda') || \r\n                          userAgent.includes('jaws') || \r\n                          userAgent.includes('voiceover');\r\n        \r\n        this.screenReaderActive = !!(hasAriaLive || hasAriaAtomic || hasRole || hasATHints);\r\n    }\r\n    \r\n    /**\r\n     * Set up ARIA live region for announcements\r\n     */\r\n    setupLiveRegion() {\r\n        if (!this.config.enableScreenReaderSupport) return;\r\n        \r\n        // Create live region if it doesn't exist\r\n        this.liveRegion = document.getElementById('mascot-announcements');\r\n        if (!this.liveRegion) {\r\n            this.liveRegion = document.createElement('div');\r\n            this.liveRegion.id = 'mascot-announcements';\r\n            this.liveRegion.setAttribute('aria-live', 'polite');\r\n            this.liveRegion.setAttribute('aria-atomic', 'true');\r\n            this.liveRegion.style.position = 'absolute';\r\n            this.liveRegion.style.left = '-10000px';\r\n            this.liveRegion.style.width = '1px';\r\n            this.liveRegion.style.height = '1px';\r\n            this.liveRegion.style.overflow = 'hidden';\r\n            document.body.appendChild(this.liveRegion);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Set up keyboard navigation\r\n     */\r\n    setupKeyboardNavigation() {\r\n        document.addEventListener('keydown', this.handleKeyDown.bind(this));\r\n        document.addEventListener('keyup', this.handleKeyUp.bind(this));\r\n    }\r\n    \r\n    /**\r\n     * Set up listeners for preference changes\r\n     */\r\n    setupPreferenceListeners() {\r\n        if (window.matchMedia) {\r\n            // Listen for reduced motion changes\r\n            const motionQuery = window.matchMedia('(prefers-reduced-motion: reduce)');\r\n            motionQuery.addListener((e) => {\r\n                this.reducedMotionPreferred = e.matches;\r\n                this.onPreferenceChange('reducedMotion', e.matches);\r\n            });\r\n            \r\n            // Listen for high contrast changes\r\n            const contrastQuery = window.matchMedia('(prefers-contrast: high)');\r\n            contrastQuery.addListener((e) => {\r\n                this.highContrastEnabled = e.matches;\r\n                this.onPreferenceChange('highContrast', e.matches);\r\n            });\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Handle keyboard navigation\r\n     * @param {KeyboardEvent} event - Keyboard event\r\n     */\r\n    handleKeyDown(event) {\r\n        if (!this.config.enableKeyboardNavigation) return;\r\n        \r\n        switch (event.key) {\r\n            case 'Tab':\r\n                event.preventDefault();\r\n                this.navigateFocus(event.shiftKey ? -1 : 1);\r\n                break;\r\n            case 'Enter':\r\n            case ' ':\r\n                this.activateCurrentFocus();\r\n                break;\r\n            case 'Escape':\r\n                this.clearFocus();\r\n                break;\r\n            case 'ArrowLeft':\r\n            case 'ArrowRight':\r\n            case 'ArrowUp':\r\n            case 'ArrowDown':\r\n                this.handleArrowNavigation(event.key);\r\n                break;\r\n        }\r\n        \r\n        this.keyboardNavigationActive = true;\r\n    }\r\n    \r\n    /**\r\n     * Handle key up events\r\n     * @param {KeyboardEvent} event - Keyboard event\r\n     */\r\n    handleKeyUp(event) {\r\n        // Could be used for specific key release actions\r\n    }\r\n    \r\n    /**\r\n     * Navigate focus between elements\r\n     * @param {number} direction - Direction to navigate (1 or -1)\r\n     */\r\n    navigateFocus(direction) {\r\n        const focusableArray = Array.from(this.focusableElements.values());\r\n        if (focusableArray.length === 0) return;\r\n        \r\n        this.currentFocusIndex += direction;\r\n        \r\n        // Wrap around\r\n        if (this.currentFocusIndex < 0) {\r\n            this.currentFocusIndex = focusableArray.length - 1;\r\n        } else if (this.currentFocusIndex >= focusableArray.length) {\r\n            this.currentFocusIndex = 0;\r\n        }\r\n        \r\n        const element = focusableArray[this.currentFocusIndex];\r\n        this.setFocus(element);\r\n        \r\n        // Announce focus change\r\n        if (element.label) {\r\n            this.announce(`Focused on ${element.label}`);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Handle arrow key navigation\r\n     * @param {string} key - Arrow key pressed\r\n     */\r\n    handleArrowNavigation(key) {\r\n        // This would be implemented based on spatial navigation needs\r\n        const directions = {\r\n            'ArrowLeft': { x: -1, y: 0 },\r\n            'ArrowRight': { x: 1, y: 0 },\r\n            'ArrowUp': { x: 0, y: -1 },\r\n            'ArrowDown': { x: 0, y: 1 }\r\n        };\r\n        \r\n        const direction = directions[key];\r\n        if (direction && this.onArrowNavigation) {\r\n            this.onArrowNavigation(direction);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Register a focusable element\r\n     * @param {string} id - Element identifier\r\n     * @param {Object} element - Element properties\r\n     */\r\n    registerFocusableElement(id, element) {\r\n        this.focusableElements.set(id, {\r\n            id,\r\n            label: element.label || id,\r\n            bounds: element.bounds || null,\r\n            action: element.action || null,\r\n            type: element.type || 'button'\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Unregister a focusable element\r\n     * @param {string} id - Element identifier\r\n     */\r\n    unregisterFocusableElement(id) {\r\n        this.focusableElements.delete(id);\r\n    }\r\n    \r\n    /**\r\n     * Set focus on an element\r\n     * @param {Object} element - Element to focus\r\n     */\r\n    setFocus(element) {\r\n        if (this.onFocusChange) {\r\n            this.onFocusChange(element);\r\n        }\r\n        \r\n        this.focusHistory.push(element.id);\r\n        if (this.focusHistory.length > 10) {\r\n            this.focusHistory.shift();\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Clear current focus\r\n     */\r\n    clearFocus() {\r\n        this.currentFocusIndex = -1;\r\n        if (this.onFocusChange) {\r\n            this.onFocusChange(null);\r\n        }\r\n        \r\n        this.announce('Focus cleared');\r\n    }\r\n    \r\n    /**\r\n     * Activate the currently focused element\r\n     */\r\n    activateCurrentFocus() {\r\n        const focusableArray = Array.from(this.focusableElements.values());\r\n        if (this.currentFocusIndex >= 0 && this.currentFocusIndex < focusableArray.length) {\r\n            const element = focusableArray[this.currentFocusIndex];\r\n            if (element.action) {\r\n                element.action();\r\n                this.announce(`Activated ${element.label}`);\r\n            }\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Announce a message to screen readers\r\n     * @param {string} message - Message to announce\r\n     * @param {string} priority - Priority level (polite, assertive)\r\n     */\r\n    announce(message, priority = 'polite') {\r\n        if (!this.config.enableScreenReaderSupport || !this.liveRegion) return;\r\n        \r\n        // Queue the announcement\r\n        this.announcementQueue.push({ message, priority });\r\n        \r\n        // Process queue\r\n        this.processAnnouncementQueue();\r\n    }\r\n    \r\n    /**\r\n     * Process announcement queue\r\n     */\r\n    processAnnouncementQueue() {\r\n        if (this.announcementQueue.length === 0) return;\r\n        \r\n        const { message, priority } = this.announcementQueue.shift();\r\n        \r\n        // Update live region\r\n        this.liveRegion.setAttribute('aria-live', priority);\r\n        this.liveRegion.textContent = message;\r\n        \r\n        // Clear after a delay to allow screen reader to announce\r\n        setTimeout(() => {\r\n            if (this.liveRegion) {\r\n                this.liveRegion.textContent = '';\r\n            }\r\n            \r\n            // Process next announcement if any\r\n            if (this.announcementQueue.length > 0) {\r\n                this.processAnnouncementQueue();\r\n            }\r\n        }, 100);\r\n    }\r\n    \r\n    /**\r\n     * Get adjusted animation settings based on accessibility preferences\r\n     * @param {Object} originalSettings - Original animation settings\r\n     * @returns {Object} Adjusted settings\r\n     */\r\n    getAnimationSettings(originalSettings = {}) {\r\n        if (!this.reducedMotionPreferred) {\r\n            return originalSettings;\r\n        }\r\n        \r\n        // Reduce or disable animations for users who prefer reduced motion\r\n        return {\r\n            ...originalSettings,\r\n            duration: originalSettings.duration ? originalSettings.duration * 0.5 : 0,\r\n            iterations: 1,\r\n            easing: 'linear',\r\n            particlesEnabled: false,\r\n            complexAnimations: false,\r\n            autoPlay: false\r\n        };\r\n    }\r\n    \r\n    /**\r\n     * Get adjusted color scheme based on accessibility preferences\r\n     * @param {Object} originalColors - Original color scheme\r\n     * @returns {Object} Adjusted colors\r\n     */\r\n    getColorScheme(originalColors = {}) {\r\n        // Store original colors if not set\r\n        if (!this.colorSchemes.normal) {\r\n            this.colorSchemes.normal = { ...originalColors };\r\n        }\r\n        \r\n        // Apply high contrast if needed\r\n        if (this.highContrastEnabled) {\r\n            return this.colorSchemes.highContrast;\r\n        }\r\n        \r\n        // Apply color blind mode if set\r\n        if (this.currentColorBlindMode !== 'none' && this.colorSchemes[this.currentColorBlindMode]) {\r\n            return this.colorSchemes[this.currentColorBlindMode];\r\n        }\r\n        \r\n        return originalColors;\r\n    }\r\n    \r\n    /**\r\n     * Get pattern for current state (for color blind users)\r\n     * @param {string} state - Current emotional state\r\n     * @returns {string} Pattern identifier\r\n     */\r\n    getStatePattern(state) {\r\n        if (this.currentColorBlindMode === 'none') {\r\n            return this.patterns.solid;\r\n        }\r\n        \r\n        return this.statePatterns[state] || this.patterns.solid;\r\n    }\r\n    \r\n    /**\r\n     * Apply pattern overlay to canvas\r\n     * @param {CanvasRenderingContext2D} ctx - Canvas context\r\n     * @param {string} pattern - Pattern type\r\n     * @param {Object} bounds - Area to apply pattern\r\n     */\r\n    applyPatternOverlay(ctx, pattern, bounds) {\r\n        if (pattern === this.patterns.solid) return;\r\n        \r\n        ctx.save();\r\n        \r\n        const patternCanvas = document.createElement('canvas');\r\n        const patternCtx = patternCanvas.getContext('2d');\r\n        \r\n        switch (pattern) {\r\n            case this.patterns.dots:\r\n                this.createDotPattern(patternCtx, patternCanvas);\r\n                break;\r\n            case this.patterns.stripes:\r\n                this.createStripePattern(patternCtx, patternCanvas);\r\n                break;\r\n            case this.patterns.crosshatch:\r\n                this.createCrosshatchPattern(patternCtx, patternCanvas);\r\n                break;\r\n        }\r\n        \r\n        const canvasPattern = ctx.createPattern(patternCanvas, 'repeat');\r\n        ctx.fillStyle = canvasPattern;\r\n        ctx.globalAlpha = 0.3; // Semi-transparent overlay\r\n        ctx.fillRect(bounds.x, bounds.y, bounds.width, bounds.height);\r\n        \r\n        ctx.restore();\r\n    }\r\n    \r\n    /**\r\n     * Create dot pattern\r\n     * @param {CanvasRenderingContext2D} ctx - Pattern canvas context\r\n     * @param {HTMLCanvasElement} canvas - Pattern canvas\r\n     */\r\n    createDotPattern(ctx, canvas) {\r\n        canvas.width = 10;\r\n        canvas.height = 10;\r\n        \r\n        ctx.fillStyle = 'white';\r\n        ctx.beginPath();\r\n        ctx.arc(5, 5, 2, 0, Math.PI * 2);\r\n        ctx.fill();\r\n    }\r\n    \r\n    /**\r\n     * Create stripe pattern\r\n     * @param {CanvasRenderingContext2D} ctx - Pattern canvas context\r\n     * @param {HTMLCanvasElement} canvas - Pattern canvas\r\n     */\r\n    createStripePattern(ctx, canvas) {\r\n        canvas.width = 10;\r\n        canvas.height = 10;\r\n        \r\n        ctx.strokeStyle = 'white';\r\n        ctx.lineWidth = 2;\r\n        ctx.beginPath();\r\n        ctx.moveTo(0, 10);\r\n        ctx.lineTo(10, 0);\r\n        ctx.stroke();\r\n    }\r\n    \r\n    /**\r\n     * Create crosshatch pattern\r\n     * @param {CanvasRenderingContext2D} ctx - Pattern canvas context\r\n     * @param {HTMLCanvasElement} canvas - Pattern canvas\r\n     */\r\n    createCrosshatchPattern(ctx, canvas) {\r\n        canvas.width = 10;\r\n        canvas.height = 10;\r\n        \r\n        ctx.strokeStyle = 'white';\r\n        ctx.lineWidth = 1;\r\n        \r\n        // Diagonal lines\r\n        ctx.beginPath();\r\n        ctx.moveTo(0, 10);\r\n        ctx.lineTo(10, 0);\r\n        ctx.stroke();\r\n        \r\n        ctx.beginPath();\r\n        ctx.moveTo(0, 0);\r\n        ctx.lineTo(10, 10);\r\n        ctx.stroke();\r\n    }\r\n    \r\n    /**\r\n     * Set color blind mode\r\n     * @param {string} mode - Color blind mode\r\n     */\r\n    setColorBlindMode(mode) {\r\n        const validModes = ['none', 'protanopia', 'deuteranopia', 'tritanopia'];\r\n        if (!validModes.includes(mode)) {\r\n            return;\r\n        }\r\n        \r\n        this.currentColorBlindMode = mode;\r\n        this.announce(`Color blind mode set to ${mode}`);\r\n        \r\n        if (this.onColorSchemeChange) {\r\n            this.onColorSchemeChange(this.getColorScheme());\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Get accessibility status report\r\n     * @returns {Object} Accessibility status\r\n     */\r\n    getStatus() {\r\n        return {\r\n            reducedMotion: this.reducedMotionPreferred,\r\n            highContrast: this.highContrastEnabled,\r\n            screenReader: this.screenReaderActive,\r\n            keyboardNavigation: this.keyboardNavigationActive,\r\n            colorBlindMode: this.currentColorBlindMode,\r\n            focusedElement: this.currentFocusIndex >= 0 ? \r\n                Array.from(this.focusableElements.values())[this.currentFocusIndex] : null,\r\n            registeredElements: this.focusableElements.size\r\n        };\r\n    }\r\n    \r\n    /**\r\n     * Handle preference change\r\n     * @param {string} preference - Preference that changed\r\n     * @param {*} value - New value\r\n     */\r\n    onPreferenceChange(preference, value) {\r\n        \r\n        // Notify about the change\r\n        this.announce(`${preference} is now ${value ? 'enabled' : 'disabled'}`);\r\n        \r\n        // Trigger callbacks if set\r\n        if (preference === 'reducedMotion' && this.onReducedMotionChange) {\r\n            this.onReducedMotionChange(value);\r\n        }\r\n        \r\n        if (preference === 'highContrast' && this.onHighContrastChange) {\r\n            this.onHighContrastChange(value);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Create ARIA description for mascot state\r\n     * @param {Object} state - Current mascot state\r\n     * @returns {string} ARIA description\r\n     */\r\n    createStateDescription(state) {\r\n        const descriptions = {\r\n            idle: 'Mascot is idle and gently breathing',\r\n            happy: 'Mascot is happy and bouncing',\r\n            excited: 'Mascot is excited with particles flying',\r\n            calm: 'Mascot is calm and peaceful',\r\n            curious: 'Mascot is curious and looking around',\r\n            frustrated: 'Mascot is frustrated and shaking',\r\n            sad: 'Mascot is sad and drooping',\r\n            neutral: 'Mascot is in a neutral state'\r\n        };\r\n        \r\n        return descriptions[state.emotional] || 'Mascot is active';\r\n    }\r\n    \r\n    /**\r\n     * Destroy accessibility manager\r\n     */\r\n    destroy() {\r\n        // Remove event listeners\r\n        document.removeEventListener('keydown', this.handleKeyDown);\r\n        document.removeEventListener('keyup', this.handleKeyUp);\r\n        \r\n        // Remove live region\r\n        if (this.liveRegion && this.liveRegion.parentNode) {\r\n            this.liveRegion.parentNode.removeChild(this.liveRegion);\r\n        }\r\n        \r\n        // Clear data\r\n        this.focusableElements.clear();\r\n        this.announcementQueue = [];\r\n        this.focusHistory = [];\r\n        \r\n    }\r\n}\r\n\r\nexport default AccessibilityManager;","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE\r\n *  └─○═╝                                                                             \r\n *                  ◐ ◑ ◒ ◓  MOBILE OPTIMIZATION  ◓ ◒ ◑ ◐                  \r\n *                                                                                    \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Mobile Optimization - Touch & Mobile Device Support\r\n * @author Emotive Engine Team\r\n * @version 2.0.0\r\n * @module MobileOptimization\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ Makes the orb TOUCHABLE and mobile-friendly. Handles all the quirks of           \r\n * ║ mobile browsers, touch events, viewport changes, and battery optimization.        \r\n * ║ Ensures smooth performance even on low-end phones.                               \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ 📱 MOBILE FEATURES                                                                 \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ • Touch event handling (tap, swipe, pinch)                                        \r\n * │ • Viewport resize handling                                                        \r\n * │ • Orientation change detection                                                    \r\n * │ • Battery-aware performance                                                       \r\n * │ • Reduced particle count on mobile                                                \r\n * │ • Touch-friendly interaction zones                                                \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ════════════════════════════════════════════════════════════════════════════════════\r\n */\r\n\r\nexport class MobileOptimization {\r\n    constructor(config = {}) {\r\n        this.config = {\r\n            enableTouchOptimization: config.enableTouchOptimization !== false,\r\n            enableViewportHandling: config.enableViewportHandling !== false,\r\n            enableBatteryOptimization: config.enableBatteryOptimization !== false,\r\n            enableOrientationSupport: config.enableOrientationSupport !== false,\r\n            enableResponsiveScaling: config.enableResponsiveScaling !== false,\r\n            touchSensitivity: config.touchSensitivity || 1.0,\r\n            doubleTapDelay: config.doubleTapDelay || 300,\r\n            swipeThreshold: config.swipeThreshold || 50,\r\n            pinchThreshold: config.pinchThreshold || 0.1,\r\n            ...config\r\n        };\r\n        \r\n        // Device detection\r\n        this.isMobile = this.detectMobile();\r\n        this.isTablet = this.detectTablet();\r\n        this.isTouchDevice = this.detectTouch();\r\n        this.isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);\r\n        this.isAndroid = /Android/.test(navigator.userAgent);\r\n        \r\n        // Touch state\r\n        this.touches = new Map();\r\n        this.lastTouchTime = 0;\r\n        this.lastTapTime = 0;\r\n        this.tapCount = 0;\r\n        this.touchStartPosition = null;\r\n        this.isPinching = false;\r\n        this.isRotating = false;\r\n        this.lastPinchDistance = 0;\r\n        this.lastRotation = 0;\r\n        \r\n        // Gesture recognition\r\n        this.currentGesture = null;\r\n        this.gestureStartTime = 0;\r\n        this.gestureHistory = [];\r\n        \r\n        // Viewport state\r\n        this.viewportSize = { width: window.innerWidth, height: window.innerHeight };\r\n        this.orientation = this.getOrientation();\r\n        this.pixelRatio = window.devicePixelRatio || 1;\r\n        this.lastViewportChange = 0;\r\n        \r\n        // Battery state\r\n        this.batteryLevel = 1.0;\r\n        this.isCharging = true;\r\n        this.lowPowerMode = false;\r\n        \r\n        // Performance adjustments for mobile\r\n        this.mobilePerformanceSettings = {\r\n            reducedParticles: this.isMobile,\r\n            simplifiedAnimations: this.isMobile,\r\n            lowerFrameRate: this.isMobile,\r\n            reducedEffects: this.isMobile || this.isTablet,\r\n            targetFPS: this.isMobile ? 30 : 60,\r\n            maxParticles: this.isMobile ? 20 : 50\r\n        };\r\n        \r\n        // Canvas optimization\r\n        this.canvasScale = 1.0;\r\n        this.useOffscreenCanvas = this.supportsOffscreenCanvas();\r\n        \r\n        // Event handlers bound to this\r\n        this.handleTouchStart = this.handleTouchStart.bind(this);\r\n        this.handleTouchMove = this.handleTouchMove.bind(this);\r\n        this.handleTouchEnd = this.handleTouchEnd.bind(this);\r\n        this.handleTouchCancel = this.handleTouchCancel.bind(this);\r\n        this.handleOrientationChange = this.handleOrientationChange.bind(this);\r\n        this.handleViewportChange = this.handleViewportChange.bind(this);\r\n        this.handleVisibilityChange = this.handleVisibilityChange.bind(this);\r\n        \r\n        // Initialize\r\n        this.initialize();\r\n    }\r\n    \r\n    /**\r\n     * Initialize mobile optimization\r\n     */\r\n    initialize() {\r\n        if (this.config.enableTouchOptimization && this.isTouchDevice) {\r\n            this.setupTouchHandlers();\r\n        }\r\n        \r\n        if (this.config.enableViewportHandling) {\r\n            this.setupViewportHandlers();\r\n        }\r\n        \r\n        if (this.config.enableBatteryOptimization) {\r\n            this.setupBatteryMonitoring();\r\n        }\r\n        \r\n        if (this.config.enableOrientationSupport) {\r\n            this.setupOrientationHandlers();\r\n        }\r\n        \r\n        // Apply initial optimizations\r\n        this.applyMobileOptimizations();\r\n    }\r\n    \r\n    /**\r\n     * Detect if device is mobile\r\n     * @returns {boolean} True if mobile device\r\n     */\r\n    detectMobile() {\r\n        const userAgent = navigator.userAgent.toLowerCase();\r\n        const mobileKeywords = ['android', 'iphone', 'ipod', 'windows phone', 'blackberry'];\r\n        \r\n        // Check user agent\r\n        const isMobileUA = mobileKeywords.some(keyword => userAgent.includes(keyword));\r\n        \r\n        // Check screen size\r\n        const isMobileSize = window.innerWidth <= 768;\r\n        \r\n        // Check for touch and small screen\r\n        const hasTouch = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\r\n        \r\n        return isMobileUA || (isMobileSize && hasTouch);\r\n    }\r\n    \r\n    /**\r\n     * Detect if device is tablet\r\n     * @returns {boolean} True if tablet device\r\n     */\r\n    detectTablet() {\r\n        const userAgent = navigator.userAgent.toLowerCase();\r\n        const isIPad = /ipad/.test(userAgent);\r\n        const isAndroidTablet = /android/.test(userAgent) && !/mobile/.test(userAgent);\r\n        const isWindowsTablet = /windows/.test(userAgent) && /touch/.test(userAgent);\r\n        \r\n        // Check screen size for tablet range\r\n        const isTabletSize = window.innerWidth > 768 && window.innerWidth <= 1024;\r\n        const hasTouch = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\r\n        \r\n        return isIPad || isAndroidTablet || isWindowsTablet || (isTabletSize && hasTouch);\r\n    }\r\n    \r\n    /**\r\n     * Detect touch support\r\n     * @returns {boolean} True if touch is supported\r\n     */\r\n    detectTouch() {\r\n        return 'ontouchstart' in window || \r\n               navigator.maxTouchPoints > 0 || \r\n               navigator.msMaxTouchPoints > 0;\r\n    }\r\n    \r\n    /**\r\n     * Check if offscreen canvas is supported\r\n     * @returns {boolean} True if OffscreenCanvas is supported\r\n     */\r\n    supportsOffscreenCanvas() {\r\n        return typeof OffscreenCanvas !== 'undefined';\r\n    }\r\n    \r\n    /**\r\n     * Set up touch event handlers\r\n     */\r\n    setupTouchHandlers() {\r\n        const canvas = this.getCanvas();\r\n        if (!canvas) return;\r\n        \r\n        // Prevent default touch behaviors\r\n        canvas.style.touchAction = 'none';\r\n        canvas.style.userSelect = 'none';\r\n        canvas.style.webkitUserSelect = 'none';\r\n        \r\n        // Add touch event listeners\r\n        canvas.addEventListener('touchstart', this.handleTouchStart, { passive: false });\r\n        canvas.addEventListener('touchmove', this.handleTouchMove, { passive: false });\r\n        canvas.addEventListener('touchend', this.handleTouchEnd, { passive: false });\r\n        canvas.addEventListener('touchcancel', this.handleTouchCancel, { passive: false });\r\n        \r\n        // Prevent context menu on long press\r\n        canvas.addEventListener('contextmenu', (e) => e.preventDefault());\r\n    }\r\n    \r\n    /**\r\n     * Set up viewport change handlers\r\n     */\r\n    setupViewportHandlers() {\r\n        window.addEventListener('resize', this.handleViewportChange);\r\n        window.addEventListener('orientationchange', this.handleOrientationChange);\r\n        \r\n        // Handle visibility changes for battery optimization\r\n        document.addEventListener('visibilitychange', this.handleVisibilityChange);\r\n        \r\n        // Handle viewport meta changes\r\n        this.setupViewportMeta();\r\n    }\r\n    \r\n    /**\r\n     * Set up viewport meta tag for mobile\r\n     */\r\n    setupViewportMeta() {\r\n        let viewportMeta = document.querySelector('meta[name=\"viewport\"]');\r\n        \r\n        if (!viewportMeta) {\r\n            viewportMeta = document.createElement('meta');\r\n            viewportMeta.name = 'viewport';\r\n            document.head.appendChild(viewportMeta);\r\n        }\r\n        \r\n        // Set optimal viewport for mobile\r\n        viewportMeta.content = 'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no';\r\n    }\r\n    \r\n    /**\r\n     * Set up battery monitoring\r\n     */\r\n    async setupBatteryMonitoring() {\r\n        if (!navigator.getBattery) return;\r\n        \r\n        try {\r\n            const battery = await navigator.getBattery();\r\n            \r\n            this.batteryLevel = battery.level;\r\n            this.isCharging = battery.charging;\r\n            \r\n            // Listen for battery changes\r\n            battery.addEventListener('levelchange', () => {\r\n                this.batteryLevel = battery.level;\r\n                this.onBatteryChange();\r\n            });\r\n            \r\n            battery.addEventListener('chargingchange', () => {\r\n                this.isCharging = battery.charging;\r\n                this.onBatteryChange();\r\n            });\r\n            \r\n            // Initial battery optimization\r\n            this.onBatteryChange();\r\n        } catch (error) {\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Set up orientation change handlers\r\n     */\r\n    setupOrientationHandlers() {\r\n        if (window.DeviceOrientationEvent) {\r\n            window.addEventListener('deviceorientation', (event) => {\r\n                this.handleDeviceOrientation(event);\r\n            });\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Handle touch start\r\n     * @param {TouchEvent} event - Touch event\r\n     */\r\n    handleTouchStart(event) {\r\n        event.preventDefault();\r\n        \r\n        const now = Date.now();\r\n        this.gestureStartTime = now;\r\n        \r\n        // Store all touches\r\n        for (const touch of event.touches) {\r\n            this.touches.set(touch.identifier, {\r\n                id: touch.identifier,\r\n                startX: touch.clientX,\r\n                startY: touch.clientY,\r\n                currentX: touch.clientX,\r\n                currentY: touch.clientY,\r\n                startTime: now\r\n            });\r\n        }\r\n        \r\n        // Handle different touch counts\r\n        if (event.touches.length === 1) {\r\n            this.handleSingleTouchStart(event.touches[0]);\r\n        } else if (event.touches.length === 2) {\r\n            this.handleMultiTouchStart(event.touches);\r\n        }\r\n        \r\n        // Emit touch event\r\n        this.emitTouchEvent('touchStart', {\r\n            touches: Array.from(this.touches.values()),\r\n            timestamp: now\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Handle single touch start\r\n     * @param {Touch} touch - Touch object\r\n     */\r\n    handleSingleTouchStart(touch) {\r\n        const now = Date.now();\r\n        \r\n        // Check for double tap\r\n        if (now - this.lastTapTime < this.config.doubleTapDelay) {\r\n            this.tapCount++;\r\n        } else {\r\n            this.tapCount = 1;\r\n        }\r\n        \r\n        this.lastTapTime = now;\r\n        this.touchStartPosition = { x: touch.clientX, y: touch.clientY };\r\n    }\r\n    \r\n    /**\r\n     * Handle multi-touch start\r\n     * @param {TouchList} touches - Touch list\r\n     */\r\n    handleMultiTouchStart(touches) {\r\n        if (touches.length === 2) {\r\n            // Initialize pinch/rotate\r\n            const touch1 = touches[0];\r\n            const touch2 = touches[1];\r\n            \r\n            this.lastPinchDistance = this.getDistance(\r\n                touch1.clientX, touch1.clientY,\r\n                touch2.clientX, touch2.clientY\r\n            );\r\n            \r\n            this.lastRotation = this.getAngle(\r\n                touch1.clientX, touch1.clientY,\r\n                touch2.clientX, touch2.clientY\r\n            );\r\n            \r\n            this.isPinching = true;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Handle touch move\r\n     * @param {TouchEvent} event - Touch event\r\n     */\r\n    handleTouchMove(event) {\r\n        event.preventDefault();\r\n        \r\n        // Update touch positions\r\n        for (const touch of event.touches) {\r\n            const storedTouch = this.touches.get(touch.identifier);\r\n            if (storedTouch) {\r\n                storedTouch.currentX = touch.clientX;\r\n                storedTouch.currentY = touch.clientY;\r\n            }\r\n        }\r\n        \r\n        // Handle gestures based on touch count\r\n        if (event.touches.length === 1) {\r\n            this.handleSingleTouchMove(event.touches[0]);\r\n        } else if (event.touches.length === 2) {\r\n            this.handleMultiTouchMove(event.touches);\r\n        }\r\n        \r\n        // Emit touch event\r\n        this.emitTouchEvent('touchMove', {\r\n            touches: Array.from(this.touches.values()),\r\n            gesture: this.currentGesture\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Handle single touch move\r\n     * @param {Touch} touch - Touch object\r\n     */\r\n    handleSingleTouchMove(touch) {\r\n        const storedTouch = this.touches.get(touch.identifier);\r\n        if (!storedTouch) return;\r\n        \r\n        const deltaX = touch.clientX - storedTouch.startX;\r\n        const deltaY = touch.clientY - storedTouch.startY;\r\n        const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\r\n        \r\n        // Detect swipe gesture\r\n        if (distance > this.config.swipeThreshold) {\r\n            const angle = Math.atan2(deltaY, deltaX) * 180 / Math.PI;\r\n            \r\n            if (Math.abs(deltaX) > Math.abs(deltaY)) {\r\n                this.currentGesture = deltaX > 0 ? 'swipeRight' : 'swipeLeft';\r\n            } else {\r\n                this.currentGesture = deltaY > 0 ? 'swipeDown' : 'swipeUp';\r\n            }\r\n        } else {\r\n            this.currentGesture = 'pan';\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Handle multi-touch move\r\n     * @param {TouchList} touches - Touch list\r\n     */\r\n    handleMultiTouchMove(touches) {\r\n        if (touches.length !== 2) return;\r\n        \r\n        const touch1 = touches[0];\r\n        const touch2 = touches[1];\r\n        \r\n        // Calculate pinch\r\n        const currentDistance = this.getDistance(\r\n            touch1.clientX, touch1.clientY,\r\n            touch2.clientX, touch2.clientY\r\n        );\r\n        \r\n        const pinchDelta = currentDistance - this.lastPinchDistance;\r\n        const pinchRatio = currentDistance / this.lastPinchDistance;\r\n        \r\n        if (Math.abs(pinchDelta) > this.config.pinchThreshold) {\r\n            this.currentGesture = pinchRatio > 1 ? 'pinchOut' : 'pinchIn';\r\n            \r\n            // Emit pinch event\r\n            this.emitTouchEvent('pinch', {\r\n                scale: pinchRatio,\r\n                delta: pinchDelta\r\n            });\r\n        }\r\n        \r\n        // Calculate rotation\r\n        const currentRotation = this.getAngle(\r\n            touch1.clientX, touch1.clientY,\r\n            touch2.clientX, touch2.clientY\r\n        );\r\n        \r\n        const rotationDelta = currentRotation - this.lastRotation;\r\n        \r\n        if (Math.abs(rotationDelta) > 5) { // 5 degree threshold\r\n            this.currentGesture = 'rotate';\r\n            \r\n            // Emit rotation event\r\n            this.emitTouchEvent('rotate', {\r\n                angle: currentRotation,\r\n                delta: rotationDelta\r\n            });\r\n        }\r\n        \r\n        this.lastPinchDistance = currentDistance;\r\n        this.lastRotation = currentRotation;\r\n    }\r\n    \r\n    /**\r\n     * Handle touch end\r\n     * @param {TouchEvent} event - Touch event\r\n     */\r\n    handleTouchEnd(event) {\r\n        event.preventDefault();\r\n        \r\n        const now = Date.now();\r\n        \r\n        // Process ended touches\r\n        for (const touch of event.changedTouches) {\r\n            const storedTouch = this.touches.get(touch.identifier);\r\n            \r\n            if (storedTouch) {\r\n                const duration = now - storedTouch.startTime;\r\n                const deltaX = storedTouch.currentX - storedTouch.startX;\r\n                const deltaY = storedTouch.currentY - storedTouch.startY;\r\n                const distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\r\n                \r\n                // Detect tap\r\n                if (duration < 300 && distance < 10) {\r\n                    if (this.tapCount === 2) {\r\n                        this.emitTouchEvent('doubleTap', {\r\n                            x: storedTouch.currentX,\r\n                            y: storedTouch.currentY\r\n                        });\r\n                        this.tapCount = 0;\r\n                    } else {\r\n                        this.emitTouchEvent('tap', {\r\n                            x: storedTouch.currentX,\r\n                            y: storedTouch.currentY\r\n                        });\r\n                    }\r\n                }\r\n                \r\n                // Detect long press\r\n                if (duration > 500 && distance < 10) {\r\n                    this.emitTouchEvent('longPress', {\r\n                        x: storedTouch.currentX,\r\n                        y: storedTouch.currentY\r\n                    });\r\n                }\r\n                \r\n                this.touches.delete(touch.identifier);\r\n            }\r\n        }\r\n        \r\n        // Reset gesture state\r\n        if (event.touches.length === 0) {\r\n            this.currentGesture = null;\r\n            this.isPinching = false;\r\n            this.isRotating = false;\r\n        }\r\n        \r\n        // Emit touch end event\r\n        this.emitTouchEvent('touchEnd', {\r\n            gesture: this.currentGesture,\r\n            duration: now - this.gestureStartTime\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Handle touch cancel\r\n     * @param {TouchEvent} event - Touch event\r\n     */\r\n    handleTouchCancel(event) {\r\n        // Clear all touches\r\n        this.touches.clear();\r\n        this.currentGesture = null;\r\n        this.isPinching = false;\r\n        this.isRotating = false;\r\n        \r\n        this.emitTouchEvent('touchCancel', {});\r\n    }\r\n    \r\n    /**\r\n     * Handle orientation change\r\n     * @param {Event} event - Orientation change event\r\n     */\r\n    handleOrientationChange(event) {\r\n        this.orientation = this.getOrientation();\r\n        \r\n        // Emit orientation change event\r\n        this.emitTouchEvent('orientationChange', {\r\n            orientation: this.orientation,\r\n            angle: window.orientation || 0\r\n        });\r\n        \r\n        // Apply orientation-specific optimizations\r\n        this.applyOrientationOptimizations();\r\n    }\r\n    \r\n    /**\r\n     * Handle device orientation\r\n     * @param {DeviceOrientationEvent} event - Device orientation event\r\n     */\r\n    handleDeviceOrientation(event) {\r\n        // Could be used for gyroscope-based interactions\r\n        const { alpha, beta, gamma } = event;\r\n        \r\n        this.emitTouchEvent('deviceOrientation', {\r\n            alpha, // Z axis rotation\r\n            beta,  // X axis rotation\r\n            gamma  // Y axis rotation\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Handle viewport change\r\n     * @param {Event} event - Resize event\r\n     */\r\n    handleViewportChange(event) {\r\n        const now = Date.now();\r\n        \r\n        // Debounce viewport changes\r\n        if (now - this.lastViewportChange < 100) return;\r\n        \r\n        this.lastViewportChange = now;\r\n        this.viewportSize = {\r\n            width: window.innerWidth,\r\n            height: window.innerHeight\r\n        };\r\n        \r\n        // Update pixel ratio\r\n        this.pixelRatio = window.devicePixelRatio || 1;\r\n        \r\n        // Emit viewport change event\r\n        this.emitTouchEvent('viewportChange', {\r\n            size: this.viewportSize,\r\n            pixelRatio: this.pixelRatio,\r\n            orientation: this.getOrientation()\r\n        });\r\n        \r\n        // Apply responsive scaling\r\n        if (this.config.enableResponsiveScaling) {\r\n            this.applyResponsiveScaling();\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Handle visibility change\r\n     * @param {Event} event - Visibility change event\r\n     */\r\n    handleVisibilityChange(event) {\r\n        const isVisible = !document.hidden;\r\n        \r\n        this.emitTouchEvent('visibilityChange', {\r\n            visible: isVisible\r\n        });\r\n        \r\n        // Apply optimizations based on visibility\r\n        if (!isVisible && this.config.enableBatteryOptimization) {\r\n            // Reduce performance when app is in background\r\n            this.applyBackgroundOptimizations();\r\n        } else {\r\n            // Restore performance when app is visible\r\n            this.restorePerformance();\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Get current orientation\r\n     * @returns {string} Orientation (portrait or landscape)\r\n     */\r\n    getOrientation() {\r\n        return window.innerWidth > window.innerHeight ? 'landscape' : 'portrait';\r\n    }\r\n    \r\n    /**\r\n     * Get distance between two points\r\n     * @param {number} x1 - First X coordinate\r\n     * @param {number} y1 - First Y coordinate\r\n     * @param {number} x2 - Second X coordinate\r\n     * @param {number} y2 - Second Y coordinate\r\n     * @returns {number} Distance\r\n     */\r\n    getDistance(x1, y1, x2, y2) {\r\n        const dx = x2 - x1;\r\n        const dy = y2 - y1;\r\n        return Math.sqrt(dx * dx + dy * dy);\r\n    }\r\n    \r\n    /**\r\n     * Get angle between two points\r\n     * @param {number} x1 - First X coordinate\r\n     * @param {number} y1 - First Y coordinate\r\n     * @param {number} x2 - Second X coordinate\r\n     * @param {number} y2 - Second Y coordinate\r\n     * @returns {number} Angle in degrees\r\n     */\r\n    getAngle(x1, y1, x2, y2) {\r\n        return Math.atan2(y2 - y1, x2 - x1) * 180 / Math.PI;\r\n    }\r\n    \r\n    /**\r\n     * Apply mobile optimizations\r\n     */\r\n    applyMobileOptimizations() {\r\n        if (!this.isMobile && !this.isTablet) return;\r\n        \r\n        const optimizations = {\r\n            ...this.mobilePerformanceSettings,\r\n            canvasScale: this.calculateOptimalCanvasScale(),\r\n            useWebGL: false, // Disable WebGL on mobile for battery\r\n            useOffscreenCanvas: this.useOffscreenCanvas\r\n        };\r\n        \r\n        // Emit optimization settings\r\n        this.emitTouchEvent('mobileOptimizations', optimizations);\r\n        \r\n        return optimizations;\r\n    }\r\n    \r\n    /**\r\n     * Apply orientation-specific optimizations\r\n     */\r\n    applyOrientationOptimizations() {\r\n        const isLandscape = this.orientation === 'landscape';\r\n        \r\n        const optimizations = {\r\n            layoutMode: isLandscape ? 'horizontal' : 'vertical',\r\n            particleDirection: isLandscape ? 'horizontal' : 'vertical',\r\n            uiScale: isLandscape ? 0.8 : 1.0\r\n        };\r\n        \r\n        this.emitTouchEvent('orientationOptimizations', optimizations);\r\n        \r\n        return optimizations;\r\n    }\r\n    \r\n    /**\r\n     * Apply responsive scaling\r\n     */\r\n    applyResponsiveScaling() {\r\n        const baseWidth = 375; // iPhone 6/7/8 width as base\r\n        const scaleFactor = Math.min(\r\n            this.viewportSize.width / baseWidth,\r\n            2.0 // Max scale factor\r\n        );\r\n        \r\n        this.canvasScale = scaleFactor;\r\n        \r\n        this.emitTouchEvent('responsiveScale', {\r\n            scale: this.canvasScale,\r\n            viewport: this.viewportSize\r\n        });\r\n        \r\n        return this.canvasScale;\r\n    }\r\n    \r\n    /**\r\n     * Apply background optimizations for battery saving\r\n     */\r\n    applyBackgroundOptimizations() {\r\n        const optimizations = {\r\n            targetFPS: 5, // Very low FPS in background\r\n            particlesEnabled: false,\r\n            animationsEnabled: false,\r\n            audioEnabled: false\r\n        };\r\n        \r\n        this.emitTouchEvent('backgroundOptimizations', optimizations);\r\n        \r\n        return optimizations;\r\n    }\r\n    \r\n    /**\r\n     * Restore performance settings\r\n     */\r\n    restorePerformance() {\r\n        const settings = this.applyMobileOptimizations();\r\n        \r\n        this.emitTouchEvent('performanceRestore', settings);\r\n        \r\n        return settings;\r\n    }\r\n    \r\n    /**\r\n     * Handle battery change\r\n     */\r\n    onBatteryChange() {\r\n        this.lowPowerMode = this.batteryLevel < 0.2 && !this.isCharging;\r\n        \r\n        if (this.lowPowerMode) {\r\n            // Apply low power optimizations\r\n            const optimizations = {\r\n                targetFPS: 15,\r\n                maxParticles: 5,\r\n                reducedEffects: true,\r\n                audioEnabled: false\r\n            };\r\n            \r\n            this.emitTouchEvent('lowPowerMode', {\r\n                batteryLevel: this.batteryLevel,\r\n                isCharging: this.isCharging,\r\n                optimizations\r\n            });\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Calculate optimal canvas scale for device\r\n     * @returns {number} Scale factor\r\n     */\r\n    calculateOptimalCanvasScale() {\r\n        // Balance between quality and performance\r\n        if (this.isMobile) {\r\n            return Math.min(this.pixelRatio, 2); // Cap at 2x for mobile\r\n        } else if (this.isTablet) {\r\n            return Math.min(this.pixelRatio, 2.5); // Slightly higher for tablets\r\n        }\r\n        \r\n        return this.pixelRatio; // Full resolution for desktop\r\n    }\r\n    \r\n    /**\r\n     * Get canvas element\r\n     * @returns {HTMLCanvasElement} Canvas element\r\n     */\r\n    getCanvas() {\r\n        // This would be set by the main application\r\n        return this.canvas || document.querySelector('canvas');\r\n    }\r\n    \r\n    /**\r\n     * Set canvas element\r\n     * @param {HTMLCanvasElement} canvas - Canvas element\r\n     */\r\n    setCanvas(canvas) {\r\n        this.canvas = canvas;\r\n        \r\n        if (this.config.enableTouchOptimization && this.isTouchDevice) {\r\n            this.setupTouchHandlers();\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Emit touch event\r\n     * @param {string} eventType - Event type\r\n     * @param {Object} data - Event data\r\n     */\r\n    emitTouchEvent(eventType, data) {\r\n        if (this.onTouchEvent) {\r\n            this.onTouchEvent(eventType, data);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Get mobile optimization status\r\n     * @returns {Object} Status report\r\n     */\r\n    getStatus() {\r\n        return {\r\n            device: {\r\n                isMobile: this.isMobile,\r\n                isTablet: this.isTablet,\r\n                isTouchDevice: this.isTouchDevice,\r\n                isIOS: this.isIOS,\r\n                isAndroid: this.isAndroid\r\n            },\r\n            viewport: {\r\n                size: this.viewportSize,\r\n                orientation: this.orientation,\r\n                pixelRatio: this.pixelRatio,\r\n                canvasScale: this.canvasScale\r\n            },\r\n            battery: {\r\n                level: this.batteryLevel,\r\n                isCharging: this.isCharging,\r\n                lowPowerMode: this.lowPowerMode\r\n            },\r\n            touch: {\r\n                activeTouches: this.touches.size,\r\n                currentGesture: this.currentGesture,\r\n                isPinching: this.isPinching,\r\n                isRotating: this.isRotating\r\n            },\r\n            performance: this.mobilePerformanceSettings\r\n        };\r\n    }\r\n    \r\n    /**\r\n     * Destroy mobile optimization\r\n     */\r\n    destroy() {\r\n        const canvas = this.getCanvas();\r\n        \r\n        if (canvas) {\r\n            canvas.removeEventListener('touchstart', this.handleTouchStart);\r\n            canvas.removeEventListener('touchmove', this.handleTouchMove);\r\n            canvas.removeEventListener('touchend', this.handleTouchEnd);\r\n            canvas.removeEventListener('touchcancel', this.handleTouchCancel);\r\n        }\r\n        \r\n        window.removeEventListener('resize', this.handleViewportChange);\r\n        window.removeEventListener('orientationchange', this.handleOrientationChange);\r\n        document.removeEventListener('visibilitychange', this.handleVisibilityChange);\r\n        \r\n        this.touches.clear();\r\n        this.gestureHistory = [];\r\n        \r\n    }\r\n}\r\n\r\nexport default MobileOptimization;","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE\r\n *  └─○═╝                                                                             \r\n *                      ◐ ◑ ◒ ◓  PLUGIN SYSTEM  ◓ ◒ ◑ ◐                      \r\n *                                                                                    \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Plugin System - Extensible Architecture for Custom Behaviors\r\n * @author Emotive Engine Team\r\n * @version 2.0.0\r\n * @module PluginSystem\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ The EXPANSION SLOT for creativity. Allows developers to extend the mascot         \r\n * ║ with custom emotions, gestures, particles, and behaviors without modifying        \r\n * ║ core code. Build your own emotional expressions!                                  \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ 🔌 PLUGIN TYPES                                                                    \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ • emotion  : Add custom emotional states                                          \r\n * │ • gesture  : Define new gesture animations                                        \r\n * │ • particle : Create custom particle behaviors                                     \r\n * │ • audio    : Add sound effects and tones                                          \r\n * │ • renderer : Modify rendering pipeline                                            \r\n * │ • behavior : Add complex behavioral patterns                                      \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ 🎯 LIFECYCLE HOOKS                                                                 \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ • init()     : Called when plugin is registered                                   \r\n * │ • update()   : Called every frame                                                 \r\n * │ • render()   : Called during render phase                                         \r\n * │ • destroy()  : Called when plugin is unregistered                                 \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ════════════════════════════════════════════════════════════════════════════════════\r\n */\r\n\r\nexport class PluginSystem {\r\n    constructor(config = {}) {\r\n        this.config = {\r\n            enablePlugins: config.enablePlugins !== false,\r\n            validatePlugins: config.validatePlugins !== false,\r\n            sandboxPlugins: config.sandboxPlugins !== false,\r\n            maxPlugins: config.maxPlugins || 50,\r\n            pluginTimeout: config.pluginTimeout || 5000,\r\n            allowOverrides: config.allowOverrides !== false,\r\n            ...config\r\n        };\r\n        \r\n        // Plugin registry\r\n        this.plugins = new Map();\r\n        this.pluginTypes = ['emotion', 'gesture', 'particle', 'audio', 'renderer', 'animation'];\r\n        this.pluginsByType = new Map(this.pluginTypes.map(type => [type, new Set()]));\r\n        \r\n        // Plugin dependencies\r\n        this.dependencies = new Map();\r\n        this.dependencyGraph = new Map();\r\n        \r\n        // Plugin lifecycle states\r\n        this.pluginStates = new Map();\r\n        this.loadingPlugins = new Set();\r\n        this.activePlugins = new Set();\r\n        \r\n        // Plugin hooks\r\n        this.hooks = new Map([\r\n            ['beforeInit', new Set()],\r\n            ['afterInit', new Set()],\r\n            ['beforeUpdate', new Set()],\r\n            ['afterUpdate', new Set()],\r\n            ['beforeRender', new Set()],\r\n            ['afterRender', new Set()],\r\n            ['beforeDestroy', new Set()],\r\n            ['afterDestroy', new Set()]\r\n        ]);\r\n        \r\n        // Plugin API exposed to plugins\r\n        this.pluginAPI = this.createPluginAPI();\r\n        \r\n        // Conflict resolution\r\n        this.conflicts = new Map();\r\n        this.resolutionStrategies = {\r\n            'override': this.overrideConflict.bind(this),\r\n            'merge': this.mergeConflict.bind(this),\r\n            'reject': this.rejectConflict.bind(this),\r\n            'queue': this.queueConflict.bind(this)\r\n        };\r\n        \r\n        // Plugin validation schemas\r\n        this.validationSchemas = this.createValidationSchemas();\r\n        \r\n        // Sandbox environment for plugins\r\n        this.sandbox = null;\r\n        if (this.config.sandboxPlugins) {\r\n            this.sandbox = this.createSandbox();\r\n        }\r\n        \r\n        // PluginSystem initialized\r\n    }\r\n    \r\n    /**\r\n     * Create plugin API exposed to plugins\r\n     * @returns {Object} Plugin API\r\n     */\r\n    createPluginAPI() {\r\n        return {\r\n            // Core functionality\r\n            registerHook: this.registerHook.bind(this),\r\n            emit: this.emitPluginEvent.bind(this),\r\n            on: this.onPluginEvent.bind(this),\r\n            \r\n            // Access to other plugins\r\n            getPlugin: this.getPlugin.bind(this),\r\n            hasPlugin: this.hasPlugin.bind(this),\r\n            \r\n            // Utilities\r\n            log: this.logFromPlugin.bind(this),\r\n            error: this.errorFromPlugin.bind(this),\r\n            \r\n            // State management\r\n            setState: this.setPluginState.bind(this),\r\n            getState: this.getPluginState.bind(this),\r\n            \r\n            // Configuration\r\n            getConfig: () => ({ ...this.config }),\r\n            \r\n            // Version info\r\n            version: '1.0.0'\r\n        };\r\n    }\r\n    \r\n    /**\r\n     * Create validation schemas for different plugin types\r\n     * @returns {Map} Validation schemas\r\n     */\r\n    createValidationSchemas() {\r\n        const schemas = new Map();\r\n        \r\n        // Base schema for all plugins\r\n        const baseSchema = {\r\n            name: { type: 'string', required: true },\r\n            version: { type: 'string', required: true },\r\n            type: { type: 'string', required: true, enum: this.pluginTypes },\r\n            description: { type: 'string', required: false },\r\n            author: { type: 'string', required: false },\r\n            dependencies: { type: 'array', required: false },\r\n            conflicts: { type: 'array', required: false },\r\n            init: { type: 'function', required: true },\r\n            destroy: { type: 'function', required: true }\r\n        };\r\n        \r\n        // Emotion plugin schema\r\n        schemas.set('emotion', {\r\n            ...baseSchema,\r\n            emotion: {\r\n                type: 'object',\r\n                required: true,\r\n                properties: {\r\n                    name: { type: 'string', required: true },\r\n                    color: { type: 'string', required: true },\r\n                    particleColor: { type: 'string', required: false },\r\n                    animation: { type: 'object', required: true },\r\n                    transitions: { type: 'object', required: false }\r\n                }\r\n            },\r\n            updateEmotion: { type: 'function', required: true },\r\n            renderEmotion: { type: 'function', required: false }\r\n        });\r\n        \r\n        // Gesture plugin schema\r\n        schemas.set('gesture', {\r\n            ...baseSchema,\r\n            gesture: {\r\n                type: 'object',\r\n                required: true,\r\n                properties: {\r\n                    name: { type: 'string', required: true },\r\n                    duration: { type: 'number', required: true },\r\n                    keyframes: { type: 'array', required: true },\r\n                    compatibility: { type: 'object', required: false }\r\n                }\r\n            },\r\n            executeGesture: { type: 'function', required: true },\r\n            canExecute: { type: 'function', required: false }\r\n        });\r\n        \r\n        // Particle plugin schema\r\n        schemas.set('particle', {\r\n            ...baseSchema,\r\n            particle: {\r\n                type: 'object',\r\n                required: true,\r\n                properties: {\r\n                    name: { type: 'string', required: true },\r\n                    maxParticles: { type: 'number', required: false },\r\n                    behavior: { type: 'function', required: true },\r\n                    render: { type: 'function', required: true }\r\n                }\r\n            },\r\n            updateParticles: { type: 'function', required: true },\r\n            spawnParticle: { type: 'function', required: false }\r\n        });\r\n        \r\n        // Audio plugin schema\r\n        schemas.set('audio', {\r\n            ...baseSchema,\r\n            audio: {\r\n                type: 'object',\r\n                required: true,\r\n                properties: {\r\n                    name: { type: 'string', required: true },\r\n                    sounds: { type: 'object', required: true },\r\n                    effects: { type: 'array', required: false }\r\n                }\r\n            },\r\n            playSound: { type: 'function', required: true },\r\n            processAudio: { type: 'function', required: false }\r\n        });\r\n        \r\n        return schemas;\r\n    }\r\n    \r\n    /**\r\n     * Create sandbox environment for plugin execution\r\n     * @returns {Object} Sandbox environment\r\n     */\r\n    createSandbox() {\r\n        // Create a limited execution environment\r\n        const sandbox = {\r\n            // Safe global objects\r\n            Math: Math,\r\n            Date: Date,\r\n            JSON: JSON,\r\n            \r\n            // Limited console\r\n            console: {\r\n                log: (...args) => null,\r\n                warn: (...args) => null,\r\n                error: (...args) => null\r\n            },\r\n            \r\n            // No access to window, document, or other globals\r\n            window: undefined,\r\n            document: undefined,\r\n            localStorage: undefined,\r\n            sessionStorage: undefined,\r\n            fetch: undefined,\r\n            XMLHttpRequest: undefined,\r\n            \r\n            // Plugin API\r\n            api: this.pluginAPI\r\n        };\r\n        \r\n        return sandbox;\r\n    }\r\n    \r\n    /**\r\n     * Register a plugin\r\n     * @param {Object} plugin - Plugin to register\r\n     * @returns {boolean} Success status\r\n     */\r\n    async registerPlugin(plugin) {\r\n        if (!this.config.enablePlugins) {\r\n            // Plugins are disabled\r\n            return false;\r\n        }\r\n        \r\n        // Check plugin limit\r\n        if (this.plugins.size >= this.config.maxPlugins) {\r\n            // Maximum plugin limit reached\r\n            return false;\r\n        }\r\n        \r\n        // Validate plugin\r\n        if (this.config.validatePlugins) {\r\n            const validation = this.validatePlugin(plugin);\r\n            if (!validation.valid) {\r\n                // Plugin validation failed\r\n                return false;\r\n            }\r\n        }\r\n        \r\n        // Check for conflicts\r\n        const conflicts = this.checkConflicts(plugin);\r\n        if (conflicts.length > 0 && !this.config.allowOverrides) {\r\n            // Plugin conflicts detected\r\n            return false;\r\n        }\r\n        \r\n        // Resolve dependencies\r\n        const dependencies = await this.resolveDependencies(plugin);\r\n        if (!dependencies.resolved) {\r\n            // Plugin dependencies not met\r\n            return false;\r\n        }\r\n        \r\n        // Initialize plugin in sandbox if enabled\r\n        try {\r\n            this.loadingPlugins.add(plugin.name);\r\n            \r\n            const context = this.config.sandboxPlugins ? this.sandbox : window;\r\n            const initialized = await this.initializePlugin(plugin, context);\r\n            \r\n            if (!initialized) {\r\n                throw new Error('Plugin initialization failed');\r\n            }\r\n            \r\n            // Register plugin\r\n            this.plugins.set(plugin.name, plugin);\r\n            this.pluginsByType.get(plugin.type).add(plugin.name);\r\n            this.pluginStates.set(plugin.name, 'active');\r\n            this.activePlugins.add(plugin.name);\r\n            \r\n            // Store dependencies\r\n            if (plugin.dependencies) {\r\n                this.dependencies.set(plugin.name, plugin.dependencies);\r\n                this.updateDependencyGraph(plugin.name, plugin.dependencies);\r\n            }\r\n            \r\n            // Register hooks if provided\r\n            if (plugin.hooks) {\r\n                Object.entries(plugin.hooks).forEach(([hook, handler]) => {\r\n                    this.registerHook(hook, handler, plugin.name);\r\n                });\r\n            }\r\n            \r\n            // Plugin registered\r\n            \r\n            // Emit registration event\r\n            this.emitPluginEvent('pluginRegistered', {\r\n                name: plugin.name,\r\n                type: plugin.type,\r\n                version: plugin.version\r\n            });\r\n            \r\n            return true;\r\n            \r\n        } catch (error) {\r\n            // Failed to register plugin\r\n            return false;\r\n        } finally {\r\n            this.loadingPlugins.delete(plugin.name);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Validate a plugin against its schema\r\n     * @param {Object} plugin - Plugin to validate\r\n     * @returns {Object} Validation result\r\n     */\r\n    validatePlugin(plugin) {\r\n        const errors = [];\r\n        \r\n        // Check required base properties\r\n        if (!plugin.name || typeof plugin.name !== 'string') {\r\n            errors.push('Plugin must have a valid name');\r\n        }\r\n        \r\n        if (!plugin.type || !this.pluginTypes.includes(plugin.type)) {\r\n            errors.push(`Plugin type must be one of: ${this.pluginTypes.join(', ')}`);\r\n        }\r\n        \r\n        if (!plugin.version || typeof plugin.version !== 'string') {\r\n            errors.push('Plugin must have a version');\r\n        }\r\n        \r\n        if (typeof plugin.init !== 'function') {\r\n            errors.push('Plugin must have an init function');\r\n        }\r\n        \r\n        if (typeof plugin.destroy !== 'function') {\r\n            errors.push('Plugin must have a destroy function');\r\n        }\r\n        \r\n        // Validate type-specific schema\r\n        if (plugin.type && this.validationSchemas.has(plugin.type)) {\r\n            const schema = this.validationSchemas.get(plugin.type);\r\n            const typeErrors = this.validateAgainstSchema(plugin, schema);\r\n            errors.push(...typeErrors);\r\n        }\r\n        \r\n        return {\r\n            valid: errors.length === 0,\r\n            errors\r\n        };\r\n    }\r\n    \r\n    /**\r\n     * Validate object against schema\r\n     * @param {Object} obj - Object to validate\r\n     * @param {Object} schema - Schema to validate against\r\n     * @returns {Array} Array of errors\r\n     */\r\n    validateAgainstSchema(obj, schema) {\r\n        const errors = [];\r\n        \r\n        Object.entries(schema).forEach(([key, rules]) => {\r\n            if (rules.required && !(key in obj)) {\r\n                errors.push(`Missing required property: ${key}`);\r\n            }\r\n            \r\n            if (key in obj) {\r\n                const value = obj[key];\r\n                \r\n                if (rules.type && typeof value !== rules.type) {\r\n                    errors.push(`Property ${key} must be of type ${rules.type}`);\r\n                }\r\n                \r\n                if (rules.enum && !rules.enum.includes(value)) {\r\n                    errors.push(`Property ${key} must be one of: ${rules.enum.join(', ')}`);\r\n                }\r\n                \r\n                if (rules.properties && typeof value === 'object') {\r\n                    const subErrors = this.validateAgainstSchema(value, rules.properties);\r\n                    errors.push(...subErrors.map(e => `${key}.${e}`));\r\n                }\r\n            }\r\n        });\r\n        \r\n        return errors;\r\n    }\r\n    \r\n    /**\r\n     * Check for plugin conflicts\r\n     * @param {Object} plugin - Plugin to check\r\n     * @returns {Array} Array of conflicts\r\n     */\r\n    checkConflicts(plugin) {\r\n        const conflicts = [];\r\n        \r\n        // Check explicit conflicts\r\n        if (plugin.conflicts) {\r\n            plugin.conflicts.forEach(conflictName => {\r\n                if (this.plugins.has(conflictName)) {\r\n                    conflicts.push(conflictName);\r\n                }\r\n            });\r\n        }\r\n        \r\n        // Check type-specific conflicts\r\n        if (plugin.type === 'emotion' || plugin.type === 'gesture') {\r\n            // Check for name collisions\r\n            this.plugins.forEach((existingPlugin) => {\r\n                if (existingPlugin.type === plugin.type) {\r\n                    const existingName = existingPlugin[plugin.type]?.name;\r\n                    const newName = plugin[plugin.type]?.name;\r\n                    \r\n                    if (existingName === newName) {\r\n                        conflicts.push(`${plugin.type} name collision: ${newName}`);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        \r\n        return conflicts;\r\n    }\r\n    \r\n    /**\r\n     * Resolve plugin dependencies\r\n     * @param {Object} plugin - Plugin to resolve dependencies for\r\n     * @returns {Object} Resolution result\r\n     */\r\n    async resolveDependencies(plugin) {\r\n        if (!plugin.dependencies || plugin.dependencies.length === 0) {\r\n            return { resolved: true, missing: [] };\r\n        }\r\n        \r\n        const missing = [];\r\n        \r\n        for (const dep of plugin.dependencies) {\r\n            // Check if dependency is already loaded\r\n            if (!this.plugins.has(dep)) {\r\n                // Try to load dependency\r\n                const loaded = await this.tryLoadDependency(dep);\r\n                if (!loaded) {\r\n                    missing.push(dep);\r\n                }\r\n            }\r\n        }\r\n        \r\n        return {\r\n            resolved: missing.length === 0,\r\n            missing\r\n        };\r\n    }\r\n    \r\n    /**\r\n     * Try to load a dependency\r\n     * @param {string} dependencyName - Dependency name\r\n     * @returns {boolean} Success status\r\n     */\r\n    async tryLoadDependency(dependencyName) {\r\n        // This would attempt to load the dependency\r\n        // For now, just check if it exists\r\n        return this.plugins.has(dependencyName);\r\n    }\r\n    \r\n    /**\r\n     * Update dependency graph\r\n     * @param {string} pluginName - Plugin name\r\n     * @param {Array} dependencies - Dependencies\r\n     */\r\n    updateDependencyGraph(pluginName, dependencies) {\r\n        this.dependencyGraph.set(pluginName, new Set(dependencies));\r\n        \r\n        // Update reverse dependencies\r\n        dependencies.forEach(dep => {\r\n            if (!this.dependencyGraph.has(dep)) {\r\n                this.dependencyGraph.set(dep, new Set());\r\n            }\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Initialize a plugin\r\n     * @param {Object} plugin - Plugin to initialize\r\n     * @param {Object} context - Execution context\r\n     * @returns {boolean} Success status\r\n     */\r\n    async initializePlugin(plugin, context) {\r\n        try {\r\n            // Set timeout for initialization\r\n            const timeout = new Promise((_, reject) => {\r\n                setTimeout(() => reject(new Error('Plugin initialization timeout')), this.config.pluginTimeout);\r\n            });\r\n            \r\n            // Initialize plugin\r\n            const init = plugin.init.bind(context);\r\n            const result = await Promise.race([\r\n                init(this.pluginAPI),\r\n                timeout\r\n            ]);\r\n            \r\n            return result !== false;\r\n        } catch (error) {\r\n            // Plugin initialization error\r\n            return false;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Unregister a plugin\r\n     * @param {string} pluginName - Name of plugin to unregister\r\n     * @returns {boolean} Success status\r\n     */\r\n    async unregisterPlugin(pluginName) {\r\n        const plugin = this.plugins.get(pluginName);\r\n        if (!plugin) {\r\n            // Plugin not found\r\n            return false;\r\n        }\r\n        \r\n        // Check for dependent plugins\r\n        const dependents = this.getDependentPlugins(pluginName);\r\n        if (dependents.length > 0) {\r\n            // Cannot unregister plugin - required by dependents\r\n            return false;\r\n        }\r\n        \r\n        try {\r\n            // Call destroy method\r\n            if (typeof plugin.destroy === 'function') {\r\n                await plugin.destroy();\r\n            }\r\n            \r\n            // Remove from registries\r\n            this.plugins.delete(pluginName);\r\n            this.pluginsByType.get(plugin.type).delete(pluginName);\r\n            this.pluginStates.delete(pluginName);\r\n            this.activePlugins.delete(pluginName);\r\n            this.dependencies.delete(pluginName);\r\n            this.dependencyGraph.delete(pluginName);\r\n            \r\n            // Remove hooks\r\n            this.hooks.forEach(hookSet => {\r\n                hookSet.forEach(hook => {\r\n                    if (hook.pluginName === pluginName) {\r\n                        hookSet.delete(hook);\r\n                    }\r\n                });\r\n            });\r\n            \r\n            // Plugin unregistered\r\n            \r\n            // Emit unregistration event\r\n            this.emitPluginEvent('pluginUnregistered', { name: pluginName });\r\n            \r\n            return true;\r\n        } catch (error) {\r\n            // Failed to unregister plugin\r\n            return false;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Get plugins dependent on a given plugin\r\n     * @param {string} pluginName - Plugin name\r\n     * @returns {Array} Array of dependent plugin names\r\n     */\r\n    getDependentPlugins(pluginName) {\r\n        const dependents = [];\r\n        \r\n        this.dependencies.forEach((deps, name) => {\r\n            if (deps.includes(pluginName)) {\r\n                dependents.push(name);\r\n            }\r\n        });\r\n        \r\n        return dependents;\r\n    }\r\n    \r\n    /**\r\n     * Register a hook handler\r\n     * @param {string} hookName - Hook name\r\n     * @param {Function} handler - Handler function\r\n     * @param {string} pluginName - Plugin name\r\n     */\r\n    registerHook(hookName, handler, pluginName) {\r\n        if (!this.hooks.has(hookName)) {\r\n            this.hooks.set(hookName, new Set());\r\n        }\r\n        \r\n        this.hooks.get(hookName).add({\r\n            handler,\r\n            pluginName\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Execute hooks for a given event\r\n     * @param {string} hookName - Hook name\r\n     * @param {*} data - Data to pass to hooks\r\n     * @returns {Array} Results from hooks\r\n     */\r\n    async executeHooks(hookName, data) {\r\n        const hooks = this.hooks.get(hookName);\r\n        if (!hooks || hooks.size === 0) return [];\r\n        \r\n        const results = [];\r\n        \r\n        for (const hook of hooks) {\r\n            try {\r\n                const result = await hook.handler(data);\r\n                results.push({ pluginName: hook.pluginName, result });\r\n            } catch (error) {\r\n                // Hook error in plugin\r\n            }\r\n        }\r\n        \r\n        return results;\r\n    }\r\n    \r\n    /**\r\n     * Get a plugin by name\r\n     * @param {string} pluginName - Plugin name\r\n     * @returns {Object} Plugin or null\r\n     */\r\n    getPlugin(pluginName) {\r\n        return this.plugins.get(pluginName) || null;\r\n    }\r\n    \r\n    /**\r\n     * Check if a plugin exists\r\n     * @param {string} pluginName - Plugin name\r\n     * @returns {boolean} True if plugin exists\r\n     */\r\n    hasPlugin(pluginName) {\r\n        return this.plugins.has(pluginName);\r\n    }\r\n    \r\n    /**\r\n     * Get plugins by type\r\n     * @param {string} type - Plugin type\r\n     * @returns {Array} Array of plugins\r\n     */\r\n    getPluginsByType(type) {\r\n        const pluginNames = this.pluginsByType.get(type);\r\n        if (!pluginNames) return [];\r\n        \r\n        return Array.from(pluginNames).map(name => this.plugins.get(name));\r\n    }\r\n    \r\n    /**\r\n     * Enable a plugin\r\n     * @param {string} pluginName - Plugin name\r\n     */\r\n    enablePlugin(pluginName) {\r\n        if (!this.plugins.has(pluginName)) return;\r\n        \r\n        this.pluginStates.set(pluginName, 'active');\r\n        this.activePlugins.add(pluginName);\r\n        \r\n        const plugin = this.plugins.get(pluginName);\r\n        if (plugin.onEnable) {\r\n            plugin.onEnable();\r\n        }\r\n        \r\n        this.emitPluginEvent('pluginEnabled', { name: pluginName });\r\n    }\r\n    \r\n    /**\r\n     * Disable a plugin\r\n     * @param {string} pluginName - Plugin name\r\n     */\r\n    disablePlugin(pluginName) {\r\n        if (!this.plugins.has(pluginName)) return;\r\n        \r\n        // Check dependents\r\n        const dependents = this.getDependentPlugins(pluginName);\r\n        if (dependents.length > 0) {\r\n            // Disabling plugin will affect dependents\r\n        }\r\n        \r\n        this.pluginStates.set(pluginName, 'disabled');\r\n        this.activePlugins.delete(pluginName);\r\n        \r\n        const plugin = this.plugins.get(pluginName);\r\n        if (plugin.onDisable) {\r\n            plugin.onDisable();\r\n        }\r\n        \r\n        this.emitPluginEvent('pluginDisabled', { name: pluginName });\r\n    }\r\n    \r\n    /**\r\n     * Emit plugin event\r\n     * @param {string} eventName - Event name\r\n     * @param {*} data - Event data\r\n     */\r\n    emitPluginEvent(eventName, data) {\r\n        // This would integrate with the main event system\r\n        if (this.onPluginEvent) {\r\n            this.onPluginEvent(eventName, data);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Listen for plugin events\r\n     * @param {string} eventName - Event name\r\n     * @param {Function} handler - Event handler\r\n     */\r\n    onPluginEvent(eventName, handler) {\r\n        // This would integrate with the main event system\r\n        // Placeholder for event listening\r\n    }\r\n    \r\n    /**\r\n     * Log from plugin context\r\n     * @param {string} pluginName - Plugin name\r\n     * @param {...*} args - Log arguments\r\n     */\r\n    logFromPlugin(pluginName, ...args) {\r\n        // Plugin log message\r\n    }\r\n    \r\n    /**\r\n     * Error from plugin context\r\n     * @param {string} pluginName - Plugin name\r\n     * @param {...*} args - Error arguments\r\n     */\r\n    errorFromPlugin(pluginName, ...args) {\r\n        // Plugin error message\r\n    }\r\n    \r\n    /**\r\n     * Set plugin state\r\n     * @param {string} pluginName - Plugin name\r\n     * @param {string} key - State key\r\n     * @param {*} value - State value\r\n     */\r\n    setPluginState(pluginName, key, value) {\r\n        if (!this.pluginStates.has(pluginName)) {\r\n            this.pluginStates.set(pluginName, {});\r\n        }\r\n        \r\n        const state = this.pluginStates.get(pluginName);\r\n        if (typeof state === 'object') {\r\n            state[key] = value;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Get plugin state\r\n     * @param {string} pluginName - Plugin name\r\n     * @param {string} key - State key\r\n     * @returns {*} State value\r\n     */\r\n    getPluginState(pluginName, key) {\r\n        const state = this.pluginStates.get(pluginName);\r\n        if (typeof state === 'object') {\r\n            return state[key];\r\n        }\r\n        return undefined;\r\n    }\r\n    \r\n    /**\r\n     * Conflict resolution strategies\r\n     */\r\n    overrideConflict(existing, incoming) {\r\n        return incoming; // New plugin overrides existing\r\n    }\r\n    \r\n    mergeConflict(existing, incoming) {\r\n        return { ...existing, ...incoming }; // Merge properties\r\n    }\r\n    \r\n    rejectConflict(existing, incoming) {\r\n        return existing; // Keep existing, reject new\r\n    }\r\n    \r\n    queueConflict(existing, incoming) {\r\n        return [existing, incoming]; // Queue both\r\n    }\r\n    \r\n    /**\r\n     * Get plugin system status\r\n     * @returns {Object} Status report\r\n     */\r\n    getStatus() {\r\n        return {\r\n            enabled: this.config.enablePlugins,\r\n            totalPlugins: this.plugins.size,\r\n            activePlugins: this.activePlugins.size,\r\n            loadingPlugins: this.loadingPlugins.size,\r\n            pluginsByType: Object.fromEntries(\r\n                Array.from(this.pluginsByType.entries()).map(([type, plugins]) => [type, plugins.size])\r\n            ),\r\n            hooks: Object.fromEntries(\r\n                Array.from(this.hooks.entries()).map(([hook, handlers]) => [hook, handlers.size])\r\n            )\r\n        };\r\n    }\r\n    \r\n    /**\r\n     * Destroy plugin system\r\n     */\r\n    async destroy() {\r\n        // Unregister all plugins\r\n        const pluginNames = Array.from(this.plugins.keys());\r\n        \r\n        for (const name of pluginNames) {\r\n            await this.unregisterPlugin(name);\r\n        }\r\n        \r\n        // Clear all data\r\n        this.plugins.clear();\r\n        this.pluginsByType.clear();\r\n        this.dependencies.clear();\r\n        this.dependencyGraph.clear();\r\n        this.pluginStates.clear();\r\n        this.activePlugins.clear();\r\n        this.loadingPlugins.clear();\r\n        this.hooks.clear();\r\n        this.conflicts.clear();\r\n        \r\n        // PluginSystem destroyed\r\n    }\r\n}\r\n\r\nexport default PluginSystem;","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE\r\n *  └─○═╝                                                                             \r\n *                 ◐ ◑ ◒ ◓  BROWSER COMPATIBILITY  ◓ ◒ ◑ ◐                 \r\n *                                                                                    \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Browser Compatibility - Feature Detection & Graceful Degradation\r\n * @author Emotive Engine Team\r\n * @version 2.0.0\r\n * @module BrowserCompatibility\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ The COMPATIBILITY LAYER of the engine. Ensures the Emotive Engine runs           \r\n * ║ smoothly across all modern browsers by detecting features, providing              \r\n * ║ polyfills, and enabling graceful degradation when features are missing.           \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ 🌐 BROWSER FEATURES                                                               \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ • Web Audio API detection and fallbacks                                           \r\n * │ • Canvas 2D context recovery and management                                       \r\n * │ • RequestAnimationFrame polyfills                                                 \r\n * │ • Device pixel ratio handling                                                     \r\n * │ • Performance API detection                                                       \r\n * │ • Media device capabilities                                                       \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ════════════════════════════════════════════════════════════════════════════════════\r\n */\r\n\r\n/**\r\n * Feature detection utilities\r\n */\r\nexport class FeatureDetection {\r\n    constructor() {\r\n        // Cache detection results to avoid repeated expensive checks\r\n        if (FeatureDetection._cachedFeatures) {\r\n            this.features = FeatureDetection._cachedFeatures;\r\n            this.capabilities = FeatureDetection._cachedCapabilities;\r\n            return;\r\n        }\r\n        \r\n        this.features = {\r\n            webAudio: this.detectWebAudio(),\r\n            canvas2d: this.detectCanvas2D(),\r\n            requestAnimationFrame: this.detectRequestAnimationFrame(),\r\n            devicePixelRatio: this.detectDevicePixelRatio(),\r\n            audioContext: this.detectAudioContext(),\r\n            mediaDevices: this.detectMediaDevices(),\r\n            performance: this.detectPerformance(),\r\n            intersectionObserver: this.detectIntersectionObserver()\r\n        };\r\n        \r\n        this.capabilities = this.assessCapabilities();\r\n        \r\n        // Cache results for future instantiations\r\n        FeatureDetection._cachedFeatures = this.features;\r\n        FeatureDetection._cachedCapabilities = this.capabilities;\r\n    }\r\n\r\n    /**\r\n     * Detect Web Audio API support\r\n     * @returns {boolean} True if Web Audio API is supported\r\n     */\r\n    detectWebAudio() {\r\n        try {\r\n            return !!(window.AudioContext || window.webkitAudioContext);\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Detect Canvas 2D support\r\n     * @returns {boolean} True if Canvas 2D is supported\r\n     */\r\n    detectCanvas2D() {\r\n        try {\r\n            const canvas = document.createElement('canvas');\r\n            return !!(canvas.getContext && canvas.getContext('2d'));\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Detect requestAnimationFrame support\r\n     * @returns {boolean} True if requestAnimationFrame is supported\r\n     */\r\n    detectRequestAnimationFrame() {\r\n        return !!(window.requestAnimationFrame || \r\n                 window.webkitRequestAnimationFrame || \r\n                 window.mozRequestAnimationFrame || \r\n                 window.oRequestAnimationFrame || \r\n                 window.msRequestAnimationFrame);\r\n    }\r\n\r\n    /**\r\n     * Detect device pixel ratio support\r\n     * @returns {boolean} True if devicePixelRatio is supported\r\n     */\r\n    detectDevicePixelRatio() {\r\n        return typeof window.devicePixelRatio === 'number';\r\n    }\r\n\r\n    /**\r\n     * Detect AudioContext support (more specific than Web Audio)\r\n     * @returns {boolean} True if AudioContext is supported\r\n     */\r\n    detectAudioContext() {\r\n        try {\r\n            const AudioContextClass = window.AudioContext || window.webkitAudioContext;\r\n            if (!AudioContextClass) return false;\r\n            \r\n            // Don't create a test context - just check if the class exists\r\n            // Creating contexts is expensive and has limits\r\n            return true;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Detect MediaDevices API support\r\n     * @returns {boolean} True if MediaDevices API is supported\r\n     */\r\n    detectMediaDevices() {\r\n        return !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia);\r\n    }\r\n\r\n    /**\r\n     * Detect Performance API support\r\n     * @returns {boolean} True if Performance API is supported\r\n     */\r\n    detectPerformance() {\r\n        return !!(window.performance && window.performance.now);\r\n    }\r\n\r\n    /**\r\n     * Detect Intersection Observer support\r\n     * @returns {boolean} True if Intersection Observer is supported\r\n     */\r\n    detectIntersectionObserver() {\r\n        return typeof window.IntersectionObserver === 'function';\r\n    }\r\n\r\n    /**\r\n     * Assess overall browser capabilities\r\n     * @returns {Object} Capability assessment\r\n     */\r\n    assessCapabilities() {\r\n        const score = Object.values(this.features).filter(Boolean).length;\r\n        const total = Object.keys(this.features).length;\r\n        const percentage = (score / total) * 100;\r\n\r\n        let level = 'basic';\r\n        if (percentage >= 90) level = 'full';\r\n        else if (percentage >= 70) level = 'good';\r\n        else if (percentage >= 50) level = 'limited';\r\n\r\n        return {\r\n            score,\r\n            total,\r\n            percentage,\r\n            level,\r\n            recommendations: this.getRecommendations(level)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Get recommendations based on capability level\r\n     * @param {string} level - Capability level\r\n     * @returns {Array<string>} Array of recommendations\r\n     */\r\n    getRecommendations(level) {\r\n        const recommendations = [];\r\n\r\n        if (!this.features.webAudio) {\r\n            recommendations.push('Audio features will be disabled');\r\n        }\r\n        if (!this.features.requestAnimationFrame) {\r\n            recommendations.push('Animation will use setTimeout fallback');\r\n        }\r\n        if (!this.features.performance) {\r\n            recommendations.push('Performance monitoring will be limited');\r\n        }\r\n        if (level === 'basic') {\r\n            recommendations.push('Consider using minimal build for better performance');\r\n        }\r\n\r\n        return recommendations;\r\n    }\r\n\r\n    /**\r\n     * Get all detected features\r\n     * @returns {Object} Feature detection results\r\n     */\r\n    getFeatures() {\r\n        return { ...this.features };\r\n    }\r\n\r\n    /**\r\n     * Get capability assessment\r\n     * @returns {Object} Capability assessment\r\n     */\r\n    getCapabilities() {\r\n        return { ...this.capabilities };\r\n    }\r\n}\r\n\r\n/**\r\n * Polyfill manager for missing browser features\r\n */\r\nexport class PolyfillManager {\r\n    constructor() {\r\n        this.polyfills = new Map();\r\n        this.applied = new Set();\r\n    }\r\n\r\n    /**\r\n     * Register a polyfill\r\n     * @param {string} feature - Feature name\r\n     * @param {Function} polyfillFn - Polyfill function\r\n     */\r\n    register(feature, polyfillFn) {\r\n        this.polyfills.set(feature, polyfillFn);\r\n    }\r\n\r\n    /**\r\n     * Apply a specific polyfill\r\n     * @param {string} feature - Feature name\r\n     * @returns {boolean} True if polyfill was applied\r\n     */\r\n    apply(feature) {\r\n        if (this.applied.has(feature)) {\r\n            return true; // Already applied\r\n        }\r\n\r\n        const polyfillFn = this.polyfills.get(feature);\r\n        if (!polyfillFn) {\r\n            // No polyfill registered for feature\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            polyfillFn();\r\n            this.applied.add(feature);\r\n            // Applied polyfill for feature\r\n            return true;\r\n        } catch (error) {\r\n            // Failed to apply polyfill for feature\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Apply all registered polyfills\r\n     * @returns {Array<string>} Array of successfully applied polyfills\r\n     */\r\n    applyAll() {\r\n        const applied = [];\r\n        for (const feature of this.polyfills.keys()) {\r\n            if (this.apply(feature)) {\r\n                applied.push(feature);\r\n            }\r\n        }\r\n        return applied;\r\n    }\r\n\r\n    /**\r\n     * Check if a polyfill has been applied\r\n     * @param {string} feature - Feature name\r\n     * @returns {boolean} True if polyfill has been applied\r\n     */\r\n    isApplied(feature) {\r\n        return this.applied.has(feature);\r\n    }\r\n}\r\n\r\n/**\r\n * RequestAnimationFrame polyfill\r\n */\r\nexport function polyfillRequestAnimationFrame() {\r\n    if (window.requestAnimationFrame) return;\r\n\r\n    // Try vendor prefixes first\r\n    window.requestAnimationFrame = \r\n        window.webkitRequestAnimationFrame ||\r\n        window.mozRequestAnimationFrame ||\r\n        window.oRequestAnimationFrame ||\r\n        window.msRequestAnimationFrame ||\r\n        function(callback) {\r\n            return window.setTimeout(function() {\r\n                callback(Date.now());\r\n            }, 1000 / 60); // 60 FPS fallback\r\n        };\r\n\r\n    window.cancelAnimationFrame = \r\n        window.webkitCancelAnimationFrame ||\r\n        window.mozCancelAnimationFrame ||\r\n        window.oCancelAnimationFrame ||\r\n        window.msCancelAnimationFrame ||\r\n        function(id) {\r\n            window.clearTimeout(id);\r\n        };\r\n}\r\n\r\n/**\r\n * Performance.now polyfill\r\n */\r\nexport function polyfillPerformanceNow() {\r\n    if (window.performance && window.performance.now) return;\r\n\r\n    if (!window.performance) {\r\n        window.performance = {};\r\n    }\r\n\r\n    const startTime = Date.now();\r\n    window.performance.now = function() {\r\n        return Date.now() - startTime;\r\n    };\r\n}\r\n\r\n/**\r\n * Web Audio API polyfill (basic fallback)\r\n */\r\nexport function polyfillWebAudio() {\r\n    if (window.AudioContext || window.webkitAudioContext) return;\r\n\r\n    // Create a minimal AudioContext-like interface\r\n    window.AudioContext = function() {\r\n        this.state = 'suspended';\r\n        this.sampleRate = 44100;\r\n        this.currentTime = 0;\r\n        this.destination = {\r\n            connect: function() {},\r\n            disconnect: function() {}\r\n        };\r\n\r\n        this.createGain = function() {\r\n            return {\r\n                gain: { value: 1 },\r\n                connect: function() {},\r\n                disconnect: function() {}\r\n            };\r\n        };\r\n\r\n        this.createOscillator = function() {\r\n            return {\r\n                frequency: { value: 440 },\r\n                type: 'sine',\r\n                start: function() {},\r\n                stop: function() {},\r\n                connect: function() {},\r\n                disconnect: function() {}\r\n            };\r\n        };\r\n\r\n        this.createAnalyser = function() {\r\n            return {\r\n                fftSize: 2048,\r\n                frequencyBinCount: 1024,\r\n                getByteFrequencyData: function(array) {\r\n                    // Fill with zeros\r\n                    for (let i = 0; i < array.length; i++) {\r\n                        array[i] = 0;\r\n                    }\r\n                },\r\n                connect: function() {},\r\n                disconnect: function() {}\r\n            };\r\n        };\r\n\r\n        this.resume = function() {\r\n            this.state = 'running';\r\n            return Promise.resolve();\r\n        };\r\n\r\n        this.suspend = function() {\r\n            this.state = 'suspended';\r\n            return Promise.resolve();\r\n        };\r\n\r\n        this.close = function() {\r\n            this.state = 'closed';\r\n            return Promise.resolve();\r\n        };\r\n    };\r\n\r\n    // Web Audio API not supported - using fallback implementation\r\n}\r\n\r\n/**\r\n * Canvas context recovery utilities\r\n */\r\nexport class CanvasContextRecovery {\r\n    constructor(canvas) {\r\n        this.canvas = canvas;\r\n        this.context = null;\r\n        this.isContextLost = false;\r\n        this.recoveryCallbacks = [];\r\n        \r\n        this.setupContextLossHandling();\r\n    }\r\n\r\n    /**\r\n     * Set up context loss and recovery handling\r\n     */\r\n    setupContextLossHandling() {\r\n        this.canvas.addEventListener('webglcontextlost', (event) => {\r\n            event.preventDefault();\r\n            this.isContextLost = true;\r\n            // Canvas context lost\r\n        });\r\n\r\n        this.canvas.addEventListener('webglcontextrestored', () => {\r\n            this.isContextLost = false;\r\n            this.context = this.canvas.getContext('2d');\r\n            // Canvas context restored\r\n            \r\n            // Execute recovery callbacks\r\n            this.recoveryCallbacks.forEach(callback => {\r\n                try {\r\n                    callback(this.context);\r\n                } catch (error) {\r\n                    // Context recovery callback failed\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get the canvas context with recovery handling\r\n     * @returns {CanvasRenderingContext2D|null} Canvas context or null if lost\r\n     */\r\n    getContext() {\r\n        if (this.isContextLost) {\r\n            return null;\r\n        }\r\n\r\n        if (!this.context) {\r\n            try {\r\n                this.context = this.canvas.getContext('2d');\r\n            } catch (error) {\r\n                // Failed to get canvas context\r\n                return null;\r\n            }\r\n        }\r\n\r\n        return this.context;\r\n    }\r\n\r\n    /**\r\n     * Add a callback to execute when context is recovered\r\n     * @param {Function} callback - Recovery callback\r\n     */\r\n    onRecovery(callback) {\r\n        this.recoveryCallbacks.push(callback);\r\n    }\r\n\r\n    /**\r\n     * Check if context is currently lost\r\n     * @returns {boolean} True if context is lost\r\n     */\r\n    isLost() {\r\n        return this.isContextLost;\r\n    }\r\n\r\n    /**\r\n     * Attempt to recover the context manually\r\n     * @returns {boolean} True if recovery was successful\r\n     */\r\n    recover() {\r\n        if (!this.isContextLost) {\r\n            return true;\r\n        }\r\n\r\n        try {\r\n            this.context = this.canvas.getContext('2d');\r\n            if (this.context) {\r\n                this.isContextLost = false;\r\n                return true;\r\n            }\r\n        } catch (error) {\r\n            // Manual context recovery failed\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n\r\n/**\r\n * Browser-specific optimization manager\r\n */\r\nexport class BrowserOptimizations {\r\n    constructor() {\r\n        // Cache browser detection\r\n        if (BrowserOptimizations._cachedBrowser) {\r\n            this.browser = BrowserOptimizations._cachedBrowser;\r\n            this.optimizations = BrowserOptimizations._cachedOptimizations;\r\n            return;\r\n        }\r\n        \r\n        this.browser = this.detectBrowser();\r\n        this.optimizations = new Map();\r\n        this.setupOptimizations();\r\n        \r\n        // Cache for future instances\r\n        BrowserOptimizations._cachedBrowser = this.browser;\r\n        BrowserOptimizations._cachedOptimizations = this.optimizations;\r\n    }\r\n\r\n    /**\r\n     * Detect the current browser\r\n     * @returns {Object} Browser information\r\n     */\r\n    detectBrowser() {\r\n        const userAgent = navigator.userAgent;\r\n        \r\n        let name = 'unknown';\r\n        let version = 'unknown';\r\n        \r\n        if (userAgent.includes('Chrome')) {\r\n            name = 'chrome';\r\n            const match = userAgent.match(/Chrome\\/(\\d+)/);\r\n            version = match ? match[1] : 'unknown';\r\n        } else if (userAgent.includes('Firefox')) {\r\n            name = 'firefox';\r\n            const match = userAgent.match(/Firefox\\/(\\d+)/);\r\n            version = match ? match[1] : 'unknown';\r\n        } else if (userAgent.includes('Safari') && !userAgent.includes('Chrome')) {\r\n            name = 'safari';\r\n            const match = userAgent.match(/Version\\/(\\d+)/);\r\n            version = match ? match[1] : 'unknown';\r\n        } else if (userAgent.includes('Edge')) {\r\n            name = 'edge';\r\n            const match = userAgent.match(/Edge\\/(\\d+)/);\r\n            version = match ? match[1] : 'unknown';\r\n        }\r\n\r\n        return { name, version, userAgent };\r\n    }\r\n\r\n    /**\r\n     * Set up browser-specific optimizations\r\n     */\r\n    setupOptimizations() {\r\n        // Chrome optimizations\r\n        this.optimizations.set('chrome', {\r\n            preferredAnimationMethod: 'requestAnimationFrame',\r\n            audioContextOptions: { latencyHint: 'interactive' },\r\n            canvasOptimizations: ['willReadFrequently'],\r\n            particleLimit: 50\r\n        });\r\n\r\n        // Firefox optimizations\r\n        this.optimizations.set('firefox', {\r\n            preferredAnimationMethod: 'requestAnimationFrame',\r\n            audioContextOptions: { latencyHint: 'balanced' },\r\n            canvasOptimizations: [],\r\n            particleLimit: 40\r\n        });\r\n\r\n        // Safari optimizations\r\n        this.optimizations.set('safari', {\r\n            preferredAnimationMethod: 'requestAnimationFrame',\r\n            audioContextOptions: { latencyHint: 'playback' },\r\n            canvasOptimizations: [],\r\n            particleLimit: 30\r\n        });\r\n\r\n        // Edge optimizations\r\n        this.optimizations.set('edge', {\r\n            preferredAnimationMethod: 'requestAnimationFrame',\r\n            audioContextOptions: { latencyHint: 'interactive' },\r\n            canvasOptimizations: ['willReadFrequently'],\r\n            particleLimit: 45\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get optimizations for the current browser\r\n     * @returns {Object} Browser-specific optimizations\r\n     */\r\n    getOptimizations() {\r\n        return this.optimizations.get(this.browser.name) || this.optimizations.get('chrome');\r\n    }\r\n\r\n    /**\r\n     * Get browser information\r\n     * @returns {Object} Browser information\r\n     */\r\n    getBrowser() {\r\n        return { ...this.browser };\r\n    }\r\n\r\n    /**\r\n     * Apply canvas optimizations\r\n     * @param {HTMLCanvasElement} canvas - Canvas element\r\n     * @param {CanvasRenderingContext2D} context - Canvas context\r\n     */\r\n    applyCanvasOptimizations(canvas, context) {\r\n        const opts = this.getOptimizations();\r\n        \r\n        if (opts.canvasOptimizations.includes('willReadFrequently')) {\r\n            try {\r\n                // Re-get context with optimization hint\r\n                const optimizedContext = canvas.getContext('2d', { willReadFrequently: true });\r\n                if (optimizedContext) {\r\n                    // Applied willReadFrequently optimization\r\n                }\r\n            } catch (error) {\r\n                // Failed to apply canvas optimization\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get recommended particle limit for current browser\r\n     * @returns {number} Recommended particle limit\r\n     */\r\n    getRecommendedParticleLimit() {\r\n        return this.getOptimizations().particleLimit;\r\n    }\r\n\r\n    /**\r\n     * Get audio context options for current browser\r\n     * @returns {Object} Audio context options\r\n     */\r\n    getAudioContextOptions() {\r\n        return this.getOptimizations().audioContextOptions;\r\n    }\r\n}\r\n\r\n/**\r\n * Initialize all polyfills and compatibility features\r\n * @returns {Object} Initialization results\r\n */\r\nlet _initializationCache = null;\r\n\r\nexport function initializeBrowserCompatibility() {\r\n    // Return cached result if already initialized\r\n    if (_initializationCache) {\r\n        return _initializationCache;\r\n    }\r\n    \r\n    const featureDetection = new FeatureDetection();\r\n    const polyfillManager = new PolyfillManager();\r\n    const browserOptimizations = new BrowserOptimizations();\r\n\r\n    // Register polyfills\r\n    polyfillManager.register('requestAnimationFrame', polyfillRequestAnimationFrame);\r\n    polyfillManager.register('performanceNow', polyfillPerformanceNow);\r\n    polyfillManager.register('webAudio', polyfillWebAudio);\r\n\r\n    // Apply necessary polyfills based on feature detection\r\n    const appliedPolyfills = [];\r\n    \r\n    if (!featureDetection.features.requestAnimationFrame) {\r\n        if (polyfillManager.apply('requestAnimationFrame')) {\r\n            appliedPolyfills.push('requestAnimationFrame');\r\n        }\r\n    }\r\n    \r\n    if (!featureDetection.features.performance) {\r\n        if (polyfillManager.apply('performanceNow')) {\r\n            appliedPolyfills.push('performanceNow');\r\n        }\r\n    }\r\n    \r\n    if (!featureDetection.features.webAudio) {\r\n        if (polyfillManager.apply('webAudio')) {\r\n            appliedPolyfills.push('webAudio');\r\n        }\r\n    }\r\n\r\n    // Cache the result\r\n    _initializationCache = {\r\n        featureDetection,\r\n        polyfillManager,\r\n        browserOptimizations,\r\n        appliedPolyfills,\r\n        capabilities: featureDetection.getCapabilities(),\r\n        browser: browserOptimizations.getBrowser()\r\n    };\r\n    \r\n    return _initializationCache;\r\n}\r\n\r\n// Create singleton instance lazily\r\nlet _browserCompatibilityInstance = null;\r\n\r\nexport function getBrowserCompatibility() {\r\n    if (!_browserCompatibilityInstance) {\r\n        _browserCompatibilityInstance = initializeBrowserCompatibility();\r\n    }\r\n    return _browserCompatibilityInstance;\r\n}\r\n\r\n// Export getter for backward compatibility\r\nexport const browserCompatibility = getBrowserCompatibility();","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE\r\n *  └─○═╝                                                                             \r\n *                      ◐ ◑ ◒ ◓  DEBUGGER  ◓ ◒ ◑ ◐                      \r\n *                                                                                    \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Debugger - Enhanced Logging & Performance Profiling\r\n * @author Emotive Engine Team\r\n * @version 2.0.0\r\n * @module Debugger\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ The DIAGNOSTIC CENTER of the engine. Provides comprehensive debugging tools,      \r\n * ║ performance profiling, memory tracking, and runtime diagnostics to ensure         \r\n * ║ smooth operation and help developers optimize their implementations.              \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ 🐛 DEBUG FEATURES                                                                 \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ • Multi-level logging (NONE, ERROR, WARN, INFO, DEBUG, TRACE)                     \r\n * │ • Performance profiling with timing metrics                                       \r\n * │ • Memory usage tracking and leak detection                                        \r\n * │ • Error tracking and stack trace capture                                          \r\n * │ • Runtime capability detection                                                    \r\n * │ • Visual debugging overlays                                                       \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ════════════════════════════════════════════════════════════════════════════════════\r\n */\r\n\r\n/**\r\n * Debug levels for controlling log output\r\n */\r\nexport const DebugLevel = {\r\n    NONE: 0,\r\n    ERROR: 1,\r\n    WARN: 2,\r\n    INFO: 3,\r\n    DEBUG: 4,\r\n    TRACE: 5\r\n};\r\n\r\n/**\r\n * Enhanced debugger with performance profiling and error tracking\r\n */\r\nexport class EmotiveDebugger {\r\n    constructor(config = {}) {\r\n        this.config = {\r\n            enabled: config.enabled !== false,\r\n            level: config.level || DebugLevel.INFO,\r\n            enableProfiling: config.enableProfiling !== false,\r\n            enableErrorTracking: config.enableErrorTracking !== false,\r\n            enableMemoryTracking: config.enableMemoryTracking !== false,\r\n            maxLogEntries: config.maxLogEntries || 1000,\r\n            maxProfileEntries: config.maxProfileEntries || 500,\r\n            ...config\r\n        };\r\n\r\n        // Log storage\r\n        this.logs = [];\r\n        this.errors = [];\r\n        this.profiles = new Map();\r\n        this.memorySnapshots = [];\r\n        \r\n        // Performance tracking\r\n        this.frameTimings = [];\r\n        this.maxFrameTimings = 120; // 2 seconds at 60fps\r\n        \r\n        // Error tracking\r\n        this.errorCounts = new Map();\r\n        this.lastErrors = new Map();\r\n        \r\n        // Feature detection for debugging capabilities\r\n        this.capabilities = {\r\n            performance: typeof performance !== 'undefined' && performance.now,\r\n            memory: typeof performance !== 'undefined' && performance.memory,\r\n            console: typeof console !== 'undefined',\r\n            stackTrace: typeof Error !== 'undefined'\r\n        };\r\n\r\n        // Initialize\r\n        this.startTime = this.now();\r\n        this.setupErrorHandling();\r\n        \r\n        if (this.config.enabled) {\r\n            this.log('DEBUG', 'EmotiveDebugger initialized', {\r\n                config: this.config,\r\n                capabilities: this.capabilities\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get current high-resolution timestamp\r\n     * @returns {number} Timestamp in milliseconds\r\n     */\r\n    now() {\r\n        if (this.capabilities.performance) {\r\n            return performance.now();\r\n        }\r\n        return Date.now() - this.startTime;\r\n    }\r\n\r\n    /**\r\n     * Set up global error handling\r\n     */\r\n    setupErrorHandling() {\r\n        if (!this.config.enableErrorTracking || typeof window === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        // Capture unhandled errors\r\n        window.addEventListener('error', (event) => {\r\n            this.trackError('UNHANDLED_ERROR', event.error || new Error(event.message), {\r\n                filename: event.filename,\r\n                lineno: event.lineno,\r\n                colno: event.colno\r\n            });\r\n        });\r\n\r\n        // Capture unhandled promise rejections\r\n        window.addEventListener('unhandledrejection', (event) => {\r\n            this.trackError('UNHANDLED_REJECTION', event.reason, {\r\n                promise: event.promise\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Log a message with specified level\r\n     * @param {string} level - Log level\r\n     * @param {string} message - Log message\r\n     * @param {*} data - Additional data\r\n     */\r\n    log(level, message, data = null) {\r\n        if (!this.config.enabled) return;\r\n\r\n        const levelValue = DebugLevel[level] || DebugLevel.INFO;\r\n        if (levelValue > this.config.level) return;\r\n\r\n        const timestamp = this.now();\r\n        const logEntry = {\r\n            timestamp,\r\n            level,\r\n            message,\r\n            data,\r\n            stackTrace: this.getStackTrace()\r\n        };\r\n\r\n        // Store log entry\r\n        this.logs.push(logEntry);\r\n        if (this.logs.length > this.config.maxLogEntries) {\r\n            this.logs.shift();\r\n        }\r\n\r\n        // Console output\r\n        if (this.capabilities.console) {\r\n            const consoleMethod = this.getConsoleMethod(level);\r\n            const timeStr = `[${(timestamp / 1000).toFixed(3)}s]`;\r\n            \r\n            if (data) {\r\n                consoleMethod(`${timeStr} [${level}] ${message}`, data);\r\n            } else {\r\n                consoleMethod(`${timeStr} [${level}] ${message}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get appropriate console method for log level\r\n     * @param {string} level - Log level\r\n     * @returns {Function} Console method\r\n     */\r\n    getConsoleMethod(level) {\r\n        switch (level) {\r\n            case 'ERROR': return (() => {}).bind(console);\r\n            case 'WARN': return (() => {}).bind(console);\r\n            case 'DEBUG': return (() => {}).bind(console);\r\n            case 'TRACE': return (() => {}).bind(console);\r\n            default: return (() => {}).bind(console);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get current stack trace\r\n     * @returns {string|null} Stack trace or null if not available\r\n     */\r\n    getStackTrace() {\r\n        if (!this.capabilities.stackTrace) return null;\r\n        \r\n        try {\r\n            throw new Error();\r\n        } catch (e) {\r\n            return e.stack;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Track an error with context\r\n     * @param {string} type - Error type\r\n     * @param {Error} error - Error object\r\n     * @param {Object} context - Additional context\r\n     */\r\n    trackError(type, error, context = {}) {\r\n        if (!this.config.enableErrorTracking) return;\r\n\r\n        const timestamp = this.now();\r\n        const errorEntry = {\r\n            timestamp,\r\n            type,\r\n            message: error.message || String(error),\r\n            stack: error.stack,\r\n            context,\r\n            count: 1\r\n        };\r\n\r\n        // Update error counts\r\n        const errorKey = `${type}:${error.message}`;\r\n        if (this.errorCounts.has(errorKey)) {\r\n            this.errorCounts.set(errorKey, this.errorCounts.get(errorKey) + 1);\r\n            errorEntry.count = this.errorCounts.get(errorKey);\r\n        } else {\r\n            this.errorCounts.set(errorKey, 1);\r\n        }\r\n\r\n        // Store error\r\n        this.errors.push(errorEntry);\r\n        this.lastErrors.set(type, errorEntry);\r\n\r\n        // Log error\r\n        this.log('ERROR', `${type}: ${error.message}`, {\r\n            error: errorEntry,\r\n            context\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Start profiling a named operation\r\n     * @param {string} name - Profile name\r\n     * @param {Object} metadata - Additional metadata\r\n     */\r\n    startProfile(name, metadata = {}) {\r\n        if (!this.config.enableProfiling) return;\r\n\r\n        const profile = {\r\n            name,\r\n            startTime: this.now(),\r\n            metadata,\r\n            samples: [],\r\n            isActive: true\r\n        };\r\n\r\n        this.profiles.set(name, profile);\r\n        this.log('TRACE', `Started profiling: ${name}`, metadata);\r\n    }\r\n\r\n    /**\r\n     * Add a sample to an active profile\r\n     * @param {string} name - Profile name\r\n     * @param {string} label - Sample label\r\n     * @param {*} data - Sample data\r\n     */\r\n    profileSample(name, label, data = null) {\r\n        if (!this.config.enableProfiling) return;\r\n\r\n        const profile = this.profiles.get(name);\r\n        if (!profile || !profile.isActive) return;\r\n\r\n        const sample = {\r\n            timestamp: this.now(),\r\n            label,\r\n            data,\r\n            relativeTime: this.now() - profile.startTime\r\n        };\r\n\r\n        profile.samples.push(sample);\r\n    }\r\n\r\n    /**\r\n     * End profiling and get results\r\n     * @param {string} name - Profile name\r\n     * @returns {Object|null} Profile results or null if not found\r\n     */\r\n    endProfile(name) {\r\n        if (!this.config.enableProfiling) return null;\r\n\r\n        const profile = this.profiles.get(name);\r\n        if (!profile || !profile.isActive) return null;\r\n\r\n        profile.endTime = this.now();\r\n        profile.duration = profile.endTime - profile.startTime;\r\n        profile.isActive = false;\r\n\r\n        // Calculate statistics\r\n        profile.stats = this.calculateProfileStats(profile);\r\n\r\n        this.log('TRACE', `Ended profiling: ${name}`, {\r\n            duration: profile.duration,\r\n            samples: profile.samples.length,\r\n            stats: profile.stats\r\n        });\r\n\r\n        // Limit stored profiles\r\n        if (this.profiles.size > this.config.maxProfileEntries) {\r\n            const oldestKey = this.profiles.keys().next().value;\r\n            this.profiles.delete(oldestKey);\r\n        }\r\n\r\n        return { ...profile };\r\n    }\r\n\r\n    /**\r\n     * Calculate statistics for a profile\r\n     * @param {Object} profile - Profile data\r\n     * @returns {Object} Profile statistics\r\n     */\r\n    calculateProfileStats(profile) {\r\n        if (profile.samples.length === 0) {\r\n            return { sampleCount: 0 };\r\n        }\r\n\r\n        const durations = [];\r\n        for (let i = 1; i < profile.samples.length; i++) {\r\n            durations.push(profile.samples[i].relativeTime - profile.samples[i - 1].relativeTime);\r\n        }\r\n\r\n        if (durations.length === 0) {\r\n            return { sampleCount: profile.samples.length };\r\n        }\r\n\r\n        const sum = durations.reduce((a, b) => a + b, 0);\r\n        const avg = sum / durations.length;\r\n        const min = Math.min(...durations);\r\n        const max = Math.max(...durations);\r\n\r\n        return {\r\n            sampleCount: profile.samples.length,\r\n            avgSampleDuration: avg,\r\n            minSampleDuration: min,\r\n            maxSampleDuration: max,\r\n            totalDuration: profile.duration\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Track frame timing for performance analysis\r\n     * @param {number} frameTime - Frame time in milliseconds\r\n     */\r\n    trackFrameTiming(frameTime) {\r\n        if (!this.config.enableProfiling) return;\r\n\r\n        this.frameTimings.push({\r\n            timestamp: this.now(),\r\n            frameTime,\r\n            fps: 1000 / frameTime\r\n        });\r\n\r\n        if (this.frameTimings.length > this.maxFrameTimings) {\r\n            this.frameTimings.shift();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Take a memory snapshot (if supported)\r\n     * @param {string} label - Snapshot label\r\n     */\r\n    takeMemorySnapshot(label = 'snapshot') {\r\n        if (!this.config.enableMemoryTracking || !this.capabilities.memory) return;\r\n\r\n        const snapshot = {\r\n            timestamp: this.now(),\r\n            label,\r\n            memory: {\r\n                usedJSHeapSize: performance.memory.usedJSHeapSize,\r\n                totalJSHeapSize: performance.memory.totalJSHeapSize,\r\n                jsHeapSizeLimit: performance.memory.jsHeapSizeLimit\r\n            }\r\n        };\r\n\r\n        this.memorySnapshots.push(snapshot);\r\n        \r\n        // Limit snapshots\r\n        if (this.memorySnapshots.length > 100) {\r\n            this.memorySnapshots.shift();\r\n        }\r\n\r\n        this.log('DEBUG', `Memory snapshot: ${label}`, snapshot.memory);\r\n    }\r\n\r\n    /**\r\n     * Get comprehensive debug report\r\n     * @returns {Object} Debug report\r\n     */\r\n    getDebugReport() {\r\n        const report = {\r\n            timestamp: this.now(),\r\n            uptime: this.now() - 0,\r\n            config: this.config,\r\n            capabilities: this.capabilities,\r\n            \r\n            // Logs\r\n            logCount: this.logs.length,\r\n            recentLogs: this.logs.slice(-10),\r\n            \r\n            // Errors\r\n            errorCount: this.errors.length,\r\n            uniqueErrors: this.errorCounts.size,\r\n            recentErrors: this.errors.slice(-5),\r\n            errorCounts: Object.fromEntries(this.errorCounts),\r\n            \r\n            // Profiles\r\n            activeProfiles: Array.from(this.profiles.values()).filter(p => p.isActive).length,\r\n            completedProfiles: Array.from(this.profiles.values()).filter(p => !p.isActive).length,\r\n            \r\n            // Performance\r\n            frameTimings: this.getFrameTimingStats(),\r\n            \r\n            // Memory\r\n            memorySnapshots: this.memorySnapshots.slice(-5)\r\n        };\r\n\r\n        return report;\r\n    }\r\n\r\n    /**\r\n     * Get frame timing statistics\r\n     * @returns {Object} Frame timing stats\r\n     */\r\n    getFrameTimingStats() {\r\n        if (this.frameTimings.length === 0) {\r\n            return { sampleCount: 0 };\r\n        }\r\n\r\n        const frameTimes = this.frameTimings.map(f => f.frameTime);\r\n        const fps = this.frameTimings.map(f => f.fps);\r\n\r\n        return {\r\n            sampleCount: this.frameTimings.length,\r\n            avgFrameTime: frameTimes.reduce((a, b) => a + b, 0) / frameTimes.length,\r\n            minFrameTime: Math.min(...frameTimes),\r\n            maxFrameTime: Math.max(...frameTimes),\r\n            avgFPS: fps.reduce((a, b) => a + b, 0) / fps.length,\r\n            minFPS: Math.min(...fps),\r\n            maxFPS: Math.max(...fps)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Export debug data for external analysis\r\n     * @returns {Object} Exportable debug data\r\n     */\r\n    exportDebugData() {\r\n        return {\r\n            metadata: {\r\n                exportTime: Date.now(),\r\n                debuggerUptime: this.now(),\r\n                config: this.config,\r\n                capabilities: this.capabilities\r\n            },\r\n            logs: [...this.logs],\r\n            errors: [...this.errors],\r\n            profiles: Object.fromEntries(this.profiles),\r\n            frameTimings: [...this.frameTimings],\r\n            memorySnapshots: [...this.memorySnapshots],\r\n            errorCounts: Object.fromEntries(this.errorCounts)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Clear all debug data\r\n     */\r\n    clear() {\r\n        this.logs = [];\r\n        this.errors = [];\r\n        this.profiles.clear();\r\n        this.frameTimings = [];\r\n        this.memorySnapshots = [];\r\n        this.errorCounts.clear();\r\n        this.lastErrors.clear();\r\n        \r\n        this.log('INFO', 'Debug data cleared');\r\n    }\r\n\r\n    /**\r\n     * Destroy the debugger and clean up\r\n     */\r\n    destroy() {\r\n        this.clear();\r\n        this.config.enabled = false;\r\n        \r\n        // Remove event listeners if we added them\r\n        if (typeof window !== 'undefined') {\r\n            // Note: In a real implementation, we'd need to store references to remove them\r\n            // For now, just disable the debugger\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Runtime feature detection and capability reporting\r\n */\r\nexport class RuntimeCapabilities {\r\n    constructor() {\r\n        this.capabilities = this.detectCapabilities();\r\n        this.performance = this.measurePerformance();\r\n    }\r\n\r\n    /**\r\n     * Detect runtime capabilities\r\n     * @returns {Object} Capability detection results\r\n     */\r\n    detectCapabilities() {\r\n        const caps = {\r\n            // JavaScript features\r\n            es6: this.detectES6(),\r\n            es2017: this.detectES2017(),\r\n            modules: this.detectModules(),\r\n            \r\n            // Browser APIs\r\n            webGL: this.detectWebGL(),\r\n            webGL2: this.detectWebGL2(),\r\n            webWorkers: this.detectWebWorkers(),\r\n            serviceWorkers: this.detectServiceWorkers(),\r\n            \r\n            // Performance APIs\r\n            performanceObserver: this.detectPerformanceObserver(),\r\n            intersectionObserver: this.detectIntersectionObserver(),\r\n            resizeObserver: this.detectResizeObserver(),\r\n            \r\n            // Storage\r\n            localStorage: this.detectLocalStorage(),\r\n            sessionStorage: this.detectSessionStorage(),\r\n            indexedDB: this.detectIndexedDB(),\r\n            \r\n            // Network\r\n            fetch: this.detectFetch(),\r\n            webSockets: this.detectWebSockets(),\r\n            \r\n            // Device capabilities\r\n            touchEvents: this.detectTouchEvents(),\r\n            pointerEvents: this.detectPointerEvents(),\r\n            deviceOrientation: this.detectDeviceOrientation(),\r\n            \r\n            // Graphics\r\n            canvas2d: this.detectCanvas2D(),\r\n            canvasFilters: this.detectCanvasFilters(),\r\n            offscreenCanvas: this.detectOffscreenCanvas()\r\n        };\r\n\r\n        return caps;\r\n    }\r\n\r\n    detectES6() {\r\n        try {\r\n            // Check for arrow functions and classes without eval\r\n            return typeof Symbol !== 'undefined' && \r\n                   typeof Promise !== 'undefined' && \r\n                   typeof Map !== 'undefined' && \r\n                   typeof Set !== 'undefined';\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    detectES2017() {\r\n        try {\r\n            // Check for async/await support\r\n            return typeof async !== 'undefined' || \r\n                   (function() { \r\n                       try { \r\n                           return Function('return async function(){}')().constructor.name === 'AsyncFunction'; \r\n                       } catch(e) { \r\n                           return false; \r\n                       } \r\n                   })();\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    detectModules() {\r\n        try {\r\n            return typeof document !== 'undefined' && 'noModule' in document.createElement('script');\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    detectWebGL() {\r\n        try {\r\n            const canvas = document.createElement('canvas');\r\n            return !!(canvas.getContext('webgl') || canvas.getContext('experimental-webgl'));\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    detectWebGL2() {\r\n        try {\r\n            const canvas = document.createElement('canvas');\r\n            return !!canvas.getContext('webgl2');\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    detectWebWorkers() {\r\n        return typeof Worker !== 'undefined';\r\n    }\r\n\r\n    detectServiceWorkers() {\r\n        return 'serviceWorker' in navigator;\r\n    }\r\n\r\n    detectPerformanceObserver() {\r\n        return typeof PerformanceObserver !== 'undefined';\r\n    }\r\n\r\n    detectIntersectionObserver() {\r\n        return typeof IntersectionObserver !== 'undefined';\r\n    }\r\n\r\n    detectResizeObserver() {\r\n        return typeof ResizeObserver !== 'undefined';\r\n    }\r\n\r\n    detectLocalStorage() {\r\n        try {\r\n            return typeof localStorage !== 'undefined' && localStorage !== null;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    detectSessionStorage() {\r\n        try {\r\n            return typeof sessionStorage !== 'undefined' && sessionStorage !== null;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    detectIndexedDB() {\r\n        return typeof indexedDB !== 'undefined';\r\n    }\r\n\r\n    detectFetch() {\r\n        return typeof fetch !== 'undefined';\r\n    }\r\n\r\n    detectWebSockets() {\r\n        return typeof WebSocket !== 'undefined';\r\n    }\r\n\r\n    detectTouchEvents() {\r\n        return 'ontouchstart' in window || navigator.maxTouchPoints > 0;\r\n    }\r\n\r\n    detectPointerEvents() {\r\n        return typeof PointerEvent !== 'undefined';\r\n    }\r\n\r\n    detectDeviceOrientation() {\r\n        return 'ondeviceorientation' in window;\r\n    }\r\n\r\n    detectCanvas2D() {\r\n        try {\r\n            const canvas = document.createElement('canvas');\r\n            return !!canvas.getContext('2d');\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    detectCanvasFilters() {\r\n        try {\r\n            const canvas = document.createElement('canvas');\r\n            const ctx = canvas.getContext('2d');\r\n            return 'filter' in ctx;\r\n        } catch (e) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    detectOffscreenCanvas() {\r\n        return typeof OffscreenCanvas !== 'undefined';\r\n    }\r\n\r\n    /**\r\n     * Measure basic performance characteristics\r\n     * @returns {Object} Performance measurements\r\n     */\r\n    measurePerformance() {\r\n        const measurements = {};\r\n\r\n        // Measure JavaScript execution speed\r\n        const start = performance.now();\r\n        let sum = 0;\r\n        for (let i = 0; i < 100000; i++) {\r\n            sum += Math.random();\r\n        }\r\n        measurements.jsExecutionSpeed = performance.now() - start;\r\n\r\n        // Measure canvas performance\r\n        try {\r\n            const canvas = document.createElement('canvas');\r\n            canvas.width = 100;\r\n            canvas.height = 100;\r\n            const ctx = canvas.getContext('2d');\r\n            \r\n            const canvasStart = performance.now();\r\n            for (let i = 0; i < 1000; i++) {\r\n                ctx.fillRect(Math.random() * 100, Math.random() * 100, 10, 10);\r\n            }\r\n            measurements.canvasPerformance = performance.now() - canvasStart;\r\n        } catch (e) {\r\n            measurements.canvasPerformance = null;\r\n        }\r\n\r\n        return measurements;\r\n    }\r\n\r\n    /**\r\n     * Get all capabilities\r\n     * @returns {Object} All detected capabilities\r\n     */\r\n    getCapabilities() {\r\n        return { ...this.capabilities };\r\n    }\r\n\r\n    /**\r\n     * Get performance measurements\r\n     * @returns {Object} Performance measurements\r\n     */\r\n    getPerformance() {\r\n        return { ...this.performance };\r\n    }\r\n\r\n    /**\r\n     * Generate capability report\r\n     * @returns {Object} Comprehensive capability report\r\n     */\r\n    generateReport() {\r\n        const supportedFeatures = Object.entries(this.capabilities)\r\n            .filter(([, supported]) => supported)\r\n            .map(([feature]) => feature);\r\n\r\n        const unsupportedFeatures = Object.entries(this.capabilities)\r\n            .filter(([, supported]) => !supported)\r\n            .map(([feature]) => feature);\r\n\r\n        const supportPercentage = (supportedFeatures.length / Object.keys(this.capabilities).length) * 100;\r\n\r\n        return {\r\n            timestamp: Date.now(),\r\n            userAgent: navigator.userAgent,\r\n            supportedFeatures,\r\n            unsupportedFeatures,\r\n            supportPercentage: Math.round(supportPercentage),\r\n            performance: this.performance,\r\n            recommendations: this.generateRecommendations(supportPercentage)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Generate recommendations based on capabilities\r\n     * @param {number} supportPercentage - Percentage of supported features\r\n     * @returns {Array<string>} Recommendations\r\n     */\r\n    generateRecommendations(supportPercentage) {\r\n        const recommendations = [];\r\n\r\n        if (supportPercentage < 50) {\r\n            recommendations.push('Consider using the minimal build for better compatibility');\r\n        }\r\n\r\n        if (!this.capabilities.webGL) {\r\n            recommendations.push('WebGL not supported - advanced graphics features unavailable');\r\n        }\r\n\r\n        if (!this.capabilities.webWorkers) {\r\n            recommendations.push('Web Workers not supported - background processing unavailable');\r\n        }\r\n\r\n        if (!this.capabilities.fetch) {\r\n            recommendations.push('Fetch API not supported - consider using XMLHttpRequest polyfill');\r\n        }\r\n\r\n        if (this.performance.jsExecutionSpeed > 50) {\r\n            recommendations.push('Slow JavaScript execution detected - consider performance optimizations');\r\n        }\r\n\r\n        if (this.performance.canvasPerformance > 100) {\r\n            recommendations.push('Slow canvas performance detected - consider reducing visual complexity');\r\n        }\r\n\r\n        return recommendations;\r\n    }\r\n}\r\n\r\n// Create singleton instances for convenience\r\nexport const emotiveDebugger = new EmotiveDebugger({\r\n    enabled: typeof window !== 'undefined' && window.location && window.location.search.includes('debug=true'),\r\n    level: DebugLevel.INFO\r\n});\r\n\r\nexport const runtimeCapabilities = new RuntimeCapabilities();","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Shape Definitions\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Static shape definitions for immediate loading\r\n * @author Emotive Engine Team\r\n * @module shapes/shapeDefinitions\r\n */\r\n\r\n/**\r\n * Generate circle points\r\n */\r\nfunction generateCircle(numPoints) {\r\n    const points = [];\r\n    for (let i = 0; i < numPoints; i++) {\r\n        const angle = (i / numPoints) * Math.PI * 2;\r\n        points.push({\r\n            x: 0.5 + Math.cos(angle) * 0.5,\r\n            y: 0.5 + Math.sin(angle) * 0.5\r\n        });\r\n    }\r\n    return points;\r\n}\r\n\r\n/**\r\n * Generate heart shape\r\n */\r\nfunction generateHeart(numPoints) {\r\n    const points = [];\r\n    for (let i = 0; i < numPoints; i++) {\r\n        const t = (i / numPoints) * Math.PI * 2;\r\n\r\n        // Heart parametric equations\r\n        const x = 16 * Math.pow(Math.sin(t), 3);\r\n        const y = -(13 * Math.cos(t) - 5 * Math.cos(2 * t) -\r\n                  2 * Math.cos(3 * t) - Math.cos(4 * t));\r\n\r\n        // Normalize and scale\r\n        points.push({\r\n            x: 0.5 + x / 32,\r\n            y: 0.5 + y / 32\r\n        });\r\n    }\r\n    return points;\r\n}\r\n\r\n/**\r\n * Generate moon shape - keep it as a circle\r\n * The crescent effect should be done with visual shadows, not shape morphing\r\n */\r\nfunction generateMoon(numPoints) {\r\n    // Moon should stay as a circle - the crescent is a visual effect\r\n    return generateCircle(numPoints);\r\n}\r\n\r\n/**\r\n * Generate star shape - proper 5-pointed star\r\n */\r\nfunction generateStar(numPoints, starPoints = 5) {\r\n    const points = [];\r\n    const outerRadius = 0.5;\r\n    const innerRadius = outerRadius * 0.382; // Golden ratio for perfect star\r\n    \r\n    // Generate the 10 vertices (5 outer, 5 inner)\r\n    const vertices = [];\r\n    const angleStep = (Math.PI * 2) / starPoints; // 72 degrees between star points\r\n    const halfAngleStep = angleStep / 2; // 36 degrees offset for inner points\r\n    \r\n    for (let i = 0; i < starPoints; i++) {\r\n        // Outer point (star tip)\r\n        const outerAngle = (i * angleStep) - Math.PI / 2; // Start from top\r\n        vertices.push({\r\n            x: 0.5 + Math.cos(outerAngle) * outerRadius,\r\n            y: 0.5 + Math.sin(outerAngle) * outerRadius\r\n        });\r\n        \r\n        // Inner point (valley) - offset by half the angle\r\n        const innerAngle = outerAngle + halfAngleStep;\r\n        vertices.push({\r\n            x: 0.5 + Math.cos(innerAngle) * innerRadius,\r\n            y: 0.5 + Math.sin(innerAngle) * innerRadius\r\n        });\r\n    }\r\n    \r\n    // Now interpolate points along the star perimeter\r\n    for (let i = 0; i < numPoints; i++) {\r\n        const t = i / numPoints;\r\n        const vertexCount = vertices.length;\r\n        \r\n        // Which edge are we on?\r\n        const edgeFloat = t * vertexCount;\r\n        const edgeIndex = Math.floor(edgeFloat) % vertexCount;\r\n        const nextIndex = (edgeIndex + 1) % vertexCount;\r\n        const edgeProgress = edgeFloat - Math.floor(edgeFloat);\r\n        \r\n        // Linear interpolation between vertices\r\n        const v1 = vertices[edgeIndex];\r\n        const v2 = vertices[nextIndex];\r\n        \r\n        points.push({\r\n            x: v1.x + (v2.x - v1.x) * edgeProgress,\r\n            y: v1.y + (v2.y - v1.y) * edgeProgress\r\n        });\r\n    }\r\n    \r\n    return points;\r\n}\r\n\r\n/**\r\n * Generate sun shape - just a circle, rays are visual effects only\r\n */\r\nfunction generateSun(numPoints, numRays = 12) {\r\n    // Sun is just a circle - the rays are rendered as effects, not part of the shape\r\n    return generateCircle(numPoints);\r\n}\r\n\r\n\r\n/**\r\n * Generate suspicion shape (sly grin)\r\n */\r\nfunction generateSuspicion(numPoints) {\r\n    const points = [];\r\n    for (let i = 0; i < numPoints; i++) {\r\n        const t = (i / numPoints) * Math.PI * 2;\r\n        \r\n        let x, y;\r\n        if (t < Math.PI) {\r\n            // Right side - outer arc of the grin\r\n            x = Math.cos(t) * 0.45;\r\n            y = Math.sin(t) * 0.45;\r\n        } else {\r\n            // Left side - inner arc for the mischievous smile\r\n            const innerT = Math.PI * 2 - t;\r\n            x = Math.cos(innerT) * 0.25 - 0.1;\r\n            y = Math.sin(innerT) * 0.35;\r\n        }\r\n        \r\n        points.push({\r\n            x: 0.5 + x,\r\n            y: 0.5 + y\r\n        });\r\n    }\r\n    return points;\r\n}\r\n\r\n/**\r\n * Generate square shape\r\n */\r\nfunction generateSquare(numPoints) {\r\n    const points = [];\r\n    const pointsPerSide = Math.floor(numPoints / 4);\r\n    \r\n    for (let side = 0; side < 4; side++) {\r\n        for (let i = 0; i < pointsPerSide; i++) {\r\n            const t = i / pointsPerSide;\r\n            let x, y;\r\n            \r\n            switch (side) {\r\n                case 0: // Top\r\n                    x = -0.5 + t;\r\n                    y = -0.5;\r\n                    break;\r\n                case 1: // Right\r\n                    x = 0.5;\r\n                    y = -0.5 + t;\r\n                    break;\r\n                case 2: // Bottom\r\n                    x = 0.5 - t;\r\n                    y = 0.5;\r\n                    break;\r\n                case 3: // Left\r\n                    x = -0.5;\r\n                    y = 0.5 - t;\r\n                    break;\r\n            }\r\n            \r\n            points.push({\r\n                x: 0.5 + x * 0.8,\r\n                y: 0.5 + y * 0.8\r\n            });\r\n        }\r\n    }\r\n    return points;\r\n}\r\n\r\n/**\r\n * Generate triangle shape\r\n */\r\nfunction generateTriangle(numPoints) {\r\n    const points = [];\r\n    \r\n    const vertices = [\r\n        { x: 0, y: -0.5 },           // Top\r\n        { x: -0.433, y: 0.25 },      // Bottom left\r\n        { x: 0.433, y: 0.25 }        // Bottom right\r\n    ];\r\n    \r\n    // Calculate perimeter of triangle\r\n    const sides = [\r\n        Math.sqrt(Math.pow(vertices[1].x - vertices[0].x, 2) + Math.pow(vertices[1].y - vertices[0].y, 2)),\r\n        Math.sqrt(Math.pow(vertices[2].x - vertices[1].x, 2) + Math.pow(vertices[2].y - vertices[1].y, 2)),\r\n        Math.sqrt(Math.pow(vertices[0].x - vertices[2].x, 2) + Math.pow(vertices[0].y - vertices[2].y, 2))\r\n    ];\r\n    const perimeter = sides[0] + sides[1] + sides[2];\r\n    \r\n    // Distribute points based on side length\r\n    const pointsPerSide = sides.map(s => Math.round(numPoints * s / perimeter));\r\n    \r\n    // Adjust for rounding errors\r\n    const totalPoints = pointsPerSide.reduce((a, b) => a + b, 0);\r\n    if (totalPoints < numPoints) {\r\n        pointsPerSide[0] += numPoints - totalPoints;\r\n    }\r\n    \r\n    // Generate points along each edge\r\n    for (let side = 0; side < 3; side++) {\r\n        const v1 = vertices[side];\r\n        const v2 = vertices[(side + 1) % 3];\r\n        const sidePoints = pointsPerSide[side];\r\n        \r\n        for (let i = 0; i < sidePoints; i++) {\r\n            // Don't duplicate the corner point\r\n            if (i === sidePoints - 1 && side < 2) continue;\r\n            \r\n            const t = i / sidePoints;\r\n            const x = v1.x + (v2.x - v1.x) * t;\r\n            const y = v1.y + (v2.y - v1.y) * t;\r\n            \r\n            points.push({\r\n                x: 0.5 + x * 0.9,\r\n                y: 0.5 + y * 0.9\r\n            });\r\n        }\r\n    }\r\n    \r\n    // Ensure we have exactly numPoints\r\n    while (points.length < numPoints) {\r\n        points.push(points[points.length - 1]);\r\n    }\r\n    while (points.length > numPoints) {\r\n        points.pop();\r\n    }\r\n    \r\n    return points;\r\n}\r\n\r\n/**\r\n * Shape definitions with their properties\r\n */\r\nexport const SHAPE_DEFINITIONS = {\r\n    circle: {\r\n        points: generateCircle(64),\r\n        shadow: { type: 'none' }\r\n    },\r\n    heart: {\r\n        points: generateHeart(64),\r\n        shadow: { type: 'none' }\r\n    },\r\n    star: {\r\n        points: generateStar(64, 5),\r\n        shadow: { type: 'none' }\r\n    },\r\n    sun: {\r\n        points: generateSun(64, 12),\r\n        shadow: {\r\n            type: 'sun',\r\n            corona: true,\r\n            intensity: 1.5,\r\n            flares: true,\r\n            texture: true,\r\n            turbulence: 0.3\r\n        }\r\n    },\r\n    moon: {\r\n        points: generateMoon(64),\r\n        shadow: {\r\n            type: 'crescent',\r\n            coverage: 0.85,\r\n            angle: -30,\r\n            softness: 0.05,\r\n            offset: 0.7\r\n        }\r\n    },\r\n    lunar: {\r\n        points: generateCircle(64),\r\n        shadow: {\r\n            type: 'lunar',\r\n            coverage: 0.7,\r\n            color: 'rgba(80, 20, 0, 0.8)',\r\n            progression: 'center'\r\n        }\r\n    },\r\n    suspicion: {\r\n        points: generateSuspicion(64),\r\n        shadow: { type: 'none' }\r\n    },\r\n    eclipse: {\r\n        points: generateCircle(64),\r\n        shadow: {\r\n            type: 'lunar',\r\n            coverage: 0.7,\r\n            color: 'rgba(80, 20, 0, 0.8)'\r\n        }\r\n    },\r\n    square: {\r\n        points: generateSquare(64),\r\n        shadow: { type: 'none' }\r\n    },\r\n    triangle: {\r\n        points: generateTriangle(64),\r\n        shadow: { type: 'none' }\r\n    },\r\n    solar: {\r\n        points: generateSun(64, 12),\r\n        shadow: {\r\n            type: 'solar-hybrid',\r\n            // Sun properties (rendered first)\r\n            corona: true,\r\n            intensity: 1.5,\r\n            flares: true,\r\n            texture: true,\r\n            turbulence: 0.3,\r\n            // Lunar shadow overlay (rendered on top) - BLACK for solar eclipse\r\n            lunarOverlay: {\r\n                type: 'lunar',\r\n                coverage: 1.0,  // Full coverage for total eclipse\r\n                color: 'rgba(0, 0, 0, 1.0)',  // Pure black shadow\r\n                progression: 'center'\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nexport default SHAPE_DEFINITIONS;","/**\r\n * ArrayPool - Reusable array pool to reduce garbage collection\r\n * @module ArrayPool\r\n */\r\n\r\nclass ArrayPool {\r\n    constructor() {\r\n        this.pools = new Map(); // Key: size, Value: array of available arrays\r\n        this.inUse = new Set(); // Track arrays currently in use\r\n    }\r\n\r\n    /**\r\n     * Get an array from the pool or create a new one\r\n     * @param {number} size - Size of array needed\r\n     * @param {string} type - Type of array ('float32', 'array', 'uint8')\r\n     * @returns {Array|Float32Array|Uint8Array}\r\n     */\r\n    acquire(size, type = 'array') {\r\n        const key = `${type}_${size}`;\r\n        \r\n        if (!this.pools.has(key)) {\r\n            this.pools.set(key, []);\r\n        }\r\n        \r\n        const pool = this.pools.get(key);\r\n        \r\n        // Try to get from pool\r\n        if (pool.length > 0) {\r\n            const array = pool.pop();\r\n            this.inUse.add(array);\r\n            return array;\r\n        }\r\n        \r\n        // Create new array if pool is empty\r\n        let newArray;\r\n        switch (type) {\r\n            case 'float32':\r\n                newArray = new Float32Array(size);\r\n                break;\r\n            case 'uint8':\r\n                newArray = new Uint8Array(size);\r\n                break;\r\n            default:\r\n                newArray = new Array(size).fill(0);\r\n        }\r\n        \r\n        this.inUse.add(newArray);\r\n        return newArray;\r\n    }\r\n\r\n    /**\r\n     * Return an array to the pool\r\n     * @param {Array|Float32Array|Uint8Array} array - Array to return\r\n     */\r\n    release(array) {\r\n        if (!this.inUse.has(array)) {\r\n            return; // Not from this pool\r\n        }\r\n        \r\n        this.inUse.delete(array);\r\n        \r\n        // Determine type and size\r\n        let type = 'array';\r\n        if (array instanceof Float32Array) type = 'float32';\r\n        else if (array instanceof Uint8Array) type = 'uint8';\r\n        \r\n        const size = array.length;\r\n        const key = `${type}_${size}`;\r\n        \r\n        // Clear the array\r\n        if (type === 'array') {\r\n            array.fill(0);\r\n        } else {\r\n            array.fill(0);\r\n        }\r\n        \r\n        // Return to pool\r\n        if (!this.pools.has(key)) {\r\n            this.pools.set(key, []);\r\n        }\r\n        \r\n        const pool = this.pools.get(key);\r\n        if (pool.length < 10) { // Keep max 10 arrays of each size\r\n            pool.push(array);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clear all pools\r\n     */\r\n    clear() {\r\n        this.pools.clear();\r\n        this.inUse.clear();\r\n    }\r\n}\r\n\r\n// Create singleton instance\r\nconst arrayPool = new ArrayPool();\r\n\r\nexport default arrayPool;","/**\r\n * AudioDeformer - Handles audio-based shape deformation\r\n * @module core/morpher/AudioDeformer\r\n */\r\n\r\nexport class AudioDeformer {\r\n    constructor(morpher) {\r\n        this.morpher = morpher;\r\n        \r\n        // Audio deformation state\r\n        this.audioDeformation = 0;\r\n        this.vocalEnergy = 0;\r\n        this.vocalEffectActive = false;\r\n        this.beatGlitchIntensity = 0;\r\n        this.glitchPoints = [];\r\n        \r\n        // Frequency analysis\r\n        this.bassEnergy = 0;\r\n        this.vocalPresence = 0;\r\n        this.highFreqEnergy = 0;\r\n        \r\n        // Transient detection\r\n        this.transientActive = false;\r\n        this.transientStrength = 0;\r\n        this.transientDecay = 0.92;\r\n        this.transientHoldTime = 8;\r\n        this.transientHoldCounter = 0;\r\n    }\r\n\r\n    /**\r\n     * Apply audio deformation to shape points\r\n     * @param {Array} points - Shape points to deform\r\n     * @returns {Array} Deformed points\r\n     */\r\n    applyAudioDeformation(points) {\r\n        // Validate points\r\n        if (!points || points.length === 0) {\r\n            return this.morpher.generateFallbackCircle();\r\n        }\r\n        \r\n        // Get fresh frequency data if analyzer is available\r\n        if (this.morpher.audioAnalyzer && this.morpher.audioAnalyzer.currentFrequencies && this.morpher.audioAnalyzer.currentFrequencies.length > 0) {\r\n            this.morpher.frequencyData = [...this.morpher.audioAnalyzer.currentFrequencies];\r\n            \r\n            \r\n            // We have 32 frequency bands (0-31) that cover the full spectrum\r\n            // Approximate mapping: each band covers ~750 Hz (24000 Hz / 32 bands)\r\n            // Band 0-1: Sub-bass\r\n            // Band 2-4: Bass\r\n            // Band 5-15: Midrange\r\n            // Band 16-25: Upper mids/presence\r\n            // Band 26-31: Treble\r\n            \r\n            // BASS THUMP DETECTION: Only trigger on meaty kicks\r\n            let currentBassEnergy = 0;\r\n            let bassCount = 0;\r\n            \r\n            // Focus on low bass (bands 0-2) for the real thumps\r\n            for (let i = 0; i <= 2 && i < this.morpher.frequencyData.length; i++) {\r\n                currentBassEnergy += this.morpher.frequencyData[i];\r\n                bassCount++;\r\n            }\r\n            if (bassCount > 0) {\r\n                currentBassEnergy /= bassCount;\r\n            }\r\n            \r\n            // Initialize bass thump detection\r\n            if (!this.morpher.bassPeakHistory) {\r\n                this.morpher.bassPeakHistory = [];\r\n                this.morpher.bassThumpTimer = 0;\r\n            }\r\n            \r\n            // Track recent bass peaks\r\n            this.morpher.bassPeakHistory.push(currentBassEnergy);\r\n            if (this.morpher.bassPeakHistory.length > 20) { // ~0.6 seconds of history\r\n                this.morpher.bassPeakHistory.shift();\r\n            }\r\n            \r\n            // Calculate dynamic threshold\r\n            const avgBass = this.morpher.bassPeakHistory.reduce((a, b) => a + b, 0) / this.morpher.bassPeakHistory.length;\r\n            const maxBass = Math.max(...this.morpher.bassPeakHistory);\r\n            \r\n            // THUMP = small increase above baseline\r\n            // Check if we're using microphone (lower levels) or audio file (higher levels)\r\n            const isMicrophoneMode = this.morpher.audioAnalyzer && this.morpher.audioAnalyzer.microphoneStream;\r\n            const minThreshold = isMicrophoneMode ? 0.15 : 0.25; // Lower threshold for both, but mic is lowest\r\n            \r\n            const isThump = currentBassEnergy > avgBass * 1.08 && // Just 8% above average\r\n                           currentBassEnergy > minThreshold;\r\n            \r\n            if (isThump) {\r\n                // Boost the effect more for microphone input\r\n                const effectMultiplier = isMicrophoneMode ? 8 : 6; // Increase audio multiplier too\r\n                this.bassEnergy = Math.min(1.0, (currentBassEnergy - avgBass) * effectMultiplier);\r\n                this.morpher.bassThumpTimer = 12; // Shorter hold (12 frames ~0.4 seconds)\r\n            } else if (this.morpher.bassThumpTimer > 0) {\r\n                this.morpher.bassThumpTimer--;\r\n                this.bassEnergy *= 0.9; // Slower decay for smooth wobble\r\n            } else {\r\n                this.bassEnergy = 0;\r\n            }\r\n            \r\n            // VOCAL PRESENCE DETECTION: 2-4 kHz range where vocals cut through\r\n            // With FFT 2048 and 48kHz sample rate:\r\n            // - 1024 bins cover 0-24kHz\r\n            // - Each bin = ~23.4 Hz\r\n            // - 32 bands get 32 bins each (1024/32)\r\n            // - Each band = ~750 Hz\r\n            \r\n            // Band mapping (LINEAR):\r\n            // Band 2: 1500-2250 Hz\r\n            // Band 3: 2250-3000 Hz  } Vocal presence range\r\n            // Band 4: 3000-3750 Hz\r\n            // Band 5: 3750-4500 Hz\r\n            \r\n            let vocalPresenceEnergy = 0;\r\n            let vocalBandCount = 0;\r\n            \r\n            // SPECTRAL FLUX: Detect onsets in the VOCAL RANGE you identified (bands 4-15, emphasis on 11)\r\n            // This targets the actual vocal/lead frequencies in Electric Glow\r\n            \r\n            // Initialize spectral history if needed\r\n            if (!this.morpher.spectralHistory) {\r\n                this.morpher.spectralHistory = [];\r\n                this.morpher.spectralFluxHistory = [];\r\n                // Music detection initialization\r\n                this.morpher.onsetThreshold = 0;\r\n                this.morpher.musicDetector.reset();\r\n                this.morpher.detectedBPM = 0;\r\n                \r\n                // Time signature detection\r\n                this.morpher.onsetStrengths = []; // Array of {time: ms, strength: 0-1, bassWeight: 0-1}\r\n                this.morpher.detectedTimeSignature = null;\r\n                this.morpher.timeSignatureConfidence = 0;\r\n                this.morpher.measureStartTime = 0;\r\n                this.morpher.timeSignatureHistory = [];\r\n                this.morpher.timeSignatureLocked = false;\r\n            }\r\n            \r\n            // Store current spectrum\r\n            const currentSpectrum = [...this.morpher.frequencyData];\r\n            \r\n            // SIMPLER APPROACH: Look for changes in vocal bands with bass rejection\r\n            let spectralFlux = 0;\r\n            let bassFlux = 0;\r\n            \r\n            if (this.morpher.spectralHistory.length > 0) {\r\n                const prevSpectrum = this.morpher.spectralHistory[this.morpher.spectralHistory.length - 1];\r\n                \r\n                // Calculate bass flux (bands 0-2)\r\n                for (let i = 0; i <= 2 && i < currentSpectrum.length; i++) {\r\n                    const diff = currentSpectrum[i] - prevSpectrum[i];\r\n                    if (diff > 0) bassFlux += diff;\r\n                }\r\n                \r\n                // Calculate flux in extended vocal range (bands 4-15)\r\n                // But weight the center (9-13) more heavily\r\n                for (let i = 4; i <= 15 && i < currentSpectrum.length; i++) {\r\n                    const diff = currentSpectrum[i] - prevSpectrum[i];\r\n                    if (diff > 0) {\r\n                        // Extra weight for bands 9-13\r\n                        const weight = (i >= 9 && i <= 13) ? 2.0 : 1.0;\r\n                        spectralFlux += diff * weight;\r\n                    }\r\n                }\r\n                \r\n                // Suppress if there's a strong bass hit (likely a drum)\r\n                if (bassFlux > 0.15) {\r\n                    spectralFlux *= 0.3; // Reduce by 70% for drum hits\r\n                }\r\n            }\r\n            \r\n            // Store history (keep last 30 frames for ~1 second at 30fps)\r\n            this.morpher.spectralHistory.push(currentSpectrum);\r\n            if (this.morpher.spectralHistory.length > 30) {\r\n                this.morpher.spectralHistory.shift();\r\n            }\r\n            \r\n            // Store flux history for adaptive thresholding\r\n            this.morpher.spectralFluxHistory.push(spectralFlux);\r\n            if (this.morpher.spectralFluxHistory.length > 30) {\r\n                this.morpher.spectralFluxHistory.shift();\r\n            }\r\n            \r\n            // Calculate adaptive threshold (median + margin)\r\n            if (this.morpher.spectralFluxHistory.length >= 10) {\r\n                const sorted = [...this.morpher.spectralFluxHistory].sort((a, b) => a - b);\r\n                const median = sorted[Math.floor(sorted.length / 2)];\r\n                const mean = sorted.reduce((a, b) => a + b, 0) / sorted.length;\r\n                \r\n                // Threshold is slightly above the median to catch significant onsets\r\n                this.morpher.onsetThreshold = median + (mean - median) * 0.5;\r\n            }\r\n            \r\n            // Detect onset (transient/attack) - focus on stronger transients for BPM\r\n            // Use higher threshold for BPM detection vs vocal detection\r\n            const isVocalOnset = spectralFlux > this.morpher.onsetThreshold * 1.2 && spectralFlux > 0.02;\r\n            const isBeatOnset = spectralFlux > this.morpher.onsetThreshold * 2.0 && spectralFlux > 0.05; // Stronger threshold for beats\r\n            \r\n            // Smooth the detection with a short hold time\r\n            if (isVocalOnset) {\r\n                this.transientHoldTime = 8; // Hold for 8 frames (~250ms) for visible glitches\r\n                this.morpher.vocalGlowBoost = 0.3; // Add 30% glow boost on vocal onset\r\n            }\r\n            \r\n            // BPM DETECTION: Only track stronger onsets that are likely beats\r\n            if (isBeatOnset) {\r\n                const now = performance.now();\r\n                \r\n                // Store onset strength for time signature detection\r\n                const onsetStrength = {\r\n                    time: now,\r\n                    strength: spectralFlux / (this.morpher.onsetThreshold || 1), // Normalized strength\r\n                    bassWeight: bassFlux // Keep bass weight for downbeat detection\r\n                };\r\n                this.morpher.onsetStrengths.push(onsetStrength);\r\n                // Keep last 40 onsets (about 16-20 beats)\r\n                if (this.morpher.onsetStrengths.length > 40) {\r\n                    this.morpher.onsetStrengths.shift();\r\n                }\r\n                \r\n                // Delegate onset tracking to music detector\r\n                this.morpher.musicDetector.addOnset(now, spectralFlux);\r\n                \r\n            }\r\n            \r\n            // Update BPM detection through music detector\r\n            this.morpher.musicDetector.update(performance.now());\r\n            this.morpher.detectedBPM = this.morpher.musicDetector.detectedBPM;\r\n            this.morpher.bpmConfidence = this.morpher.musicDetector.bpmConfidence;\r\n            \r\n            // Update local references for compatibility\r\n            if (this.morpher.detectedBPM > 0 && this.morpher.bpmConfidence > 0.8) {\r\n                // Clear fast mode once we've detected BPM with confidence\r\n                if (this.morpher.forceFastDetection) {\r\n                    this.morpher.forceFastDetection = false;\r\n                }\r\n            }\r\n            \r\n            if (this.transientHoldTime > 0) {\r\n                this.transientHoldTime--;\r\n            }\r\n            \r\n            // Decay glow boost smoothly\r\n            if (this.morpher.vocalGlowBoost > 0) {\r\n                this.morpher.vocalGlowBoost *= 0.92; // Smooth decay\r\n            }\r\n            \r\n            // Set vocal presence based on flux intensity\r\n            this.vocalPresence = spectralFlux;\r\n            \r\n            // No spectral contrast needed\r\n            const spectralContrast = 0;\r\n            \r\n            // Update rolling averages for smarter detection\r\n            this.morpher.bassHistory[this.morpher.historyIndex] = this.bassEnergy;\r\n            this.morpher.vocalHistory[this.morpher.historyIndex] = this.vocalPresence;\r\n            this.morpher.historyIndex = (this.morpher.historyIndex + 1) % this.morpher.bassHistory.length;\r\n            \r\n            // Calculate averages\r\n            const bassAvg = this.morpher.bassHistory.reduce((a, b) => a + b, 0) / this.morpher.bassHistory.length;\r\n            const vocalAvg = this.morpher.vocalHistory.reduce((a, b) => a + b, 0) / this.morpher.vocalHistory.length;\r\n            \r\n            // Bass effect is now controlled by thump detection above\r\n            this.morpher.bassEffectActive = this.morpher.bassThumpTimer > 0;\r\n            \r\n            // ENHANCED VOCAL DETECTION\r\n            // Vocals are present when:\r\n            // 1. Bands 9-13 have high contrast vs background\r\n            // 2. Energy is above minimum threshold\r\n            // 3. Either sudden spike OR sustained presence\r\n            \r\n            this.morpher.lastVocalPresence = this.morpher.lastVocalPresence || 0;\r\n            const vocalDelta = this.vocalPresence - this.morpher.lastVocalPresence;\r\n            this.morpher.lastVocalPresence = this.vocalPresence;\r\n            \r\n            // Transient detection - triggers on musical onsets\r\n            this.vocalEffectActive = this.transientHoldTime > 0;\r\n            \r\n        }\r\n        \r\n        // If no analyzer or no frequency data, fallback to using audioDeformation for effects\r\n        // This is especially important for microphone input where bass frequencies might be weak\r\n        const hasFrequencyData = this.morpher.frequencyData && this.morpher.frequencyData.some(f => f > 0.01);\r\n        if (!this.morpher.audioAnalyzer || !hasFrequencyData) {\r\n            // Enhanced fallback for microphone input\r\n            // Use audioDeformation as a proxy for bass effect when no frequency data\r\n            if (this.audioDeformation > 0.15) { // Lower threshold for mic sensitivity\r\n                this.morpher.bassEffectActive = true;\r\n                this.bassEnergy = Math.min(1.0, this.audioDeformation * 0.8); // Stronger response\r\n                \r\n                // Simulate bass thump timer for wobble effect\r\n                if (!this.morpher.bassThumpTimer || this.morpher.bassThumpTimer <= 0) {\r\n                    this.morpher.bassThumpTimer = 12; // Start wobble\r\n                }\r\n            } else if (this.morpher.bassThumpTimer > 0) {\r\n                // Decay the wobble\r\n                this.morpher.bassThumpTimer--;\r\n                this.bassEnergy *= 0.9;\r\n            }\r\n            \r\n            // Use vocalEnergy for vocal effects\r\n            if (this.vocalEnergy > 0.2) { // Lower threshold for mic\r\n                this.vocalEffectActive = true;\r\n                this.vocalPresence = this.vocalEnergy;\r\n            }\r\n        }\r\n        \r\n        // ONLY apply fallback bass wobble for microphone input when no frequency data\r\n        // This ensures wobble works for mic but NOT for web audio\r\n        if (!hasFrequencyData && this.audioDeformation > 0.15 && !this.morpher.bassEffectActive) {\r\n            this.morpher.bassEffectActive = true;\r\n            this.bassEnergy = Math.max(this.bassEnergy, this.audioDeformation * 0.8);\r\n            if (!this.morpher.bassThumpTimer || this.morpher.bassThumpTimer <= 0) {\r\n                this.morpher.bassThumpTimer = 12;\r\n            }\r\n        }\r\n        \r\n        // No deformation if no audio\r\n        const hasAudio = this.audioDeformation !== 0 || this.bassEnergy > 0.01 || \r\n                        this.vocalPresence > 0.01;\r\n        if (!hasAudio) {\r\n            return points;\r\n        }\r\n        \r\n        const deformed = [];\r\n        const center = { x: 0.5, y: 0.5 };\r\n        const time = Date.now() / 1000; // Time in seconds\r\n        \r\n        // Update undulation phase only when bass is active\r\n        if (this.morpher.bassEffectActive) {\r\n            // Randomly change direction occasionally\r\n            if (Math.random() < 0.05) { // 5% chance per frame\r\n                this.morpher.undulationDirection *= -1; // Reverse direction\r\n            }\r\n            this.morpher.undulationPhase += 0.08 * this.morpher.undulationDirection; // Apply direction\r\n        }\r\n        \r\n        // Update glitch points on beat\r\n        if (this.morpher.audioAnalyzer && this.beatGlitchIntensity > 0) {\r\n            this.beatGlitchIntensity *= 0.9; // Decay glitch intensity\r\n        }\r\n        \r\n        // Create SUBTLE glitch points when vocal presence is detected\r\n        if (this.vocalEffectActive && Math.random() < 0.2) { // 20% chance (reduced)\r\n            this.glitchPoints = [];\r\n            const numGlitches = 2 + Math.floor(Math.random() * 2); // 2-3 points (fewer)\r\n            for (let i = 0; i < numGlitches; i++) {\r\n                this.glitchPoints.push({\r\n                    index: Math.floor(Math.random() * points.length),\r\n                    intensity: 0.02 + Math.random() * 0.03, // 0.02-0.05 intensity (much subtler)\r\n                    decay: 0.94 + Math.random() * 0.02 // Slightly slower decay for smoothness\r\n                });\r\n            }\r\n        }\r\n        \r\n        // Update existing glitch points\r\n        this.glitchPoints = this.glitchPoints.filter(g => {\r\n            g.intensity *= g.decay;\r\n            return g.intensity > 0.01;\r\n        });\r\n        \r\n        for (let i = 0; i < points.length; i++) {\r\n            const point = points[i];\r\n            \r\n            // Handle invalid point\r\n            if (!point || typeof point.x === 'undefined' || typeof point.y === 'undefined') {\r\n                const angle = (i / points.length) * Math.PI * 2;\r\n                deformed.push({\r\n                    x: 0.5 + Math.cos(angle) * 0.5,\r\n                    y: 0.5 + Math.sin(angle) * 0.5\r\n                });\r\n                continue;\r\n            }\r\n            \r\n            // Calculate base position\r\n            const dx = point.x - center.x;\r\n            const dy = point.y - center.y;\r\n            const distance = Math.sqrt(dx * dx + dy * dy);\r\n            const angle = Math.atan2(dy, dx);\r\n            \r\n            // 1. Base expansion from overall amplitude - always active for responsiveness\r\n            const baseExpansion = Math.abs(this.audioDeformation) * 0.12; // Reduced to 12%\r\n            \r\n            // 2. Bass-triggered wiggle effect\r\n            let undulation = 0;\r\n            let breathPulse = 0;\r\n            \r\n            if (this.morpher.bassEffectActive) {\r\n                // Strong bass-driven undulation\r\n                const waveCount = 2; // 2 waves for clean look\r\n                const wiggleIntensity = this.bassEnergy * 0.25; // Increased from 0.15 to 0.25\r\n                undulation = Math.sin(angle * waveCount + this.morpher.undulationPhase) * wiggleIntensity;\r\n                \r\n                // Subtle breathing pulse synced with undulation\r\n                breathPulse = Math.sin(this.morpher.undulationPhase * 0.5) * this.bassEnergy * 0.08; // Increased from 0.05\r\n            }\r\n            \r\n            // 5. Check for glitch points - SUBTLE shimmer/ripple effect\r\n            let glitchOffset = 0;\r\n            const glitchPoint = this.glitchPoints.find(g => g.index === i);\r\n            if (glitchPoint) {\r\n                // Create a subtle ripple/shimmer instead of harsh glitch\r\n                const shimmerTime = Date.now() * 0.015; // Slower oscillation\r\n                const shimmer = Math.sin(shimmerTime + i * 0.5) * Math.cos(shimmerTime * 0.7);\r\n                glitchOffset = glitchPoint.intensity * shimmer * 0.5; // Can go in or out, very subtle\r\n            }\r\n            \r\n            // Combine all deformations - simpler, more selective\r\n            const totalDeformation = 1 + baseExpansion + undulation + breathPulse + glitchOffset;\r\n            \r\n            const newDistance = distance * Math.max(0.8, totalDeformation); // Never shrink below 80%\r\n            \r\n            deformed.push({\r\n                x: center.x + Math.cos(angle) * newDistance,\r\n                y: center.y + Math.sin(angle) * newDistance\r\n            });\r\n        }\r\n        \r\n        return deformed;\r\n    }\r\n\r\n    /**\r\n     * Set audio deformation value\r\n     * @param {number} value - Deformation value (0-1)\r\n     */\r\n    setAudioDeformation(value) {\r\n        this.audioDeformation = Math.max(0, Math.min(1, value));\r\n        this.vocalEffectActive = value > 0.01;\r\n    }\r\n\r\n    /**\r\n     * Set vocal energy for shape pulsing\r\n     * @param {number} value - Energy value (0-1)\r\n     */\r\n    setVocalEnergy(value) {\r\n        this.vocalEnergy = Math.max(0, Math.min(1, value));\r\n        this.vocalEffectActive = value > 0.01;\r\n    }\r\n\r\n    /**\r\n     * Update frequency band energies\r\n     * @param {Object} frequencyData - Frequency analysis data\r\n     */\r\n    updateFrequencyBands(frequencyData) {\r\n        if (frequencyData) {\r\n            this.bassEnergy = frequencyData.bass || 0;\r\n            this.vocalPresence = frequencyData.vocal || 0;\r\n            this.highFreqEnergy = frequencyData.high || 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Process transient/beat detection\r\n     * @param {number} amplitude - Current audio amplitude\r\n     * @param {number} threshold - Beat threshold\r\n     */\r\n    processTransient(amplitude, threshold) {\r\n        if (amplitude > threshold) {\r\n            this.transientActive = true;\r\n            this.transientStrength = amplitude;\r\n            this.transientHoldCounter = this.transientHoldTime;\r\n        } else if (this.transientHoldCounter > 0) {\r\n            this.transientHoldCounter--;\r\n        } else {\r\n            this.transientStrength *= this.transientDecay;\r\n            if (this.transientStrength < 0.01) {\r\n                this.transientActive = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get current deformation state\r\n     */\r\n    getState() {\r\n        return {\r\n            audioDeformation: this.audioDeformation,\r\n            vocalEnergy: this.vocalEnergy,\r\n            vocalEffectActive: this.vocalEffectActive,\r\n            beatGlitchIntensity: this.beatGlitchIntensity,\r\n            transientActive: this.transientActive,\r\n            transientStrength: this.transientStrength\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Reset all audio effects\r\n     */\r\n    reset() {\r\n        this.audioDeformation = 0;\r\n        this.vocalEnergy = 0;\r\n        this.vocalEffectActive = false;\r\n        this.beatGlitchIntensity = 0;\r\n        this.glitchPoints = [];\r\n        this.transientActive = false;\r\n        this.transientStrength = 0;\r\n    }\r\n}\r\n\r\nexport default AudioDeformer;","/**\r\n * AgentBPMDetector - Fast, agent-based BPM detection\r\n * Uses multiple competing hypotheses that converge on the true tempo\r\n * @module core/morpher/AgentBPMDetector\r\n */\r\n\r\nexport class AgentBPMDetector {\r\n    constructor() {\r\n        // Agent pool\r\n        this.agents = [];\r\n        this.maxAgents = 8;\r\n\r\n        // Detection state\r\n        this.isActive = false;\r\n        this.confidence = 0;\r\n        this.lockedBPM = 0;\r\n        this.lastBeatTime = 0;\r\n\r\n        // Audio analysis\r\n        this.peakHistory = [];\r\n        this.maxHistoryLength = 100; // ~3 seconds at 30fps\r\n\r\n        // Configuration\r\n        this.minBPM = 40;\r\n        this.maxBPM = 300;\r\n        this.convergenceThreshold = 0.7; // Lower threshold for faster lock\r\n        this.subdivisionPreference = {\r\n            slow: { min: 40, max: 80, prefer: 1 },     // Keep normal for slow (40-80 is already slow)\r\n            normal: { min: 80, max: 140, prefer: 1 },  // Normal for mid\r\n            fast: { min: 140, max: 180, prefer: 0.5 }, // Half for moderately fast\r\n            veryfast: { min: 180, max: 300, prefer: 0.5 } // Half for very fast\r\n        };\r\n    }\r\n\r\n    /**\r\n     * BPM Agent - represents one tempo hypothesis\r\n     */\r\n    createAgent(bpm, subdivision = 1) {\r\n        return {\r\n            bpm: bpm,\r\n            subdivision: subdivision,\r\n            effectiveBPM: bpm * subdivision,\r\n            phase: 0,\r\n            confidence: 0.5,\r\n            hits: 0,\r\n            misses: 0,\r\n            lastBeatTime: performance.now(),\r\n            beatInterval: 60000 / (bpm * subdivision)\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Initialize agents with diverse starting hypotheses\r\n     */\r\n    initializeAgents(initialGuess = 120) {\r\n        this.agents = [];\r\n\r\n        // Prefer lower subdivisions - if initial guess is high, try halving it\r\n        let subdivisions = [1]; // Start with normal\r\n\r\n        if (initialGuess > 180) {\r\n            // Very fast - prefer half speed\r\n            subdivisions = [0.5, 0.75, 1];\r\n        } else if (initialGuess > 140) {\r\n            // Fast - try half and normal\r\n            subdivisions = [0.5, 0.75, 1];\r\n        } else if (initialGuess < 60) {\r\n            // Very slow - try doubling\r\n            subdivisions = [1, 1.5, 2];\r\n        } else {\r\n            // Normal range - try various\r\n            subdivisions = [0.5, 1, 1.5];\r\n        }\r\n\r\n        subdivisions.forEach(sub => {\r\n            const agent = this.createAgent(initialGuess, sub);\r\n            // Give preference to lower effective BPMs\r\n            if (initialGuess * sub < 140) {\r\n                agent.confidence = 0.6; // Slight boost for sensible BPMs\r\n            }\r\n            this.agents.push(agent);\r\n        });\r\n\r\n        // Add some agents that try to find a lower BPM if initial is high\r\n        if (initialGuess > 140) {\r\n            this.agents.push(this.createAgent(initialGuess / 2, 1));\r\n            this.agents.push(this.createAgent(initialGuess / 2, 1.5));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Process new audio peak/onset\r\n     */\r\n    processPeak(strength, time = performance.now()) {\r\n        // Add to history\r\n        this.peakHistory.push({ strength, time });\r\n        if (this.peakHistory.length > this.maxHistoryLength) {\r\n            this.peakHistory.shift();\r\n        }\r\n\r\n        // Only process if we have enough history\r\n        if (this.peakHistory.length < 4) return;\r\n\r\n        // If not active, initialize from FFT guess\r\n        if (!this.isActive || this.agents.length === 0) {\r\n            const fftGuess = this.getFFTEstimate();\r\n            this.initializeAgents(fftGuess);\r\n            this.isActive = true;\r\n        }\r\n\r\n        // If already locked, be more conservative about changes\r\n        if (this.lockedBPM > 0 && this.confidence > 0.7) {\r\n            // Only update agents, don't evolve as aggressively\r\n            this.agents.forEach(agent => {\r\n                this.scoreAgent(agent, time, strength);\r\n            });\r\n\r\n            // Only evolve if confidence has dropped significantly\r\n            if (this.confidence < 0.6) {\r\n                this.evolveAgents();\r\n                this.checkConvergence();\r\n            }\r\n        } else {\r\n            // Not locked yet, be aggressive\r\n            // Score each agent against the peak\r\n            this.agents.forEach(agent => {\r\n                this.scoreAgent(agent, time, strength);\r\n            });\r\n\r\n            // Evolution step\r\n            this.evolveAgents();\r\n\r\n            // Check for convergence\r\n            this.checkConvergence();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Score agent based on how well it predicts this peak\r\n     */\r\n    scoreAgent(agent, peakTime, peakStrength) {\r\n        const timeSinceLastBeat = peakTime - agent.lastBeatTime;\r\n        const expectedNextBeat = agent.beatInterval;\r\n\r\n        // Calculate phase alignment (0-1, where 1 is perfect)\r\n        const phaseDiff = Math.abs((timeSinceLastBeat % expectedNextBeat) / expectedNextBeat - 0.5) * 2;\r\n        const alignment = 1 - phaseDiff;\r\n\r\n        // Strong peaks matter more\r\n        const weightedAlignment = alignment * peakStrength;\r\n\r\n        // Update agent stats (more aggressive confidence building)\r\n        if (alignment > 0.7) { // Lower threshold\r\n            agent.hits++;\r\n            agent.confidence = Math.min(1, agent.confidence + 0.1); // Faster increase\r\n\r\n            // Update phase if we're close\r\n            if (alignment > 0.85) {\r\n                agent.lastBeatTime = peakTime;\r\n            }\r\n        } else if (alignment < 0.3) {\r\n            agent.misses++;\r\n            agent.confidence = Math.max(0, agent.confidence - 0.03);\r\n        }\r\n\r\n        // Decay confidence slowly for inactive agents\r\n        agent.confidence *= 0.998; // Slower decay\r\n    }\r\n\r\n    /**\r\n     * Evolve agents - kill weak ones, spawn variations of strong ones\r\n     */\r\n    evolveAgents() {\r\n        // Sort by confidence\r\n        this.agents.sort((a, b) => b.confidence - a.confidence);\r\n\r\n        // Kill weakest if we have too many\r\n        if (this.agents.length > this.maxAgents) {\r\n            this.agents = this.agents.slice(0, this.maxAgents);\r\n        }\r\n\r\n        // If top agent is very confident, spawn slight variations\r\n        const bestAgent = this.agents[0];\r\n        if (bestAgent.confidence > 0.7 && this.agents.length < this.maxAgents) {\r\n            // Try slight BPM variations\r\n            const variation = 1 + (Math.random() - 0.5) * 0.02; // ±1%\r\n            const newAgent = this.createAgent(\r\n                bestAgent.bpm * variation,\r\n                bestAgent.subdivision\r\n            );\r\n            newAgent.confidence = bestAgent.confidence * 0.8;\r\n            this.agents.push(newAgent);\r\n        }\r\n\r\n        // Kill agents with very low confidence\r\n        this.agents = this.agents.filter(a => a.confidence > 0.1);\r\n    }\r\n\r\n    /**\r\n     * Check if agents have converged on a tempo\r\n     */\r\n    checkConvergence() {\r\n        if (this.agents.length === 0) return;\r\n\r\n        const bestAgent = this.agents[0];\r\n\r\n        // Need high confidence and clear winner\r\n        if (bestAgent.confidence > this.convergenceThreshold) {\r\n            // Check if other top agents agree (within 5% for faster convergence)\r\n            const similarAgents = this.agents.filter(a =>\r\n                Math.abs(a.effectiveBPM - bestAgent.effectiveBPM) / bestAgent.effectiveBPM < 0.05\r\n            );\r\n\r\n            // Only need 2 agents to agree for faster lock\r\n            if (similarAgents.length >= Math.min(2, this.agents.length * 0.3)) {\r\n                // We have convergence!\r\n                this.lockedBPM = Math.round(bestAgent.bpm);\r\n                this.confidence = bestAgent.confidence;\r\n\r\n                // Auto-select best subdivision\r\n                this.autoSelectSubdivision();\r\n\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Auto-select subdivision based on BPM range\r\n     */\r\n    autoSelectSubdivision() {\r\n        for (const [range, config] of Object.entries(this.subdivisionPreference)) {\r\n            if (this.lockedBPM >= config.min && this.lockedBPM < config.max) {\r\n                // Find agent with preferred subdivision\r\n                const preferredAgent = this.agents.find(a =>\r\n                    Math.abs(a.bpm - this.lockedBPM) < 2 &&\r\n                    Math.abs(a.subdivision - config.prefer) < 0.1\r\n                );\r\n\r\n                if (preferredAgent) {\r\n                    return config.prefer;\r\n                }\r\n            }\r\n        }\r\n        return 1; // Default\r\n    }\r\n\r\n    /**\r\n     * Get rough BPM estimate from FFT (frequency domain)\r\n     */\r\n    getFFTEstimate() {\r\n        if (this.peakHistory.length < 4) return 120; // Default\r\n\r\n        // Calculate intervals between recent peaks\r\n        const recentPeaks = this.peakHistory.slice(-10);\r\n        const intervals = [];\r\n\r\n        for (let i = 1; i < recentPeaks.length; i++) {\r\n            intervals.push(recentPeaks[i].time - recentPeaks[i-1].time);\r\n        }\r\n\r\n        if (intervals.length === 0) return 120;\r\n\r\n        // Find most common interval (mode)\r\n        intervals.sort((a, b) => a - b);\r\n        const median = intervals[Math.floor(intervals.length / 2)];\r\n\r\n        // Convert to BPM\r\n        let estimatedBPM = 60000 / median;\r\n\r\n        // Sanity check - if way out of range, try doubling/halving\r\n        if (estimatedBPM < this.minBPM) {\r\n            estimatedBPM *= 2;\r\n        } else if (estimatedBPM > this.maxBPM) {\r\n            estimatedBPM /= 2;\r\n        }\r\n\r\n        return Math.max(this.minBPM, Math.min(this.maxBPM, estimatedBPM));\r\n    }\r\n\r\n    /**\r\n     * Force reset detection with new seed\r\n     */\r\n    reset(seedBPM = null) {\r\n        this.agents = [];\r\n        this.confidence = 0;\r\n        this.lockedBPM = 0;\r\n        this.peakHistory = [];\r\n\r\n        if (seedBPM) {\r\n            this.initializeAgents(seedBPM);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get current best BPM estimate\r\n     */\r\n    getBPM() {\r\n        if (this.lockedBPM > 0 && this.confidence > 0.8) {\r\n            return this.lockedBPM;\r\n        }\r\n\r\n        if (this.agents.length > 0) {\r\n            return Math.round(this.agents[0].bpm);\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    /**\r\n     * Get recommended subdivision\r\n     */\r\n    getSubdivision() {\r\n        if (this.agents.length > 0) {\r\n            const bestAgent = this.agents[0];\r\n\r\n            // Check BPM range preferences\r\n            const bpm = bestAgent.bpm;\r\n            for (const [range, config] of Object.entries(this.subdivisionPreference)) {\r\n                if (bpm >= config.min && bpm < config.max) {\r\n                    return config.prefer;\r\n                }\r\n            }\r\n\r\n            return bestAgent.subdivision;\r\n        }\r\n        return 1;\r\n    }\r\n\r\n    /**\r\n     * Get detection status\r\n     */\r\n    getStatus() {\r\n        return {\r\n            bpm: this.getBPM(),\r\n            subdivision: this.getSubdivision(),\r\n            confidence: this.confidence,\r\n            locked: this.lockedBPM > 0 && this.confidence > 0.8,\r\n            agentCount: this.agents.length,\r\n            topAgents: this.agents.slice(0, 3).map(a => ({\r\n                bpm: Math.round(a.bpm),\r\n                subdivision: a.subdivision,\r\n                confidence: a.confidence.toFixed(2)\r\n            }))\r\n        };\r\n    }\r\n}","/**\r\n * MusicDetector - Handles BPM and time signature detection\r\n * @module core/morpher/MusicDetector\r\n */\r\n\r\nimport { AgentBPMDetector } from './AgentBPMDetector.js';\r\n\r\nexport class MusicDetector {\r\n    constructor() {\r\n        // Beat detection state\r\n        this.onsetIntervals = [];\r\n        this.onsetStrengths = [];\r\n        this.lastOnsetTime = 0;\r\n        this.onsetThreshold = 0.3;\r\n\r\n        // BPM detection\r\n        this.detectedBPM = 0;\r\n        this.bpmConfidence = 0;\r\n        this.lastBPMCalculation = 0;\r\n        this.bpmCalculationInterval = 2000; // Recalculate every 2 seconds\r\n\r\n        // BPM tracking\r\n        this.bpmHistory = [];\r\n        this.tempoLocked = false;\r\n        this.fundamentalBPM = 0;\r\n\r\n        // Agent-based detector for fast convergence\r\n        this.agentDetector = new AgentBPMDetector();\r\n        this.useAgentDetection = true; // Flag to enable/disable\r\n\r\n        // Time signature detection\r\n        this.timeSignature = '4/4';\r\n        this.detectedTimeSignature = null;\r\n        this.timeSignatureConfidence = 0;\r\n        this.timeSignatureHistory = [];\r\n        this.timeSignatureLocked = false;\r\n        this.downbeatPhase = 0;\r\n        this.measureLength = 4;\r\n        this.measureStartTime = 0;\r\n\r\n        // Music state\r\n        this.isMusicalContent = false;\r\n        this.musicalityScore = 0;\r\n\r\n        // Fast detection mode\r\n        this.forceFastDetection = false;\r\n    }\r\n\r\n    /**\r\n     * Calculate BPM from onset intervals with improved stability\r\n     * @returns {number} Detected BPM\r\n     */\r\n    calculateBPM() {\r\n        // Try agent detector first for faster results\r\n        if (this.useAgentDetection) {\r\n            const agentStatus = this.agentDetector.getStatus();\r\n            if (agentStatus.locked && agentStatus.confidence > 0.6) { // Lower threshold\r\n                // Use agent's locked BPM\r\n                this.detectedBPM = agentStatus.bpm;\r\n                this.bpmConfidence = agentStatus.confidence;\r\n                this.tempoLocked = true;\r\n                this.fundamentalBPM = agentStatus.bpm;\r\n\r\n                // Update history\r\n                this.bpmHistory.push(this.detectedBPM);\r\n                if (this.bpmHistory.length > 10) {\r\n                    this.bpmHistory.shift();\r\n                }\r\n\r\n                return this.detectedBPM;\r\n            } else if (agentStatus.bpm > 0 && agentStatus.confidence > 0.4) { // Lower threshold\r\n                // Use agent's estimate if somewhat confident\r\n                this.detectedBPM = agentStatus.bpm;\r\n                this.bpmConfidence = agentStatus.confidence;\r\n\r\n                // Also mark as tempo locked if confidence is decent\r\n                if (agentStatus.confidence > 0.6) {\r\n                    this.tempoLocked = true;\r\n                }\r\n\r\n                return this.detectedBPM;\r\n            }\r\n        }\r\n\r\n        // Fall back to original method if agent not ready\r\n        if (this.onsetIntervals.length < 4) return this.detectedBPM;\r\n        \r\n        // Use appropriate window size based on available data\r\n        const analysisWindow = this.onsetIntervals.slice(-15);\r\n        \r\n        // Find tempo candidates using autocorrelation-like approach\r\n        const tempoCandidates = this.findTempoCandidates(analysisWindow);\r\n        if (tempoCandidates.length === 0) return this.detectedBPM;\r\n        \r\n        // Get the best tempo candidate\r\n        const bestCandidate = tempoCandidates[0];\r\n        const candidateBPM = Math.round(60000 / bestCandidate.interval);\r\n        \r\n        // If we haven't locked a tempo yet, establish the fundamental\r\n        if (!this.tempoLocked && this.bpmHistory.length > 3) {\r\n            // Check if we have consistent readings\r\n            const recentBPMs = this.bpmHistory.slice(-3);\r\n            const avgRecent = recentBPMs.reduce((a, b) => a + b, 0) / recentBPMs.length;\r\n            const variance = recentBPMs.reduce((sum, bpm) => sum + Math.pow(bpm - avgRecent, 2), 0) / recentBPMs.length;\r\n            \r\n            // Lock faster with tighter variance requirement\r\n            if (variance < 5) { // Less than ~2 BPM standard deviation - much tighter\r\n                this.fundamentalBPM = Math.round(avgRecent);\r\n                this.tempoLocked = true;\r\n                this.bpmConfidence = 1.0;\r\n            }\r\n        }\r\n        \r\n        // Check if new BPM is a harmonic of the fundamental\r\n        let finalBPM = candidateBPM;\r\n        if (this.tempoLocked) {\r\n            const harmonic = this.checkHarmonicRelation(candidateBPM, this.fundamentalBPM);\r\n            if (harmonic) {\r\n                // It's a valid harmonic, adjust to fundamental\r\n                finalBPM = this.fundamentalBPM;\r\n                this.bpmConfidence = Math.min(1.0, this.bpmConfidence + 0.1);\r\n            } else {\r\n                // Not a harmonic - check if we should update fundamental\r\n                this.bpmConfidence *= 0.9;\r\n                \r\n                // Only change if confidence is very low and new tempo is strong\r\n                if (this.bpmConfidence < 0.3 && bestCandidate.strength > 0.8) {\r\n                    this.fundamentalBPM = candidateBPM;\r\n                    this.bpmConfidence = 0.5;\r\n                } else {\r\n                    // Stick with fundamental\r\n                    finalBPM = this.fundamentalBPM;\r\n                }\r\n            }\r\n        }\r\n        \r\n        // Update history\r\n        this.bpmHistory.push(finalBPM);\r\n        if (this.bpmHistory.length > 10) {\r\n            this.bpmHistory.shift();\r\n        }\r\n        \r\n        // Apply smoothing\r\n        if (this.detectedBPM === 0) {\r\n            this.detectedBPM = finalBPM;\r\n        } else {\r\n            const maxChange = this.tempoLocked ? 1 : 2; // Reduced from 5 to 2 for stability\r\n            const diff = finalBPM - this.detectedBPM;\r\n            if (Math.abs(diff) <= maxChange) {\r\n                this.detectedBPM = finalBPM;\r\n            } else {\r\n                this.detectedBPM += Math.sign(diff) * maxChange;\r\n            }\r\n        }\r\n        \r\n        // Update rhythm engine if available\r\n        if (window.rhythmIntegration && window.rhythmIntegration.updateBPM) {\r\n            if (!window.rhythmManuallyStoppedForCurrentAudio) {\r\n                window.rhythmIntegration.updateBPM(this.detectedBPM);\r\n            }\r\n        }\r\n        \r\n        return this.detectedBPM;\r\n    }\r\n\r\n    /**\r\n     * Find tempo candidates from intervals\r\n     * @param {Array} intervals - Time intervals between onsets\r\n     * @returns {Array} Tempo candidates with confidence scores\r\n     */\r\n    findTempoCandidates(intervals) {\r\n        const candidates = [];\r\n        \r\n        // Test different interval groupings (1x, 2x, 4x) for beat patterns\r\n        for (let multiplier of [1, 2, 4]) {\r\n            const testIntervals = intervals.map(i => i * multiplier);\r\n            \r\n            // Find clusters of similar intervals\r\n            const clusters = this.clusterIntervals(testIntervals);\r\n            \r\n            for (let cluster of clusters) {\r\n                const avgInterval = cluster.intervals.reduce((a, b) => a + b, 0) / cluster.intervals.length;\r\n                const actualInterval = avgInterval / multiplier;\r\n                \r\n                // Calculate strength based on cluster size and consistency\r\n                const strength = (cluster.intervals.length / intervals.length) * cluster.consistency;\r\n                \r\n                // Only consider if it would result in reasonable BPM\r\n                const bpm = 60000 / actualInterval;\r\n                // Prefer common BPM ranges (120-140 is very common)\r\n                const commonBPMBonus = (bpm >= 120 && bpm <= 140) ? 0.2 : 0;\r\n                if (bpm >= 60 && bpm <= 220) {\r\n                    candidates.push({\r\n                        interval: actualInterval,\r\n                        strength: strength + commonBPMBonus,\r\n                        multiplier: multiplier\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        \r\n        // Sort by strength\r\n        return candidates.sort((a, b) => b.strength - a.strength);\r\n    }\r\n\r\n    /**\r\n     * Cluster similar intervals together\r\n     * @param {Array} intervals - Time intervals\r\n     * @returns {Array} Clustered intervals\r\n     */\r\n    clusterIntervals(intervals) {\r\n        const sorted = [...intervals].sort((a, b) => a - b);\r\n        const clusters = [];\r\n        let currentCluster = [sorted[0]];\r\n        \r\n        for (let i = 1; i < sorted.length; i++) {\r\n            const tolerance = currentCluster[0] * 0.03; // 3% tolerance - tighter for stable BPM\r\n            if (sorted[i] - currentCluster[0] <= tolerance) {\r\n                currentCluster.push(sorted[i]);\r\n            } else {\r\n                if (currentCluster.length >= 2) {\r\n                    // Calculate consistency (inverse of variance)\r\n                    const avg = currentCluster.reduce((a, b) => a + b, 0) / currentCluster.length;\r\n                    const variance = currentCluster.reduce((sum, val) => sum + Math.pow(val - avg, 2), 0) / currentCluster.length;\r\n                    const consistency = 1 / (1 + variance / (avg * avg)); // Normalized by average\r\n                    \r\n                    clusters.push({\r\n                        intervals: currentCluster,\r\n                        consistency: consistency\r\n                    });\r\n                }\r\n                currentCluster = [sorted[i]];\r\n            }\r\n        }\r\n        \r\n        // Don't forget the last cluster\r\n        if (currentCluster.length >= 3) {\r\n            const avg = currentCluster.reduce((a, b) => a + b, 0) / currentCluster.length;\r\n            const variance = currentCluster.reduce((sum, val) => sum + Math.pow(val - avg, 2), 0) / currentCluster.length;\r\n            const consistency = 1 / (1 + variance / (avg * avg));\r\n            clusters.push({\r\n                intervals: currentCluster,\r\n                consistency: consistency\r\n            });\r\n        }\r\n        \r\n        return clusters;\r\n    }\r\n\r\n    /**\r\n     * Check if two BPMs are harmonically related\r\n     * @param {number} bpm1 - First BPM\r\n     * @param {number} bpm2 - Second BPM\r\n     * @returns {boolean} True if harmonically related\r\n     */\r\n    checkHarmonicRelation(bpm1, bpm2) {\r\n        const ratio = Math.max(bpm1, bpm2) / Math.min(bpm1, bpm2);\r\n        const tolerance = 0.03;\r\n        \r\n        // Check for simple ratios (2:1, 3:2, 4:3, etc.)\r\n        const simpleRatios = [2, 1.5, 1.333, 1.25];\r\n        return simpleRatios.some(r => Math.abs(ratio - r) < tolerance);\r\n    }\r\n\r\n    /**\r\n     * Detect time signature from onset patterns\r\n     * @returns {string} Detected time signature\r\n     */\r\n    detectTimeSignature() {\r\n        // Need at least a detected BPM and some onset data\r\n        const minOnsets = this.forceFastDetection ? 6 : 12;\r\n        if (this.detectedBPM === 0 || this.onsetStrengths.length < minOnsets) {\r\n            return this.timeSignature;\r\n        }\r\n        \r\n        // If already locked, don't change unless we're in fast mode (just reset)\r\n        if (this.timeSignatureLocked && !this.forceFastDetection) {\r\n            return this.detectedTimeSignature || this.timeSignature;\r\n        }\r\n        \r\n        const beatInterval = 60000 / this.detectedBPM;\r\n        \r\n        // Only test the most common measure length first (4 beats)\r\n        // We'll be conservative and mostly detect 4/4 unless very clear pattern\r\n        const measureLength = 4;\r\n        const beatBins = new Array(measureLength).fill(0).map(() => ({\r\n            strength: 0,\r\n            bassWeight: 0,\r\n            count: 0\r\n        }));\r\n        \r\n        // Align recent onsets to a 4-beat grid\r\n        const recentOnsets = this.onsetStrengths.slice(-Math.min(20, this.onsetStrengths.length));\r\n        if (recentOnsets.length === 0) return this.timeSignature;\r\n        const startTime = recentOnsets[0].time;\r\n        \r\n        for (let onset of recentOnsets) {\r\n            const timeSinceStart = onset.time - startTime;\r\n            const beatPosition = (timeSinceStart / beatInterval) % measureLength;\r\n            const binIndex = Math.round(beatPosition) % measureLength;\r\n            \r\n            beatBins[binIndex].strength += onset.strength;\r\n            beatBins[binIndex].bassWeight += onset.bassWeight || 0;\r\n            beatBins[binIndex].count++;\r\n        }\r\n        \r\n        // Normalize bins\r\n        let maxStrength = 0;\r\n        for (let bin of beatBins) {\r\n            if (bin.count > 0) {\r\n                bin.strength /= bin.count;\r\n                bin.bassWeight /= bin.count;\r\n                maxStrength = Math.max(maxStrength, bin.strength + bin.bassWeight);\r\n            }\r\n        }\r\n        \r\n        // Default to 4/4 for most music\r\n        let detectedSig = '4/4';\r\n        \r\n        // Only detect 3/4 if we have a VERY clear waltz pattern\r\n        // (strong-weak-weak with no emphasis on beat 4)\r\n        if (beatBins[0].strength > beatBins[1].strength * 2 &&\r\n            beatBins[0].strength > beatBins[2].strength * 2 &&\r\n            beatBins[3].count < beatBins[0].count * 0.5) {\r\n            // Might be 3/4, but need more confidence\r\n            const waltzConfidence = this.testWaltzPattern(recentOnsets, beatInterval);\r\n            if (waltzConfidence > 0.8) {\r\n                detectedSig = '3/4';\r\n            }\r\n        }\r\n        \r\n        // Add to history\r\n        this.timeSignatureHistory.push(detectedSig);\r\n        if (this.timeSignatureHistory.length > 3) {\r\n            this.timeSignatureHistory.shift();\r\n        }\r\n        \r\n        // Lock faster - only need 2 readings in fast mode, 3 normally\r\n        const minReadings = this.forceFastDetection ? 2 : 3;\r\n        if (this.timeSignatureHistory.length >= minReadings) {\r\n            const counts = {};\r\n            for (let sig of this.timeSignatureHistory) {\r\n                counts[sig] = (counts[sig] || 0) + 1;\r\n            }\r\n            \r\n            // Find most common\r\n            let mostCommon = '4/4';\r\n            let maxCount = 0;\r\n            for (let [sig, count] of Object.entries(counts)) {\r\n                if (count > maxCount) {\r\n                    maxCount = count;\r\n                    mostCommon = sig;\r\n                }\r\n            }\r\n            \r\n            // Lock if we have agreement (at least 2 out of 3)\r\n            if (maxCount >= 2) {\r\n                this.detectedTimeSignature = mostCommon;\r\n                this.timeSignatureLocked = true;\r\n                this.timeSignatureConfidence = maxCount / 3;\r\n                \r\n                // Update rhythm engine if available\r\n                if (window.rhythmIntegration && window.rhythmIntegration.setTimeSignature) {\r\n                    window.rhythmIntegration.setTimeSignature(this.detectedTimeSignature);\r\n                }\r\n                \r\n                \r\n                // Also directly update UI in case rhythmIntegration doesn't\r\n                const timeSigDisplay = document.getElementById('time-sig-display');\r\n                if (timeSigDisplay) {\r\n                    timeSigDisplay.textContent = this.detectedTimeSignature;\r\n                }\r\n            }\r\n        }\r\n        \r\n        return this.detectedTimeSignature || this.timeSignature;\r\n    }\r\n\r\n    /**\r\n     * Test for waltz pattern (3/4 time)\r\n     * @param {Array} onsets - Onset times and strengths\r\n     * @param {number} beatInterval - Beat interval in ms\r\n     * @returns {number} Confidence score (0-1) for waltz pattern\r\n     */\r\n    testWaltzPattern(onsets, beatInterval) {\r\n        // Look for groups of 3 beats with strong-weak-weak pattern\r\n        let waltzGroups = 0;\r\n        let totalGroups = 0;\r\n        \r\n        for (let i = 0; i < onsets.length - 2; i += 3) {\r\n            if (i + 2 < onsets.length) {\r\n                totalGroups++;\r\n                const first = onsets[i].strength + (onsets[i].bassWeight || 0);\r\n                const second = onsets[i + 1].strength + (onsets[i + 1].bassWeight || 0);\r\n                const third = onsets[i + 2].strength + (onsets[i + 2].bassWeight || 0);\r\n                \r\n                // Check for strong-weak-weak pattern\r\n                if (first > second * 1.5 && first > third * 1.5) {\r\n                    waltzGroups++;\r\n                }\r\n            }\r\n        }\r\n        \r\n        return totalGroups > 0 ? waltzGroups / totalGroups : 0;\r\n    }\r\n\r\n    /**\r\n     * Add onset event for analysis\r\n     * @param {number} time - Onset time\r\n     * @param {number} strength - Onset strength\r\n     * @param {number} bassWeight - Optional bass weight for downbeat detection\r\n     */\r\n    addOnset(time, strength, bassWeight = 0) {\r\n        // Feed to agent detector for fast convergence\r\n        if (this.useAgentDetection) {\r\n            this.agentDetector.processPeak(strength, time);\r\n        }\r\n\r\n        if (this.lastOnsetTime > 0) {\r\n            const interval = time - this.lastOnsetTime;\r\n            // Filter reasonable intervals (60-220 BPM range)\r\n            if (interval > 273 && interval < 1000) {\r\n                this.onsetIntervals.push(interval);\r\n                if (this.onsetIntervals.length > 20) {\r\n                    this.onsetIntervals.shift();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.onsetStrengths.push({ time, strength, bassWeight });\r\n        if (this.onsetStrengths.length > 40) {\r\n            this.onsetStrengths.shift();\r\n        }\r\n\r\n        this.lastOnsetTime = time;\r\n    }\r\n\r\n    /**\r\n     * Update music detection\r\n     * @param {number} now - Current time\r\n     */\r\n    update(now) {\r\n        // Periodically recalculate BPM\r\n        if (now - this.lastBPMCalculation > this.bpmCalculationInterval) {\r\n            this.calculateBPM();\r\n            this.detectTimeSignature();\r\n            this.lastBPMCalculation = now;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get recommended subdivision for current BPM\r\n     */\r\n    getRecommendedSubdivision() {\r\n        if (this.useAgentDetection) {\r\n            return this.agentDetector.getSubdivision();\r\n        }\r\n\r\n        // Fallback logic based on BPM ranges - prefer lower subdivisions\r\n        if (this.detectedBPM < 60) return 2;     // Double for very slow\r\n        if (this.detectedBPM < 80) return 1;     // Normal for slow\r\n        if (this.detectedBPM > 180) return 0.5;  // Half for very fast\r\n        if (this.detectedBPM > 140) return 0.5;  // Half for fast\r\n        return 1; // Normal for mid-range (80-140)\r\n    }\r\n\r\n    /**\r\n     * Reset music detection state\r\n     */\r\n    reset() {\r\n        this.onsetIntervals = [];\r\n        this.onsetStrengths = [];\r\n        this.lastOnsetTime = 0;\r\n        this.detectedBPM = 0;\r\n        this.bpmConfidence = 0;\r\n        this.bpmHistory = [];\r\n        this.tempoLocked = false;\r\n        this.fundamentalBPM = 0;\r\n        this.timeSignature = '4/4';\r\n        this.detectedTimeSignature = null;\r\n        this.timeSignatureConfidence = 0;\r\n        this.timeSignatureHistory = [];\r\n\r\n        // Reset agent detector\r\n        if (this.agentDetector) {\r\n            this.agentDetector.reset();\r\n        }\r\n        this.timeSignatureLocked = false;\r\n        this.isMusicalContent = false;\r\n        this.forceFastDetection = false;\r\n    }\r\n\r\n    /**\r\n     * Get current music information\r\n     */\r\n    getMusicInfo() {\r\n        return {\r\n            bpm: this.detectedBPM,\r\n            confidence: this.bpmConfidence,\r\n            timeSignature: this.timeSignature,\r\n            isMusical: this.isMusicalContent,\r\n            musicalityScore: this.musicalityScore\r\n        };\r\n    }\r\n}\r\n\r\nexport default MusicDetector;","/**\r\n * TransitionManager - Manages shape transitions and morphing queue\r\n * @module core/morpher/TransitionManager\r\n */\r\n\r\nexport class TransitionManager {\r\n    constructor(morpher) {\r\n        this.morpher = morpher;\r\n        \r\n        // Transition state\r\n        this.isTransitioning = false;\r\n        this.transitionStartTime = 0;\r\n        this.transitionDuration = 800;\r\n        this.transitionProgress = 0;\r\n        this.easingFunction = 'easeInOutQuad';\r\n        \r\n        // Shape state\r\n        this.currentShape = 'circle';\r\n        this.targetShape = null;\r\n        this.previousShape = null;\r\n        \r\n        // Morph queue\r\n        this.morphQueue = [];\r\n        this.maxQueueSize = 3;\r\n        \r\n        // Shadow effects\r\n        this.shadowConfig = null;\r\n        this.shadowProgress = 0;\r\n    }\r\n\r\n    /**\r\n     * Start a shape transition\r\n     * @param {string} targetShape - Target shape name\r\n     * @param {Object} options - Transition options\r\n     */\r\n    startTransition(targetShape, options = {}) {\r\n        // If already transitioning, queue it\r\n        if (this.isTransitioning && this.morphQueue.length < this.maxQueueSize) {\r\n            this.morphQueue.push({ shape: targetShape, options });\r\n            return;\r\n        }\r\n        \r\n        this.previousShape = this.currentShape;\r\n        this.targetShape = targetShape;\r\n        this.isTransitioning = true;\r\n        this.transitionStartTime = performance.now();\r\n        this.transitionDuration = options.duration || 800;\r\n        this.easingFunction = options.easing || 'easeInOutQuad';\r\n        this.transitionProgress = 0;\r\n        \r\n        // Get transition config for special effects\r\n        this.shadowConfig = this.getTransitionConfig(this.currentShape, targetShape);\r\n    }\r\n\r\n    /**\r\n     * Update transition progress\r\n     * @param {number} deltaTime - Time since last frame\r\n     */\r\n    update(deltaTime) {\r\n        if (!this.isTransitioning) return;\r\n        \r\n        const now = performance.now();\r\n        const elapsed = now - this.transitionStartTime;\r\n        const rawProgress = Math.min(1, elapsed / this.transitionDuration);\r\n        \r\n        // Apply easing\r\n        this.transitionProgress = this.applyEasing(rawProgress);\r\n        \r\n        // Update shadow progress if configured\r\n        if (this.shadowConfig) {\r\n            this.shadowProgress = this.calculateShadowProgress(rawProgress);\r\n        }\r\n        \r\n        // Complete transition if done\r\n        if (rawProgress >= 1) {\r\n            this.completeTransition();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Complete current transition\r\n     */\r\n    completeTransition() {\r\n        this.currentShape = this.targetShape;\r\n        this.targetShape = null;\r\n        this.isTransitioning = false;\r\n        this.transitionProgress = 0;\r\n        this.shadowConfig = null;\r\n        \r\n        // Process queue if there are pending morphs\r\n        if (this.morphQueue.length > 0) {\r\n            const next = this.morphQueue.shift();\r\n            this.startTransition(next.shape, next.options);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get transition configuration for special effects\r\n     * @param {string} from - Source shape\r\n     * @param {string} to - Target shape\r\n     * @returns {Object} Transition configuration\r\n     */\r\n    getTransitionConfig(from, to) {\r\n        // Special transition effects for certain shape combinations\r\n        const transitions = {\r\n            'circle-heart': {\r\n                type: 'bloom',\r\n                shadowColor: '#ff69b4',\r\n                shadowIntensity: 0.3\r\n            },\r\n            'heart-circle': {\r\n                type: 'contract',\r\n                shadowColor: '#ff69b4',\r\n                shadowIntensity: 0.2\r\n            },\r\n            'circle-star': {\r\n                type: 'burst',\r\n                shadowColor: '#ffd700',\r\n                shadowIntensity: 0.4\r\n            },\r\n            'star-circle': {\r\n                type: 'collapse',\r\n                shadowColor: '#ffd700',\r\n                shadowIntensity: 0.3\r\n            }\r\n        };\r\n        \r\n        const key = `${from}-${to}`;\r\n        return transitions[key] || null;\r\n    }\r\n\r\n    /**\r\n     * Calculate shadow progress for special effects\r\n     * @param {number} progress - Raw transition progress\r\n     * @returns {number} Shadow effect progress\r\n     */\r\n    calculateShadowProgress(progress) {\r\n        if (!this.shadowConfig) return 0;\r\n        \r\n        switch (this.shadowConfig.type) {\r\n            case 'bloom':\r\n                // Expand then fade\r\n                return progress < 0.5 \r\n                    ? progress * 2 \r\n                    : 2 - (progress * 2);\r\n            \r\n            case 'burst':\r\n                // Quick expand and fade\r\n                return Math.pow(1 - progress, 2);\r\n            \r\n            case 'contract':\r\n            case 'collapse':\r\n                // Fade in then shrink\r\n                return Math.sin(progress * Math.PI);\r\n            \r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Apply easing function to progress\r\n     * @param {number} t - Linear progress (0-1)\r\n     * @returns {number} Eased progress\r\n     */\r\n    applyEasing(t) {\r\n        switch (this.easingFunction) {\r\n            case 'linear':\r\n                return t;\r\n            case 'easeInQuad':\r\n                return t * t;\r\n            case 'easeOutQuad':\r\n                return t * (2 - t);\r\n            case 'easeInOutQuad':\r\n                return t < 0.5 \r\n                    ? 2 * t * t \r\n                    : -1 + (4 - 2 * t) * t;\r\n            case 'easeInCubic':\r\n                return t * t * t;\r\n            case 'easeOutCubic':\r\n                return (--t) * t * t + 1;\r\n            case 'easeInOutCubic':\r\n                return t < 0.5 \r\n                    ? 4 * t * t * t \r\n                    : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\r\n            default:\r\n                return t;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clear morph queue\r\n     */\r\n    clearQueue() {\r\n        this.morphQueue = [];\r\n    }\r\n\r\n    /**\r\n     * Check if has queued morphs\r\n     */\r\n    hasQueuedMorphs() {\r\n        return this.morphQueue.length > 0;\r\n    }\r\n\r\n    /**\r\n     * Get current state\r\n     */\r\n    getState() {\r\n        return {\r\n            isTransitioning: this.isTransitioning,\r\n            currentShape: this.currentShape,\r\n            targetShape: this.targetShape,\r\n            progress: this.transitionProgress,\r\n            queueLength: this.morphQueue.length\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Reset to default state\r\n     */\r\n    reset() {\r\n        this.isTransitioning = false;\r\n        this.currentShape = 'circle';\r\n        this.targetShape = null;\r\n        this.transitionProgress = 0;\r\n        this.morphQueue = [];\r\n        this.shadowConfig = null;\r\n    }\r\n}\r\n\r\nexport default TransitionManager;","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Shape Morphing System\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Musical shape morphing system using modular shapes\r\n * @author Emotive Engine Team\r\n * @module core/ShapeMorpher\r\n */\r\n\r\nimport { MusicalDuration } from './MusicalDuration.js';\r\nimport { rhythmEngine } from './rhythm.js';\r\nimport { SHAPE_DEFINITIONS } from './shapes/shapeDefinitions.js';\r\nimport arrayPool from '../utils/ArrayPool.js';\r\n\r\n// Import modular components\r\nimport { AudioDeformer } from './morpher/AudioDeformer.js';\r\nimport { MusicDetector } from './morpher/MusicDetector.js';\r\nimport { TransitionManager } from './morpher/TransitionManager.js';\r\n\r\n/**\r\n * ShapeMorpher class - manages smooth transitions between shapes\r\n */\r\nclass ShapeMorpher {\r\n    constructor(options = {}) {\r\n        // Configuration\r\n        this.numPoints = options.numPoints || 64;\r\n        this.morphDuration = options.morphDuration || 1000; // Default 1 second\r\n        this.easing = options.easing || 'easeInOutCubic';\r\n        \r\n        // Initialize modular components\r\n        this.transitionManager = new TransitionManager(this);\r\n        this.audioDeformer = new AudioDeformer(this);\r\n        this.musicDetector = new MusicDetector();\r\n        \r\n        // State - delegated to TransitionManager\r\n        this.currentShape = 'circle';\r\n        this.targetShape = null;\r\n        this.morphProgress = 0;\r\n        this.visualProgress = 0; // Smoothed visual progress for rendering\r\n        this.morphStartTime = null;\r\n        this.isTransitioning = false;\r\n        \r\n        // Shape data cache\r\n        this.shapeCache = new Map();\r\n        this.currentPoints = [];\r\n        this.targetPoints = [];\r\n        \r\n        // Musical timing\r\n        this.musicalDuration = null;\r\n        this.onBeat = false;\r\n        \r\n        // Audio deformation with throttling - delegated to AudioDeformer\r\n        this.audioDeformation = 0;\r\n        this.vocalEnergy = 0;\r\n        this.lastAudioUpdate = 0;\r\n        this.lastVocalUpdate = 0;  // Separate timestamp for vocal updates\r\n        this.audioUpdateInterval = 33; // Update at ~30fps max\r\n        \r\n        // Enhanced audio visualization\r\n        this.audioAnalyzer = null; // Reference to audio analyzer for frequency data\r\n        this.frequencyData = arrayPool.acquire(32, 'float32'); // Store frequency bands\r\n        this.glitchPoints = []; // Track points that are glitching\r\n        this.undulationPhase = 0; // Phase for wave animation\r\n        this.undulationDirection = 1; // Random direction for bass wobble\r\n        this.beatGlitchIntensity = 0; // Intensity of beat-triggered glitches\r\n        \r\n        // Frequency-specific energy tracking\r\n        this.bassEnergy = 0; // Low frequency energy (20-250 Hz)\r\n        this.vocalPresence = 0; // Mid frequency energy (250-4000 Hz)\r\n        \r\n        // Rolling averages for dynamic thresholds\r\n        this.bassHistory = arrayPool.acquire(60, 'float32'); // 2 seconds at 30fps\r\n        this.vocalHistory = arrayPool.acquire(60, 'float32');\r\n        this.historyIndex = 0;\r\n        \r\n        // Cooldown timers to prevent effect spam\r\n        this.bassEffectCooldown = 0;\r\n        this.vocalEffectCooldown = 0;\r\n        \r\n        // Threshold multipliers (can be adjusted for mic vs audio)\r\n        this.bassThresholdMultiplier = 1.2;  // Lowered from 1.8 for testing\r\n        this.vocalThresholdMultiplier = 1.1;  // Even lower for more frequent vocal triggers\r\n        \r\n        // Effect states\r\n        this.bassEffectActive = false;\r\n        this.vocalEffectActive = false;\r\n        \r\n        // Transient detection\r\n        this.transientHoldTime = 0;\r\n        this.vocalGlowBoost = 0;\r\n        \r\n        // Callbacks\r\n        this.onComplete = null;\r\n        this.onProgress = null;\r\n        \r\n        // Morph queue\r\n        this.queuedMorph = null;\r\n        \r\n        // Initialize with circle shape\r\n        this.currentPoints = this.getShapePoints('circle');\r\n        this.shapesLoaded = true; // Static definitions are always loaded\r\n        \r\n        // Pre-warm the shape cache to prevent first-run choppiness\r\n        this.prewarmCache();\r\n    }\r\n    \r\n    /**\r\n     * Pre-warm the shape cache to prevent first-run lag\r\n     */\r\n    prewarmCache() {\r\n        // Pre-generate all common shapes\r\n        const commonShapes = [\r\n            'circle', 'heart', 'star', 'sun', 'moon', \r\n            'lunar', 'square', 'triangle'\r\n        ];\r\n        \r\n        \r\n        commonShapes.forEach(shape => {\r\n            if (SHAPE_DEFINITIONS[shape]) {\r\n                // Generate and cache the points\r\n                this.getShapePoints(shape);\r\n            }\r\n        });\r\n        \r\n        // Also pre-calculate some common easing values\r\n        const testProgress = [0, 0.25, 0.5, 0.75, 1];\r\n        testProgress.forEach(t => {\r\n            this.applyEasing(t); // Warm up easing calculations\r\n        });\r\n    }\r\n    \r\n    /**\r\n     * Get shape points from cache or generate\r\n     */\r\n    getShapePoints(shapeName) {\r\n        if (!this.shapeCache.has(shapeName)) {\r\n            const shapeDef = SHAPE_DEFINITIONS[shapeName];\r\n            if (!shapeDef || !shapeDef.points) {\r\n                const circlePoints = SHAPE_DEFINITIONS.circle.points;\r\n                this.shapeCache.set(shapeName, circlePoints);\r\n                return circlePoints;\r\n            }\r\n            // Store reference directly - shapes are immutable\r\n            const points = shapeDef.points;\r\n            this.shapeCache.set(shapeName, points);\r\n            return points;\r\n        }\r\n        return this.shapeCache.get(shapeName);\r\n    }\r\n    \r\n    /**\r\n     * Start morphing to a new shape\r\n     * @param {string} targetShape - Target shape name\r\n     * @param {Object} options - Morph options\r\n     */\r\n    morphTo(targetShape, options = {}) {\r\n        if (!this.shapesLoaded) {\r\n            return;\r\n        }\r\n        \r\n        if (targetShape === this.currentShape && !this.isTransitioning) {\r\n            return; // Already at target shape\r\n        }\r\n        \r\n        // Handle queueing or forcing\r\n        if (this.isTransitioning && !options.force) {\r\n            // Queue this morph for after current one completes\r\n            this.queuedMorph = { targetShape, options };\r\n            return 'queued'; // Return status so caller knows it was queued\r\n        } else if (this.isTransitioning && options.force) {\r\n            // Force interrupt current morph\r\n            this.completeMorph(true); // Skip to end without processing queue\r\n        }\r\n        \r\n        // Get transition configuration\r\n        const transitionConfig = this.getTransitionConfig(this.currentShape, targetShape);\r\n        \r\n        // Set up transition\r\n        this.targetShape = targetShape;\r\n        this.targetPoints = this.getShapePoints(targetShape);\r\n        this.morphStartTime = Date.now();\r\n        this.isTransitioning = true;\r\n        this.morphProgress = 0;\r\n        this.visualProgress = 0; // Reset visual progress\r\n\r\n        \r\n        // Configure timing - use transition config duration if available\r\n        if (options.duration === 'bar' || options.duration === 'beat') {\r\n            // Musical timing - calculate duration based on current BPM\r\n            const bpm = rhythmEngine.bpm || 120;\r\n            const beatDuration = 60000 / bpm; // ms per beat\r\n            \r\n            if (options.duration === 'bar') {\r\n                // Assume 4/4 time signature\r\n                this.morphDuration = beatDuration * 4; // 4 beats per bar\r\n            } else {\r\n                this.morphDuration = beatDuration; // 1 beat\r\n            }\r\n            \r\n            this.musicalDuration = true; // Flag for musical timing\r\n            this.onBeat = options.onBeat !== false; // Default true for musical timing\r\n        } else {\r\n            // Fixed duration - prefer transition config duration\r\n            this.morphDuration = transitionConfig?.duration || options.duration || 1000;\r\n            this.musicalDuration = null;\r\n            this.onBeat = false;\r\n        }\r\n        \r\n        // Store options\r\n        this.morphMode = options.mode || 'smooth';\r\n        this.transitionConfig = transitionConfig;\r\n        \r\n        // Callbacks\r\n        this.onComplete = options.onComplete;\r\n        this.onProgress = options.onProgress;\r\n        \r\n    }\r\n    \r\n    /**\r\n     * Update morph animation\r\n     * @param {number} deltaTime - Time since last update (can be from RAF timestamp)\r\n     */\r\n    update(deltaTime) {\r\n        // Always update frequency data from audio analyzer if available\r\n        if (this.audioAnalyzer && this.audioAnalyzer.isAnalyzing) {\r\n            const audioData = this.audioAnalyzer.getShapeMorpherData();\r\n            if (audioData && audioData.frequencies) {\r\n                // Copy frequency data for visualization\r\n                let hasNonZero = false;\r\n                for (let i = 0; i < Math.min(audioData.frequencies.length, this.frequencyData.length); i++) {\r\n                    this.frequencyData[i] = audioData.frequencies[i];\r\n                    if (audioData.frequencies[i] > 0) hasNonZero = true;\r\n                }\r\n                // Log once if we start getting data\r\n                if (hasNonZero && !this._loggedAudioData) {\r\n                    console.log('ShapeMorpher: Receiving audio frequency data');\r\n                    this._loggedAudioData = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Update music detector BPM calculation\r\n        if (this.musicDetector) {\r\n            this.musicDetector.update(performance.now());\r\n        }\r\n\r\n        // Return early if not transitioning\r\n        if (!this.isTransitioning || !this.targetShape) return;\r\n        \r\n        // Calculate progress based on total elapsed time\r\n        const currentTime = Date.now();\r\n        const elapsed = currentTime - this.morphStartTime;\r\n        \r\n        // Recalculate duration if BPM changed during morph (for rhythm sync)\r\n        if (this.musicalDuration) {\r\n            const currentBpm = rhythmEngine.bpm || 120;\r\n            const beatDuration = 60000 / currentBpm;\r\n            // Recalculate based on original intention (bar or beat)\r\n            const originalDuration = this.morphDuration;\r\n            const wasBar = originalDuration > beatDuration * 2; // Heuristic: if > 2 beats, it was a bar\r\n            this.morphDuration = wasBar ? beatDuration * 4 : beatDuration;\r\n        }\r\n        \r\n        let progress = Math.min(elapsed / this.morphDuration, 1);\r\n        \r\n        // Apply musical quantization if needed\r\n        if (this.musicalDuration && this.onBeat) {\r\n            const bpm = rhythmEngine.bpm || 120;\r\n            \r\n            // Adaptive granularity - use coarser quantization at higher BPMs\r\n            let subdivision;\r\n            if (bpm > 140) {\r\n                subdivision = 2; // 8th notes for fast tempos\r\n            } else if (bpm > 100) {\r\n                subdivision = 4; // 16th notes for medium tempos  \r\n            } else {\r\n                subdivision = 8; // 32nd notes for slow tempos\r\n            }\r\n            \r\n            // Quantize to nearest subdivision\r\n            const beatDuration = 60000 / bpm;\r\n            const totalBeats = this.morphDuration / beatDuration;\r\n            const currentBeat = progress * totalBeats;\r\n            const quantizedBeat = Math.round(currentBeat * subdivision) / subdivision;\r\n            const quantizedProgress = Math.min(1, quantizedBeat / totalBeats);\r\n            \r\n            // BPM-based strength - weaker quantization at extremes (very slow or very fast)\r\n            const bpmFactor = bpm < 90 ? \r\n                Math.max(0.3, (bpm - 60) / 30) :  // 0.3 at 60bpm, 1.0 at 90bpm (weaker for slow)\r\n                Math.max(0.4, Math.min(1, 1 - ((bpm - 90) / 90))); // 1.0 at 90bpm, 0.4 at 180bpm (weaker for fast)\r\n            const baseStrength = 0.3 + (bpmFactor * 0.5); // Range: 0.3 to 0.8 based on BPM\r\n            \r\n            // Phase-aware quantization - weaker at start/end, stronger in middle\r\n            const phaseMultiplier = Math.sin(progress * Math.PI); // 0 at edges, 1 at center\r\n            const quantizationStrength = baseStrength * (0.3 + phaseMultiplier * 0.7); // Further modulated by phase\r\n            \r\n            // Apply smoothed quantization with cubic interpolation (smoothstep)\r\n            const t = quantizationStrength;\r\n            const cubicT = t * t * (3 - 2 * t); // Smoothstep for S-curve blending\r\n            progress = progress + (quantizedProgress - progress) * cubicT;\r\n        }\r\n        \r\n        // Apply easing\r\n        this.morphProgress = this.applyEasing(progress);\r\n\r\n        // Smooth visual progress for ultra-smooth rendering\r\n        // Heavy smoothing: 80% of previous frame, 20% of new\r\n        this.visualProgress = this.visualProgress * 0.8 + this.morphProgress * 0.2;\r\n\r\n        // Snap to final value when very close to avoid infinite approach\r\n        if (Math.abs(this.visualProgress - this.morphProgress) < 0.001) {\r\n            this.visualProgress = this.morphProgress;\r\n        }\r\n        \r\n        // Notify progress\r\n        if (this.onProgress) {\r\n            this.onProgress(this.morphProgress);\r\n        }\r\n        \r\n        // Check if complete (use logical progress, not visual)\r\n        if (this.morphProgress >= 1) {\r\n            this.visualProgress = 1; // Ensure visual completes too\r\n            this.completeMorph();\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Complete the morph transition\r\n     * @param {boolean} skipQueue - Skip processing queued morphs (for force override)\r\n     */\r\n    completeMorph(skipQueue = false) {\r\n        // Only update current shape if we actually have a target\r\n        if (this.targetShape) {\r\n            this.currentShape = this.targetShape;\r\n            this.currentPoints = [...this.targetPoints];\r\n        }\r\n        this.targetShape = null;\r\n        this.isTransitioning = false;\r\n        this.morphProgress = 0;\r\n        this.visualProgress = 0; // Reset visual progress\r\n        \r\n        if (this.onComplete) {\r\n            this.onComplete(this.currentShape);\r\n        }\r\n        \r\n        // Process queued morph if exists and not skipping\r\n        if (!skipQueue && this.queuedMorph) {\r\n            const queued = this.queuedMorph;\r\n            this.queuedMorph = null; // Clear queue before morphing\r\n            \r\n            // Small delay to ensure smooth transition\r\n            setTimeout(() => {\r\n                this.morphTo(queued.targetShape, queued.options);\r\n            }, 50);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Check if there's a queued morph\r\n     * @returns {boolean} True if morph is queued\r\n     */\r\n    hasQueuedMorph() {\r\n        return this.queuedMorph !== null;\r\n    }\r\n    \r\n    /**\r\n     * Clear the morph queue\r\n     */\r\n    clearQueue() {\r\n        this.queuedMorph = null;\r\n    }\r\n    \r\n    /**\r\n     * Get shape points in canvas coordinates\r\n     * @param {number} centerX - Center X coordinate\r\n     * @param {number} centerY - Center Y coordinate  \r\n     * @param {number} radius - Shape radius\r\n     * @returns {Array} Points in canvas coordinates\r\n     */\r\n    getCanvasPoints(centerX, centerY, radius) {\r\n        let normalizedPoints;\r\n        \r\n        try {\r\n            normalizedPoints = this.getInterpolatedPoints();\r\n        } catch (e) {\r\n            normalizedPoints = this.generateFallbackCircle();\r\n        }\r\n        \r\n        // Reuse canvas points array\r\n        if (!this.canvasPointsCache) {\r\n            this.canvasPointsCache = [];\r\n        }\r\n        const canvasPoints = this.canvasPointsCache;\r\n        canvasPoints.length = 0; // Clear without allocating new array\r\n        \r\n        // Handle case where points aren't loaded yet\r\n        if (!normalizedPoints || normalizedPoints.length === 0) {\r\n            // Return fallback circle points\r\n            for (let i = 0; i < this.numPoints; i++) {\r\n                const angle = (i / this.numPoints) * Math.PI * 2;\r\n                canvasPoints.push({\r\n                    x: centerX + Math.cos(angle) * radius,\r\n                    y: centerY + Math.sin(angle) * radius\r\n                });\r\n            }\r\n            return canvasPoints;\r\n        }\r\n        \r\n        // Ensure we're working with an array\r\n        const pointsArray = Array.isArray(normalizedPoints) ? normalizedPoints : [];\r\n        \r\n        for (let i = 0; i < pointsArray.length; i++) {\r\n            const point = pointsArray[i];\r\n            if (!point || typeof point.x !== 'number' || typeof point.y !== 'number') {\r\n                // Add fallback point\r\n                const angle = (i / pointsArray.length) * Math.PI * 2;\r\n                canvasPoints.push({\r\n                    x: centerX + Math.cos(angle) * radius,\r\n                    y: centerY + Math.sin(angle) * radius\r\n                });\r\n            } else {\r\n                // Convert normalized (0-1) to canvas coordinates\r\n                const x = centerX + (point.x - 0.5) * radius * 2;\r\n                const y = centerY + (point.y - 0.5) * radius * 2;\r\n                canvasPoints.push({ x, y });\r\n            }\r\n        }\r\n        \r\n        // Ensure we have enough points\r\n        while (canvasPoints.length < this.numPoints) {\r\n            const i = canvasPoints.length;\r\n            const angle = (i / this.numPoints) * Math.PI * 2;\r\n            canvasPoints.push({\r\n                x: centerX + Math.cos(angle) * radius,\r\n                y: centerY + Math.sin(angle) * radius\r\n            });\r\n        }\r\n        \r\n        return canvasPoints;\r\n    }\r\n    \r\n    /**\r\n     * Get interpolated shape points\r\n     * @returns {Array} Current interpolated points\r\n     */\r\n    getInterpolatedPoints() {\r\n        // Ensure we always have points\r\n        if (!this.currentPoints || this.currentPoints.length === 0) {\r\n            this.currentPoints = this.generateFallbackCircle();\r\n        }\r\n        \r\n        if (!this.isTransitioning) {\r\n            return this.applyAudioDeformation(this.currentPoints);\r\n        }\r\n        \r\n        const points = [];\r\n        for (let i = 0; i < this.numPoints; i++) {\r\n            const current = this.currentPoints[i];\r\n            const target = this.targetPoints[i];\r\n            \r\n            // Handle missing points\r\n            if (!current || !target) {\r\n                const angle = (i / this.numPoints) * Math.PI * 2;\r\n                points.push({\r\n                    x: 0.5 + Math.cos(angle) * 0.5,\r\n                    y: 0.5 + Math.sin(angle) * 0.5\r\n                });\r\n                continue;\r\n            }\r\n            \r\n            // Interpolate based on mode - use visualProgress for smooth rendering\r\n            const progress = this.visualProgress;\r\n            let x, y;\r\n            \r\n            // RADIAL MORPH: These shapes radiate from/to center\r\n            const radialShapes = ['square', 'circle', 'star', 'triangle'];\r\n            const currentIsRadial = radialShapes.includes(this.currentShape);\r\n            const targetIsRadial = radialShapes.includes(this.targetShape);\r\n            const needsRadialMorph = currentIsRadial || targetIsRadial;\r\n            \r\n            if (needsRadialMorph) {\r\n                // RADIATE FROM/TO CENTER\r\n                const cx = 0.5, cy = 0.5;\r\n                \r\n                // Calculate radial interpolation\r\n                if (targetIsRadial && !currentIsRadial) {\r\n                    // Morphing TO a radial shape - expand from center\r\n                    // Start at center, expand to target position\r\n                    const targetDx = target.x - cx;\r\n                    const targetDy = target.y - cy;\r\n                    \r\n                    // Ease the expansion with a smooth curve\r\n                    const expandProgress = this.applyEasing(progress);\r\n                    \r\n                    // Start from center point for first half, then expand outward\r\n                    if (progress < 0.3) {\r\n                        // Gather at center\r\n                        const gatherProgress = progress / 0.3;\r\n                        x = current.x + (cx - current.x) * gatherProgress;\r\n                        y = current.y + (cy - current.y) * gatherProgress;\r\n                    } else {\r\n                        // Expand from center to target\r\n                        const expandPhase = (progress - 0.3) / 0.7;\r\n                        x = cx + targetDx * expandPhase;\r\n                        y = cy + targetDy * expandPhase;\r\n                    }\r\n                } else if (currentIsRadial && !targetIsRadial) {\r\n                    // Morphing FROM a radial shape - collapse to center then expand to target\r\n                    const currentDx = current.x - cx;\r\n                    const currentDy = current.y - cy;\r\n                    \r\n                    if (progress < 0.5) {\r\n                        // Collapse to center\r\n                        const collapseProgress = progress / 0.5;\r\n                        x = current.x - currentDx * collapseProgress;\r\n                        y = current.y - currentDy * collapseProgress;\r\n                    } else {\r\n                        // Expand from center to target\r\n                        const expandProgress = (progress - 0.5) / 0.5;\r\n                        x = cx + (target.x - cx) * expandProgress;\r\n                        y = cy + (target.y - cy) * expandProgress;\r\n                    }\r\n                } else {\r\n                    // Both are radial shapes - morph through center\r\n                    const currentDx = current.x - cx;\r\n                    const currentDy = current.y - cy;\r\n                    const targetDx = target.x - cx;\r\n                    const targetDy = target.y - cy;\r\n                    \r\n                    if (progress < 0.5) {\r\n                        // Collapse current shape to center\r\n                        const collapseProgress = progress / 0.5;\r\n                        x = current.x - currentDx * collapseProgress;\r\n                        y = current.y - currentDy * collapseProgress;\r\n                    } else {\r\n                        // Expand from center to target shape\r\n                        const expandProgress = (progress - 0.5) / 0.5;\r\n                        x = cx + targetDx * expandProgress;\r\n                        y = cy + targetDy * expandProgress;\r\n                    }\r\n                }\r\n            } else if (this.morphMode === 'spiral') {\r\n                // Spiral interpolation\r\n                const angle = progress * Math.PI * 2;\r\n                const spiral = Math.sin(angle + i * 0.2) * 0.02 * (1 - Math.abs(progress - 0.5) * 2);\r\n                x = current.x + (target.x - current.x) * progress + spiral;\r\n                y = current.y + (target.y - current.y) * progress + spiral;\r\n            } else if (this.morphMode === 'wave') {\r\n                // Wave interpolation\r\n                const wave = Math.sin(i * 0.3 + progress * Math.PI * 4) * 0.01;\r\n                x = current.x + (target.x - current.x) * progress + wave;\r\n                y = current.y + (target.y - current.y) * progress + wave;\r\n            } else {\r\n                // Smooth interpolation\r\n                x = current.x + (target.x - current.x) * progress;\r\n                y = current.y + (target.y - current.y) * progress;\r\n            }\r\n            \r\n            points.push({ x, y });\r\n        }\r\n        \r\n        return this.applyAudioDeformation(points);\r\n    }\r\n    \r\n    /**\r\n     * Apply audio-reactive deformation to points\r\n     */\r\n    applyAudioDeformation(points) {\r\n        // Delegate to AudioDeformer module\r\n        return this.audioDeformer.applyAudioDeformation(points);\r\n    }\r\n    \r\n    /**\r\n     * Set audio deformation from analyzer with throttling\r\n     * @param {number} value - Deformation value (-1 to 1)\r\n     */\r\n    setAudioDeformation(value) {\r\n        const now = Date.now();\r\n        if (now - this.lastAudioUpdate > this.audioUpdateInterval) {\r\n            this.audioDeformation = Math.max(-1, Math.min(1, value));\r\n            this.lastAudioUpdate = now;\r\n            // CRITICAL: Also update the AudioDeformer module!\r\n            if (this.audioDeformer) {\r\n                this.audioDeformer.setAudioDeformation(Math.abs(this.audioDeformation)); // Pass absolute value\r\n            }\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Set vocal energy from analyzer with throttling\r\n     * @param {number} value - Energy value (0 to 1)\r\n     */\r\n    setVocalEnergy(value) {\r\n        const now = Date.now();\r\n        if (now - this.lastVocalUpdate > this.audioUpdateInterval) {\r\n            this.vocalEnergy = Math.max(0, Math.min(1, value));\r\n            this.lastVocalUpdate = now;\r\n            // Also update the AudioDeformer module\r\n            if (this.audioDeformer) {\r\n                this.audioDeformer.setVocalEnergy(this.vocalEnergy);\r\n            }\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Get transition configuration\r\n     */\r\n    getTransitionConfig(from, to) {\r\n        const fromShape = SHAPE_DEFINITIONS[from];\r\n        const toShape = SHAPE_DEFINITIONS[to];\r\n        \r\n        // Special transitions for moon - add a dreamy quality\r\n        if (to === 'moon') {\r\n            return {\r\n                type: 'to_moon',\r\n                easing: 'easeInOutCubic',  // Smooth acceleration/deceleration\r\n                duration: 1500,  // Slightly longer for dramatic effect\r\n                glowIntensity: 1.5,  // Extra glow during transition\r\n                fadeInCrescent: true  // Fade in the crescent shadow\r\n            };\r\n        }\r\n        \r\n        \r\n        // Moon to lunar - special eclipse transition\r\n        if (from === 'moon' && to === 'lunar') {\r\n            return {\r\n                type: 'moon_to_lunar',\r\n                easing: 'easeInOutSine',\r\n                duration: 2000,  // Slower for dramatic effect\r\n                slideOutCrescent: false, // Don't use standard slide\r\n                description: 'Crescent shadow moves to center and becomes lunar eclipse'\r\n            };\r\n        }\r\n        \r\n        // All other moon transitions - shadow slides away first\r\n        if (from === 'moon') {\r\n            return {\r\n                type: 'from_moon', \r\n                easing: 'easeInOutCubic',\r\n                duration: 1000,\r\n                slideOutCrescent: true,  // Shadow ALWAYS slides away\r\n                shadowSlideRatio: 0.4,   // First 40% for shadow slide\r\n                description: 'Moon shadow slides away THEN morphs to target'\r\n            };\r\n        }\r\n        \r\n        \r\n        // Other shapes to lunar - morph to circle first, then eclipse comes in\r\n        if (to === 'lunar') {\r\n            return {\r\n                type: 'eclipse_enter_lunar',\r\n                startAngle: -30  // Eclipse enters from top-left like moon crescent\r\n            };\r\n        }\r\n        \r\n        // Lunar to moon - special case: shadow exits to crescent position and stays\r\n        if (from === 'lunar' && to === 'moon') {\r\n            return {\r\n                type: 'lunar_to_moon',\r\n                exitAngle: -30\r\n            };\r\n        }\r\n        \r\n        // Lunar to other shapes - eclipse exits first, then morph to target shape\r\n        if (from === 'lunar') {\r\n            return {\r\n                type: 'eclipse_exit_lunar',\r\n                exitAngle: -30  // Eclipse exits at same angle\r\n            };\r\n        }\r\n        \r\n        // Special eclipse transitions for other shapes\r\n        if (fromShape?.shadow?.type === 'none' && toShape?.shadow?.type === 'solar') {\r\n            return {\r\n                type: 'eclipse_enter',\r\n                direction: 'right'\r\n            };\r\n        }\r\n        \r\n        if (fromShape?.shadow?.type === 'solar' && toShape?.shadow?.type === 'none') {\r\n            return {\r\n                type: 'eclipse_exit',\r\n                direction: 'left'\r\n            };\r\n        }\r\n        \r\n        // Sun transitions need effect fading/blooming\r\n        if (from === 'sun' && to !== 'sun') {\r\n            return {\r\n                type: 'sun_fade',\r\n                fadeEffects: true\r\n            };\r\n        }\r\n        \r\n        if (from !== 'sun' && to === 'sun') {\r\n            return {\r\n                type: 'sun_bloom',\r\n                bloomEffects: true\r\n            };\r\n        }\r\n        \r\n        return {\r\n            type: 'standard'\r\n        };\r\n    }\r\n    \r\n    /**\r\n     * Get current shadow configuration\r\n     * @returns {Object} Shadow configuration\r\n     */\r\n    getCurrentShadow() {\r\n        // Default to circle if currentShape is somehow null/undefined\r\n        const shapeName = this.currentShape || 'circle';\r\n        const currentDef = SHAPE_DEFINITIONS[shapeName];\r\n        const targetDef = this.targetShape ? SHAPE_DEFINITIONS[this.targetShape] : null;\r\n        \r\n        const currentShadow = currentDef?.shadow || { type: 'none' };\r\n        const targetShadow = targetDef?.shadow || null;\r\n        \r\n        \r\n        // If not transitioning, return current shadow\r\n        if (!this.isTransitioning || !targetShadow) {\r\n            return currentShadow;\r\n        }\r\n        \r\n        // Handle eclipse progressions and other special transitions\r\n        const easedProgress = this.morphProgress;\r\n        \r\n        \r\n        // FROM MOON - ALWAYS slide shadow away first (other shapes)\r\n        if (this.transitionConfig && this.transitionConfig.type === 'from_moon' && this.transitionConfig.slideOutCrescent) {\r\n            const slideRatio = this.transitionConfig.shadowSlideRatio || 0.4;\r\n            \r\n            // PHASE 1: Shadow slides away\r\n            if (easedProgress < slideRatio) {\r\n                const slideProgress = easedProgress / slideRatio; // 0 to 1 during slide\r\n                const angle = -30 * Math.PI / 180; // Moon shadow angle (bottom-left)\r\n                \r\n                // Shadow continues sliding in its direction (away to bottom-left)\r\n                const startOffset = 0.7;  // Where moon shadow normally sits\r\n                const endOffset = 2.5;    // Far off screen\r\n                const currentOffset = startOffset + (endOffset - startOffset) * slideProgress;\r\n                \r\n                const offsetX = Math.cos(angle) * currentOffset;\r\n                const offsetY = Math.sin(angle) * currentOffset;\r\n                \r\n                // Keep full opacity while sliding, slight fade at the end\r\n                const coverage = slideProgress > 0.8 ? 0.85 * (1 - (slideProgress - 0.8) * 5) : 0.85;\r\n                \r\n                return {\r\n                    type: 'crescent',\r\n                    coverage: coverage,\r\n                    angle: -30,\r\n                    offset: currentOffset,\r\n                    shadowX: offsetX,\r\n                    shadowY: offsetY\r\n                };\r\n            }\r\n            \r\n            // PHASE 2: No shadow, morph can proceed\r\n            return { type: 'none' };\r\n        }\r\n        \r\n        // Moon to lunar - smooth crescent to eclipse transition\r\n        if (this.transitionConfig && this.transitionConfig.type === 'moon_to_lunar') {\r\n            const angle = this.transitionConfig.startAngle * Math.PI / 180;\r\n            const offsetProgress = 1 - easedProgress; // Goes from 1 to 0 (crescent position to center)\r\n            const offsetX = Math.cos(angle) * 0.7 * offsetProgress;\r\n            const offsetY = Math.sin(angle) * 0.7 * offsetProgress;\r\n            \r\n            // Smooth transition from crescent to lunar\r\n            const lunarBlend = Math.pow(easedProgress, 2); // Quadratic for smooth blend\r\n            \r\n            // Gradually change from crescent to lunar shadow\r\n            if (easedProgress < 0.6) {\r\n                // Still mostly crescent, moving to center\r\n                return {\r\n                    type: 'crescent',\r\n                    coverage: 0.85 * (1 - lunarBlend * 0.2), // Slight fade\r\n                    angle: this.transitionConfig.startAngle,\r\n                    offset: 0.7 * offsetProgress,\r\n                    shadowX: offsetX,\r\n                    shadowY: offsetY\r\n                };\r\n            } else {\r\n                // Smooth blend to lunar shadow\r\n                const blendPhase = (easedProgress - 0.6) / 0.4; // 0 to 1 for last 40%\r\n                const smoothBlend = Math.sin(blendPhase * Math.PI / 2); // Smooth S-curve\r\n                \r\n                return {\r\n                    type: 'lunar',\r\n                    coverage: 0.85 + 0.1 * smoothBlend, // Gradually increase to 0.95\r\n                    color: `rgba(80, 20, 0, ${0.7 + 0.2 * smoothBlend})`, // Fade in red\r\n                    shadowX: offsetX * (1 - smoothBlend), // Smooth center\r\n                    shadowY: offsetY * (1 - smoothBlend),\r\n                    diffusion: smoothBlend,\r\n                    shadowProgress: easedProgress\r\n                };\r\n            }\r\n        }\r\n        \r\n        // Eclipse entering lunar - smooth shadow entry\r\n        if (this.transitionConfig && this.transitionConfig.type === 'eclipse_enter_lunar') {\r\n            // First 30%: Just morph shape, no shadow (reduced from 40%)\r\n            if (easedProgress < 0.3) {\r\n                return { type: 'none' };\r\n            }\r\n            \r\n            // Last 70%: Shadow smoothly enters and transforms\r\n            const shadowProgress = (easedProgress - 0.3) / 0.7; // 0 to 1 for shadow animation\r\n            const smoothProgress = Math.sin(shadowProgress * Math.PI / 2); // Smooth ease-in\r\n            const angle = this.transitionConfig.startAngle * Math.PI / 180;\r\n            const offsetProgress = 1 - smoothProgress; // Goes from 1 to 0\r\n            const offsetX = Math.cos(angle) * 0.7 * offsetProgress;\r\n            const offsetY = Math.sin(angle) * 0.7 * offsetProgress;\r\n            \r\n            // Smooth transition throughout\r\n            if (shadowProgress < 0.7) {\r\n                // Crescent shadow sliding in with gradual fade\r\n                const fadeIn = Math.pow(shadowProgress / 0.7, 0.5); // Smooth fade in\r\n                return {\r\n                    type: 'crescent',\r\n                    coverage: 0.85 * fadeIn,\r\n                    angle: this.transitionConfig.startAngle,\r\n                    offset: 0.7 * offsetProgress,\r\n                    shadowX: offsetX,\r\n                    shadowY: offsetY\r\n                };\r\n            } else {\r\n                // Smooth blend to lunar\r\n                const blendProgress = (shadowProgress - 0.7) / 0.3; // Last 30% for blend\r\n                const smoothBlend = Math.sin(blendProgress * Math.PI / 2); // Smooth curve\r\n                \r\n                return {\r\n                    type: 'lunar',\r\n                    coverage: 0.85 + 0.1 * smoothBlend,\r\n                    color: `rgba(80, 20, 0, ${0.6 + 0.3 * smoothBlend})`,\r\n                    shadowX: offsetX * (1 - smoothBlend),\r\n                    shadowY: offsetY * (1 - smoothBlend),\r\n                    diffusion: smoothBlend,\r\n                    shadowProgress: shadowProgress\r\n                };\r\n            }\r\n        }\r\n        \r\n        // Lunar to moon - smooth shadow transformation and movement\r\n        if (this.transitionConfig && this.transitionConfig.type === 'lunar_to_moon') {\r\n            const angle = this.transitionConfig.exitAngle * Math.PI / 180;\r\n            \r\n            // Smooth movement curve\r\n            const movementCurve = Math.sin(easedProgress * Math.PI / 2); // Smooth ease-out\r\n            const offsetX = Math.cos(angle) * 0.7 * movementCurve;\r\n            const offsetY = Math.sin(angle) * 0.7 * movementCurve;\r\n            \r\n            // Smooth blend between lunar and crescent\r\n            if (easedProgress < 0.6) {\r\n                // Lunar shadow gradually transforming\r\n                const transformPhase = easedProgress / 0.6;\r\n                const smoothTransform = Math.pow(transformPhase, 0.7);\r\n                \r\n                return {\r\n                    type: 'lunar',\r\n                    coverage: 0.95 - (0.1 * smoothTransform),\r\n                    color: `rgba(80, 20, 0, ${0.9 - 0.3 * smoothTransform})`,\r\n                    shadowX: offsetX * 0.7, // Start moving earlier\r\n                    shadowY: offsetY * 0.7,\r\n                    diffusion: 1 - smoothTransform\r\n                };\r\n            } else {\r\n                // Smooth transition to crescent\r\n                const crescentPhase = (easedProgress - 0.6) / 0.4;\r\n                const fadeIn = Math.sin(crescentPhase * Math.PI / 2);\r\n                \r\n                return {\r\n                    type: 'crescent',\r\n                    coverage: 0.85 * fadeIn + 0.1, // Smooth fade in\r\n                    angle: this.transitionConfig.exitAngle,\r\n                    offset: 0.7,\r\n                    shadowX: offsetX,\r\n                    shadowY: offsetY\r\n                };\r\n            }\r\n        }\r\n        \r\n        // Eclipse exiting lunar - smooth shadow exit\r\n        if (this.transitionConfig && this.transitionConfig.type === 'eclipse_exit_lunar') {\r\n            // First 70%: Shadow smoothly exits\r\n            if (easedProgress < 0.7) {\r\n                const shadowProgress = easedProgress / 0.7; // 0 to 1 for shadow exit\r\n                const smoothExit = Math.sin(shadowProgress * Math.PI / 2); // Smooth acceleration\r\n                const angle = this.transitionConfig.exitAngle * Math.PI / 180;\r\n                \r\n                // Gradual transformation and movement\r\n                if (shadowProgress < 0.4) {\r\n                    // Lunar shadow gradually transforming\r\n                    const transformPhase = shadowProgress / 0.4;\r\n                    const diffusion = 1 - transformPhase;\r\n                    const moveStart = transformPhase * 0.3; // Start moving early\r\n                    \r\n                    return {\r\n                        type: 'lunar',\r\n                        coverage: 0.95 - (0.1 * transformPhase),\r\n                        color: `rgba(80, 20, 0, ${0.9 - 0.2 * transformPhase})`,\r\n                        shadowX: Math.cos(angle) * 0.7 * moveStart,\r\n                        shadowY: Math.sin(angle) * 0.7 * moveStart,\r\n                        diffusion: diffusion\r\n                    };\r\n                } else {\r\n                    // Smooth exit as crescent\r\n                    const exitPhase = (shadowProgress - 0.4) / 0.6;\r\n                    const smoothMove = Math.pow(exitPhase, 0.8);\r\n                    const offsetX = Math.cos(angle) * 0.7 * smoothMove;\r\n                    const offsetY = Math.sin(angle) * 0.7 * smoothMove;\r\n                    const fadeOut = 1 - Math.pow(exitPhase, 2); // Gradual fade\r\n                    \r\n                    return {\r\n                        type: 'crescent',\r\n                        coverage: 0.85 * fadeOut,\r\n                        angle: this.transitionConfig.exitAngle,\r\n                        offset: 0.7 * smoothMove,\r\n                        shadowX: offsetX,\r\n                        shadowY: offsetY\r\n                    };\r\n                }\r\n            }\r\n            \r\n            // Last 30%: Just morph shape, no shadow\r\n            return { type: 'none' };\r\n        }\r\n        \r\n        // Solar eclipse transitions\r\n        if (this.transitionConfig && this.transitionConfig.type === 'eclipse_enter') {\r\n            const shadowX = 1.5 - (easedProgress * 1.5); // From right\r\n            \r\n            return {\r\n                ...targetShadow,\r\n                shadowX: shadowX,\r\n                shadowProgress: easedProgress\r\n            };\r\n        } else if (this.transitionConfig.type === 'eclipse_exit') {\r\n            const shadowX = -easedProgress * 1.5; // To left\r\n            \r\n            return {\r\n                ...currentShadow,\r\n                coverage: currentShadow.coverage * (1 - easedProgress),\r\n                shadowX: shadowX,\r\n                shadowProgress: 1 - easedProgress\r\n            };\r\n        } else if (this.transitionConfig.type === 'sun_fade') {\r\n            // Smooth fading of sun effects\r\n            const fadeMultiplier = 1 - easedProgress;\r\n            \r\n            // Gradual fade with different timing for each effect\r\n            return {\r\n                ...currentShadow,\r\n                intensity: (currentShadow.intensity || 1) * Math.pow(fadeMultiplier, 0.7), // Slower fade\r\n                corona: currentShadow.corona,\r\n                coronaOpacity: fadeMultiplier, // Fade corona smoothly\r\n                flares: currentShadow.flares,\r\n                flaresOpacity: Math.pow(fadeMultiplier, 1.5), // Flares fade faster\r\n                texture: currentShadow.texture,\r\n                textureOpacity: Math.pow(fadeMultiplier, 2), // Texture fades fastest\r\n                turbulence: (currentShadow.turbulence || 0.3) * fadeMultiplier\r\n            };\r\n        } else if (this.transitionConfig.type === 'sun_bloom') {\r\n            // Smooth blooming of sun effects\r\n            const bloomProgress = easedProgress;\r\n            \r\n            // Gradual bloom with different timing for each effect\r\n            return {\r\n                ...targetShadow,\r\n                intensity: (targetShadow.intensity || 1) * Math.pow(bloomProgress, 1.5), // Start slow\r\n                corona: targetShadow.corona,\r\n                coronaOpacity: Math.pow(bloomProgress, 0.8), // Corona blooms gradually\r\n                flares: targetShadow.flares,\r\n                flaresOpacity: bloomProgress > 0.3 ? Math.pow((bloomProgress - 0.3) / 0.7, 0.7) : 0, // Flares appear later\r\n                texture: targetShadow.texture,\r\n                textureOpacity: bloomProgress > 0.5 ? Math.pow((bloomProgress - 0.5) / 0.5, 2) : 0, // Texture appears last\r\n                turbulence: (targetShadow.turbulence || 0.3) * bloomProgress\r\n            };\r\n        }\r\n        \r\n        // Standard transition\r\n        if (currentShadow.type !== 'none' || targetShadow.type !== 'none') {\r\n            const coverage = (currentShadow.coverage || 0) + \r\n                           ((targetShadow.coverage || 0) - (currentShadow.coverage || 0)) * easedProgress;\r\n            \r\n            return {\r\n                type: targetShadow.type !== 'none' ? targetShadow.type : currentShadow.type,\r\n                coverage: coverage,\r\n                angle: targetShadow.angle || currentShadow.angle || 0,\r\n                softness: targetShadow.softness || currentShadow.softness || 0.2,\r\n                progress: easedProgress\r\n            };\r\n        }\r\n        \r\n        return currentShadow;\r\n    }\r\n    \r\n    /**\r\n     * Get custom renderer for current shape\r\n     * @returns {Function|null} Custom render function\r\n     */\r\n    getCurrentRenderer() {\r\n        // For now, return null - rendering is handled by EmotiveRenderer\r\n        // This can be extended later if we want shape-specific rendering\r\n        return null;\r\n    }\r\n    \r\n    /**\r\n     * Apply easing function\r\n     */\r\n    applyEasing(t) {\r\n        const easing = this.transitionConfig?.easing || this.easing || 'linear';\r\n        switch (easing) {\r\n            case 'linear':\r\n                return t;\r\n            case 'easeInQuad':\r\n                return t * t;\r\n            case 'easeOutQuad':\r\n                return t * (2 - t);\r\n            case 'easeInOutQuad':\r\n                return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\r\n            case 'easeInOutSine':\r\n                return -(Math.cos(Math.PI * t) - 1) / 2;\r\n            case 'easeInOutCubic':\r\n            default:\r\n                return t < 0.5 \r\n                    ? 4 * t * t * t \r\n                    : 1 - Math.pow(-2 * t + 2, 3) / 2;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Calculate BPM from onset intervals with improved stability\r\n     */\r\n    calculateBPM() {\r\n        return this.musicDetector.calculateBPM();\r\n    }\r\n    \r\n    /**\r\n     * Find tempo candidates from onset intervals\r\n     */\r\n    findTempoCandidates(intervals) {\r\n        return this.musicDetector.findTempoCandidates(intervals);\r\n    }\r\n    \r\n    /**\r\n     * Cluster similar intervals together\r\n     */\r\n    clusterIntervals(intervals) {\r\n        return this.musicDetector.clusterIntervals(intervals);\r\n    }\r\n    \r\n    /**\r\n     * Check if BPM is a harmonic of the fundamental\r\n     */\r\n    checkHarmonicRelation(bpm1, bpm2) {\r\n        return this.musicDetector.checkHarmonicRelation(bpm1, bpm2);\r\n    }\r\n    \r\n    /**\r\n     * Detect time signature from onset patterns - delegated to MusicDetector\r\n     */\r\n    detectTimeSignature() {\r\n        // Set fast detection mode if needed\r\n        this.musicDetector.forceFastDetection = this.forceFastDetection;\r\n        \r\n        // Delegate to MusicDetector\r\n        const timeSignature = this.musicDetector.detectTimeSignature();\r\n        \r\n        // Update local references for compatibility\r\n        this.detectedTimeSignature = this.musicDetector.detectedTimeSignature;\r\n        this.timeSignatureConfidence = this.musicDetector.timeSignatureConfidence;\r\n        this.timeSignatureLocked = this.musicDetector.timeSignatureLocked;\r\n        \r\n        return timeSignature;\r\n    }\r\n    \r\n    /**\r\n     * Test specifically for 3/4 waltz pattern - delegated to MusicDetector\r\n     */\r\n    testWaltzPattern(onsets, beatInterval) {\r\n        return this.musicDetector.testWaltzPattern(onsets, beatInterval);\r\n    }\r\n    \r\n    \r\n    /**\r\n     * Reset music detection when new audio is loaded\r\n     */\r\n    resetMusicDetection() {\r\n        // Store if we should force fast detection (for resampling)\r\n        this.forceFastDetection = true;\r\n        \r\n        // Reset music detector\r\n        this.musicDetector.reset();\r\n        \r\n        // Set fast detection on the music detector\r\n        this.musicDetector.forceFastDetection = true;\r\n        \r\n        // Reset local references\r\n        this.onsetThreshold = 0;\r\n        this.detectedBPM = 0;\r\n        this.bpmConfidence = 0;\r\n        \r\n        // Reset time signature detection (still local for now)\r\n        this.onsetStrengths = [];\r\n        this.detectedTimeSignature = null;\r\n        this.timeSignatureConfidence = 0;\r\n        \r\n        // Force immediate resampling on next update\r\n        this.musicDetector.lastBPMCalculation = 0;\r\n        this.measureStartTime = 0;\r\n        this.timeSignatureHistory = [];\r\n        this.timeSignatureLocked = false;\r\n        \r\n        // Reset spectral analysis\r\n        this.spectralHistory = [];\r\n        this.spectralFluxHistory = [];\r\n        \r\n        // Clear UI displays\r\n        const timeSigDisplay = document.getElementById('time-sig-display');\r\n        if (timeSigDisplay) {\r\n            timeSigDisplay.textContent = '—';\r\n        }\r\n        \r\n    }\r\n    \r\n    /**\r\n     * Get current detected BPM and time signature\r\n     */\r\n    getCurrentMusicInfo() {\r\n        return {\r\n            bpm: this.detectedBPM,\r\n            timeSignature: this.detectedTimeSignature,\r\n            bpmLocked: this.tempoLocked,\r\n            timeSigLocked: this.timeSignatureLocked\r\n        };\r\n    }\r\n    \r\n    /**\r\n     * Fallback circle generation\r\n     */\r\n    generateFallbackCircle() {\r\n        const points = [];\r\n        for (let i = 0; i < this.numPoints; i++) {\r\n            const angle = (i / this.numPoints) * Math.PI * 2;\r\n            points.push({\r\n                x: 0.5 + Math.cos(angle) * 0.5,\r\n                y: 0.5 + Math.sin(angle) * 0.5\r\n            });\r\n        }\r\n        return points;\r\n    }\r\n    \r\n    /**\r\n     * Get current state\r\n     */\r\n    getState() {\r\n        return {\r\n            currentShape: this.currentShape,\r\n            targetShape: this.targetShape,\r\n            isTransitioning: this.isTransitioning,\r\n            progress: this.morphProgress,\r\n            audioDeformation: this.audioDeformation,\r\n            vocalEnergy: this.vocalEnergy\r\n        };\r\n    }\r\n    \r\n    /**\r\n     * Get progress (0-1)\r\n     * @param {boolean} visual - Return smoothed visual progress instead of logical\r\n     */\r\n    getProgress(visual = true) {\r\n        // Default to visual progress for smooth rendering\r\n        return visual ? this.visualProgress : this.morphProgress;\r\n    }\r\n    \r\n    /**\r\n     * Check if currently transitioning\r\n     */\r\n    isInTransition() {\r\n        return this.isTransitioning;\r\n    }\r\n}\r\n\r\nexport default ShapeMorpher;","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE - Audio Analysis System\r\n *  └─○═╝                                                                             \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview Real-time audio analysis for vocal visualization\r\n * @author Emotive Engine Team\r\n * @module core/AudioAnalyzer\r\n */\r\n\r\n/**\r\n * AudioAnalyzer - Analyzes audio for vocal visualization\r\n */\r\nexport class AudioAnalyzer {\r\n    constructor() {\r\n        this.audioContext = null;\r\n        this.analyser = null;\r\n        this.source = null;\r\n        this.elementSource = null;  // Track audio element source separately\r\n        this.dataArray = null;\r\n        this.isAnalyzing = false;\r\n        this.connectedElement = null;\r\n        this.gainNode = null;  // Store gain node for cleanup\r\n        \r\n        // Frequency band configuration\r\n        this.frequencyBands = 32;\r\n        this.smoothingFactor = 0.3; // Lower smoothing for better responsiveness\r\n        \r\n        // Vocal detection\r\n        this.vocalRange = { min: 80, max: 1000 }; // Hz - typical vocal range\r\n        this.currentAmplitude = 0;\r\n        this.currentFrequencies = new Array(this.frequencyBands).fill(0);\r\n        \r\n        // Beat detection (for rhythm sync)\r\n        this.beatThreshold = 0.3;\r\n        this.lastBeatTime = 0;\r\n        this.beatCallbacks = [];\r\n    }\r\n    \r\n    /**\r\n     * Initialize audio context and analyzer\r\n     */\r\n    async init() {\r\n        try {\r\n            this.audioContext = new (window.AudioContext || window.webkitAudioContext)();\r\n            this.analyser = this.audioContext.createAnalyser();\r\n            this.analyser.fftSize = 2048; // Good balance of frequency/time resolution\r\n            this.analyser.smoothingTimeConstant = 0.5; // Moderate smoothing\r\n            \r\n            const bufferLength = this.analyser.frequencyBinCount;\r\n            this.dataArray = new Uint8Array(bufferLength);\r\n            \r\n            return true;\r\n        } catch (error) {\r\n            return false;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Connect audio element for analysis\r\n     * @param {HTMLAudioElement} audioElement - Audio element to analyze\r\n     */\r\n    connectAudioElement(audioElement) {\r\n        if (!this.audioContext) {\r\n            return;\r\n        }\r\n        \r\n        try {\r\n            // Create source from audio element (only if not already created)\r\n            if (!this.elementSource || this.connectedElement !== audioElement) {\r\n                this.elementSource = this.audioContext.createMediaElementSource(audioElement);\r\n                this.elementSource.connect(this.analyser);\r\n                this.elementSource.connect(this.audioContext.destination); // Pass through audio\r\n            }\r\n            this.source = this.elementSource;  // Set current source\r\n            this.connectedElement = audioElement;\r\n            this.isAnalyzing = true;\r\n            \r\n            // Start analysis loop\r\n            this.analyze();\r\n        } catch (error) {\r\n            // If already connected, just restart analysis\r\n            if (error.message && error.message.includes('already been used')) {\r\n                this.source = this.elementSource;  // Use existing source\r\n                this.connectedElement = audioElement;\r\n                this.isAnalyzing = true;\r\n                this.analyze();\r\n            } else {\r\n            }\r\n        }\r\n    }\r\n    \r\n    \r\n    /**\r\n     * Main analysis loop\r\n     */\r\n    analyze() {\r\n        if (!this.isAnalyzing) return;\r\n        \r\n        requestAnimationFrame(() => this.analyze());\r\n        \r\n        // Get frequency data\r\n        this.analyser.getByteFrequencyData(this.dataArray);\r\n        \r\n        // Also try time domain data to see if mic is working\r\n        const timeData = new Uint8Array(this.analyser.frequencyBinCount);\r\n        this.analyser.getByteTimeDomainData(timeData);\r\n        \r\n        // Debug: Check both frequency and time domain\r\n        if (!this._debugLogged) {\r\n            const freqMax = Math.max(...this.dataArray);\r\n            const timeMax = Math.max(...timeData);\r\n            const timeMin = Math.min(...timeData);\r\n            \r\n            if (freqMax > 0 || (timeMax !== 128 || timeMin !== 128)) {\r\n                console.log('AudioAnalyzer: Got audio data! Freq max:', freqMax, 'Time range:', timeMin, '-', timeMax);\r\n                this._debugLogged = true;\r\n            } else {\r\n                // Log every 60 frames (1 second at 60fps)\r\n                if (!this._debugCounter) this._debugCounter = 0;\r\n                this._debugCounter++;\r\n                if (this._debugCounter % 60 === 0) {\r\n                    console.log('AudioAnalyzer: No data. Freq all zeros, Time at 128 (silence)');\r\n                }\r\n            }\r\n        }\r\n        \r\n        // Calculate overall amplitude\r\n        let sum = 0;\r\n        let vocalSum = 0;\r\n        let vocalCount = 0;\r\n        \r\n        // Frequency to bin conversion\r\n        const nyquist = this.audioContext.sampleRate / 2;\r\n        const binHz = nyquist / this.dataArray.length;\r\n        const vocalMinBin = Math.floor(this.vocalRange.min / binHz);\r\n        const vocalMaxBin = Math.ceil(this.vocalRange.max / binHz);\r\n        \r\n        // Process frequency data\r\n        for (let i = 0; i < this.dataArray.length; i++) {\r\n            const value = this.dataArray[i] / 255; // Normalize to 0-1\r\n            sum += value;\r\n            \r\n            // Check if in vocal range\r\n            if (i >= vocalMinBin && i <= vocalMaxBin) {\r\n                vocalSum += value;\r\n                vocalCount++;\r\n            }\r\n        }\r\n        \r\n        // Calculate amplitudes\r\n        this.currentAmplitude = sum / this.dataArray.length;\r\n        const vocalAmplitude = vocalCount > 0 ? vocalSum / vocalCount : 0;\r\n        \r\n        // Extract frequency bands for visualization\r\n        this.extractFrequencyBands();\r\n        \r\n        // Detect beats\r\n        this.detectBeat(this.currentAmplitude);\r\n        \r\n        // Return analysis data\r\n        return {\r\n            amplitude: this.currentAmplitude,\r\n            vocalAmplitude: vocalAmplitude,\r\n            frequencies: this.currentFrequencies,\r\n            rawData: this.dataArray\r\n        };\r\n    }\r\n    \r\n    /**\r\n     * Extract frequency bands for shape deformation\r\n     */\r\n    extractFrequencyBands() {\r\n        const bandsPerBin = Math.floor(this.dataArray.length / this.frequencyBands);\r\n        \r\n        for (let i = 0; i < this.frequencyBands; i++) {\r\n            let sum = 0;\r\n            const startBin = i * bandsPerBin;\r\n            const endBin = Math.min(startBin + bandsPerBin, this.dataArray.length);\r\n            \r\n            for (let j = startBin; j < endBin; j++) {\r\n                sum += this.dataArray[j] / 255; // Normalize\r\n            }\r\n            \r\n            // Apply smoothing\r\n            const newValue = sum / bandsPerBin;\r\n            this.currentFrequencies[i] = this.currentFrequencies[i] * this.smoothingFactor + \r\n                                         newValue * (1 - this.smoothingFactor);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Simple beat detection\r\n     */\r\n    detectBeat(amplitude) {\r\n        const now = performance.now();\r\n        \r\n        // Simple threshold-based beat detection\r\n        // Allow faster beats - 273ms = 220 BPM, but go down to 60ms for very fast tapping\r\n        if (amplitude > this.beatThreshold && now - this.lastBeatTime > 60) {\r\n            this.lastBeatTime = now;\r\n            \r\n            // Trigger beat callbacks\r\n            this.beatCallbacks.forEach(callback => callback(amplitude));\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Get current vocal instability (0-1)\r\n     */\r\n    getVocalInstability() {\r\n        // Calculate instability based on frequency variance\r\n        let variance = 0;\r\n        const mean = this.currentFrequencies.reduce((a, b) => a + b, 0) / this.frequencyBands;\r\n        \r\n        for (let i = 0; i < this.frequencyBands; i++) {\r\n            variance += Math.pow(this.currentFrequencies[i] - mean, 2);\r\n        }\r\n        \r\n        variance = Math.sqrt(variance / this.frequencyBands);\r\n        \r\n        // Combine with amplitude for overall instability\r\n        const instability = Math.min(1, variance * 2 + this.currentAmplitude * 0.5);\r\n        return instability;\r\n    }\r\n    \r\n    /**\r\n     * Get analysis data formatted for ShapeMorpher\r\n     */\r\n    getShapeMorpherData() {\r\n        return {\r\n            instability: this.getVocalInstability(),\r\n            frequencies: [...this.currentFrequencies],\r\n            amplitude: this.currentAmplitude\r\n        };\r\n    }\r\n    \r\n    /**\r\n     * Add beat detection callback\r\n     */\r\n    onBeat(callback) {\r\n        this.beatCallbacks.push(callback);\r\n    }\r\n    \r\n    /**\r\n     * Stop analysis\r\n     */\r\n    stop() {\r\n        this.isAnalyzing = false;\r\n        \r\n        if (this.gainNode) {\r\n            try {\r\n                this.gainNode.disconnect();\r\n            } catch (e) {}\r\n            this.gainNode = null;\r\n        }\r\n        \r\n        // Reconnect element source to analyser if it was disconnected\r\n        if (this.elementSource && this.connectedElement) {\r\n            try {\r\n                this.elementSource.connect(this.analyser);\r\n            } catch (e) {\r\n                // Already connected, that's fine\r\n            }\r\n            this.source = this.elementSource;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Resume audio context (needed after user interaction)\r\n     */\r\n    async resume() {\r\n        if (this.audioContext && this.audioContext.state === 'suspended') {\r\n            await this.audioContext.resume();\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Cleanup\r\n     */\r\n    destroy() {\r\n        this.stop();\r\n        \r\n        if (this.audioContext) {\r\n            this.audioContext.close();\r\n            this.audioContext = null;\r\n        }\r\n        \r\n        this.analyser = null;\r\n        this.dataArray = null;\r\n        this.beatCallbacks = [];\r\n    }\r\n}","/**\r\n * GestureCompatibility - Core gesture compatibility and chord system\r\n * Defines which gestures can execute simultaneously vs sequentially\r\n * Part of the Emotive Engine core\r\n */\r\n\r\nexport class GestureCompatibility {\r\n    constructor() {\r\n        // Musical timing classes - defines when gestures should fire\r\n        this.timingClasses = {\r\n            downbeat: {\r\n                gestures: ['bounce', 'jump', 'headBob', 'spin', 'orbit'],\r\n                timing: 1.0,  // Fire on the beat\r\n                priority: 1,\r\n                description: 'Strong emphasis on the downbeat'\r\n            },\r\n            upbeat: {\r\n                gestures: ['wave', 'nod', 'point', 'reach'],\r\n                timing: 0.5,  // Fire on the half-beat\r\n                priority: 2,\r\n                description: 'Medium emphasis on upbeat'\r\n            },\r\n            offbeat: {\r\n                gestures: ['wiggle', 'sway', 'lean', 'tilt', 'groove'],\r\n                timing: 0.5,  // Fire between beats (syncopated)\r\n                priority: 3,\r\n                description: 'Syncopated, creates groove'\r\n            },\r\n            subdivision: {\r\n                gestures: ['pulse', 'sparkle', 'flash', 'shimmer', 'flicker'],\r\n                timing: 0.25,  // Can fire on quarter beats\r\n                priority: 4,\r\n                description: 'Quick accents and fills'\r\n            },\r\n            continuous: {\r\n                gestures: ['breathe', 'float', 'rain'],\r\n                timing: -1,  // Can start anytime, flows across beats\r\n                priority: 5,\r\n                description: 'Ambient, continuous motion'\r\n            }\r\n        };\r\n\r\n        // Fill patterns for automatic motion between gestures\r\n        this.fillPatterns = {\r\n            subtle: ['breathe', 'float'],\r\n            rhythmic: ['pulse', 'shimmer'],\r\n            energetic: ['wiggle', 'sparkle'],\r\n            smooth: ['sway', 'glow']\r\n        };\r\n\r\n        // Dynamic density settings based on BPM\r\n        this.densityProfiles = {\r\n            sparse: {\r\n                fillProbability: 0.1,\r\n                subdivisionLevel: 2,  // Half notes only\r\n                description: 'Minimal movement'\r\n            },\r\n            moderate: {\r\n                fillProbability: 0.3,\r\n                subdivisionLevel: 4,  // Quarter notes\r\n                description: 'Balanced movement'\r\n            },\r\n            dense: {\r\n                fillProbability: 0.5,\r\n                subdivisionLevel: 8,  // Eighth notes\r\n                description: 'Busy, energetic'\r\n            },\r\n            chaos: {\r\n                fillProbability: 0.8,\r\n                subdivisionLevel: 16,  // Sixteenth notes\r\n                description: 'Maximum energy'\r\n            }\r\n        };\r\n\r\n        // Gesture group definitions\r\n        this.groups = {\r\n            // Primary movement - only one can execute at a time\r\n            movement: {\r\n                gestures: ['bounce', 'spin', 'orbit', 'sway', 'hula', 'jump', 'twist', 'groove'],\r\n                maxSimultaneous: 1,\r\n                priority: 1,\r\n                description: 'Primary body movements - mutually exclusive'\r\n            },\r\n\r\n            // Secondary movements - can layer 2 together\r\n            expression: {\r\n                gestures: ['wave', 'nod', 'shake', 'point', 'lean', 'tilt', 'reach'],\r\n                maxSimultaneous: 2,\r\n                priority: 2,\r\n                description: 'Expressive gestures - can combine up to 2'\r\n            },\r\n\r\n            // Dance moves - special category that can combine with effects\r\n            dance: {\r\n                gestures: ['headBob', 'wiggle', 'runningman', 'charleston'],\r\n                maxSimultaneous: 1,\r\n                priority: 2,\r\n                description: 'Dance moves - one at a time but can add effects'\r\n            },\r\n\r\n            // Visual effects - all can stack\r\n            effects: {\r\n                gestures: ['pulse', 'glow', 'sparkle', 'flash', 'shimmer', 'flicker'],\r\n                maxSimultaneous: -1, // Unlimited\r\n                priority: 3,\r\n                description: 'Visual effects - all can layer together'\r\n            },\r\n\r\n            // Ambient modifiers - always allowed to layer\r\n            modifiers: {\r\n                gestures: ['breathe', 'float', 'rain'],\r\n                maxSimultaneous: -1, // Unlimited\r\n                priority: 4,\r\n                description: 'Ambient effects - always allowed'\r\n            }\r\n        };\r\n\r\n        // Specific combinations that work well together\r\n        this.enhancingCombinations = [\r\n            ['bounce', 'sparkle'],\r\n            ['spin', 'glow'],\r\n            ['wave', 'pulse'],\r\n            ['nod', 'pulse'],\r\n            ['jump', 'flash'],\r\n            ['sway', 'breathe'],\r\n            ['float', 'shimmer'],\r\n            ['orbit', 'sparkle'],\r\n            ['headBob', 'pulse']\r\n        ];\r\n\r\n        // Gestures that should never combine\r\n        this.incompatiblePairs = [\r\n            ['bounce', 'jump'],\r\n            ['spin', 'orbit'],\r\n            ['wave', 'point'],\r\n            ['nod', 'shake'],\r\n            ['lean', 'tilt']\r\n        ];\r\n\r\n        // Pre-defined chord combinations\r\n        this.chords = {\r\n            celebrate: ['bounce', 'sparkle', 'pulse'],\r\n            greeting: ['wave', 'nod', 'glow'],\r\n            excited: ['jump', 'flash', 'wiggle'],\r\n            mystical: ['float', 'shimmer', 'breathe'],\r\n            party: ['headBob', 'pulse', 'sparkle'],\r\n            smooth: ['sway', 'glow', 'breathe'],\r\n            dramatic: ['spin', 'flash', 'sparkle']\r\n        };\r\n\r\n        // Chain definitions with simultaneous markers\r\n        // '+' means simultaneous, '>' means sequential\r\n        this.chains = {\r\n            buildup: 'pulse > pulse > bounce+sparkle > spin+flash',\r\n            cascade: 'wave > lean > tilt > spin > bounce+glow',\r\n            celebrate: 'bounce+sparkle > spin > jump+flash > headBob+pulse',\r\n            smooth: 'sway+breathe > float > orbit+shimmer > sway+glow',\r\n            chaos: 'wiggle > shake+flash > spin+sparkle > bounce+pulse > twist',\r\n            greeting: 'wave+glow > nod+pulse > wave',\r\n            mystical: 'float+shimmer > orbit+breathe > spin+sparkle > float+glow',\r\n            dance: 'headBob > bounce+pulse > spin > sway+glow > headBob+sparkle'\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Check if two gestures can execute simultaneously\r\n     * @param {string} gesture1 - First gesture name\r\n     * @param {string} gesture2 - Second gesture name\r\n     * @returns {boolean} - True if they can execute together\r\n     */\r\n    canExecuteSimultaneously(gesture1, gesture2) {\r\n        // Check if they're the same gesture\r\n        if (gesture1 === gesture2) return false;\r\n\r\n        // Check if they're in incompatible list\r\n        const incompatible = this.incompatiblePairs.some(pair =>\r\n            (pair.includes(gesture1) && pair.includes(gesture2))\r\n        );\r\n        if (incompatible) return false;\r\n\r\n        // Get groups for each gesture\r\n        const group1 = this.getGestureGroup(gesture1);\r\n        const group2 = this.getGestureGroup(gesture2);\r\n\r\n        // If same group, check maxSimultaneous\r\n        if (group1 === group2) {\r\n            const group = this.groups[group1];\r\n            return group && group.maxSimultaneous !== 1;\r\n        }\r\n\r\n        // Different groups can usually combine\r\n        // Movement can't combine with other movement\r\n        if (group1 === 'movement' && group2 === 'movement') return false;\r\n        if (group1 === 'dance' && group2 === 'dance') return false;\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Get the group a gesture belongs to\r\n     * @param {string} gesture - Gesture name\r\n     * @returns {string|null} - Group name or null\r\n     */\r\n    getGestureGroup(gesture) {\r\n        for (const [groupName, group] of Object.entries(this.groups)) {\r\n            if (group.gestures.includes(gesture)) {\r\n                return groupName;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Get priority of a gesture\r\n     * @param {string} gesture - Gesture name\r\n     * @returns {number} - Priority value (lower = higher priority)\r\n     */\r\n    getGesturePriority(gesture) {\r\n        const group = this.getGestureGroup(gesture);\r\n        return group ? this.groups[group].priority : 99;\r\n    }\r\n\r\n    /**\r\n     * Get compatible gestures from a list that can execute together\r\n     * @param {Array} gestures - Array of gesture objects or names\r\n     * @returns {Array} - Gestures that can execute simultaneously\r\n     */\r\n    getCompatibleGestures(gestures) {\r\n        if (!gestures || gestures.length === 0) return [];\r\n        if (gestures.length === 1) return gestures;\r\n\r\n        const chord = [];\r\n        const used = new Set();\r\n\r\n        // Normalize to gesture names\r\n        const normalizeGesture = (g) => typeof g === 'string' ? g : g.gestureName;\r\n\r\n        // Sort by priority\r\n        const sorted = [...gestures].sort((a, b) => {\r\n            const priorityA = this.getGesturePriority(normalizeGesture(a));\r\n            const priorityB = this.getGesturePriority(normalizeGesture(b));\r\n            return priorityA - priorityB;\r\n        });\r\n\r\n        for (const gesture of sorted) {\r\n            if (used.has(gesture)) continue;\r\n\r\n            const gestureName = normalizeGesture(gesture);\r\n\r\n            // Check if this gesture can combine with all in chord\r\n            let canAdd = true;\r\n            for (const chordItem of chord) {\r\n                const chordGestureName = normalizeGesture(chordItem);\r\n                if (!this.canExecuteSimultaneously(gestureName, chordGestureName)) {\r\n                    canAdd = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (canAdd) {\r\n                // Check group limits\r\n                const group = this.groups[this.getGestureGroup(gestureName)];\r\n                if (group && group.maxSimultaneous > 0) {\r\n                    const groupCount = chord.filter(c =>\r\n                        this.getGestureGroup(normalizeGesture(c)) === this.getGestureGroup(gestureName)\r\n                    ).length;\r\n                    if (groupCount >= group.maxSimultaneous) {\r\n                        continue; // Skip, group limit reached\r\n                    }\r\n                }\r\n\r\n                chord.push(gesture);\r\n                used.add(gesture);\r\n            }\r\n        }\r\n\r\n        return chord;\r\n    }\r\n\r\n    /**\r\n     * Parse a chain string into steps of simultaneous gestures\r\n     * @param {string} chainString - Chain definition string\r\n     * @returns {Array<Array<string>>} - Array of steps, each containing simultaneous gestures\r\n     */\r\n    parseChain(chainString) {\r\n        if (!chainString) return [];\r\n\r\n        // Handle predefined chains\r\n        if (this.chains[chainString]) {\r\n            chainString = this.chains[chainString];\r\n        }\r\n\r\n        const steps = chainString.split('>').map(s => s.trim());\r\n        return steps.map(step => {\r\n            // Split by + for simultaneous gestures\r\n            return step.split('+').map(g => g.trim()).filter(g => g);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Check if gestures form an enhancing combination\r\n     * @param {Array} gestures - Array of gesture names\r\n     * @returns {boolean} - True if they enhance each other\r\n     */\r\n    isEnhancingCombination(gestures) {\r\n        const gestureNames = gestures.map(g =>\r\n            typeof g === 'string' ? g : g.gestureName\r\n        );\r\n\r\n        return this.enhancingCombinations.some(combo =>\r\n            combo.every(gesture => gestureNames.includes(gesture))\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Get a predefined chord by name\r\n     * @param {string} chordName - Name of the chord\r\n     * @returns {Array<string>|null} - Array of gesture names or null\r\n     */\r\n    getChord(chordName) {\r\n        return this.chords[chordName] || null;\r\n    }\r\n\r\n    /**\r\n     * Create a gesture chord command\r\n     * @param {Array<string>} gestures - Gestures to combine\r\n     * @returns {Object} - Chord command object\r\n     */\r\n    createChord(gestures) {\r\n        const compatible = this.getCompatibleGestures(gestures);\r\n        const isEnhancing = this.isEnhancingCombination(compatible);\r\n\r\n        return {\r\n            type: 'chord',\r\n            gestures: compatible.map(g => typeof g === 'string' ? g : g.gestureName),\r\n            isEnhancing,\r\n            timestamp: Date.now()\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Validate if a gesture exists in the system\r\n     * @param {string} gesture - Gesture name\r\n     * @returns {boolean} - True if gesture is valid\r\n     */\r\n    isValidGesture(gesture) {\r\n        return this.getGestureGroup(gesture) !== null;\r\n    }\r\n\r\n    /**\r\n     * Get all available gestures\r\n     * @returns {Array<string>} - All gesture names\r\n     */\r\n    getAllGestures() {\r\n        const gestures = [];\r\n        for (const group of Object.values(this.groups)) {\r\n            gestures.push(...group.gestures);\r\n        }\r\n        return [...new Set(gestures)];\r\n    }\r\n\r\n    /**\r\n     * Get timing class for a gesture\r\n     * @param {string} gesture - Gesture name\r\n     * @returns {Object|null} - Timing class info\r\n     */\r\n    getGestureTiming(gesture) {\r\n        for (const [className, timingClass] of Object.entries(this.timingClasses)) {\r\n            if (timingClass.gestures.includes(gesture)) {\r\n                return {\r\n                    name: className,\r\n                    ...timingClass\r\n                };\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Get next subdivision beat for a gesture\r\n     * @param {string} gesture - Gesture name\r\n     * @param {number} currentBeat - Current beat number\r\n     * @param {number} subdivision - Beat subdivision (1, 0.5, 0.25, etc)\r\n     * @returns {number} - Next beat to fire on\r\n     */\r\n    getNextBeatForGesture(gesture, currentBeat, subdivision = 1) {\r\n        const timing = this.getGestureTiming(gesture);\r\n        if (!timing) return currentBeat + 1;\r\n\r\n        // Continuous gestures can start immediately\r\n        if (timing.timing === -1) return currentBeat;\r\n\r\n        // Calculate next appropriate beat based on timing class\r\n        const beatInterval = timing.timing / subdivision;\r\n        const nextBeat = Math.ceil(currentBeat / beatInterval) * beatInterval;\r\n\r\n        // For offbeat gestures, add half beat offset\r\n        if (timing.name === 'offbeat') {\r\n            return nextBeat + 0.5;\r\n        }\r\n\r\n        return nextBeat;\r\n    }\r\n\r\n    /**\r\n     * Get fill gestures based on density and BPM\r\n     * @param {number} bpm - Current BPM\r\n     * @param {string} intensity - Intensity level (sparse, moderate, dense, chaos)\r\n     * @returns {Array<string>} - Suggested fill gestures\r\n     */\r\n    getFillGestures(bpm, intensity = 'moderate') {\r\n        const profile = this.densityProfiles[intensity] || this.densityProfiles.moderate;\r\n\r\n        // Determine fill pattern based on BPM\r\n        let pattern;\r\n        if (bpm < 80) {\r\n            pattern = 'energetic';  // More movement for slow tempos\r\n        } else if (bpm < 120) {\r\n            pattern = 'rhythmic';\r\n        } else if (bpm < 160) {\r\n            pattern = 'smooth';\r\n        } else {\r\n            pattern = 'subtle';  // Less movement for fast tempos\r\n        }\r\n\r\n        // Return fills based on probability\r\n        if (Math.random() < profile.fillProbability) {\r\n            return this.fillPatterns[pattern] || [];\r\n        }\r\n        return [];\r\n    }\r\n\r\n    /**\r\n     * Get next beat timing for a gesture (for rhythm game mode)\r\n     * @param {string} gestureName - Name of the gesture\r\n     * @param {number} currentBeat - Current beat number\r\n     * @param {number} bpm - Current BPM\r\n     * @returns {number} - Next beat to trigger on\r\n     */\r\n    getNextBeatTiming(gestureName, currentBeat, bpm) {\r\n        // In rhythm game mode, this will be determined by the game logic\r\n        // For now, just return the next appropriate beat based on gesture type\r\n        const nextBeat = this.getNextBeatForGesture(gestureName, currentBeat);\r\n        return nextBeat;\r\n    }\r\n\r\n    /**\r\n     * Get intensity profile based on BPM\r\n     * @param {number} bpm - Current BPM\r\n     * @returns {string} - Intensity level\r\n     */\r\n    getIntensityFromBPM(bpm) {\r\n        if (bpm < 60) return 'dense';      // Very slow needs more fills\r\n        if (bpm < 100) return 'moderate';\r\n        if (bpm < 140) return 'moderate';\r\n        if (bpm < 180) return 'sparse';\r\n        return 'sparse';  // Very fast needs less\r\n    }\r\n\r\n    /**\r\n     * Create swing/shuffle timing\r\n     * @param {number} straightBeat - Straight beat number\r\n     * @param {number} swingRatio - Swing ratio (0.5 = straight, 0.67 = swing)\r\n     * @returns {number} - Adjusted beat with swing\r\n     */\r\n    applySwingTiming(straightBeat, swingRatio = 0.67) {\r\n        const beatPart = straightBeat % 1;\r\n        if (beatPart === 0.5) {\r\n            // Delay the offbeat for swing feel\r\n            return Math.floor(straightBeat) + swingRatio;\r\n        }\r\n        return straightBeat;\r\n    }\r\n}\r\n\r\n// Create singleton instance\r\nconst gestureCompatibility = new GestureCompatibility();\r\n\r\nexport default gestureCompatibility;","/**\n * GrooveTemplates - Musical rhythm patterns and groove definitions\n * Provides pre-defined rhythmic patterns that make the mascot dance musically\n */\n\nclass GrooveTemplates {\n    constructor() {\n        // Core groove definitions with emphasis patterns\n        this.templates = {\n            straight: {\n                name: 'Straight',\n                timeSignature: '4/4',\n                baseMovement: 'grooveBob', // Continuous base layer\n                transitionStyle: 'transitionLean',\n                pattern: {\n                    emphasis: [1, 0, 0.5, 0], // Strong on 1, medium on 3\n                    velocities: [1.0, 0, 0.6, 0],\n                    subdivisions: [0, 0.5] // Only play on beats and offbeats\n                },\n                swing: 0,\n                humanization: 0.05, // 5% timing variance for human feel\n                preferredGestures: {\n                    downbeat: ['bounce', 'headBob', 'jump'],\n                    offbeat: ['pulse', 'breathe'],\n                    fills: ['sparkle', 'glow']\n                },\n                compositeMove: null, // No special composite for straight\n                intensity: 'moderate',\n                description: 'Standard 4/4 rhythm, good for pop/rock'\n            },\n\n            swing: {\n                name: 'Swing',\n                timeSignature: '4/4',\n                baseMovement: 'grooveFlow',\n                transitionStyle: 'transitionGlide',\n                compositeMove: 'swingOut',\n                pattern: {\n                    emphasis: [1, 0, 0.66, 0], // Swung eighth notes\n                    velocities: [1.0, 0, 0.7, 0],\n                    subdivisions: [0, 0.66] // Delayed upbeat for swing feel\n                },\n                swing: 0.67, // 67% swing ratio (2:1 triplet feel)\n                humanization: 0.08,\n                preferredGestures: {\n                    downbeat: ['sway', 'lean', 'bounce'],\n                    offbeat: ['wiggle', 'pulse'],\n                    fills: ['shimmer', 'float']\n                },\n                intensity: 'moderate',\n                description: 'Jazz swing feel with triplet subdivision'\n            },\n\n            shuffle: {\n                name: 'Shuffle',\n                timeSignature: '4/4',\n                baseMovement: 'grooveBob',\n                transitionStyle: 'transitionLean',\n                compositeMove: null,\n                pattern: {\n                    emphasis: [1, 0.25, 0.5, 0.75], // Driving shuffle\n                    velocities: [1.0, 0.3, 0.7, 0.3],\n                    subdivisions: [0, 0.25, 0.5, 0.75]\n                },\n                swing: 0.75, // Heavy shuffle\n                humanization: 0.06,\n                preferredGestures: {\n                    downbeat: ['bounce', 'headBob'],\n                    upbeat: ['twist', 'wiggle'],\n                    offbeat: ['pulse', 'breathe'],\n                    fills: ['sparkle', 'flash']\n                },\n                intensity: 'dense',\n                description: 'Blues/rock shuffle with heavy swing'\n            },\n\n            latin: {\n                name: 'Latin',\n                timeSignature: '4/4',\n                baseMovement: 'grooveSway',\n                transitionStyle: 'transitionRoll',\n                compositeMove: 'latinHips',\n                pattern: {\n                    // Clave-inspired pattern: 1 e + a 2 e + a 3 e + a 4 e + a\n                    emphasis: [1, 0, 0.375, 0.5, 0, 0.75, 0, 0],\n                    velocities: [1.0, 0, 0.8, 0.9, 0, 0.8, 0, 0],\n                    subdivisions: [0, 0.375, 0.5, 0.75] // Syncopated\n                },\n                swing: 0,\n                humanization: 0.04,\n                preferredGestures: {\n                    downbeat: ['sway', 'wiggle'],\n                    syncopation: ['twist', 'lean'],\n                    offbeat: ['pulse', 'shimmer'],\n                    fills: ['sparkle', 'shake']\n                },\n                intensity: 'dense',\n                description: 'Latin clave rhythm with syncopation'\n            },\n\n            breakbeat: {\n                name: 'Breakbeat',\n                timeSignature: '4/4',\n                baseMovement: 'grooveStep',\n                transitionStyle: 'transitionGlide',\n                compositeMove: null,\n                pattern: {\n                    // Classic Amen break pattern simplified\n                    emphasis: [1, 0, 0, 0.75, 0.25, 0.5, 0, 0.625],\n                    velocities: [1.0, 0, 0, 0.9, 0.6, 0.8, 0, 0.7],\n                    subdivisions: [0, 0.25, 0.5, 0.625, 0.75] // Complex syncopation\n                },\n                swing: 0,\n                humanization: 0.03, // Tighter timing for electronic feel\n                preferredGestures: {\n                    downbeat: ['bounce', 'twist'],\n                    syncopation: ['flash', 'shake'],\n                    offbeat: ['pulse', 'wiggle'],\n                    fills: ['sparkle', 'glitch']\n                },\n                intensity: 'chaos',\n                description: 'Hip-hop/DnB breakbeat pattern'\n            },\n\n            waltz: {\n                name: 'Waltz',\n                timeSignature: '3/4',\n                baseMovement: 'grooveFlow',\n                transitionStyle: 'transitionGlide',\n                compositeMove: null,\n                pattern: {\n                    emphasis: [1, 0.33, 0.67], // 1-2-3, 1-2-3\n                    velocities: [1.0, 0.5, 0.5],\n                    subdivisions: [0, 0.33, 0.67]\n                },\n                swing: 0,\n                humanization: 0.07,\n                preferredGestures: {\n                    downbeat: ['sway', 'float'],\n                    weak: ['breathe', 'lean'],\n                    fills: ['shimmer', 'glow']\n                },\n                intensity: 'sparse',\n                description: '3/4 waltz time'\n            },\n\n            techno: {\n                name: 'Techno',\n                timeSignature: '4/4',\n                baseMovement: 'groovePulse',\n                transitionStyle: 'transitionLean',\n                compositeMove: 'robotPop',\n                pattern: {\n                    // Four-on-the-floor with 16th note variations\n                    emphasis: [1, 0.25, 0.5, 0.75, 1, 0.25, 0.5, 0.75],\n                    velocities: [1.0, 0.6, 1.0, 0.6, 1.0, 0.6, 1.0, 0.6],\n                    subdivisions: [0, 0.25, 0.5, 0.75] // All subdivisions\n                },\n                swing: 0,\n                humanization: 0.02, // Very tight, machine-like\n                preferredGestures: {\n                    downbeat: ['pulse', 'bounce'],\n                    subdivision: ['flash', 'glitch'],\n                    fills: ['sparkle', 'strobe']\n                },\n                intensity: 'dense',\n                description: 'Driving techno four-on-the-floor'\n            },\n\n            ambient: {\n                name: 'Ambient',\n                timeSignature: '4/4',\n                baseMovement: 'groovePulse',\n                transitionStyle: 'transitionGlide',\n                compositeMove: null,\n                pattern: {\n                    emphasis: [0.8, 0, 0.3, 0, 0.5, 0, 0.3, 0],\n                    velocities: [0.8, 0, 0.3, 0, 0.5, 0, 0.3, 0],\n                    subdivisions: [0, 0.5] // Sparse\n                },\n                swing: 0,\n                humanization: 0.15, // Very loose timing\n                preferredGestures: {\n                    downbeat: ['float', 'breathe'],\n                    offbeat: ['sway', 'shimmer'],\n                    fills: ['glow', 'pulse']\n                },\n                intensity: 'sparse',\n                description: 'Floating ambient rhythm'\n            },\n\n            funk: {\n                name: 'Funk',\n                timeSignature: '4/4',\n                baseMovement: 'grooveSway',\n                transitionStyle: 'transitionRoll',\n                compositeMove: 'funkChicken',\n                pattern: {\n                    // \"One\" emphasis with 16th note ghost notes\n                    emphasis: [1.2, 0.125, 0.25, 0, 0.625, 0.75, 0, 0.875],\n                    velocities: [1.2, 0.3, 0.4, 0, 0.8, 0.6, 0, 0.4],\n                    subdivisions: [0, 0.125, 0.25, 0.625, 0.75, 0.875]\n                },\n                swing: 0.1, // Slight swing\n                humanization: 0.06,\n                preferredGestures: {\n                    one: ['bounce', 'twist'], // THE ONE\n                    ghost: ['wiggle', 'pulse'], // Ghost notes\n                    syncopation: ['lean', 'shake'],\n                    fills: ['flash', 'sparkle']\n                },\n                intensity: 'chaos',\n                description: 'Funky syncopated rhythm with THE ONE'\n            },\n\n            trap: {\n                name: 'Trap',\n                timeSignature: '4/4',\n                baseMovement: 'grooveStep',\n                transitionStyle: 'transitionLean',\n                compositeMove: null,\n                pattern: {\n                    // Hi-hat rolls and syncopated kicks\n                    emphasis: [1, 0, 0, 0.375, 0, 0.75, 0.875, 0],\n                    velocities: [1.0, 0, 0, 0.7, 0, 0.8, 0.6, 0],\n                    subdivisions: [0, 0.375, 0.75, 0.875] // Triplet feel\n                },\n                swing: 0,\n                humanization: 0.03,\n                preferredGestures: {\n                    downbeat: ['bounce', 'lean'],\n                    hihat: ['shake', 'shimmer'],\n                    syncopation: ['twist', 'flash'],\n                    fills: ['sparkle', 'glitch']\n                },\n                intensity: 'moderate',\n                description: 'Trap rhythm with triplet hi-hats'\n            }\n        };\n\n        // Transition rules for smooth groove changes\n        this.transitions = {\n            instant: 0, // Change immediately\n            nextBar: 1, // Change on next bar line\n            nextPhrase: 4, // Change on next 4-bar phrase\n            fadeIn: 8 // Gradually introduce over 8 beats\n        };\n\n        // Current active groove\n        this.currentGroove = null;\n        this.transitionMode = 'nextBar';\n        this.pendingGroove = null;\n    }\n\n    /**\n     * Get a groove template by name\n     */\n    getTemplate(name) {\n        return this.templates[name.toLowerCase()] || this.templates.straight;\n    }\n\n    /**\n     * Get emphasis for current beat and subdivision\n     */\n    getEmphasis(groove, beatNumber, subdivision) {\n        if (!groove || !groove.pattern) return 0;\n\n        const beatInMeasure = beatNumber % 4; // Assuming 4/4 for now\n        const position = beatInMeasure + subdivision;\n\n        // Find closest pattern position\n        const patternIndex = groove.pattern.subdivisions.findIndex(\n            sub => Math.abs(sub - subdivision) < 0.01\n        );\n\n        if (patternIndex === -1) return 0;\n\n        return groove.pattern.emphasis[patternIndex] || 0;\n    }\n\n    /**\n     * Get velocity for current position\n     */\n    getVelocity(groove, beatNumber, subdivision) {\n        if (!groove || !groove.pattern) return 1.0;\n\n        const beatInMeasure = beatNumber % 4;\n        const position = beatInMeasure + subdivision;\n\n        const patternIndex = groove.pattern.subdivisions.findIndex(\n            sub => Math.abs(sub - subdivision) < 0.01\n        );\n\n        if (patternIndex === -1) return 0;\n\n        return groove.pattern.velocities[patternIndex] || 0;\n    }\n\n    /**\n     * Get preferred gesture for current position\n     */\n    getPreferredGesture(groove, beatNumber, subdivision, availableGestures = []) {\n        if (!groove || !groove.preferredGestures) return null;\n\n        // Determine the beat type\n        let beatType;\n        if (subdivision === 0) {\n            beatType = 'downbeat';\n        } else if (subdivision === 0.5) {\n            beatType = 'offbeat';\n        } else if (subdivision === 0.25 || subdivision === 0.75) {\n            beatType = 'subdivision';\n        } else {\n            beatType = 'syncopation';\n        }\n\n        // Special case for THE ONE in funk\n        if (groove.name === 'Funk' && beatNumber % 4 === 0 && subdivision === 0) {\n            beatType = 'one';\n        }\n\n        const preferred = groove.preferredGestures[beatType] || groove.preferredGestures.fills;\n        if (!preferred || preferred.length === 0) return null;\n\n        // Filter to available gestures if provided\n        if (availableGestures.length > 0) {\n            const available = preferred.filter(g => availableGestures.includes(g));\n            if (available.length > 0) {\n                return available[Math.floor(Math.random() * available.length)];\n            }\n        }\n\n        // Return random from preferred\n        return preferred[Math.floor(Math.random() * preferred.length)];\n    }\n\n    /**\n     * Apply humanization to timing\n     */\n    humanizeTiming(groove, timing) {\n        if (!groove || !groove.humanization) return timing;\n\n        const variance = groove.humanization;\n        const offset = (Math.random() - 0.5) * variance;\n        return Math.max(0, Math.min(1, timing + offset));\n    }\n\n    /**\n     * Apply swing to subdivision\n     */\n    applySwing(groove, subdivision) {\n        if (!groove || !groove.swing || groove.swing === 0) return subdivision;\n\n        // Apply swing to upbeats (0.5)\n        if (Math.abs(subdivision - 0.5) < 0.01) {\n            return 0.5 + (groove.swing - 0.5) * 0.5;\n        }\n\n        // Apply swing to 16th note upbeats (0.25, 0.75)\n        if (Math.abs(subdivision - 0.25) < 0.01) {\n            return 0.25 + (groove.swing - 0.5) * 0.25;\n        }\n        if (Math.abs(subdivision - 0.75) < 0.01) {\n            return 0.75 + (groove.swing - 0.5) * 0.25;\n        }\n\n        return subdivision;\n    }\n\n    /**\n     * Set active groove with optional transition\n     */\n    setGroove(name, transitionMode = null) {\n        const groove = this.getTemplate(name);\n        if (!groove) return false;\n\n        const mode = transitionMode || this.transitionMode;\n\n        if (mode === 'instant' || !this.currentGroove) {\n            this.currentGroove = groove;\n            this.pendingGroove = null;\n        } else {\n            this.pendingGroove = groove;\n            // Transition will happen based on mode\n        }\n\n        return true;\n    }\n\n    /**\n     * Handle beat transition\n     */\n    onBeat(beatNumber) {\n        if (!this.pendingGroove) return;\n\n        const shouldTransition =\n            (this.transitionMode === 'nextBar' && beatNumber % 4 === 0) ||\n            (this.transitionMode === 'nextPhrase' && beatNumber % 16 === 0);\n\n        if (shouldTransition) {\n            this.currentGroove = this.pendingGroove;\n            this.pendingGroove = null;\n        }\n    }\n\n    /**\n     * Get base movement for current groove\n     */\n    getBaseMovement() {\n        return this.currentGroove?.baseMovement || null;\n    }\n\n    /**\n     * Get transition style for current groove\n     */\n    getTransitionStyle() {\n        return this.currentGroove?.transitionStyle || 'transitionLean';\n    }\n\n    /**\n     * Get composite move for current groove\n     */\n    getCompositeMove() {\n        return this.currentGroove?.compositeMove || null;\n    }\n\n    /**\n     * Check if we should trigger composite move\n     * @param {number} beatNumber - Current beat number\n     * @returns {boolean} True if composite should trigger\n     */\n    shouldTriggerComposite(beatNumber) {\n        if (!this.currentGroove?.compositeMove) return false;\n\n        // Trigger composite every 4 or 8 bars depending on intensity\n        const interval = this.currentGroove.intensity === 'sparse' ? 32 : 16;\n        return beatNumber % interval === 0;\n    }\n\n    /**\n     * Get layered gesture configuration for current position\n     * @param {number} beatNumber - Current beat number\n     * @param {number} subdivision - Current subdivision (0, 0.25, 0.5, 0.75)\n     * @returns {Object} Configuration with base, accent, and transition layers\n     */\n    getLayeredGestures(beatNumber, subdivision) {\n        if (!this.currentGroove) return null;\n\n        const config = {\n            base: this.getBaseMovement(),\n            accent: null,\n            transition: null,\n            composite: null,\n            velocity: 1.0\n        };\n\n        // Check for composite move trigger\n        if (this.shouldTriggerComposite(beatNumber) && subdivision === 0) {\n            config.composite = this.getCompositeMove();\n        }\n\n        // Get accent gesture based on emphasis\n        const emphasis = this.getEmphasis(this.currentGroove, beatNumber, subdivision);\n        const velocity = this.getVelocity(this.currentGroove, beatNumber, subdivision);\n\n        if (emphasis > 0.3 && velocity > 0.3) {\n            config.accent = this.getPreferredGesture(\n                this.currentGroove,\n                beatNumber,\n                subdivision\n            );\n            config.velocity = velocity;\n        }\n\n        // Add transition if changing positions\n        if (config.accent && Math.random() < 0.3) {\n            config.transition = this.getTransitionStyle();\n        }\n\n        return config;\n    }\n\n    /**\n     * Get all available groove names\n     */\n    getGrooveNames() {\n        return Object.keys(this.templates);\n    }\n\n    /**\n     * Get groove info for UI\n     */\n    getGrooveInfo(name) {\n        const template = this.templates[name];\n        if (!template) return null;\n\n        return {\n            name: template.name,\n            timeSignature: template.timeSignature,\n            description: template.description,\n            intensity: template.intensity,\n            swing: template.swing,\n            baseMovement: template.baseMovement,\n            compositeMove: template.compositeMove\n        };\n    }\n}\n\n// Export as ES6 module\n// No longer polluting global scope with window assignment\nexport default GrooveTemplates;","/**\r\n * AudioHandler - Manages all audio-related functionality for EmotiveMascot\r\n * @module mascot/AudioHandler\r\n */\r\n\r\nexport class AudioHandler {\r\n    constructor(mascot) {\r\n        this.mascot = mascot;\r\n        this.vocalUpdateInterval = null;\r\n    }\r\n\r\n    /**\r\n     * Initialize audio handler\r\n     */\r\n    init() {\r\n        // Will contain initialization logic\r\n    }\r\n\r\n\r\n    /**\r\n     * Disconnect audio analysis\r\n     * @returns {Object} The mascot instance for chaining\r\n     */\r\n    disconnectAudio() {\r\n        // Stop analysis\r\n        if (this.mascot.audioAnalyzer) {\r\n            this.mascot.audioAnalyzer.stop();\r\n        }\r\n        \r\n        // Clear update interval\r\n        if (this.vocalUpdateInterval) {\r\n            clearInterval(this.vocalUpdateInterval);\r\n            this.vocalUpdateInterval = null;\r\n        }\r\n        \r\n        \r\n        // Clear vocal data and analyzer reference\r\n        if (this.mascot.shapeMorpher) {\r\n            this.mascot.shapeMorpher.setVocalEnergy(0);\r\n            this.mascot.shapeMorpher.setAudioDeformation(0);\r\n            this.mascot.shapeMorpher.audioAnalyzer = null;\r\n            this.mascot.shapeMorpher.beatGlitchIntensity = 0;\r\n            this.mascot.shapeMorpher.glitchPoints = [];\r\n        }\r\n\r\n        // Stop ambient groove animation when audio stops\r\n        if (this.mascot.renderer) {\r\n            this.mascot.renderer.ambientDanceAnimator.stopAmbientAnimation('grooveBob');\r\n        }\r\n\r\n        return this.mascot;\r\n    }\r\n\r\n    /**\r\n     * Connect audio element for vocal visualization\r\n     * @param {HTMLAudioElement} audioElement - Audio element to analyze\r\n     * @returns {Object} The mascot instance for chaining\r\n     */\r\n    async connectAudio(audioElement) {\r\n        if (!this.mascot.audioAnalyzer) {\r\n            return this.mascot;\r\n        }\r\n        \r\n        // Initialize audio context if needed\r\n        if (!this.mascot.audioAnalyzer.audioContext) {\r\n            await this.mascot.audioAnalyzer.init();\r\n        }\r\n        \r\n        // Connect the audio element\r\n        this.mascot.audioAnalyzer.connectAudioElement(audioElement);\r\n        \r\n        // Pass analyzer reference to shape morpher for frequency data\r\n        if (this.mascot.shapeMorpher) {\r\n            this.mascot.shapeMorpher.audioAnalyzer = this.mascot.audioAnalyzer;\r\n            \r\n            // Set up beat detection callback for glitches and rhythm detection\r\n            this.mascot.audioAnalyzer.onBeat((amplitude) => {\r\n                if (this.mascot.shapeMorpher) {\r\n                    // Feed beat to music detector for BPM detection\r\n                    if (this.mascot.shapeMorpher.musicDetector) {\r\n                        const now = performance.now();\r\n                        this.mascot.shapeMorpher.musicDetector.addOnset(now, amplitude);\r\n                    }\r\n\r\n                    // Only trigger beat glitches when vocals are active\r\n                    if (this.mascot.shapeMorpher.vocalEffectActive) {\r\n                        this.mascot.shapeMorpher.beatGlitchIntensity = amplitude * 0.3;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        \r\n        // Start updating shape morpher with vocal data\r\n        if (this.vocalUpdateInterval) {\r\n            clearInterval(this.vocalUpdateInterval);\r\n        }\r\n        \r\n        // Start ambient groove animation when audio starts\r\n        // This provides the continuous background movement\r\n        if (this.mascot.renderer) {\r\n            this.mascot.renderer.startGrooveBob({ intensity: 0.5, frequency: 1.0 });\r\n        }\r\n\r\n        this.vocalUpdateInterval = setInterval(() => {\r\n            if (this.mascot.audioAnalyzer.isAnalyzing && this.mascot.shapeMorpher) {\r\n                // Get current analysis data directly from properties\r\n                const amplitude = this.mascot.audioAnalyzer.currentAmplitude || 0;\r\n                const vocalInstability = this.mascot.audioAnalyzer.getVocalInstability() || 0;\r\n\r\n                // Set vocal energy for shape pulsing\r\n                this.mascot.shapeMorpher.setVocalEnergy(vocalInstability);\r\n\r\n                // Set overall deformation based on amplitude (0 to 1, no shrinking)\r\n                this.mascot.shapeMorpher.setAudioDeformation(amplitude * 2); // Keep positive for expansion only\r\n            }\r\n        }, 50); // Update at 20 FPS\r\n        \r\n        // Pass audio analyzer to renderer\r\n        if (this.mascot.renderer) {\r\n            this.mascot.renderer.audioAnalyzer = this.mascot.audioAnalyzer;\r\n        }\r\n        \r\n        return this.mascot;\r\n    }\r\n\r\n    /**\r\n     * Stops speech reactivity mode and returns to base emotional state\r\n     * @returns {Object} The mascot instance for chaining\r\n     */\r\n    stopSpeaking() {\r\n        if (!this.mascot.speaking) {\r\n            return this.mascot;\r\n        }\r\n        \r\n        // Store previous state for event\r\n        const previousAudioLevel = this.mascot.audioLevelProcessor.getCurrentLevel();\r\n        \r\n        // Clean up audio level processor\r\n        this.mascot.audioLevelProcessor.cleanup();\r\n        \r\n        // Reset speech state\r\n        this.mascot.speaking = false;\r\n        \r\n        // Notify renderer about speech stop (triggers 500ms return-to-base transition)\r\n        this.mascot.renderer.onSpeechStop();\r\n        \r\n        // Emit speech stop event\r\n        this.mascot.emit('speechStopped', { \r\n            previousAudioLevel,\r\n            returnToBaseTime: 500\r\n        });\r\n        \r\n        return this.mascot;\r\n    }\r\n\r\n    /**\r\n     * Sets master volume for all audio output\r\n     * @param {number} volume - Volume level (0.0 to 1.0)\r\n     * @returns {Object} The mascot instance for chaining\r\n     */\r\n    setVolume(volume) {\r\n        const clampedVolume = Math.max(0, Math.min(1, volume));\r\n        this.mascot.config.masterVolume = clampedVolume;\r\n        \r\n        if (this.mascot.soundSystem.isAvailable()) {\r\n            const currentEmotion = this.mascot.stateMachine.getCurrentState().emotion;\r\n            this.mascot.soundSystem.setMasterVolume(clampedVolume, currentEmotion);\r\n        }\r\n        \r\n        this.mascot.emit('volumeChanged', { volume: clampedVolume });\r\n        \r\n        return this.mascot;\r\n    }\r\n\r\n    /**\r\n     * Cleanup\r\n     */\r\n    destroy() {\r\n        this.disconnectAudio();\r\n    }\r\n}","/**\n * GestureController - Manages gesture animations and protocols\n * @module mascot/GestureController\n */\n\nexport class GestureController {\n    constructor(mascot) {\n        this.mascot = mascot;\n        this.currentGesture = null;\n    }\n\n    /**\n     * Initialize gesture controller\n     */\n    init() {\n        // Will contain initialization logic\n    }\n\n    /**\n     * Methods to be moved here:\n     * - setGestureProtocol()\n     * - performGesture()\n     * - Gesture animation logic\n     */\n\n    /**\n     * Cleanup\n     */\n    destroy() {\n        this.currentGesture = null;\n    }\n}","/**\n * StateCoordinator - Manages emotion states and transitions\n * @module mascot/StateCoordinator\n */\n\nimport { getEmotion, getEmotionVisualParams } from '../core/emotions/index.js';\nimport rhythmIntegration from '../core/rhythmIntegration.js';\n\nexport class StateCoordinator {\n    constructor(mascot) {\n        this.mascot = mascot;\n        this.currentEmotion = 'neutral';\n        this.emotionIntensity = 1.0;\n    }\n\n    /**\n     * Initialize state coordinator\n     */\n    init() {\n        // Will contain initialization logic\n    }\n\n    /**\n     * Sets the emotional state with optional undertone\n     * @param {string} emotion - The emotion to set\n     * @param {Object|string|null} options - Options object or undertone string for backward compatibility\n     * @returns {Object} The mascot instance for chaining\n     */\n    setEmotion(emotion, options = null) {\n        // Map common aliases to actual emotion states\n        const emotionMapping = {\n            'happy': 'joy',\n            'curious': 'surprise',\n            'frustrated': 'anger',\n            'sad': 'sadness'\n        };\n        \n        // Use mapped emotion or original if not an alias\n        const mappedEmotion = emotionMapping[emotion] || emotion;\n        \n        // Handle backward compatibility - if options is a string, treat as undertone\n        let undertone = null;\n        let duration = 500;\n        \n        if (typeof options === 'string') {\n            undertone = options;\n        } else if (options && typeof options === 'object') {\n            undertone = options.undertone || null;\n            duration = options.duration || 500;\n        }\n        \n        // Set emotional state in state machine\n        const success = this.mascot.stateMachine.setEmotion(mappedEmotion, undertone, duration);\n        \n        if (success) {\n            // Register emotion's rhythm configuration\n            const emotionConfig = getEmotion(mappedEmotion);\n            if (emotionConfig) {\n                rhythmIntegration.registerConfig('emotion', mappedEmotion, emotionConfig);\n            }\n            // Clear and reset particles when changing emotional states\n            if (this.mascot.particleSystem) {\n                // Clear all existing particles\n                this.mascot.particleSystem.clear();\n                \n                // Get the new emotional properties\n                const emotionalProps = this.mascot.stateMachine.getCurrentEmotionalProperties();\n                \n                // Spawn initial particles for the new state\n                // Use burst to immediately populate with a few particles\n                // DECIMATED neutral\n                let initialCount;\n                if (mappedEmotion === 'neutral') {\n                    initialCount = 1;  // DECIMATED to 1 particle\n                } else if (mappedEmotion === 'resting') {\n                    initialCount = 4;  // Keep resting at 4\n                } else {\n                    initialCount = Math.min(3, Math.floor(emotionalProps.particleRate / 4));\n                }\n                \n                if (initialCount > 0) {\n                    // Always spawn from canvas center, not gaze-adjusted position\n                    const centerX = this.mascot.canvasManager.width / 2;\n                    const centerY = this.mascot.canvasManager.height / 2;\n                    \n                    this.mascot.particleSystem.burst(\n                        initialCount, \n                        emotionalProps.particleBehavior,\n                        centerX,\n                        centerY\n                    );\n                }\n            }\n            \n            // Update sound system ambient tone - DISABLED (annoying)\n            // if (this.mascot.soundSystem.isAvailable()) {\n            //     this.mascot.soundSystem.setAmbientTone(mappedEmotion, duration);\n            // }\n            \n            // Update Emotive renderer if in classic mode\n            if (this.mascot.config.renderingStyle === 'classic' && this.mascot.renderer.setEmotionalState) {\n                const emotionParams = getEmotionVisualParams(mappedEmotion);\n                this.mascot.renderer.setEmotionalState(mappedEmotion, emotionParams, undertone);\n            }\n            \n            // Emit emotion change event\n            this.mascot.emit('emotionChanged', { emotion: mappedEmotion, undertone, duration });\n            \n        }\n        \n        this.currentEmotion = mappedEmotion;\n        return this.mascot;\n    }\n\n    /**\n     * Methods to be moved here:\n     * - getEmotion()\n     * - setUndertoneModifier()\n     * - transitionToEmotion() (new smooth transition)\n     * - setEmotionVector() (new 2D control)\n     * - Emotion blending logic\n     */\n\n    /**\n     * Cleanup\n     */\n    destroy() {\n        this.currentEmotion = 'neutral';\n    }\n}","/**\r\n * VisualizationRunner - Manages the main animation loop and rendering\r\n * @module mascot/VisualizationRunner\r\n */\r\n\r\nimport { getEmotionVisualParams, getEmotion } from '../core/emotions/index.js';\r\n\r\nexport class VisualizationRunner {\r\n    constructor(mascot) {\r\n        this.mascot = mascot;\r\n        this.animationId = null;\r\n        this.isRunning = false;\r\n        this.lastTime = 0;\r\n    }\r\n\r\n    /**\r\n     * Initialize visualization runner\r\n     */\r\n    init() {\r\n        // Will contain initialization logic\r\n    }\r\n\r\n    /**\r\n     * Starts the animation loop at target 60 FPS\r\n     * @returns {Object} The mascot instance for chaining\r\n     */\r\n    start() {\r\n        if (this.mascot.animationController.isAnimating()) {\r\n            return this.mascot;\r\n        }\r\n        \r\n        // Start the animation controller\r\n        const success = this.mascot.animationController.start();\r\n        \r\n        if (success) {\r\n            this.mascot.isRunning = true;\r\n            this.isRunning = true;\r\n            \r\n            // Spawn initial particles for classic mode\r\n            if (this.mascot.config.renderingStyle === 'classic' && this.mascot.particleSystem) {\r\n                const currentState = this.mascot.stateMachine.getCurrentState();\r\n                const emotion = currentState.emotion;\r\n                const undertone = currentState.undertone;\r\n                const emotionParams = getEmotionVisualParams(emotion);\r\n                \r\n                // Get the actual orb position from the renderer (includes gaze offset)\r\n                let orbX, orbY;\r\n                if (this.mascot.renderer && this.mascot.renderer.getCurrentOrbPosition) {\r\n                    const orbPos = this.mascot.renderer.getCurrentOrbPosition();\r\n                    orbX = orbPos.x;\r\n                    orbY = orbPos.y;\r\n                } else {\r\n                    // Fallback to center if method doesn't exist\r\n                    orbX = this.mascot.canvasManager.width / 2;\r\n                    orbY = this.mascot.canvasManager.height / 2;\r\n                }\r\n                \r\n                // Clear any existing particles first\r\n                this.mascot.particleSystem.clear();\r\n                \r\n                // Check if emotion has specific particle configuration\r\n                if (emotionParams.particleRate > 0) {\r\n                    // Spawn initial burst of particles\r\n                    const initialCount = Math.min(3, Math.floor(emotionParams.particleRate / 4));\r\n                    \r\n                    if (initialCount > 0) {\r\n                        this.mascot.particleSystem.burst(\r\n                            initialCount,\r\n                            emotionParams.particleBehavior,\r\n                            orbX,\r\n                            orbY\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n            \r\n            // Start degradation monitoring\r\n            if (this.mascot.degradationManager) {\r\n                this.mascot.degradationManager.startMonitoring();\r\n            }\r\n            \r\n            // Emit start event\r\n            this.mascot.emit('started');\r\n        }\r\n        \r\n        return this.mascot;\r\n    }\r\n\r\n    /**\r\n     * Stops the animation loop and cleans up resources\r\n     * @returns {Object} The mascot instance for chaining\r\n     */\r\n    stop() {\r\n        if (!this.mascot.animationController.isAnimating()) {\r\n            return this.mascot;\r\n        }\r\n        \r\n        // Stop speech reactivity if active\r\n        if (this.mascot.speaking) {\r\n            this.mascot.audioHandler.stopSpeaking();\r\n        }\r\n        \r\n        // Stop the animation controller\r\n        const success = this.mascot.animationController.stop();\r\n        \r\n        if (success) {\r\n            this.mascot.isRunning = false;\r\n            this.isRunning = false;\r\n            \r\n            // Stop degradation monitoring\r\n            if (this.mascot.degradationManager) {\r\n                this.mascot.degradationManager.stopMonitoring();\r\n            }\r\n            \r\n            // Emit stop event\r\n            this.mascot.emit('stopped');\r\n        }\r\n        \r\n        return this.mascot;\r\n    }\r\n\r\n    /**\r\n     * Updates audio level monitoring and other per-frame updates\r\n     * @param {number} deltaTime - Time since last frame in milliseconds\r\n     */\r\n    update(deltaTime) {\r\n        // Update audio level monitoring if speaking\r\n        if (this.mascot.speaking && this.mascot.audioLevelProcessor.isProcessingActive()) {\r\n            this.mascot.audioLevelProcessor.updateAudioLevel(deltaTime);\r\n        }\r\n        \r\n        // Update classic mode components\r\n        if (this.mascot.config.renderingStyle === 'classic') {\r\n            // Update gaze tracker\r\n            if (this.mascot.gazeTracker) {\r\n                this.mascot.gazeTracker.update(deltaTime);\r\n                \r\n                // Update threat level for suspicion emotion\r\n                const currentEmotion = this.mascot.stateMachine.getCurrentState().emotion;\r\n                if (currentEmotion === 'suspicion') {\r\n                    // Get mouse position and calculate distance to center\r\n                    const mousePos = this.mascot.gazeTracker.mousePos;\r\n                    const centerX = this.mascot.canvas.width / 2;\r\n                    const centerY = this.mascot.canvas.height / 2;\r\n                    const distance = Math.sqrt(\r\n                        Math.pow(mousePos.x - centerX, 2) + \r\n                        Math.pow(mousePos.y - centerY, 2)\r\n                    );\r\n                    \r\n                    // Get emotion configuration\r\n                    const suspicionEmotion = getEmotion('suspicion');\r\n                    if (suspicionEmotion && suspicionEmotion.visual) {\r\n                        const maxDistance = Math.min(centerX, centerY);\r\n                        const threatLevel = Math.max(0, Math.min(1, 1 - (distance / maxDistance)));\r\n                        suspicionEmotion.visual.threatLevel = threatLevel;\r\n                    }\r\n                }\r\n            }\r\n            \r\n            // Update idle behaviors\r\n            if (this.mascot.idleBehavior) {\r\n                this.mascot.idleBehavior.update(deltaTime);\r\n            }\r\n            \r\n            // Combine gaze and sway offsets\r\n            if (this.mascot.gazeTracker && this.mascot.idleBehavior) {\r\n                const gazeOffset = this.mascot.gazeTracker.getGazeOffset();\r\n                const swayOffset = this.mascot.idleBehavior.getSwayOffset();\r\n                \r\n                // Get full gaze state including proximity for eye narrowing\r\n                const gazeState = this.mascot.gazeTracker.getState();\r\n                \r\n                // Combine the offsets and include proximity data\r\n                const gazeData = {\r\n                    offset: {\r\n                        x: gazeOffset.x + swayOffset.x,\r\n                        y: gazeOffset.y + swayOffset.y\r\n                    },\r\n                    proximity: gazeState.proximity,\r\n                    isFocused: gazeState.isFocused\r\n                };\r\n                \r\n                // Pass to renderer\r\n                if (this.mascot.renderer.setGazeData) {\r\n                    this.mascot.renderer.setGazeData(gazeData);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Cleanup\r\n     */\r\n    destroy() {\r\n        this.stop();\r\n    }\r\n}","/**\n * ConfigurationManager - Manages settings and configuration\n * @module mascot/ConfigurationManager\n */\n\nexport class ConfigurationManager {\n    constructor(mascot, config = {}) {\n        this.mascot = mascot;\n        this.config = this.validateConfig(config);\n    }\n\n    /**\n     * Validate and set defaults for configuration\n     */\n    validateConfig(config) {\n        return {\n            canvasId: config.canvasId || 'emotive-canvas',\n            startingEmotion: config.startingEmotion || 'neutral',\n            emotionalResponsiveness: config.emotionalResponsiveness ?? 0.5,\n            particleIntensity: config.particleIntensity ?? 1.0,\n            glowIntensity: config.glowIntensity ?? 1.0,\n            audioEnabled: config.audioEnabled ?? false,\n            showFPS: config.showFPS ?? false,\n            debugMode: config.debugMode ?? false,\n            renderMode: config.renderMode || 'default',\n            maxParticles: config.maxParticles || 100,\n            ...config\n        };\n    }\n\n    /**\n     * Methods to be moved here:\n     * - getConfig()\n     * - updateConfig()\n     * - Configuration validation\n     */\n\n    /**\n     * Get current configuration\n     */\n    getConfig() {\n        return { ...this.config };\n    }\n\n    /**\n     * Update configuration\n     */\n    updateConfig(updates) {\n        this.config = { ...this.config, ...updates };\n        return this.config;\n    }\n}","/**\r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *  ╔═○─┐ emotive\r\n *    ●●  ENGINE\r\n *  └─○═╝                                                                             \r\n *                   ◐ ◑ ◒ ◓  EMOTIVE MASCOT  ◓ ◒ ◑ ◐                   \r\n *                                                                                    \r\n * ═══════════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * @fileoverview EmotiveMascot - Main API Class for the Emotive Engine\r\n * @author Emotive Engine Team\r\n * @version 2.1.0\r\n * @module EmotiveMascot\r\n * @changelog 2.1.0 - Added resize handling with visual resampling for consistent quality\r\n * \r\n * ╔═══════════════════════════════════════════════════════════════════════════════════\r\n * ║                                   PURPOSE                                         \r\n * ╠═══════════════════════════════════════════════════════════════════════════════════\r\n * ║ The MAIN ORCHESTRATOR of the Emotive Engine. This is the primary API class        \r\n * ║ that developers interact with. It coordinates all subsystems, manages the         \r\n * ║ lifecycle, and provides the fluent API for emotional expression.                  \r\n * ╚═══════════════════════════════════════════════════════════════════════════════════\r\n *\r\n * ┌───────────────────────────────────────────────────────────────────────────────────\r\n * │ 🎭 CORE FEATURES                                                                  \r\n * ├───────────────────────────────────────────────────────────────────────────────────\r\n * │ • Emotional state management with smooth transitions                              \r\n * │ • Gesture triggering and animation control                                        \r\n * │ • Particle system orchestration                                                   \r\n * │ • Dynamic visual resampling on resize                                             \r\n * │ • Plugin system for extensibility                                                 \r\n * │ • Event handling and listener management                                          \r\n * │ • Performance optimization and degradation                                        \r\n * │ • Accessibility features                                                          \r\n * │ • Mobile optimization                                                             \r\n * └───────────────────────────────────────────────────────────────────────────────────\r\n *\r\n * ════════════════════════════════════════════════════════════════════════════════════\r\n */\r\n\r\nimport CanvasManager from './core/CanvasManager.js';\r\nimport ErrorBoundary from './core/ErrorBoundary.js';\r\nimport EmotiveStateMachine from './core/EmotiveStateMachine.js';\r\nimport ParticleSystem from './core/ParticleSystem.js';\r\nimport EmotiveRenderer from './core/EmotiveRenderer.js';\r\nimport GazeTracker from './core/GazeTracker.js';\r\nimport IdleBehavior from './core/IdleBehavior.js';\r\nimport { getEmotionVisualParams, getEmotion } from './core/emotions/index.js';\r\nimport { getGesture } from './core/gestures/index.js';\r\nimport { SoundSystem } from './core/SoundSystem.js';\r\nimport AnimationController from './core/AnimationController.js';\r\nimport AudioLevelProcessor from './core/AudioLevelProcessor.js';\r\nimport { EventManager } from './core/EventManager.js';\r\nimport AccessibilityManager from './core/AccessibilityManager.js';\r\nimport MobileOptimization from './core/MobileOptimization.js';\r\nimport PluginSystem from './core/PluginSystem.js';\r\nimport { browserCompatibility, CanvasContextRecovery } from './utils/browserCompatibility.js';\r\nimport { emotiveDebugger, runtimeCapabilities } from './utils/debugger.js';\r\nimport rhythmIntegration from './core/rhythmIntegration.js';\r\nimport ShapeMorpher from './core/ShapeMorpher.js';\r\nimport { AudioAnalyzer } from './core/AudioAnalyzer.js';\r\nimport gestureCompatibility from './core/GestureCompatibility.js';\r\nimport GrooveTemplates from './core/GrooveTemplates.js';\r\n\r\n// Import modular handlers\r\nimport { AudioHandler } from './mascot/AudioHandler.js';\r\nimport { GestureController } from './mascot/GestureController.js';\r\nimport { StateCoordinator } from './mascot/StateCoordinator.js';\r\nimport { VisualizationRunner } from './mascot/VisualizationRunner.js';\r\nimport { ConfigurationManager } from './mascot/ConfigurationManager.js';\r\n\r\nclass EmotiveMascot {\r\n    constructor(config = {}) {\r\n        // Initialize error boundary first\r\n        this.errorBoundary = new ErrorBoundary();\r\n        \r\n        // Initialize EventManager with simple event emitter functionality\r\n        this.eventManager = new EventManager({\r\n            maxListeners: config.maxEventListeners || 100,\r\n            enableDebugging: config.enableEventDebugging || false,\r\n            enableMonitoring: config.enableEventMonitoring || true,\r\n            memoryWarningThreshold: config.eventMemoryWarningThreshold || 50\r\n        });\r\n\r\n        // Add simple event emitter methods if not present\r\n        if (!this.eventManager.emit) {\r\n            this.eventManager._listeners = {};\r\n            this.eventManager.emit = (event, data) => {\r\n                const listeners = this.eventManager._listeners[event];\r\n                if (listeners) {\r\n                    listeners.forEach(listener => listener(data));\r\n                }\r\n            };\r\n            this.eventManager.on = (event, listener) => {\r\n                if (!this.eventManager._listeners[event]) {\r\n                    this.eventManager._listeners[event] = [];\r\n                }\r\n                this.eventManager._listeners[event].push(listener);\r\n            };\r\n            this.eventManager.off = (event, listener) => {\r\n                const listeners = this.eventManager._listeners[event];\r\n                if (listeners) {\r\n                    const index = listeners.indexOf(listener);\r\n                    if (index > -1) {\r\n                        listeners.splice(index, 1);\r\n                    }\r\n                }\r\n            };\r\n        }\r\n        \r\n        // Wrap initialization in error boundary\r\n        this.errorBoundary.wrap(() => {\r\n            this.initialize(config);\r\n        }, 'initialization')();\r\n    }\r\n\r\n    /**\r\n     * Get default duration for a gesture\r\n     */\r\n    /**\r\n     * Initialize the mascot system\r\n     * @param {Object} config - Configuration options\r\n     */\r\n    initialize(config) {\r\n        // Get browser-specific optimizations\r\n        const browserOpts = browserCompatibility.browserOptimizations.getOptimizations();\r\n        const capabilities = browserCompatibility.capabilities;\r\n        \r\n        // Default configuration with browser-specific optimizations\r\n        const defaults = {\r\n            canvasId: 'emotive-mascot',\r\n            targetFPS: 60,\r\n            enableAudio: browserCompatibility.featureDetection.features.webAudio,\r\n            soundEnabled: false,  // Disable gesture sounds by default\r\n            masterVolume: 0.5,\r\n            maxParticles: browserOpts.particleLimit,\r\n            defaultEmotion: 'neutral',\r\n            enableAutoOptimization: true,\r\n            enableGracefulDegradation: true,\r\n            renderingStyle: 'classic',  // 'classic' (Emotive) or 'advanced' (3-layer)\r\n            enableGazeTracking: true,\r\n            enableIdleBehaviors: true,\r\n            classicConfig: {\r\n                coreColor: '#FFFFFF',\r\n                coreSizeDivisor: 12,      // Core radius = canvas_size / 12 (original Emotive)\r\n                glowMultiplier: 2.5,      // Glow radius = core * 2.5 (original Emotive)\r\n                defaultGlowColor: '#14B8A6'\r\n            },\r\n            topOffset: 0  // Vertical offset to shift mascot upward (in pixels)\r\n        };\r\n        \r\n        this.config = { ...defaults, ...config };\r\n        \r\n        // Get canvas element\r\n        this.canvas = typeof this.config.canvasId === 'string' \r\n            ? document.getElementById(this.config.canvasId)\r\n            : this.config.canvasId;\r\n            \r\n        if (!this.canvas) {\r\n            throw new Error(`Canvas with ID '${this.config.canvasId}' not found`);\r\n        }\r\n\r\n        // Initialize core systems with browser compatibility\r\n        this.canvasManager = new CanvasManager(this.canvas);\r\n        \r\n        // Set up canvas context recovery\r\n        this.contextRecovery = new CanvasContextRecovery(this.canvas);\r\n        this.contextRecovery.onRecovery((context) => {\r\n            // Canvas context recovered, reinitializing renderer\r\n            if (this.renderer) {\r\n                this.renderer.handleContextRecovery(context);\r\n            }\r\n        });\r\n        \r\n        // Apply browser-specific canvas optimizations\r\n        browserCompatibility.browserOptimizations.applyCanvasOptimizations(\r\n            this.canvas, \r\n            this.canvasManager.getContext()\r\n        );\r\n        \r\n        this.stateMachine = new EmotiveStateMachine(this.errorBoundary);\r\n        this.particleSystem = new ParticleSystem(this.config.maxParticles, this.errorBoundary);\r\n        \r\n        // Always use EmotiveRenderer, pass full config including topOffset\r\n        this.renderer = new EmotiveRenderer(this.canvasManager, {\r\n            ...this.config.classicConfig,\r\n            topOffset: this.config.topOffset || 0\r\n        });\r\n        \r\n        // Initialize shape morphing and audio analysis early\r\n        this.shapeMorpher = new ShapeMorpher();\r\n        this.audioAnalyzer = new AudioAnalyzer();\r\n\r\n        // Gesture compatibility system\r\n        this.gestureCompatibility = gestureCompatibility;\r\n\r\n        // Groove templates for musical rhythm patterns\r\n        this.grooveTemplates = new GrooveTemplates();\r\n        \r\n        // Pass audioAnalyzer to shapeMorpher for audio-reactive deformation\r\n        this.shapeMorpher.audioAnalyzer = this.audioAnalyzer;\r\n        \r\n        // Pass them to renderer\r\n        this.renderer.shapeMorpher = this.shapeMorpher;\r\n        this.renderer.audioAnalyzer = this.audioAnalyzer;\r\n        \r\n        // Connect renderer and state machine for undertone modifiers\r\n        this.renderer.stateMachine = this.stateMachine;\r\n        this.stateMachine.renderer = this.renderer;\r\n        \r\n        // Initialize gaze tracking\r\n        if (this.config.enableGazeTracking) {\r\n            this.gazeTracker = new GazeTracker(this.canvas, {\r\n                smoothing: 0.1,\r\n                maxOffset: 0.15,\r\n                enabled: true\r\n            });\r\n            \r\n            // Reset idle timer on interaction and wake if sleeping\r\n            this.gazeTracker.setInteractionCallback(() => {\r\n                if (this.sleeping) {\r\n                    // Wake with full animation sequence\r\n                    this.wake();\r\n                } else if (this.idleBehavior) {\r\n                    // Just reset idle timer if not sleeping\r\n                    this.idleBehavior.resetIdleTimer();\r\n                }\r\n            });\r\n        }\r\n        \r\n        // Initialize idle behaviors\r\n        if (this.config.enableIdleBehaviors) {\r\n            this.idleBehavior = new IdleBehavior({\r\n                enabled: true,\r\n                sleepTimeout: Infinity  // Disable automatic sleep\r\n            });\r\n            \r\n            // Connect idle behavior callbacks to renderer\r\n            this.idleBehavior.setCallback('onBlink', (data) => {\r\n                if (this.renderer && this.renderer.state) {\r\n                    this.renderer.state.blinking = data.phase === 'start';\r\n                }\r\n            });\r\n            \r\n            this.idleBehavior.setCallback('onSleep', () => {\r\n                if (this.renderer && this.renderer.enterSleepMode) {\r\n                    this.renderer.enterSleepMode();\r\n                }\r\n            });\r\n            \r\n            this.idleBehavior.setCallback('onWake', () => {\r\n                if (this.renderer && this.renderer.wakeUp) {\r\n                    this.renderer.wakeUp();\r\n                }\r\n            });\r\n        }\r\n        \r\n        this.soundSystem = new SoundSystem();\r\n        \r\n        // DegradationManager removed - no performance interference\r\n        this.degradationManager = null;\r\n        \r\n        // Initialize accessibility manager\r\n        this.accessibilityManager = new AccessibilityManager({\r\n            enableReducedMotion: this.config.enableReducedMotion !== false,\r\n            enableHighContrast: this.config.enableHighContrast !== false,\r\n            enableScreenReaderSupport: this.config.enableScreenReaderSupport !== false,\r\n            enableKeyboardNavigation: this.config.enableKeyboardNavigation !== false,\r\n            colorBlindMode: this.config.colorBlindMode || 'none'\r\n        });\r\n        \r\n        // Initialize mobile optimization\r\n        this.mobileOptimization = new MobileOptimization({\r\n            enableTouchOptimization: this.config.enableTouchOptimization !== false,\r\n            enableViewportHandling: this.config.enableViewportHandling !== false,\r\n            enableBatteryOptimization: this.config.enableBatteryOptimization !== false\r\n        });\r\n        \r\n        // Set canvas for mobile optimization\r\n        this.mobileOptimization.setCanvas(this.canvas);\r\n        \r\n        // Initialize plugin system\r\n        this.pluginSystem = new PluginSystem({\r\n            enablePlugins: this.config.enablePlugins !== false,\r\n            validatePlugins: this.config.validatePlugins !== false,\r\n            sandboxPlugins: this.config.sandboxPlugins !== false\r\n        });\r\n        \r\n        // Initialize audio level processor for speech reactivity\r\n        this.audioLevelProcessor = new AudioLevelProcessor({\r\n            spikeThreshold: this.config.spikeThreshold || 1.5,\r\n            minimumSpikeLevel: this.config.minimumSpikeLevel || 0.1,\r\n            spikeMinInterval: this.config.spikeMinInterval || 1000\r\n        });\r\n        \r\n        // Initialize animation controller\r\n        try {\r\n            this.animationController = new AnimationController(this.errorBoundary, {\r\n                targetFPS: this.config.targetFPS\r\n            });\r\n        } catch (error) {\r\n            // Failed to initialize AnimationController\r\n            // Fallback: create a minimal animation controller interface\r\n            this.animationController = {\r\n                isAnimating: () => this.isRunning,\r\n                start: () => { this.isRunning = true; return true; },\r\n                stop: () => { this.isRunning = false; return true; },\r\n                setTargetFPS: () => {},\r\n                targetFPS: this.config.targetFPS,\r\n                getPerformanceMetrics: () => ({ fps: 0, isRunning: this.isRunning, performanceDegradation: false, deltaTime: 16, frameCount: 0, targetFPS: this.config.targetFPS }),\r\n                setSubsystems: () => {},\r\n                setEventCallback: () => {},\r\n                setParentMascot: () => {},\r\n                destroy: () => {},\r\n                deltaTime: 16\r\n            };\r\n        }\r\n        \r\n        // Configure animation controller with subsystems\r\n        this.animationController.setSubsystems({\r\n            stateMachine: this.stateMachine,\r\n            particleSystem: this.particleSystem,\r\n            renderer: this.renderer,\r\n            soundSystem: this.soundSystem,\r\n            canvasManager: this.canvasManager\r\n        });\r\n        \r\n        // Set up event forwarding from animation controller\r\n        this.animationController.setEventCallback((event, data) => {\r\n            this.emit(event, data);\r\n        });\r\n        \r\n        // Set parent mascot reference for audio level updates\r\n        this.animationController.setParentMascot(this);\r\n        \r\n        // Runtime state\r\n        this.isRunning = false;\r\n        \r\n        // Initialize sound system if enabled\r\n        if (this.config.enableAudio) {\r\n            this.soundSystem.initialize().then(success => {\r\n                if (success) {\r\n                    this.soundSystem.setMasterVolume(this.config.masterVolume);\r\n                    // Sound system initialized successfully\r\n                } else {\r\n                    // Sound system initialization failed, continuing without audio\r\n                }\r\n            });\r\n        }\r\n        \r\n        // Speech reactivity state\r\n        this.speaking = false;\r\n        \r\n        // Track warning frequency to reduce spam\r\n        this.warningTimestamps = {};\r\n        \r\n        // Initialize rhythm integration\r\n        this.rhythmEnabled = false;\r\n        rhythmIntegration.initialize();\r\n\r\n        // Expose rhythmIntegration globally for UI controls\r\n        // Store rhythm integration internally instead of global\r\n        this.rhythmIntegration = rhythmIntegration;\r\n        this.warningThrottle = 5000; // Only show same warning every 5 seconds\r\n        \r\n        // Recording state (listening/capturing)\r\n        this.recording = false;\r\n        \r\n        // Sleeping state\r\n        this.sleeping = false;\r\n        \r\n        // TTS (Text-to-Speech) state\r\n        this.tts = {\r\n            available: typeof window !== 'undefined' && 'speechSynthesis' in window,\r\n            speaking: false,\r\n            currentUtterance: null\r\n        };\r\n        \r\n        // Initialize modular handlers\r\n        this.audioHandler = new AudioHandler(this);\r\n        this.gestureController = new GestureController(this);\r\n        this.stateCoordinator = new StateCoordinator(this);\r\n        this.visualizationRunner = new VisualizationRunner(this);\r\n        this.configurationManager = new ConfigurationManager(this, config);\r\n        \r\n        // Initialize the handlers\r\n        this.audioHandler.init();\r\n        this.gestureController.init();\r\n        this.stateCoordinator.init();\r\n        this.visualizationRunner.init();\r\n        \r\n        // EventManager already initialized in constructor\r\n        \r\n        // Initialize debugging if enabled\r\n        this.debugMode = this.config.enableDebug || false;\r\n        if (this.debugMode) {\r\n            emotiveDebugger.log('INFO', 'Debug mode enabled for EmotiveMascot', {\r\n                config: this.config,\r\n                runtimeCapabilities: runtimeCapabilities.generateReport()\r\n            });\r\n            \r\n            // Start profiling initialization\r\n            emotiveDebugger.startProfile('mascot-initialization', {\r\n                canvasId: this.config.canvasId,\r\n                maxParticles: this.config.maxParticles\r\n            });\r\n        }\r\n        \r\n        // Set up audio level processor callbacks\r\n        this.setupAudioLevelProcessorCallbacks();\r\n        \r\n        // Set initial emotional state\r\n        this.stateMachine.setEmotion(this.config.defaultEmotion);\r\n        \r\n        // Register for canvas resize events to trigger visual resampling\r\n        this.canvasManager.onResize((width, height, dpr) => {\r\n            this.handleResize(width, height, dpr);\r\n        });\r\n        \r\n        // Log browser compatibility information\r\n        // EmotiveMascot initialized successfully\r\n        \r\n        // Complete initialization profiling\r\n        if (this.debugMode) {\r\n            emotiveDebugger.endProfile('mascot-initialization');\r\n            emotiveDebugger.takeMemorySnapshot('post-initialization');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Handle degradation manager events\r\n     * @param {string} event - Event type\r\n     * @param {Object} data - Event data\r\n     */\r\n    handleDegradationEvent(event, data) {\r\n        switch (event) {\r\n            case 'degradationApplied':\r\n                // Silently handle performance degradation\r\n                this.applyDegradationSettings(data.settings);\r\n                this.emit('performanceDegradation', data);\r\n                break;\r\n                \r\n            case 'recoveryApplied':\r\n                // Silently handle performance recovery\r\n                this.applyDegradationSettings(data.settings);\r\n                this.emit('performanceRecovery', data);\r\n                break;\r\n                \r\n            case 'levelChanged':\r\n                // Silently handle degradation level change\r\n                this.applyDegradationSettings(data.settings);\r\n                this.emit('degradationLevelChanged', data);\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Apply degradation settings to all systems\r\n     * @param {Object} settings - Degradation settings\r\n     */\r\n    applyDegradationSettings(settings) {\r\n        // Update particle system limits\r\n        if (this.particleSystem && settings.particleLimit !== undefined) {\r\n            this.particleSystem.setMaxParticles(settings.particleLimit);\r\n        }\r\n        \r\n        // Update audio system\r\n        if (this.soundSystem && settings.audioEnabled !== undefined) {\r\n            if (!settings.audioEnabled && this.soundSystem.isAvailable()) {\r\n                this.soundSystem.stopAmbientTone(200);\r\n            }\r\n        }\r\n        \r\n        // DISABLED - Don't change FPS based on degradation\r\n        /*\r\n        // Update animation controller target FPS\r\n        if (this.animationController && settings.targetFPS !== undefined) {\r\n            this.animationController.setTargetFPS(settings.targetFPS);\r\n        }\r\n        */\r\n        \r\n        // Update renderer quality\r\n        if (this.renderer && settings.qualityLevel !== undefined) {\r\n            this.renderer.setQualityLevel(settings.qualityLevel);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Set up callbacks for the audio level processor\r\n     */\r\n    setupAudioLevelProcessorCallbacks() {\r\n        // Handle audio level updates\r\n        this.audioLevelProcessor.onLevelUpdate((data) => {\r\n            // Update renderer with current audio level\r\n            this.renderer.updateAudioLevel(data.level);\r\n            \r\n            // Emit audio level update event\r\n            this.emit('audioLevelUpdate', {\r\n                level: data.level,\r\n                rawData: Array.from(data.rawData),\r\n                timestamp: data.timestamp\r\n            });\r\n        });\r\n        \r\n        // Handle volume spikes for gesture triggering\r\n        this.audioLevelProcessor.onVolumeSpike((spikeData) => {\r\n            // Trigger pulse gesture if not already active\r\n            // Check if any particle has an active gesture\r\n            const hasActiveGesture = this.particleSystem.particles.some(p => p.gestureProgress < 1);\r\n            if (!hasActiveGesture) {\r\n                const emotionalContext = {\r\n                    emotion: this.stateMachine.getCurrentState().emotion,\r\n                    properties: this.stateMachine.getCurrentEmotionalProperties()\r\n                };\r\n                \r\n                // Execute pulse gesture through express method\r\n                this.express('pulse');\r\n                const success = true;\r\n                \r\n                if (success) {\r\n                    // Emit volume spike event with gesture trigger info\r\n                    this.emit('volumeSpike', {\r\n                        ...spikeData,\r\n                        gestureTriggered: true\r\n                    });\r\n                    \r\n                    // Volume spike detected - triggered pulse gesture\r\n                } else {\r\n                    // Emit volume spike event without gesture trigger\r\n                    this.emit('volumeSpike', {\r\n                        ...spikeData,\r\n                        gestureTriggered: false\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        \r\n        // Handle audio processing errors\r\n        this.audioLevelProcessor.onError((errorData) => {\r\n            // AudioLevelProcessor error\r\n            this.emit('audioProcessingError', errorData);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Sets the emotional state with optional undertone\r\n     * @param {string} emotion - The emotion to set\r\n     * @param {Object|string|null} options - Options object or undertone string\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    setEmotion(emotion, options = null) {\r\n        return this.errorBoundary.wrap(() => {\r\n            return this.stateCoordinator.setEmotion(emotion, options);\r\n        }, 'emotion-setting', this)();\r\n    }\r\n    \r\n    /**\r\n     * Update the undertone without resetting emotion\r\n     * @param {string|null} undertone - The undertone to apply (subdued, tired, nervous, energetic, confident, intense, or null)\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    updateUndertone(undertone) {\r\n        return this.errorBoundary.wrap(() => {\r\n            // Update state machine's undertone\r\n            this.stateMachine.applyUndertoneModifier(undertone);\r\n            // Update renderer's undertone without resetting emotion\r\n            if (this.renderer && this.renderer.updateUndertone) {\r\n                this.renderer.updateUndertone(undertone);\r\n            }\r\n            return this;\r\n        }, 'undertone-update', this)();\r\n    }\r\n    \r\n    /**\r\n     * Set BPM for core rotation (record player effect)\r\n     * @param {number} bpm - Beats per minute\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    setBPM(bpm) {\r\n        return this.errorBoundary.wrap(() => {\r\n            if (this.renderer && this.renderer.setBPM) {\r\n                this.renderer.setBPM(bpm);\r\n            }\r\n            return this;\r\n        }, 'bpm-update', this)();\r\n    }\r\n\r\n    /**\r\n     * Set manual rotation speed for the shape\r\n     * @param {number} speed - Rotation speed (-1 to 1, negative for reverse)\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    setRotationSpeed(speed) {\r\n        return this.errorBoundary.wrap(() => {\r\n            if (this.renderer && this.renderer.setRotationSpeed) {\r\n                this.renderer.setRotationSpeed(speed);\r\n            }\r\n            return this;\r\n        }, 'rotation-speed-update', this)();\r\n    }\r\n\r\n    /**\r\n     * Set manual rotation angle directly (for scratching)\r\n     * @param {number} angle - Rotation angle in radians\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    setRotationAngle(angle) {\r\n        return this.errorBoundary.wrap(() => {\r\n            if (this.renderer && this.renderer.setRotationAngle) {\r\n                this.renderer.setRotationAngle(angle);\r\n            }\r\n            return this;\r\n        }, 'rotation-angle-update', this)();\r\n    }\r\n\r\n    /**\r\n     * Enable or disable gaze tracking\r\n     * @param {boolean} enabled - Whether to enable gaze tracking\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    setGazeTracking(enabled) {\r\n        return this.errorBoundary.wrap(() => {\r\n            if (this.renderer && this.renderer.setGazeTracking) {\r\n                this.renderer.setGazeTracking(enabled);\r\n            }\r\n            return this;\r\n        }, 'gaze-tracking-update', this)();\r\n    }\r\n\r\n    /**\r\n     * Executes a single gesture or chord (multiple simultaneous gestures)\r\n     * @param {string|Array<string>|Object} gesture - Single gesture, array of gestures, or chord object\r\n     * @param {Object} options - Options for the gesture execution\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    express(gesture, options = {}) {\r\n        return this.errorBoundary.wrap(() => {\r\n            // Performance marker: Gesture start\r\n            const gestureStartTime = performance.now();\r\n            const gestureName = Array.isArray(gesture) ? 'chord' :\r\n                               (typeof gesture === 'object' && gesture.type === 'chord') ? 'chord' :\r\n                               gesture;\r\n\r\n            if (this.performanceMonitor) {\r\n                this.performanceMonitor.markGestureStart(gestureName);\r\n            }\r\n\r\n            if (!gesture) {\r\n                // No gesture provided to express()\r\n                if (this.performanceMonitor) {\r\n                    this.performanceMonitor.markGestureEnd(gestureName);\r\n                }\r\n                return this;\r\n            }\r\n\r\n            // Handle chord (multiple simultaneous gestures)\r\n            if (Array.isArray(gesture)) {\r\n                return this.expressChord(gesture, options);\r\n            }\r\n\r\n            // Handle chord object\r\n            if (typeof gesture === 'object' && gesture.type === 'chord') {\r\n                return this.expressChord(gesture.gestures, options);\r\n            }\r\n\r\n            // Express called with single gesture\r\n            // In rhythm game mode, gestures will be triggered directly by gameplay\r\n            // No queuing needed - immediate response to player actions\r\n\r\n            // Direct mapping to renderer methods for all gestures\r\n            const rendererMethods = {\r\n                'bounce': 'startBounce',\r\n                'pulse': 'startPulse',\r\n                'shake': 'startShake',\r\n                'spin': 'startSpin',\r\n                'nod': 'startNod',\r\n                'tilt': 'startTilt',\r\n                'expand': 'startExpand',\r\n                'contract': 'startContract',\r\n                'flash': 'startFlash',\r\n                'drift': 'startDrift',\r\n                'stretch': 'startStretch',\r\n                'glow': 'startGlow',\r\n                'sparkle': 'startSparkle',\r\n                'shimmer': 'startShimmer',\r\n                'wiggle': 'startWiggle',\r\n                'groove': 'startGroove',\r\n                'point': 'startPoint',\r\n                'lean': 'startLean',\r\n                'reach': 'startReach',\r\n                'headBob': 'startHeadBob',\r\n                'orbit': 'startOrbit',\r\n                'flicker': 'startFlicker',\r\n                'vibrate': 'startVibrate',\r\n                'wave': 'startWave',\r\n                'breathe': 'startBreathe',\r\n                'morph': 'startMorph',\r\n                'slowBlink': 'startSlowBlink',\r\n                'look': 'startLook',\r\n                'settle': 'startSettle',\r\n                'orbit': 'startOrbital',\r\n                'orbital': 'startOrbital',  // Alias for backwards compatibility\r\n                'hula': 'startHula',\r\n                'sway': 'startSway',\r\n                'breathIn': 'startBreathIn',\r\n                'breathOut': 'startBreathOut',\r\n                'breathHold': 'startBreathHold',\r\n                'breathHoldEmpty': 'startBreathHoldEmpty',\r\n                'jump': 'startJump',\r\n                'rain': 'startRain',\r\n                'runningman': 'startRunningMan',\r\n                'charleston': 'startCharleston',\r\n                // Ambient dance gestures\r\n                'grooveSway': 'startGrooveSway',\r\n                'grooveBob': 'startGrooveBob',\r\n                'grooveFlow': 'startGrooveFlow',\r\n                'groovePulse': 'startGroovePulse',\r\n                'grooveStep': 'startGrooveStep'\r\n                // Note: burst, peek, hold, scan, twitch, jitter, float\r\n                // are handled by the gesture system below\r\n            };\r\n            \r\n            // Check if this gesture has a direct renderer method\r\n            const methodName = rendererMethods[gesture];\r\n            if (methodName && this.renderer && this.renderer[methodName]) {\r\n                // Call the renderer method directly\r\n                this.renderer[methodName](options);\r\n\r\n                // Play gesture sound effect if available and enabled\r\n                if (this.config.soundEnabled && this.soundSystem.isAvailable()) {\r\n                    this.soundSystem.playGestureSound(gesture);\r\n                }\r\n\r\n                // Performance marker: Gesture end\r\n                if (this.performanceMonitor) {\r\n                    const gestureEndTime = performance.now();\r\n                    this.performanceMonitor.markGestureEnd(gestureName);\r\n                    this.performanceMonitor.recordGestureTime(gestureName, gestureEndTime - gestureStartTime);\r\n                }\r\n\r\n                return this;\r\n            }\r\n            \r\n            // Try to execute gesture through the particle system\r\n            // This handles modular gestures from the gesture registry\r\n            // Check if gesture exists in the gesture registry\r\n            const gestureConfig = getGesture(gesture);\r\n            \r\n            if (gestureConfig) {\r\n                // Register gesture's rhythm configuration\r\n                rhythmIntegration.registerConfig('gesture', gesture, gestureConfig);\r\n                \r\n                // Store the current gesture info for the particle system to use\r\n                this.currentModularGesture = {\r\n                    type: gesture,\r\n                    config: gestureConfig,\r\n                    startTime: performance.now(),\r\n                    duration: gestureConfig.defaultParams?.duration || 1000,\r\n                    progress: 0\r\n                };\r\n                \r\n                // Executed gesture through particle system\r\n                \r\n                // Play gesture sound effect if available and enabled\r\n                if (this.config.soundEnabled && this.soundSystem.isAvailable()) {\r\n                    this.soundSystem.playGestureSound(gesture);\r\n                }\r\n\r\n                // Performance marker: Gesture end\r\n                if (this.performanceMonitor) {\r\n                    const gestureEndTime = performance.now();\r\n                    this.performanceMonitor.markGestureEnd(gestureName);\r\n                    this.performanceMonitor.recordGestureTime(gestureName, gestureEndTime - gestureStartTime);\r\n                }\r\n\r\n                return this;\r\n            }\r\n            \r\n            // Unknown gesture - throttled warning\r\n            this.throttledWarn(`Unknown gesture: ${gesture}`, `gesture_${gesture}`);\r\n\r\n            // Performance marker: Gesture end (failed)\r\n            if (this.performanceMonitor) {\r\n                this.performanceMonitor.markGestureEnd(gestureName);\r\n            }\r\n\r\n            return this;\r\n        }, 'gesture-expression', this)();\r\n    }\r\n\r\n    /**\r\n     * Express multiple gestures simultaneously (chord)\r\n     * @param {Array<string>} gestures - Array of gesture names to execute together\r\n     * @param {Object} options - Options for the chord execution\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    expressChord(gestures, options = {}) {\r\n        return this.errorBoundary.wrap(() => {\r\n            if (!gestures || !Array.isArray(gestures) || gestures.length === 0) {\r\n                return this;\r\n            }\r\n\r\n            // Import gesture compatibility if not loaded\r\n            if (!this.gestureCompatibility) {\r\n                // Try to load it dynamically\r\n                import('./core/GestureCompatibility.js').then(module => {\r\n                    this.gestureCompatibility = module.default;\r\n                }).catch(err => {\r\n                    console.warn('GestureCompatibility not available:', err);\r\n                });\r\n            }\r\n\r\n            // Use compatibility system if available\r\n            const compatibleGestures = this.gestureCompatibility ?\r\n                this.gestureCompatibility.getCompatibleGestures(gestures) :\r\n                gestures;\r\n\r\n            console.log('Executing gesture chord:', compatibleGestures);\r\n\r\n            // Execute all compatible gestures simultaneously\r\n            compatibleGestures.forEach(gestureName => {\r\n                const normalizedGesture = typeof gestureName === 'string' ?\r\n                    gestureName : gestureName.gestureName;\r\n\r\n                // Execute directly to ensure simultaneity\r\n                this.executeGestureDirectly(normalizedGesture, options);\r\n            });\r\n\r\n            // Check for enhancing combination\r\n            if (this.gestureCompatibility?.isEnhancingCombination?.(compatibleGestures)) {\r\n                // Add extra visual flair\r\n                this.renderer?.specialEffects?.addSparkle?.();\r\n            }\r\n\r\n            return this;\r\n        }, 'gesture-chord', this)();\r\n    }\r\n\r\n    /**\r\n     * Execute a gesture directly on the renderer (bypasses routing)\r\n     * @private\r\n     */\r\n    executeGestureDirectly(gesture, options = {}) {\r\n        // Direct mapping to renderer methods\r\n        const rendererMethods = {\r\n            'bounce': 'startBounce',\r\n            'pulse': 'startPulse',\r\n            'shake': 'startShake',\r\n            'spin': 'startSpin',\r\n            'nod': 'startNod',\r\n            'tilt': 'startTilt',\r\n            'flash': 'startFlash',\r\n            'glow': 'startGlow',\r\n            'sparkle': 'startSparkle',\r\n            'shimmer': 'startShimmer',\r\n            'wiggle': 'startWiggle',\r\n            'groove': 'startGroove',\r\n            'point': 'startPoint',\r\n            'lean': 'startLean',\r\n            'reach': 'startReach',\r\n            'headBob': 'startHeadBob',\r\n            'orbit': 'startOrbit',\r\n            'sway': 'startSway',\r\n            'jump': 'startJump',\r\n            'wave': 'startWave',\r\n            'flicker': 'startFlicker',\r\n            'breathe': 'startBreathe',\r\n            'float': 'startFloat',\r\n            'rain': 'startRain',\r\n            'hula': 'startHula',\r\n            'twist': 'startTwist'\r\n        };\r\n\r\n        const methodName = rendererMethods[gesture];\r\n        if (methodName && this.renderer && typeof this.renderer[methodName] === 'function') {\r\n            this.renderer[methodName](options);\r\n        }\r\n\r\n        // Emit event\r\n        this.emit('gesture', { name: gesture, options });\r\n    }\r\n\r\n    /**\r\n     * Chains multiple gestures for sequential execution\r\n     * @param {...string} gestures - Gestures to chain\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    chain(...gestures) {\r\n        // Parse the chain using GestureCompatibility if available\r\n        if (this.gestureCompatibility) {\r\n            const steps = this.gestureCompatibility.parseChain(gestures.join('>'));\r\n            // Execute first step (which might be a chord)\r\n            if (steps.length > 0) {\r\n                const firstStep = steps[0];\r\n                if (firstStep.length > 1) {\r\n                    this.expressChord(firstStep);\r\n                } else {\r\n                    this.express(firstStep[0]);\r\n                }\r\n            }\r\n        } else {\r\n            // Fallback: execute first gesture\r\n            if (gestures.length > 0) {\r\n                this.express(gestures[0]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Starts speech reactivity mode with audio level monitoring\r\n     * @param {AudioContext} audioContext - Web Audio API context\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    startSpeaking(audioContext) {\r\n        return this.errorBoundary.wrap(() => {\r\n            if (!audioContext) {\r\n                throw new Error('AudioContext is required for speech reactivity');\r\n            }\r\n            \r\n            if (!this.config.enableAudio) {\r\n                // Audio is disabled, cannot start speech reactivity\r\n                return this;\r\n            }\r\n            \r\n            if (this.speaking) {\r\n                // Speech reactivity is already active\r\n                return this;\r\n            }\r\n            \r\n            // Initialize audio level processor\r\n            const success = this.audioLevelProcessor.initialize(audioContext);\r\n            \r\n            if (!success) {\r\n                // Failed to initialize audio level processor\r\n                return this;\r\n            }\r\n            \r\n            // Update speech state\r\n            this.speaking = true;\r\n            \r\n            // Notify renderer about speech start\r\n            this.renderer.onSpeechStart(audioContext);\r\n            \r\n            // Emit speech start event with analyser for external connection\r\n            this.emit('speechStarted', { \r\n                audioContext, \r\n                analyser: this.audioLevelProcessor.getAnalyser(),\r\n                mascot: this\r\n            });\r\n            \r\n            // Speech reactivity started - connect audio source to analyser\r\n            return this;\r\n        }, 'speech-start', this)();\r\n    }\r\n\r\n    /**\r\n     * Stops speech reactivity mode and returns to base emotional state\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    stopSpeaking() {\r\n        return this.errorBoundary.wrap(() => {\r\n            return this.audioHandler.stopSpeaking();\r\n        }, 'speech-stop', this)();\r\n    }\r\n\r\n    /**\r\n     * Speaks text using the Web Speech API with visual feedback\r\n     * @param {string} text - Text to speak\r\n     * @param {Object} options - Speech options (rate, pitch, volume, voice)\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    speak(text, options = {}) {\r\n        return this.errorBoundary.wrap(() => {\r\n            if (!this.tts.available) {\r\n                // Text-to-Speech is not available in this browser\r\n                return this;\r\n            }\r\n            \r\n            if (!text || typeof text !== 'string') {\r\n                // Invalid text provided to speak()\r\n                return this;\r\n            }\r\n            \r\n            // Cancel any ongoing speech\r\n            if (this.tts.speaking) {\r\n                window.speechSynthesis.cancel();\r\n            }\r\n            \r\n            // Create utterance\r\n            const utterance = new SpeechSynthesisUtterance(text);\r\n            \r\n            // Apply options\r\n            utterance.rate = options.rate || 1.0;\r\n            utterance.pitch = options.pitch || 1.0;\r\n            utterance.volume = options.volume || 1.0;\r\n            \r\n            // Select voice if specified\r\n            if (options.voice) {\r\n                const voices = window.speechSynthesis.getVoices();\r\n                const selectedVoice = voices.find(v => v.name === options.voice);\r\n                if (selectedVoice) {\r\n                    utterance.voice = selectedVoice;\r\n                }\r\n            }\r\n            \r\n            // Store current utterance\r\n            this.tts.currentUtterance = utterance;\r\n            \r\n            // Handle speech events\r\n            utterance.onstart = () => {\r\n                this.tts.speaking = true;\r\n                \r\n                // Trigger speaking gesture\r\n                this.express('pulse');\r\n                \r\n                // Emit TTS start event\r\n                this.emit('ttsStarted', { text, options });\r\n                \r\n                // TTS started\r\n            };\r\n            \r\n            utterance.onend = () => {\r\n                this.tts.speaking = false;\r\n                this.tts.currentUtterance = null;\r\n                \r\n                // Return to neutral\r\n                this.express('nod');\r\n                \r\n                // Emit TTS end event\r\n                this.emit('ttsEnded', { text });\r\n                \r\n                // TTS ended\r\n            };\r\n            \r\n            utterance.onerror = (error) => {\r\n                this.tts.speaking = false;\r\n                this.tts.currentUtterance = null;\r\n                \r\n                // TTS error\r\n                this.emit('ttsError', { error, text });\r\n            };\r\n            \r\n            // Add word boundary events for more dynamic animation\r\n            utterance.onboundary = (event) => {\r\n                if (event.name === 'word') {\r\n                    // Subtle pulse on each word\r\n                    if (Math.random() < 0.3) { // 30% chance per word\r\n                        // Trigger micro pulse gesture\r\n                        this.express('pulse');\r\n                    }\r\n                }\r\n            };\r\n            \r\n            // Start speaking\r\n            window.speechSynthesis.speak(utterance);\r\n            \r\n            return this;\r\n        }, 'tts-speak', this)();\r\n    }\r\n    \r\n    /**\r\n     * Stops any ongoing text-to-speech\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    stopTTS() {\r\n        return this.errorBoundary.wrap(() => {\r\n            if (!this.tts.available) {\r\n                return this;\r\n            }\r\n            \r\n            if (this.tts.speaking) {\r\n                window.speechSynthesis.cancel();\r\n                this.tts.speaking = false;\r\n                this.tts.currentUtterance = null;\r\n                \r\n                // Return to neutral\r\n                this.express('nod');\r\n                \r\n                // Emit TTS stopped event\r\n                this.emit('ttsStopped');\r\n                \r\n                // TTS stopped by user\r\n            }\r\n            \r\n            return this;\r\n        }, 'tts-stop', this)();\r\n    }\r\n    \r\n    /**\r\n     * Start recording state (listening/capturing mode)\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    startRecording() {\r\n        return this.errorBoundary.wrap(() => {\r\n            if (this.recording) {\r\n                // Already recording\r\n                return this;\r\n            }\r\n            \r\n            this.recording = true;\r\n            \r\n            // Update renderer if using Emotive style\r\n            if (this.renderer && this.renderer.startRecording) {\r\n                this.renderer.startRecording();\r\n            }\r\n            \r\n            // Emit recording started event\r\n            this.emit('recordingStarted');\r\n            \r\n            // Recording started\r\n            return this;\r\n        }, 'recording-start', this)();\r\n    }\r\n    \r\n    /**\r\n     * Stop recording state\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    stopRecording() {\r\n        return this.errorBoundary.wrap(() => {\r\n            if (!this.recording) {\r\n                // Not currently recording\r\n                return this;\r\n            }\r\n            \r\n            this.recording = false;\r\n            \r\n            // Update renderer if using Emotive style\r\n            if (this.renderer && this.renderer.stopRecording) {\r\n                this.renderer.stopRecording();\r\n            }\r\n            \r\n            // Emit recording stopped event\r\n            this.emit('recordingStopped');\r\n            \r\n            // Recording stopped\r\n            return this;\r\n        }, 'recording-stop', this)();\r\n    }\r\n    \r\n    /**\r\n     * Enter sleep state with animation sequence\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    sleep() {\r\n        return this.errorBoundary.wrap(async () => {\r\n            if (this.sleeping) {\r\n                // Already sleeping\r\n                return this;\r\n            }\r\n            \r\n            // Sleep entry animation sequence\r\n            // Starting sleep sequence...\r\n            \r\n            // First: Yawn\r\n            this.express('yawn');\r\n            await new Promise(resolve => setTimeout(resolve, 1000));\r\n            \r\n            // Second: Drowsy sway\r\n            this.express('sway');\r\n            await new Promise(resolve => setTimeout(resolve, 1000));\r\n            \r\n            // Now enter sleep state\r\n            this.sleeping = true;\r\n            \r\n            // Update renderer if using Emotive style (handles eye closing)\r\n            if (this.renderer && this.renderer.enterSleepMode) {\r\n                this.renderer.enterSleepMode();\r\n            }\r\n            \r\n            // Update idle behavior if available\r\n            if (this.idleBehavior && this.idleBehavior.enterSleep) {\r\n                this.idleBehavior.enterSleep();\r\n            }\r\n            \r\n            // Emit sleep event\r\n            this.emit('sleep');\r\n            \r\n            // Mascot entered sleep state\r\n            return this;\r\n        }, 'sleep', this)();\r\n    }\r\n    \r\n    /**\r\n     * Wake up from sleep state with animation sequence\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    wake() {\r\n        return this.errorBoundary.wrap(async () => {\r\n            if (!this.sleeping) {\r\n                // Not currently sleeping\r\n                return this;\r\n            }\r\n            \r\n            // Exit sleep state first\r\n            this.sleeping = false;\r\n            \r\n            // Update renderer if using Emotive style (handles eye opening)\r\n            if (this.renderer && this.renderer.wakeUp) {\r\n                this.renderer.wakeUp();\r\n            }\r\n            \r\n            // Update idle behavior if available\r\n            if (this.idleBehavior && this.idleBehavior.wakeUp) {\r\n                this.idleBehavior.wakeUp();\r\n            }\r\n            \r\n            // Wake animation sequence\r\n            // Starting wake sequence...\r\n            \r\n            // First: Stretch\r\n            this.express('stretch');\r\n            await new Promise(resolve => setTimeout(resolve, 1000));\r\n            \r\n            // Second: Slow blink\r\n            this.express('slowBlink');\r\n            await new Promise(resolve => setTimeout(resolve, 1000));\r\n            \r\n            // Third: Small shake to fully wake\r\n            this.express('shake');\r\n            await new Promise(resolve => setTimeout(resolve, 500));\r\n            \r\n            // Emit wake event\r\n            this.emit('wake');\r\n            \r\n            // Mascot fully awake\r\n            return this;\r\n        }, 'wake', this)();\r\n    }\r\n    \r\n    /**\r\n     * Gets available TTS voices\r\n     * @returns {Array} Array of available voice objects\r\n     */\r\n    getTTSVoices() {\r\n        if (!this.tts.available) {\r\n            return [];\r\n        }\r\n        \r\n        return window.speechSynthesis.getVoices();\r\n    }\r\n    \r\n    /**\r\n     * Checks if TTS is currently speaking\r\n     * @returns {boolean} True if currently speaking\r\n     */\r\n    isTTSSpeaking() {\r\n        return this.tts.speaking;\r\n    }\r\n\r\n    /**\r\n     * Starts the animation loop at target 60 FPS\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    start() {\r\n        return this.errorBoundary.wrap(() => {\r\n            return this.visualizationRunner.start();\r\n        }, 'start', this)();\r\n    }\r\n\r\n    /**\r\n     * Stops the animation loop and cleans up resources\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    stop() {\r\n        return this.errorBoundary.wrap(() => {\r\n            return this.visualizationRunner.stop();\r\n        }, 'stop', this)();\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * Sets a breathing pattern for the orb\r\n     * @param {number} inhale - Inhale duration in seconds\r\n     * @param {number} hold1 - Hold after inhale in seconds\r\n     * @param {number} exhale - Exhale duration in seconds\r\n     * @param {number} hold2 - Hold after exhale in seconds\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    setBreathePattern(inhale, hold1, exhale, hold2) {\r\n        return this.errorBoundary.wrap(() => {\r\n            // Calculate total cycle time\r\n            const totalCycle = inhale + hold1 + exhale + hold2;\r\n            \r\n            // Store pattern for custom animation\r\n            this.breathePattern = {\r\n                inhale,\r\n                hold1,\r\n                exhale,\r\n                hold2,\r\n                totalCycle,\r\n                currentPhase: 'inhale',\r\n                phaseStartTime: Date.now(),\r\n                phaseProgress: 0\r\n            };\r\n            \r\n            // Start custom breathing animation\r\n            this.startBreathingAnimation();\r\n            \r\n            return this;\r\n        }, 'setBreathePattern', this)();\r\n    }\r\n    \r\n    /**\r\n     * Directly sets the orb scale with animation\r\n     * @param {number} scale - Target scale (1.0 = normal)\r\n     * @param {number} duration - Animation duration in milliseconds\r\n     * @param {string} easing - Easing function ('linear', 'ease', 'easeIn', 'easeOut', 'easeInOut')\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    setOrbScale(scale, duration = 1000, easing = 'easeInOut') {\r\n        return this.errorBoundary.wrap(() => {\r\n            if (this.renderer) {\r\n                // Create scale animation\r\n                const startScale = this.currentOrbScale || 1.0;\r\n                const startTime = Date.now();\r\n                \r\n                const animate = () => {\r\n                    const elapsed = Date.now() - startTime;\r\n                    const progress = Math.min(elapsed / duration, 1);\r\n                    \r\n                    // Apply easing\r\n                    let easedProgress = progress;\r\n                    if (easing === 'easeIn') {\r\n                        easedProgress = progress * progress;\r\n                    } else if (easing === 'easeOut') {\r\n                        easedProgress = progress * (2 - progress);\r\n                    } else if (easing === 'easeInOut') {\r\n                        easedProgress = progress < 0.5\r\n                            ? 2 * progress * progress\r\n                            : -1 + (4 - 2 * progress) * progress;\r\n                    }\r\n                    \r\n                    // Calculate current scale\r\n                    this.currentOrbScale = startScale + (scale - startScale) * easedProgress;\r\n                    \r\n                    // Apply to renderer\r\n                    if (this.renderer.setCustomScale) {\r\n                        this.renderer.setCustomScale(this.currentOrbScale);\r\n                    }\r\n                    \r\n                    // Continue animation\r\n                    if (progress < 1 && this.isRunning) {\r\n                        requestAnimationFrame(animate);\r\n                    }\r\n                };\r\n                \r\n                animate();\r\n            }\r\n            \r\n            return this;\r\n        }, 'setOrbScale', this)();\r\n    }\r\n    \r\n    /**\r\n     * Applies a preset breathing pattern\r\n     * @param {string} type - Preset type: 'calm', 'anxious', 'meditative', 'deep'\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    breathe(type = 'calm') {\r\n        return this.errorBoundary.wrap(() => {\r\n            const presets = {\r\n                calm: { inhale: 4, hold1: 0, exhale: 4, hold2: 0 },        // 4-4 breathing\r\n                anxious: { inhale: 2, hold1: 0, exhale: 2, hold2: 0 },    // Quick shallow\r\n                meditative: { inhale: 4, hold1: 7, exhale: 8, hold2: 0 }, // 4-7-8 breathing\r\n                deep: { inhale: 5, hold1: 5, exhale: 5, hold2: 5 },       // Box breathing\r\n                sleep: { inhale: 6, hold1: 0, exhale: 8, hold2: 2 }       // Sleep breathing\r\n            };\r\n            \r\n            const pattern = presets[type] || presets.calm;\r\n            return this.setBreathePattern(pattern.inhale, pattern.hold1, pattern.exhale, pattern.hold2);\r\n        }, 'breathe', this)();\r\n    }\r\n    \r\n    /**\r\n     * Starts the custom breathing animation\r\n     * @private\r\n     */\r\n    startBreathingAnimation() {\r\n        // Cancel any existing breathing animation\r\n        if (this.breathingAnimationId) {\r\n            cancelAnimationFrame(this.breathingAnimationId);\r\n        }\r\n        \r\n        const animate = () => {\r\n            if (!this.breathePattern || !this.isRunning) return;\r\n            \r\n            const pattern = this.breathePattern;\r\n            const now = Date.now();\r\n            const phaseElapsed = (now - pattern.phaseStartTime) / 1000; // Convert to seconds\r\n            \r\n            let scale = 1.0;\r\n            let nextPhase = pattern.currentPhase;\r\n            \r\n            // Determine current phase and scale\r\n            switch (pattern.currentPhase) {\r\n                case 'inhale':\r\n                    if (phaseElapsed >= pattern.inhale) {\r\n                        nextPhase = 'hold1';\r\n                        pattern.phaseStartTime = now;\r\n                        this.emit('hold-start', { type: 'post-inhale' });\r\n                    } else {\r\n                        // Scale up during inhale\r\n                        const progress = phaseElapsed / pattern.inhale;\r\n                        scale = 1.0 + (0.3 * progress); // Expand to 1.3x\r\n                    }\r\n                    break;\r\n                    \r\n                case 'hold1':\r\n                    if (phaseElapsed >= pattern.hold1) {\r\n                        nextPhase = 'exhale';\r\n                        pattern.phaseStartTime = now;\r\n                        this.emit('exhale-start');\r\n                    }\r\n                    scale = 1.3; // Stay expanded\r\n                    break;\r\n                    \r\n                case 'exhale':\r\n                    if (phaseElapsed >= pattern.exhale) {\r\n                        nextPhase = 'hold2';\r\n                        pattern.phaseStartTime = now;\r\n                        this.emit('hold-start', { type: 'post-exhale' });\r\n                    } else {\r\n                        // Scale down during exhale\r\n                        const progress = phaseElapsed / pattern.exhale;\r\n                        scale = 1.3 - (0.4 * progress); // Contract to 0.9x\r\n                    }\r\n                    break;\r\n                    \r\n                case 'hold2':\r\n                    if (phaseElapsed >= pattern.hold2) {\r\n                        nextPhase = 'inhale';\r\n                        pattern.phaseStartTime = now;\r\n                        this.emit('inhale-start');\r\n                    }\r\n                    scale = 0.9; // Stay contracted\r\n                    break;\r\n            }\r\n            \r\n            // Update phase\r\n            if (nextPhase !== pattern.currentPhase) {\r\n                pattern.currentPhase = nextPhase;\r\n            }\r\n            \r\n            // Apply scale to renderer\r\n            if (this.renderer && this.renderer.setCustomScale) {\r\n                this.renderer.setCustomScale(scale);\r\n            }\r\n            \r\n            // Continue animation\r\n            this.breathingAnimationId = requestAnimationFrame(animate);\r\n        };\r\n        \r\n        // Start with inhale\r\n        this.breathePattern.currentPhase = 'inhale';\r\n        this.breathePattern.phaseStartTime = Date.now();\r\n        this.emit('inhale-start');\r\n        animate();\r\n    }\r\n    \r\n    /**\r\n     * Stops any active breathing animation\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    stopBreathing() {\r\n        return this.errorBoundary.wrap(() => {\r\n            if (this.breathingAnimationId) {\r\n                cancelAnimationFrame(this.breathingAnimationId);\r\n                this.breathingAnimationId = null;\r\n            }\r\n            \r\n            this.breathePattern = null;\r\n            \r\n            // Reset scale\r\n            if (this.renderer && this.renderer.setCustomScale) {\r\n                this.renderer.setCustomScale(1.0);\r\n            }\r\n            \r\n            return this;\r\n        }, 'stopBreathing', this)();\r\n    }\r\n    \r\n    /**\r\n     * Adds an event listener for external integration hooks\r\n     * @param {string} event - Event name\r\n     * @param {Function} callback - Event callback function\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    on(event, callback) {\r\n        return this.errorBoundary.wrap(() => {\r\n            const success = this.eventManager.on(event, callback);\r\n            if (!success) {\r\n                // Failed to add event listener\r\n            }\r\n            return this;\r\n        }, 'event-listener-add', this)();\r\n    }\r\n\r\n    /**\r\n     * Removes an event listener\r\n     * @param {string} event - Event name\r\n     * @param {Function} callback - Event callback function to remove\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    off(event, callback) {\r\n        return this.errorBoundary.wrap(() => {\r\n            this.eventManager.off(event, callback);\r\n            return this;\r\n        }, 'event-listener-remove', this)();\r\n    }\r\n\r\n    /**\r\n     * Adds a one-time event listener that removes itself after first execution\r\n     * @param {string} event - Event name\r\n     * @param {Function} callback - Event callback function\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    once(event, callback) {\r\n        return this.errorBoundary.wrap(() => {\r\n            const success = this.eventManager.once(event, callback);\r\n            if (!success) {\r\n                // Failed to add once event listener\r\n            }\r\n            return this;\r\n        }, 'event-listener-once', this)();\r\n    }\r\n\r\n    /**\r\n     * Removes all listeners for a specific event or all events\r\n     * @param {string|null} event - Event name to clear, or null to clear all\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    removeAllListeners(event = null) {\r\n        return this.errorBoundary.wrap(() => {\r\n            const removedCount = this.eventManager.removeAllListeners(event);\r\n            if (removedCount > 0) {\r\n                // Cleared event listeners\r\n            }\r\n            return this;\r\n        }, 'event-listeners-clear', this)();\r\n    }\r\n\r\n    /**\r\n     * Gets the number of listeners for an event\r\n     * @param {string} event - Event name\r\n     * @returns {number} Number of listeners\r\n     */\r\n    listenerCount(event) {\r\n        return this.eventManager.listenerCount(event);\r\n    }\r\n\r\n    /**\r\n     * Gets all registered event names\r\n     * @returns {Array<string>} Array of event names\r\n     */\r\n    getEventNames() {\r\n        return this.eventManager.getEventNames();\r\n    }\r\n\r\n    /**\r\n     * Gets comprehensive event system statistics\r\n     * @returns {Object} Event system statistics and monitoring data\r\n     */\r\n    getEventStats() {\r\n        return this.eventManager.getEventStats();\r\n    }\r\n\r\n    /**\r\n     * Gets EventManager debugging information\r\n     * @returns {Object} Debug information about the event system\r\n     */\r\n    getEventDebugInfo() {\r\n        return this.eventManager.getDebugInfo();\r\n    }\r\n\r\n    /**\r\n     * Gets browser compatibility information\r\n     * @returns {Object} Browser compatibility details\r\n     */\r\n    getBrowserCompatibility() {\r\n        return {\r\n            browser: browserCompatibility.browser,\r\n            features: browserCompatibility.featureDetection.getFeatures(),\r\n            capabilities: browserCompatibility.capabilities,\r\n            appliedPolyfills: browserCompatibility.appliedPolyfills,\r\n            optimizations: browserCompatibility.browserOptimizations.getOptimizations()\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Gets degradation manager status and settings\r\n     * @returns {Object|null} Degradation manager information or null if disabled\r\n     */\r\n    getDegradationStatus() {\r\n        if (!this.degradationManager) {\r\n            return null;\r\n        }\r\n        \r\n        return {\r\n            currentLevel: this.degradationManager.getCurrentLevel(),\r\n            availableFeatures: this.degradationManager.getAvailableFeatures(),\r\n            recommendedSettings: this.degradationManager.getRecommendedSettings(),\r\n            performanceStats: this.degradationManager.getPerformanceStats(),\r\n            allLevels: this.degradationManager.getAllLevels()\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Manually set degradation level\r\n     * @param {number|string} level - Degradation level index or name\r\n     * @returns {boolean} True if level was set successfully\r\n     */\r\n    setDegradationLevel(level) {\r\n        if (!this.degradationManager) {\r\n            // Degradation manager is not enabled\r\n            return false;\r\n        }\r\n        \r\n        return this.degradationManager.setLevel(level);\r\n    }\r\n\r\n    /**\r\n     * Check if a specific feature is available in current degradation level\r\n     * @param {string} feature - Feature name (audio, particles, fullEffects, etc.)\r\n     * @returns {boolean} True if feature is available\r\n     */\r\n    isFeatureAvailable(feature) {\r\n        if (!this.degradationManager) {\r\n            // Fallback to basic feature detection\r\n            const features = browserCompatibility.featureDetection.getFeatures();\r\n            return features[feature] || false;\r\n        }\r\n        \r\n        return this.degradationManager.isFeatureAvailable(feature);\r\n    }\r\n\r\n    /**\r\n     * Force canvas context recovery\r\n     * @returns {boolean} True if recovery was successful\r\n     */\r\n    recoverCanvasContext() {\r\n        if (!this.contextRecovery) {\r\n            return false;\r\n        }\r\n        \r\n        return this.contextRecovery.recover();\r\n    }\r\n\r\n    /**\r\n     * Check if canvas context is currently lost\r\n     * @returns {boolean} True if context is lost\r\n     */\r\n    isCanvasContextLost() {\r\n        if (!this.contextRecovery) {\r\n            return false;\r\n        }\r\n        \r\n        return this.contextRecovery.isLost();\r\n    }\r\n\r\n    /**\r\n     * Enable or disable debug mode\r\n     * @param {boolean} enabled - Whether to enable debug mode\r\n     */\r\n    setDebugMode(enabled) {\r\n        this.debugMode = enabled;\r\n        \r\n        if (enabled) {\r\n            emotiveDebugger.log('INFO', 'Debug mode enabled');\r\n            emotiveDebugger.takeMemorySnapshot('debug-mode-enabled');\r\n        } else {\r\n            emotiveDebugger.log('INFO', 'Debug mode disabled');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get comprehensive debug report\r\n     * @returns {Object} Debug report including all system states\r\n     */\r\n    getDebugReport() {\r\n        const report = {\r\n            timestamp: Date.now(),\r\n            mascot: {\r\n                isRunning: this.isRunning,\r\n                speaking: this.speaking,\r\n                debugMode: this.debugMode,\r\n                config: this.config\r\n            },\r\n            \r\n            // System states\r\n            currentState: this.getCurrentState(),\r\n            performanceMetrics: this.getPerformanceMetrics(),\r\n            audioStats: this.getAudioStats(),\r\n            eventStats: this.getEventStats(),\r\n            \r\n            // Browser compatibility\r\n            browserCompatibility: this.getBrowserCompatibility(),\r\n            degradationStatus: this.getDegradationStatus(),\r\n            \r\n            // Runtime capabilities\r\n            runtimeCapabilities: runtimeCapabilities.generateReport(),\r\n            \r\n            // Debugger data\r\n            debuggerReport: emotiveDebugger.getDebugReport()\r\n        };\r\n\r\n        if (this.debugMode) {\r\n            emotiveDebugger.log('DEBUG', 'Generated debug report', {\r\n                reportSize: JSON.stringify(report).length,\r\n                sections: Object.keys(report)\r\n            });\r\n        }\r\n\r\n        return report;\r\n    }\r\n\r\n    /**\r\n     * Export debug data for external analysis\r\n     * @returns {Object} Exportable debug data\r\n     */\r\n    exportDebugData() {\r\n        const data = {\r\n            metadata: {\r\n                exportTime: Date.now(),\r\n                version: '1.0.0', // Should be dynamically set\r\n                userAgent: navigator.userAgent,\r\n                url: window.location?.href\r\n            },\r\n            \r\n            mascotState: {\r\n                config: this.config,\r\n                currentState: this.getCurrentState(),\r\n                isRunning: this.isRunning,\r\n                speaking: this.speaking\r\n            },\r\n            \r\n            performance: {\r\n                metrics: this.getPerformanceMetrics(),\r\n                degradationStatus: this.getDegradationStatus(),\r\n                frameTimings: emotiveDebugger.frameTimings\r\n            },\r\n            \r\n            compatibility: {\r\n                browser: this.getBrowserCompatibility(),\r\n                runtimeCapabilities: runtimeCapabilities.generateReport()\r\n            },\r\n            \r\n            debuggerData: emotiveDebugger.exportDebugData()\r\n        };\r\n\r\n        if (this.debugMode) {\r\n            emotiveDebugger.log('INFO', 'Exported debug data', {\r\n                dataSize: JSON.stringify(data).length\r\n            });\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    /**\r\n     * Start profiling a named operation\r\n     * @param {string} name - Profile name\r\n     * @param {Object} metadata - Additional metadata\r\n     */\r\n    startProfiling(name, metadata = {}) {\r\n        if (this.debugMode) {\r\n            emotiveDebugger.startProfile(name, metadata);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * End profiling and get results\r\n     * @param {string} name - Profile name\r\n     * @returns {Object|null} Profile results\r\n     */\r\n    endProfiling(name) {\r\n        if (this.debugMode) {\r\n            return emotiveDebugger.endProfile(name);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Take a memory snapshot\r\n     * @param {string} label - Snapshot label\r\n     */\r\n    takeMemorySnapshot(label) {\r\n        if (this.debugMode) {\r\n            emotiveDebugger.takeMemorySnapshot(label);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clear all debug data\r\n     */\r\n    clearDebugData() {\r\n        emotiveDebugger.clear();\r\n        \r\n        if (this.debugMode) {\r\n            emotiveDebugger.log('INFO', 'Debug data cleared');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Get runtime performance capabilities\r\n     * @returns {Object} Runtime capabilities report\r\n     */\r\n    getRuntimeCapabilities() {\r\n        return runtimeCapabilities.generateReport();\r\n    }\r\n\r\n    /**\r\n     * Emits an event to all registered listeners with error boundary protection\r\n     * @param {string} event - Event name\r\n     * @param {*} data - Event data\r\n     */\r\n    emit(event, data = null) {\r\n        this.eventManager.emit(event, data);\r\n    }\r\n\r\n    /**\r\n     * Updates audio level monitoring (called by AnimationController)\r\n     * @param {number} deltaTime - Time since last frame in milliseconds\r\n     */\r\n    update(deltaTime) {\r\n        this.errorBoundary.wrap(() => {\r\n            this.visualizationRunner.update(deltaTime);\r\n        }, 'audio-update')();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /**\r\n     * Renders the current frame (called by AnimationController)\r\n     */\r\n    render() {\r\n        let deltaTime = 16.67; // Default fallback value\r\n        let renderStart = 0;\r\n        \r\n        try {\r\n            renderStart = this.debugMode ? performance.now() : 0;\r\n            \r\n            // Get deltaTime from animation controller\r\n            deltaTime = this.animationController ? this.animationController.deltaTime : 16.67;\r\n            \r\n            // Prepare render state\r\n            const renderState = {\r\n                properties: this.stateMachine.getCurrentEmotionalProperties(),\r\n                emotion: this.stateMachine.getCurrentState().emotion,\r\n                undertone: this.stateMachine.getCurrentState().undertone,\r\n                particleSystem: this.particleSystem,\r\n                speaking: this.speaking,\r\n                audioLevel: this.audioLevelProcessor.getCurrentLevel(),\r\n                gazeOffset: this.gazeTracker ? this.gazeTracker.currentGaze : { x: 0, y: 0 }\r\n            };\r\n            \r\n            \r\n            // Track frame timing for debugging\r\n            if (this.debugMode) {\r\n                emotiveDebugger.trackFrameTiming(deltaTime);\r\n            }\r\n            \r\n            // Always use EmotiveRenderer\r\n            // Clear canvas ONCE at the beginning\r\n            this.canvasManager.clear();\r\n            \r\n            // Update gaze tracker\r\n            if (this.gazeTracker) {\r\n                this.gazeTracker.update(deltaTime);\r\n            }\r\n            \r\n            // Update threat level for suspicion state based on gaze distance\r\n            if (renderState.emotion === 'suspicion' && this.gazeTracker) {\r\n                const suspicionEmotion = getEmotion('suspicion');\r\n                if (suspicionEmotion && suspicionEmotion.visual) {\r\n                    const gazeState = this.gazeTracker.getState();\r\n                    const mousePos = this.gazeTracker.mousePos;\r\n                    const centerX = this.canvasManager.width / 2;\r\n                    const centerY = this.canvasManager.height / 2 - this.config.topOffset;\r\n                    \r\n                    // Calculate distance from mouse to center\r\n                    const distance = Math.sqrt(\r\n                        Math.pow(mousePos.x - centerX, 2) + \r\n                        Math.pow(mousePos.y - centerY, 2)\r\n                    );\r\n                    \r\n                    // Maximum distance for threat calculation (canvas diagonal / 3)\r\n                    const maxDist = Math.min(this.canvasManager.width, this.canvasManager.height) / 2;\r\n                    \r\n                    // Closer = higher threat (inverted distance)\r\n                    const threatLevel = Math.max(0, Math.min(1, 1 - (distance / maxDist)));\r\n                    \r\n                    // Update the threat level\r\n                    suspicionEmotion.visual.threatLevel = threatLevel;\r\n                }\r\n            }\r\n            \r\n            // For Emotive style, convert emotion to visual params (AFTER updating threat level)\r\n            let emotionParams = getEmotionVisualParams(renderState.emotion);\r\n            \r\n            this.renderer.setEmotionalState(renderState.emotion, emotionParams, renderState.undertone);\r\n            \r\n            // Always use center for particle spawning (not gaze-adjusted position)\r\n            const orbX = this.canvasManager.width / 2;\r\n            let orbY = this.canvasManager.height / 2 - this.config.topOffset;\r\n\r\n            // Spawn new particles based on emotion at ORB position\r\n            // Get min/max from state machine\r\n            const stateProps = this.stateMachine.getCurrentEmotionalProperties();\r\n\r\n            // Apply vertical offset for certain emotions (like excited for exclamation mark)\r\n            if (stateProps.verticalOffset) {\r\n                orbY = (this.canvasManager.height / 2 - this.config.topOffset) + (this.canvasManager.height * stateProps.verticalOffset);\r\n            }\r\n            \r\n            // Apply undertone modifiers to particle behavior\r\n            let particleBehavior = emotionParams.particleBehavior || 'ambient';\r\n            let particleRate = emotionParams.particleRate || 15;\r\n            // Use emotionParams min/max if available, otherwise fall back to stateProps\r\n            let minParticles = emotionParams.minParticles !== undefined ? emotionParams.minParticles : (stateProps.minParticles || 0);\r\n            let maxParticles = emotionParams.maxParticles !== undefined ? emotionParams.maxParticles : (stateProps.maxParticles || 10);\r\n            \r\n            \r\n            // Special case for zen: mix falling and orbiting behaviors\r\n            if (renderState.emotion === 'zen') {\r\n                // Randomly choose between falling (sad) and orbiting (love) for each spawn\r\n                particleBehavior = Math.random() < 0.6 ? 'falling' : 'orbiting';\r\n            }\r\n            \r\n            // Check if renderer has undertone overrides\r\n            if (this.renderer.state && this.renderer.state.particleBehaviorOverride) {\r\n                particleBehavior = this.renderer.state.particleBehaviorOverride;\r\n            }\r\n            if (this.renderer.state && this.renderer.state.particleRateMult) {\r\n                particleRate = Math.floor(particleRate * this.renderer.state.particleRateMult);\r\n                maxParticles = Math.floor(maxParticles * this.renderer.state.particleRateMult);\r\n            }\r\n            \r\n            this.particleSystem.spawn(\r\n                particleBehavior,\r\n                renderState.emotion,\r\n                particleRate,\r\n                orbX,\r\n                orbY,\r\n                deltaTime,\r\n                null,  // no forced count\r\n                minParticles,\r\n                maxParticles,\r\n                this.renderer.scaleFactor || 1,  // Pass scale factor\r\n                this.config.classicConfig?.particleSizeMultiplier || 1,  // Pass particle size multiplier\r\n                emotionParams.particleColors || null,  // Pass emotion colors\r\n                renderState.undertone  // Pass undertone for saturation adjustments\r\n            );\r\n            \r\n            // Debug logging disabled to prevent console spam\r\n            // Uncomment only for debugging particle issues\r\n            // if (!this._particleDebugCounter) this._particleDebugCounter = 0;\r\n            // this._particleDebugCounter++;\r\n            // if (this._particleDebugCounter % 120 === 0) {  // Log every 2 seconds at 60fps\r\n            //     Particle status:\r\n            //         behavior: particleBehavior,\r\n            //         rate: particleRate,\r\n            //         emotion: renderState.emotion,\r\n            //         minParticles,\r\n            //         maxParticles,\r\n            //         currentCount: this.particleSystem.particles.length,\r\n            //         stats: this.particleSystem.getStats(),\r\n            //         position: { x: orbX, y: orbY }\r\n            //     });\r\n            // }\r\n            \r\n            // Get undertone modifier from renderer if present\r\n            const undertoneModifier = this.renderer.getUndertoneModifier ? \r\n                this.renderer.getUndertoneModifier() : null;\r\n            \r\n            // Add zen vortex intensity to undertone modifier if in zen state\r\n            let particleModifier = undertoneModifier;\r\n            if (renderState.emotion === 'zen' && this.renderer.state.zenVortexIntensity) {\r\n                particleModifier = { ...(undertoneModifier || {}), zenVortexIntensity: this.renderer.state.zenVortexIntensity };\r\n            }\r\n            \r\n            // Get current gesture info from renderer or modular gesture\r\n            let gestureMotion = null;\r\n            let gestureProgress = 0;\r\n            \r\n            // First check for modular gesture\r\n            if (this.currentModularGesture) {\r\n                const elapsed = performance.now() - this.currentModularGesture.startTime;\r\n                gestureProgress = Math.min(elapsed / this.currentModularGesture.duration, 1);\r\n                \r\n                if (gestureProgress >= 1) {\r\n                    // Ensure cleanup happens before clearing gesture\r\n                    gestureMotion = {\r\n                        type: this.currentModularGesture.type,\r\n                        amplitude: 1.0,\r\n                        frequency: 1.0,\r\n                        intensity: 1.0\r\n                    };\r\n                    // Pass progress = 1 to trigger cleanup\r\n                    gestureProgress = 1.0;\r\n                    // Clear gesture on next frame after cleanup\r\n                    if (!this.currentModularGesture.cleanupPending) {\r\n                        this.currentModularGesture.cleanupPending = true;\r\n                    } else {\r\n                        // Cleanup was called last frame, now clear the gesture\r\n                        this.currentModularGesture = null;\r\n                    }\r\n                } else {\r\n                    // Set gesture motion for particles\r\n                    gestureMotion = {\r\n                        type: this.currentModularGesture.type,\r\n                        amplitude: 1.0,\r\n                        frequency: 1.0,\r\n                        intensity: 1.0\r\n                    };\r\n                }\r\n            }\r\n            // Fallback to renderer gesture\r\n            else if (this.renderer && this.renderer.getCurrentGesture) {\r\n                const currentGesture = this.renderer.getCurrentGesture();\r\n                if (currentGesture && currentGesture.particleMotion) {\r\n                    gestureMotion = currentGesture.particleMotion;\r\n                    gestureProgress = currentGesture.progress || 0;\r\n                }\r\n            }\r\n            \r\n            // Update particles with orb position, gesture motion, and modifier\r\n            this.particleSystem.update(deltaTime, orbX, orbY, gestureMotion, gestureProgress, particleModifier);\r\n\r\n            // Get gesture transform from renderer\r\n            const gestureTransform = this.renderer.gestureAnimator ?\r\n                this.renderer.gestureAnimator.applyGestureAnimations() : null;\r\n\r\n            // Render BACKGROUND particles (behind orb)\r\n            this.particleSystem.renderBackground(this.canvasManager.getContext(), emotionParams.glowColor, gestureTransform);\r\n\r\n            // Render the Emotive orb in the MIDDLE layer\r\n            this.renderer.render(renderState, deltaTime, gestureTransform);\r\n\r\n            // Render FOREGROUND particles (in front of orb)\r\n            this.particleSystem.renderForeground(this.canvasManager.getContext(), emotionParams.glowColor, gestureTransform);\r\n            \r\n            // Draw debug information if enabled\r\n            if (this.config.showFPS || this.config.showDebug) {\r\n                this.renderDebugInfo(deltaTime);\r\n            }\r\n            \r\n            // Log render performance if debugging\r\n            if (this.debugMode) {\r\n                const renderTime = performance.now() - renderStart;\r\n                if (renderTime > 16.67) { // Longer than 60fps frame\r\n                    emotiveDebugger.log('WARN', 'Slow render frame detected', {\r\n                        renderTime,\r\n                        deltaTime,\r\n                        particleCount: this.particleSystem.getStats().activeParticles\r\n                    });\r\n                }\r\n            }\r\n        } catch (error) {\r\n            this.errorBoundary.logError(error, 'main-render');\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Renders debug information overlay\r\n     * @param {number} deltaTime - Time since last frame in milliseconds\r\n     */\r\n    renderDebugInfo(deltaTime) {\r\n        const ctx = this.canvasManager.getContext();\r\n        ctx.save();\r\n        \r\n        ctx.fillStyle = '#ffffff';\r\n        ctx.font = '12px monospace';\r\n        ctx.strokeStyle = '#000000';\r\n        ctx.lineWidth = 2;\r\n        \r\n        let y = 20;\r\n        const lineHeight = 16;\r\n        \r\n        if (this.config.showFPS) {\r\n            const metrics = this.animationController.getPerformanceMetrics();\r\n            // Use smoothed FPS for stable display\r\n            const fps = metrics.instantFps || metrics.fps || 0;\r\n            const frameTime = metrics.averageFrameTime ? metrics.averageFrameTime.toFixed(1) : '0.0';\r\n            const particleStats = this.particleSystem.getStats();\r\n            \r\n            // Build simple display\r\n            const lines = [\r\n                `FPS: ${fps}`,\r\n                `Frame: ${frameTime}ms`,\r\n                `Particles: ${particleStats.activeParticles}`\r\n            ];\r\n            \r\n            // Draw each line\r\n            const padding = 8;\r\n            let maxWidth = 0;\r\n            lines.forEach(line => {\r\n                const width = ctx.measureText(line).width;\r\n                if (width > maxWidth) maxWidth = width;\r\n            });\r\n            \r\n            const x = this.canvasManager.width - maxWidth - padding - 10;\r\n            \r\n            // Background box with semi-transparent dark background\r\n            ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\r\n            ctx.fillRect(x - padding, y - 14, maxWidth + padding * 2, 18 * lines.length + 4);\r\n            \r\n            // Border color based on FPS\r\n            let borderColor;\r\n            if (fps >= 55) {\r\n                borderColor = '#00ff00';  // Green for good FPS\r\n            } else if (fps >= 30) {\r\n                borderColor = '#ffff00';  // Yellow for okay FPS\r\n            } else {\r\n                borderColor = '#ff0000';  // Red for poor FPS\r\n            }\r\n            \r\n            ctx.strokeStyle = borderColor;\r\n            ctx.lineWidth = 2;\r\n            ctx.strokeRect(x - padding, y - 14, maxWidth + padding * 2, 18 * lines.length + 4);\r\n            \r\n            // Draw each line of text\r\n            lines.forEach((line, i) => {\r\n                const lineY = y + (i * lineHeight);\r\n                // No stroke for cleaner look\r\n                ctx.fillStyle = '#ffffff';\r\n                ctx.fillText(line, x, lineY);\r\n            });\r\n            \r\n            y += lineHeight * lines.length;\r\n        }\r\n        \r\n        if (this.config.showDebug) {\r\n            const state = this.stateMachine.getCurrentState();\r\n            const particleStats = this.particleSystem.getStats();\r\n            \r\n            const debugInfo = [\r\n                `Emotion: ${state.emotion}${state.undertone ? ` (${state.undertone})` : ''}`,\r\n                `Particles: ${particleStats.activeParticles}/${particleStats.maxParticles}`,\r\n                `Gesture: ${this.currentModularGesture ? this.currentModularGesture.type : 'none'}`,\r\n                `Speaking: ${this.speaking ? 'yes' : 'no'}`,\r\n                `Audio Level: ${(this.audioLevel * 100).toFixed(1)}%`\r\n            ];\r\n            \r\n            // Draw debug info with background for readability\r\n            ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\r\n            const debugWidth = Math.max(...debugInfo.map(line => ctx.measureText(line).width));\r\n            ctx.fillRect(8, y - 14, debugWidth + 16, debugInfo.length * lineHeight + 4);\r\n            \r\n            ctx.fillStyle = '#ffffff';\r\n            for (const info of debugInfo) {\r\n                ctx.fillText(info, 10, y);\r\n                y += lineHeight;\r\n            }\r\n        }\r\n        \r\n        ctx.restore();\r\n    }\r\n\r\n    /**\r\n     * Gets the current emotional color\r\n     * @returns {string} Hex color for current emotion\r\n     */\r\n    getEmotionalColor() {\r\n        const properties = this.stateMachine.getCurrentEmotionalProperties();\r\n        // Fallback to neutral gray if properties are undefined\r\n        return properties?.primaryColor || '#B0B0B0';\r\n    }\r\n\r\n    /**\r\n     * Gets the current emotional state information\r\n     * @returns {Object} Current state with properties\r\n     */\r\n    getCurrentState() {\r\n        return this.stateMachine.getCurrentState();\r\n    }\r\n\r\n    /**\r\n     * Gets all available emotions\r\n     * @returns {Array<string>} Array of emotion names\r\n     */\r\n    getAvailableEmotions() {\r\n        return this.stateMachine.getAvailableEmotions();\r\n    }\r\n\r\n    /**\r\n     * Gets all available undertones\r\n     * @returns {Array<string>} Array of undertone names\r\n     */\r\n    getAvailableUndertones() {\r\n        return this.stateMachine.getAvailableUndertones();\r\n    }\r\n\r\n    /**\r\n     * Gets the current audio level (0-1 range)\r\n     * @returns {number} Current audio level\r\n     */\r\n    getAudioLevel() {\r\n        return this.audioLevelProcessor.getCurrentLevel();\r\n    }\r\n\r\n    /**\r\n     * Gets audio level processing statistics\r\n     * @returns {Object} Audio processing statistics\r\n     */\r\n    getAudioStats() {\r\n        return this.audioLevelProcessor.getStats();\r\n    }\r\n\r\n    /**\r\n     * Updates audio level processor configuration\r\n     * @param {Object} config - New configuration options\r\n     */\r\n    updateAudioConfig(config) {\r\n        this.audioLevelProcessor.updateConfig(config);\r\n    }\r\n\r\n    /**\r\n     * Gets all available gestures\r\n     * @returns {Array<string>} Array of gesture names\r\n     */\r\n    getAvailableGestures() {\r\n        return [\r\n            'bounce', 'pulse', 'shake', 'spin', 'drift', \r\n            'nod', 'tilt', 'expand', 'contract', 'flash',\r\n            'stretch', 'glow', 'flicker', 'vibrate', 'wave',\r\n            'morph', 'slowBlink', 'look', 'settle',\r\n            'breathIn', 'breathOut', 'breathHold', 'breathHoldEmpty', 'jump'\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * Connects an audio source to the speech analyser\r\n     * @param {AudioNode} audioSource - Web Audio API source node\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    connectAudioSource(audioSource) {\r\n        return this.errorBoundary.wrap(() => {\r\n            if (!this.audioAnalyser) {\r\n                // Speech reactivity not started. Call startSpeaking() first.\r\n                return this;\r\n            }\r\n            \r\n            if (!audioSource || typeof audioSource.connect !== 'function') {\r\n                // Invalid audio source provided to connectAudioSource()\r\n                return this;\r\n            }\r\n            \r\n            // Connect the audio source to our analyser\r\n            audioSource.connect(this.audioAnalyser);\r\n            \r\n            // Audio source connected to speech analyser\r\n            this.emit('audioSourceConnected', { audioSource });\r\n            \r\n            return this;\r\n        }, 'audio-source-connection', this)();\r\n    }\r\n\r\n    /**\r\n     * Sets master volume for all audio output\r\n     * @param {number} volume - Volume level (0.0 to 1.0)\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    setVolume(volume) {\r\n        return this.errorBoundary.wrap(() => {\r\n            return this.audioHandler.setVolume(volume);\r\n        }, 'volume-setting', this)();\r\n    }\r\n\r\n    /**\r\n     * Gets current master volume\r\n     * @returns {number} Current volume level (0.0 to 1.0)\r\n     */\r\n    getVolume() {\r\n        return this.config.masterVolume;\r\n    }\r\n\r\n    /**\r\n     * Enable or disable gesture sounds\r\n     * @param {boolean} enabled - Whether to enable gesture sounds\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    setSoundEnabled(enabled) {\r\n        this.config.soundEnabled = enabled;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Check if gesture sounds are enabled\r\n     * @returns {boolean} Whether gesture sounds are enabled\r\n     */\r\n    isSoundEnabled() {\r\n        return this.config.soundEnabled;\r\n    }\r\n\r\n    /**\r\n     * Pauses the animation loop (can be resumed with start())\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    pause() {\r\n        return this.errorBoundary.wrap(() => {\r\n            if (!this.animationController.isAnimating()) {\r\n                // EmotiveMascot is not running\r\n                return this;\r\n            }\r\n            \r\n            // Stop animation controller\r\n            this.animationController.stop();\r\n            this.isRunning = false;\r\n            \r\n            // Pause ambient audio\r\n            if (this.soundSystem.isAvailable()) {\r\n                this.soundSystem.stopAmbientTone(200); // Quick fade out\r\n            }\r\n            \r\n            this.emit('paused');\r\n            // EmotiveMascot paused\r\n            return this;\r\n        }, 'pause', this)();\r\n    }\r\n\r\n    /**\r\n     * Resumes the animation loop from paused state\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    resume() {\r\n        return this.errorBoundary.wrap(() => {\r\n            if (this.animationController.isAnimating()) {\r\n                // EmotiveMascot is already running\r\n                return this;\r\n            }\r\n            \r\n            // Start animation controller\r\n            this.animationController.start();\r\n            this.isRunning = true;\r\n            \r\n            // Resume ambient audio\r\n            // Update ambient tone based on emotional state - DISABLED (annoying)\r\n            // if (this.soundSystem.isAvailable()) {\r\n            //     const currentEmotion = this.stateMachine.getCurrentState().emotion;\r\n            //     this.soundSystem.setAmbientTone(currentEmotion, 200);\r\n            // }\r\n            \r\n            this.emit('resumed');\r\n            // EmotiveMascot resumed\r\n            return this;\r\n        }, 'resume', this)();\r\n    }\r\n\r\n    /**\r\n     * Checks if the mascot is currently running\r\n     * @returns {boolean} True if animation loop is active\r\n     */\r\n    isActive() {\r\n        return this.animationController.isAnimating();\r\n    }\r\n\r\n    /**\r\n     * Sets the target FPS for performance monitoring\r\n     * @param {number} targetFPS - Target frames per second (default: 60)\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    setTargetFPS(targetFPS) {\r\n        const clampedFPS = Math.max(15, Math.min(120, targetFPS)); // Clamp between 15-120 FPS\r\n        this.config.targetFPS = clampedFPS;\r\n        this.animationController.setTargetFPS(clampedFPS);\r\n        \r\n        // Target FPS set\r\n        this.emit('targetFPSChanged', { targetFPS: clampedFPS });\r\n        \r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets the current target FPS\r\n     * @returns {number} Target frames per second\r\n     */\r\n    getTargetFPS() {\r\n        return this.animationController.targetFPS;\r\n    }\r\n\r\n    /**\r\n     * Forces performance degradation mode (for testing)\r\n     * @param {boolean} enabled - Whether to enable degradation mode\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    setPerformanceDegradation(enabled) {\r\n        const metrics = this.animationController.getPerformanceMetrics();\r\n        \r\n        if (enabled && !metrics.performanceDegradation) {\r\n            const currentMax = this.particleSystem.maxParticles;\r\n            const newMax = Math.max(5, Math.floor(currentMax * 0.5));\r\n            this.particleSystem.setMaxParticles(newMax);\r\n            \r\n            // Forced performance degradation\r\n        } else if (!enabled && metrics.performanceDegradation) {\r\n            this.particleSystem.setMaxParticles(this.config.maxParticles);\r\n            \r\n            // Disabled performance degradation\r\n        }\r\n        \r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Gets the current audio level (0-1) if speech reactivity is active\r\n     * @returns {number} Current audio level or 0 if not speaking\r\n     */\r\n    getAudioLevel() {\r\n        return this.speaking ? this.audioLevel : 0;\r\n    }\r\n\r\n    /**\r\n     * Checks if speech reactivity is currently active\r\n     * @returns {boolean} True if speech monitoring is active\r\n     */\r\n    isSpeaking() {\r\n        return this.speaking;\r\n    }\r\n\r\n    /**\r\n     * Sets the audio analyser smoothing time constant\r\n     * @param {number} smoothing - Smoothing value (0-1, default: 0.8)\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    setAudioSmoothing(smoothing) {\r\n        return this.errorBoundary.wrap(() => {\r\n            const clampedSmoothing = Math.max(0, Math.min(1, smoothing));\r\n            \r\n            if (this.audioAnalyser) {\r\n                this.audioAnalyser.smoothingTimeConstant = clampedSmoothing;\r\n                // Audio smoothing set\r\n            } else {\r\n                // No audio analyser available. Start speech reactivity first.\r\n            }\r\n            \r\n            return this;\r\n        }, 'audio-smoothing', this)();\r\n    }\r\n\r\n    /**\r\n     * Gets comprehensive system status for debugging and monitoring\r\n     * @returns {Object} Complete system status\r\n     */\r\n    getSystemStatus() {\r\n        return this.errorBoundary.wrap(() => {\r\n            const state = this.stateMachine.getCurrentState();\r\n            const particleStats = this.particleSystem.getStats();\r\n            const rendererStats = this.renderer.getStats();\r\n            \r\n            const animationMetrics = this.animationController.getPerformanceMetrics();\r\n            \r\n            return {\r\n                // Core status\r\n                isRunning: animationMetrics.isRunning,\r\n                fps: animationMetrics.fps,\r\n                targetFPS: animationMetrics.targetFPS,\r\n                performanceDegradation: animationMetrics.performanceDegradation,\r\n                \r\n                // Emotional state\r\n                emotion: state.emotion,\r\n                undertone: state.undertone,\r\n                isTransitioning: state.isTransitioning,\r\n                transitionProgress: state.transitionProgress,\r\n                \r\n                // Gesture system\r\n                currentGesture: this.renderer?.currentGesture || null,\r\n                gestureActive: this.renderer?.isGestureActive() || false,\r\n                \r\n                // Particle system\r\n                particles: {\r\n                    active: particleStats.activeParticles,\r\n                    max: particleStats.maxParticles,\r\n                    poolEfficiency: particleStats.poolEfficiency\r\n                },\r\n                \r\n                // Audio system\r\n                audioEnabled: this.config.enableAudio,\r\n                soundSystemAvailable: this.soundSystem.isAvailable(),\r\n                speaking: this.speaking,\r\n                audioLevel: this.audioLevel,\r\n                masterVolume: this.config.masterVolume,\r\n                \r\n                // Renderer\r\n                renderer: {\r\n                    gradientCacheSize: rendererStats.gradientCacheSize,\r\n                    breathingPhase: rendererStats.breathingPhase,\r\n                    layers: rendererStats.layers\r\n                },\r\n                \r\n                // Event system\r\n                eventListeners: this.getEventNames().length,\r\n                \r\n                // Error boundary\r\n                errorStats: this.errorBoundary.getErrorStats()\r\n            };\r\n        }, 'system-status', {})();\r\n    }\r\n\r\n    /**\r\n     * Enables or disables debug mode\r\n     * @param {boolean} enabled - Whether to enable debug mode\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    setDebugMode(enabled) {\r\n        this.config.showDebug = !!enabled;\r\n        this.config.showFPS = !!enabled;\r\n        \r\n        if (enabled) {\r\n            // Debug mode enabled - performance and state info will be displayed\r\n        } else {\r\n            // Debug mode disabled\r\n        }\r\n        \r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Triggers a manual error for testing error boundary\r\n     * @param {string} context - Error context for testing\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    triggerTestError(context = 'manual-test') {\r\n        return this.errorBoundary.wrap(() => {\r\n            throw new Error(`Test error triggered in context: ${context}`);\r\n        }, context, this)();\r\n    }\r\n\r\n    /**\r\n     * Gets current performance metrics\r\n     * @returns {Object} Performance data\r\n     */\r\n    getPerformanceMetrics() {\r\n        const animationMetrics = this.animationController.getPerformanceMetrics();\r\n        const state = this.stateMachine.getCurrentState();\r\n        \r\n        return {\r\n            ...animationMetrics,\r\n            currentEmotion: state.emotion,\r\n            currentUndertone: state.undertone,\r\n            isTransitioning: state.isTransitioning,\r\n            errorStats: this.errorBoundary.getErrorStats()\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Register a plugin\r\n     * @param {Object} plugin - Plugin to register\r\n     * @returns {Promise<boolean>} Success status\r\n     */\r\n    async registerPlugin(plugin) {\r\n        return this.pluginSystem.registerPlugin(plugin);\r\n    }\r\n    \r\n    /**\r\n     * Set accessibility options\r\n     * @param {Object} options - Accessibility options\r\n     */\r\n    setAccessibility(options) {\r\n        if (options.colorBlindMode) {\r\n            this.accessibilityManager.setColorBlindMode(options.colorBlindMode);\r\n        }\r\n        if (options.reducedMotion !== undefined) {\r\n            this.accessibilityManager.reducedMotionPreferred = options.reducedMotion;\r\n        }\r\n        if (options.highContrast !== undefined) {\r\n            this.accessibilityManager.highContrastEnabled = options.highContrast;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Get mobile optimization status\r\n     * @returns {Object} Mobile optimization status\r\n     */\r\n    getMobileStatus() {\r\n        return this.mobileOptimization.getStatus();\r\n    }\r\n    \r\n    /**\r\n     * Get accessibility status\r\n     * @returns {Object} Accessibility status\r\n     */\r\n    getAccessibilityStatus() {\r\n        return this.accessibilityManager.getStatus();\r\n    }\r\n    \r\n    /**\r\n     * Set the emotional state (alias for setEmotion for compatibility)\r\n     * @param {string} newState - The emotion/state to set\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    setState(newState) {\r\n        return this.setEmotion(newState);\r\n    }\r\n    \r\n    /**\r\n     * Speak text using TTS with synchronized animation\r\n     * @param {string} text - The text to speak\r\n     * @param {Object} options - TTS options\r\n     * @returns {SpeechSynthesisUtterance} The utterance object for additional control\r\n     */\r\n    speak(text, options = {}) {\r\n        // Check if speech synthesis is available\r\n        if (!window.speechSynthesis) {\r\n            // Speech synthesis not available in this browser\r\n            return null;\r\n        }\r\n        \r\n        // Create utterance\r\n        const utterance = new SpeechSynthesisUtterance(text);\r\n        \r\n        // Apply options\r\n        if (options.voice) utterance.voice = options.voice;\r\n        if (options.rate) utterance.rate = options.rate;\r\n        if (options.pitch) utterance.pitch = options.pitch;\r\n        if (options.volume) utterance.volume = options.volume;\r\n        if (options.lang) utterance.lang = options.lang;\r\n        \r\n        // Set up event handlers for animation sync\r\n        utterance.onstart = () => {\r\n            // TTS: Starting speech\r\n            this.setTTSSpeaking(true);\r\n            this.emit('tts:start', { text });\r\n        };\r\n        \r\n        utterance.onend = () => {\r\n            // TTS: Speech ended\r\n            this.setTTSSpeaking(false);\r\n            this.emit('tts:end');\r\n        };\r\n        \r\n        utterance.onerror = (event) => {\r\n            // TTS: Speech error\r\n            this.setTTSSpeaking(false);\r\n            this.emit('tts:error', { error: event });\r\n        };\r\n        \r\n        utterance.onboundary = (event) => {\r\n            // Word/sentence boundaries for potential lip-sync\r\n            this.emit('tts:boundary', { \r\n                name: event.name,\r\n                charIndex: event.charIndex,\r\n                charLength: event.charLength\r\n            });\r\n        };\r\n        \r\n        // Speak the text\r\n        window.speechSynthesis.speak(utterance);\r\n        \r\n        return utterance;\r\n    }\r\n    \r\n    /**\r\n     * Set TTS speaking state (triggers visual animation)\r\n     * @param {boolean} speaking - Whether TTS is speaking\r\n     */\r\n    setTTSSpeaking(speaking) {\r\n        this.ttsSpeaking = speaking;\r\n        \r\n        // Update renderer if using Emotive style\r\n        if (this.renderer && this.renderer.startSpeaking) {\r\n            if (speaking) {\r\n                this.renderer.startSpeaking();\r\n            } else {\r\n                this.renderer.stopSpeaking();\r\n            }\r\n        }\r\n        \r\n        // Also update the speaking flag for compatibility\r\n        this.speaking = speaking;\r\n    }\r\n    \r\n    /**\r\n     * Get available TTS voices\r\n     * @returns {Array} Array of available voices\r\n     */\r\n    getVoices() {\r\n        if (!window.speechSynthesis) {\r\n            return [];\r\n        }\r\n        return window.speechSynthesis.getVoices();\r\n    }\r\n    \r\n    /**\r\n     * Stop any ongoing TTS speech\r\n     */\r\n    stopTTS() {\r\n        if (window.speechSynthesis) {\r\n            window.speechSynthesis.cancel();\r\n            this.setTTSSpeaking(false);\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * Handle canvas resize events to trigger visual resampling\r\n     * This ensures visuals look crisp at any size\r\n     * @param {number} width - New canvas width\r\n     * @param {number} height - New canvas height\r\n     * @param {number} dpr - Device pixel ratio\r\n     */\r\n    handleResize(width, height, dpr) {\r\n        // EmotiveMascot handleResize\r\n        \r\n        // Force a re-initialization of the offscreen canvas in renderer\r\n        if (this.renderer && this.renderer.initOffscreenCanvas) {\r\n            this.renderer.initOffscreenCanvas();\r\n        }\r\n        \r\n        // Trigger a state update to recalculate all visual parameters\r\n        if (this.stateMachine) {\r\n            const currentEmotion = this.stateMachine.currentEmotion;\r\n            const currentUndertone = this.stateMachine.currentUndertone;\r\n            \r\n            // Re-apply current emotion to trigger fresh calculations\r\n            if (currentEmotion) {\r\n                this.stateMachine.setEmotion(currentEmotion);\r\n            }\r\n            \r\n            // Re-apply current undertone if any\r\n            if (currentUndertone && currentUndertone !== 'none') {\r\n                this.stateMachine.setUndertone(currentUndertone);\r\n            }\r\n        }\r\n        \r\n        // Emit resize event for any listeners\r\n        this.emit('resize', { width, height, dpr });\r\n    }\r\n    \r\n    /**\r\n     * Morph the core to a different shape\r\n     * @param {string} shape - Target shape name (circle, heart, star, sun, moon, eclipse, square, triangle)\r\n     * @param {Object} config - Morph configuration\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    morphTo(shape, config = {}) {\r\n        return this.errorBoundary.wrap(() => {\r\n            if (!this.shapeMorpher) {\r\n                // ShapeMorpher not initialized\r\n                return this;\r\n            }\r\n            \r\n            // Start the morph\r\n            this.shapeMorpher.morphTo(shape, config);\r\n            \r\n            // Pass shape morpher to renderer\r\n            if (this.renderer) {\r\n                this.renderer.shapeMorpher = this.shapeMorpher;\r\n            }\r\n            \r\n            // Emit event\r\n            this.emit('shapeMorphStarted', { from: this.shapeMorpher.currentShape, to: shape });\r\n            \r\n            // Morphing to new shape\r\n            return this;\r\n        }, 'morphTo', this)();\r\n    }\r\n    \r\n    /**\r\n     * Connect audio element for vocal visualization\r\n     * @param {HTMLAudioElement} audioElement - Audio element to analyze\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    connectAudio(audioElement) {\r\n        return this.errorBoundary.wrap(async () => {\r\n            return await this.audioHandler.connectAudio(audioElement);\r\n        }, 'connectAudio', this)();\r\n    }\r\n    \r\n    /**\r\n     * Disconnect audio analysis\r\n     * @returns {EmotiveMascot} This instance for chaining\r\n     */\r\n    disconnectAudio() {\r\n        return this.errorBoundary.wrap(() => {\r\n            return this.audioHandler.disconnectAudio();\r\n        }, 'disconnectAudio', this)();\r\n    }\r\n    \r\n    /**\r\n     * Get available shapes for morphing\r\n     * @returns {Array} List of available shape names\r\n     */\r\n    getAvailableShapes() {\r\n        return ShapeMorpher.getAvailableShapes();\r\n    }\r\n    \r\n    /**\r\n     * Destroys the mascot instance and cleans up resources\r\n     */\r\n    destroy() {\r\n        this.errorBoundary.wrap(() => {\r\n            // Stop animation\r\n            this.stop();\r\n            \r\n            // Stop speech reactivity\r\n            if (this.speaking) {\r\n                this.stopSpeaking();\r\n            }\r\n            \r\n            // Destroy animation controller\r\n            if (this.animationController) {\r\n                this.animationController.destroy();\r\n            }\r\n            \r\n            // Clean up all subsystems\r\n            if (this.soundSystem) {\r\n                this.soundSystem.cleanup();\r\n            }\r\n            \r\n            if (this.audioLevelProcessor) {\r\n                this.audioLevelProcessor.cleanup();\r\n            }\r\n            \r\n            if (this.particleSystem) {\r\n                this.particleSystem.destroy();\r\n            }\r\n            \r\n            if (this.renderer) {\r\n                // Stop all active gestures\r\n                this.renderer.stopAllGestures();\r\n                this.renderer.destroy();\r\n            }\r\n            \r\n            if (this.canvasManager) {\r\n                this.canvasManager.destroy();\r\n            }\r\n            \r\n            // Clear event listeners\r\n            if (this.eventManager) {\r\n                this.eventManager.destroy();\r\n            }\r\n            \r\n            // Destroy new systems\r\n            if (this.accessibilityManager) {\r\n                this.accessibilityManager.destroy();\r\n            }\r\n            \r\n            if (this.mobileOptimization) {\r\n                this.mobileOptimization.destroy();\r\n            }\r\n            \r\n            if (this.pluginSystem) {\r\n                this.pluginSystem.destroy();\r\n            }\r\n            \r\n            // Clean up shape morpher and audio analyzer\r\n            if (this.audioAnalyzer) {\r\n                this.disconnectAudio();\r\n                this.audioAnalyzer.destroy();\r\n            }\r\n            \r\n            if (this.shapeMorpher) {\r\n                this.shapeMorpher.reset();\r\n            }\r\n            \r\n            // DegradationManager removed\r\n            \r\n            // Clear error boundary\r\n            this.errorBoundary.clearErrors();\r\n            \r\n            // EmotiveMascot destroyed\r\n        }, 'destruction')();\r\n    }\r\n    \r\n    /**\r\n     * Throttled warning to reduce console spam\r\n     * @param {string} message - Warning message\r\n     * @param {string} key - Unique key for this warning type\r\n     */\r\n    throttledWarn(message, key) {\r\n        const now = Date.now();\r\n        const lastWarning = this.warningTimestamps[key] || 0;\r\n        \r\n        if (now - lastWarning > this.warningThrottle) {\r\n            // Warning message throttled\r\n            this.warningTimestamps[key] = now;\r\n        }\r\n    }\r\n}\r\n\r\nexport default EmotiveMascot;"],"names":["createLegacyAdapter","resting","pluginAdapter","burst","applyFullGestureMotion"],"mappings":"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E;IAC3D,YAAY,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;IAC9B,gBAAgB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IAC1C,gBAAgB,OAAO,EAAE,CAAC;IAC1B,YAAY,CAAC;IACb,QAAQ,CAAC;AACT;IACA,QAAQ,OAAO,OAAO,CAAC;IACvB,IAAI,CAAC;IACL;;IC7XA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACO,MAAM,oBAAoB,CAAC;IAClC,IAAI,WAAW,CAAC,MAAM,GAAG,EAAE,EAAE;IAC7B,QAAQ,IAAI,CAAC,MAAM,GAAG;IACtB,YAAY,mBAAmB,EAAE,MAAM,CAAC,mBAAmB,KAAK,KAAK;IACrE,YAAY,kBAAkB,EAAE,MAAM,CAAC,kBAAkB,KAAK,KAAK;IACnE,YAAY,yBAAyB,EAAE,MAAM,CAAC,yBAAyB,KAAK,KAAK;IACjF,YAAY,wBAAwB,EAAE,MAAM,CAAC,wBAAwB,KAAK,KAAK;IAC/E,YAAY,qBAAqB,EAAE,MAAM,CAAC,qBAAqB,KAAK,KAAK;IACzE,YAAY,oBAAoB,EAAE,MAAM,CAAC,oBAAoB,KAAK,KAAK;IACvE,YAAY,cAAc,EAAE,MAAM,CAAC,cAAc,IAAI,MAAM;IAC3D,YAAY,GAAG,MAAM;IACrB,SAAS,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"}